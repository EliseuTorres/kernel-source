/* arch/s390/appldata/appldata_base.o */
s#list_head struct list_head { s#list_head * next , * prev ; } 
t#__kernel_mode_t typedef unsigned int __kernel_mode_t 
t#mode_t typedef t#__kernel_mode_t mode_t 
t#__kernel_size_t typedef unsigned long __kernel_size_t 
t#size_t typedef t#__kernel_size_t size_t 
t#__kernel_loff_t typedef long long __kernel_loff_t 
t#loff_t typedef t#__kernel_loff_t loff_t 
t#proc_handler typedef int proc_handler ( s#ctl_table * , int , void * , t#size_t * , t#loff_t * ) 
t#ctl_handler typedef int ctl_handler ( s#ctl_table * , void * , t#size_t * , void * , t#size_t ) 
s#ctl_table struct ctl_table { int ctl_name ; const char * procname ; void * data ; int maxlen ; t#mode_t mode ; s#ctl_table * child ; s#ctl_table * parent ; t#proc_handler * proc_handler ; t#ctl_handler * strategy ; void * extra1 ; void * extra2 ; } 
t#raw_spinlock_t typedef struct { volatile unsigned int owner_cpu ; } __attribute__ ( ( aligned ( 4 ) ) ) raw_spinlock_t 
t#spinlock_t typedef struct { t#raw_spinlock_t raw_lock ; } spinlock_t 
s#__wait_queue_head struct __wait_queue_head { t#spinlock_t lock ; s#list_head task_list ; } 
t#wait_queue_head_t typedef s#__wait_queue_head wait_queue_head_t 
s#completion struct completion { unsigned int done ; t#wait_queue_head_t wait ; } 
s#ctl_table_set struct ctl_table_set { s#list_head list ; s#ctl_table_set * parent ; int ( * is_seen ) ( s#ctl_table_set * ) ; } 
s##nsproxy
s#ctl_table_root struct ctl_table_root { s#list_head root_list ; s#ctl_table_set default_set ; s#ctl_table_set * ( * lookup ) ( s#ctl_table_root * , s#nsproxy * ) ; int ( * permissions ) ( s#ctl_table_root * , s#nsproxy * , s#ctl_table * ) ; } 
s#ctl_table_header struct ctl_table_header { s#ctl_table * ctl_table ; s#list_head ctl_entry ; int used ; int count ; s#completion * unregistering ; s#ctl_table * ctl_table_arg ; s#ctl_table_root * root ; s#ctl_table_set * set ; s#ctl_table * attached_by ; s#ctl_table * attached_to ; s#ctl_table_header * parent ; } 
e#module_state enum module_state { MODULE_STATE_LIVE , MODULE_STATE_COMING , MODULE_STATE_GOING , } 
s#kobj_uevent_env struct kobj_uevent_env { char * envp [ 32 ] ; int envp_idx ; char buf [ 2048 ] ; int buflen ; } 
s#kset_uevent_ops struct kset_uevent_ops { int ( * filter ) ( s#kset * , s#kobject * ) ; const char * ( * name ) ( s#kset * , s#kobject * ) ; int ( * uevent ) ( s#kset * , s#kobject * , s#kobj_uevent_env * ) ; } 
s#kset struct kset { s#list_head list ; t#spinlock_t list_lock ; s#kobject kobj ; s#kset_uevent_ops * uevent_ops ; } 
t#__kernel_ssize_t typedef long __kernel_ssize_t 
t#ssize_t typedef t#__kernel_ssize_t ssize_t 
s#attribute struct attribute { const char * name ; s#module * owner ; t#mode_t mode ; } 
s#sysfs_ops struct sysfs_ops { t#ssize_t ( * show ) ( s#kobject * , s#attribute * , char * ) ; t#ssize_t ( * store ) ( s#kobject * , s#attribute * , const char * , t#size_t ) ; } 
s#kobj_type struct kobj_type { void ( * release ) ( s#kobject * ) ; s#sysfs_ops * sysfs_ops ; s#attribute * * default_attrs ; } 
s##sysfs_dirent
t#atomic_t typedef struct { volatile int counter ; } atomic_t 
s#kref struct kref { t#atomic_t refcount ; } 
s#kobject struct kobject { const char * name ; s#list_head entry ; s#kobject * parent ; s#kset * kset ; s#kobj_type * ktype ; s#sysfs_dirent * sd ; s#kref kref ; unsigned int state_initialized : 1 ; unsigned int state_in_sysfs : 1 ; unsigned int state_add_uevent_sent : 1 ; unsigned int state_remove_uevent_sent : 1 ; unsigned int uevent_suppress : 1 ; } 
s##module_param_attrs
s#module_kobject struct module_kobject { s#kobject kobj ; s#module * mod ; s#kobject * drivers_dir ; s#module_param_attrs * mp ; } 
s#module_attribute struct module_attribute { s#attribute attr ; t#ssize_t ( * show ) ( s#module_attribute * , s#module * , char * ) ; t#ssize_t ( * store ) ( s#module_attribute * , s#module * , const char * , t#size_t ) ; void ( * setup ) ( s#module * , const char * ) ; int ( * test ) ( s#module * ) ; void ( * free ) ( s#module * ) ; } 
s#kernel_symbol struct kernel_symbol { unsigned long value ; const char * name ; } 
t#u16 typedef unsigned short u16 
t#param_set_fn typedef int ( * param_set_fn ) ( const char * , s#kernel_param * ) 
t#param_get_fn typedef int ( * param_get_fn ) ( char * , s#kernel_param * ) 
s#kparam_string struct kparam_string { unsigned int maxlen ; char * string ; } 
s#kparam_array struct kparam_array { unsigned int max ; unsigned int * num ; t#param_set_fn set ; t#param_get_fn get ; unsigned int elemsize ; void * elem ; } 
s#kernel_param struct kernel_param { const char * name ; t#u16 perm ; t#u16 flags ; t#param_set_fn set ; t#param_get_fn get ; union { void * arg ; const s#kparam_string * str ; const s#kparam_array * arr ; } ; } 
s#exception_table_entry struct exception_table_entry { unsigned long insn , fixup ; } 
s#mod_arch_syminfo struct mod_arch_syminfo { unsigned long got_offset ; unsigned long plt_offset ; int got_initialized ; int plt_initialized ; } 
s#mod_arch_specific struct mod_arch_specific { unsigned long got_offset ; unsigned long plt_offset ; unsigned long got_size ; unsigned long plt_size ; int nsyms ; s#mod_arch_syminfo * syminfo ; } 
s#bug_entry struct bug_entry { unsigned long bug_addr ; const char * file ; unsigned short line ; unsigned short flags ; } 
t#__u32 typedef unsigned int __u32 
t#Elf64_Word typedef t#__u32 Elf64_Word 
t#__u16 typedef unsigned short __u16 
t#Elf64_Half typedef t#__u16 Elf64_Half 
t#__u64 __extension__ typedef unsigned long long __u64 
t#Elf64_Addr typedef t#__u64 Elf64_Addr 
t#Elf64_Xword typedef t#__u64 Elf64_Xword 
s#elf64_sym struct elf64_sym { t#Elf64_Word st_name ; unsigned char st_info ; unsigned char st_other ; t#Elf64_Half st_shndx ; t#Elf64_Addr st_value ; t#Elf64_Xword st_size ; } 
t#Elf64_Sym typedef s#elf64_sym Elf64_Sym 
s##module_sect_attrs
s##module_notes_attrs
s#tracepoint struct tracepoint { const char * name ; int state ; void ( * regfunc ) ( void ) ; void ( * unregfunc ) ( void ) ; void * * funcs ; } 
s##ftrace_event_call
s##rq
s#sched_group struct sched_group { s#sched_group * next ; unsigned int cpu_power ; unsigned long cpumask [ 0 ] ; } 
e#sched_domain_level enum sched_domain_level { SD_LV_NONE = 0 , SD_LV_SIBLING , SD_LV_MC , SD_LV_CPU , SD_LV_NODE , SD_LV_ALLNODES , SD_LV_MAX } 
t#u64 typedef unsigned long long u64 
s#sched_domain struct sched_domain { s#sched_domain * parent ; s#sched_domain * child ; s#sched_group * groups ; unsigned long min_interval ; unsigned long max_interval ; unsigned int busy_factor ; unsigned int imbalance_pct ; unsigned int cache_nice_tries ; unsigned int busy_idx ; unsigned int idle_idx ; unsigned int newidle_idx ; unsigned int wake_idx ; unsigned int forkexec_idx ; unsigned int smt_gain ; int flags ; e#sched_domain_level level ; unsigned long last_balance ; unsigned int balance_interval ; unsigned int nr_balance_failed ; t#u64 last_update ; unsigned int lb_count [ CPU_MAX_IDLE_TYPES ] ; unsigned int lb_failed [ CPU_MAX_IDLE_TYPES ] ; unsigned int lb_balanced [ CPU_MAX_IDLE_TYPES ] ; unsigned int lb_imbalance [ CPU_MAX_IDLE_TYPES ] ; unsigned int lb_gained [ CPU_MAX_IDLE_TYPES ] ; unsigned int lb_hot_gained [ CPU_MAX_IDLE_TYPES ] ; unsigned int lb_nobusyg [ CPU_MAX_IDLE_TYPES ] ; unsigned int lb_nobusyq [ CPU_MAX_IDLE_TYPES ] ; unsigned int alb_count ; unsigned int alb_failed ; unsigned int alb_pushed ; unsigned int sbe_count ; unsigned int sbe_balanced ; unsigned int sbe_pushed ; unsigned int sbf_count ; unsigned int sbf_balanced ; unsigned int sbf_pushed ; unsigned int ttwu_wake_remote ; unsigned int ttwu_move_affine ; unsigned int ttwu_move_balance ; char * name ; unsigned long span [ 0 ] ; } 
e#cpu_idle_type enum cpu_idle_type { CPU_IDLE , CPU_NOT_IDLE , CPU_NEWLY_IDLE , CPU_MAX_IDLE_TYPES } 
s#cpumask struct cpumask { unsigned long bits [ ( ( ( 64 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; } 
s#sched_class struct sched_class { const s#sched_class * next ; void ( * enqueue_task ) ( s#rq * , s#task_struct * , int ) ; void ( * dequeue_task ) ( s#rq * , s#task_struct * , int ) ; void ( * yield_task ) ( s#rq * ) ; void ( * check_preempt_curr ) ( s#rq * , s#task_struct * , int ) ; s#task_struct * ( * pick_next_task ) ( s#rq * ) ; void ( * put_prev_task ) ( s#rq * , s#task_struct * ) ; int ( * select_task_rq ) ( s#task_struct * , int , int ) ; unsigned long ( * load_balance ) ( s#rq * , int , s#rq * , unsigned long , s#sched_domain * , e#cpu_idle_type , int * , int * ) ; int ( * move_one_task ) ( s#rq * , int , s#rq * , s#sched_domain * , e#cpu_idle_type ) ; void ( * pre_schedule ) ( s#rq * , s#task_struct * ) ; void ( * post_schedule ) ( s#rq * ) ; void ( * task_wake_up ) ( s#rq * , s#task_struct * ) ; void ( * set_cpus_allowed ) ( s#task_struct * , const s#cpumask * ) ; void ( * rq_online ) ( s#rq * ) ; void ( * rq_offline ) ( s#rq * ) ; void ( * set_curr_task ) ( s#rq * ) ; void ( * task_tick ) ( s#rq * , s#task_struct * , int ) ; void ( * task_new ) ( s#rq * , s#task_struct * ) ; void ( * switched_from ) ( s#rq * , s#task_struct * , int ) ; void ( * switched_to ) ( s#rq * , s#task_struct * , int ) ; void ( * prio_changed ) ( s#rq * , s#task_struct * , int , int ) ; unsigned int ( * get_rr_interval ) ( s#task_struct * ) ; void ( * moved_group ) ( s#task_struct * ) ; } 
s#load_weight struct load_weight { unsigned long weight , inv_weight ; } 
s#rb_node struct rb_node { unsigned long rb_parent_color ; s#rb_node * rb_right ; s#rb_node * rb_left ; } 
t#s64 typedef signed long long s64 
s##cfs_rq
s#sched_entity struct sched_entity { s#load_weight load ; s#rb_node run_node ; s#list_head group_node ; unsigned int on_rq ; t#u64 exec_start ; t#u64 sum_exec_runtime ; t#u64 vruntime ; t#u64 prev_sum_exec_runtime ; t#u64 last_wakeup ; t#u64 avg_overlap ; t#u64 nr_migrations ; t#u64 start_runtime ; t#u64 avg_wakeup ; t#u64 avg_running ; t#u64 wait_start ; t#u64 wait_max ; t#u64 wait_count ; t#u64 wait_sum ; t#u64 iowait_count ; t#u64 iowait_sum ; t#u64 sleep_start ; t#u64 sleep_max ; t#s64 sum_sleep_runtime ; t#u64 block_start ; t#u64 block_max ; t#u64 exec_max ; t#u64 slice_max ; t#u64 nr_migrations_cold ; t#u64 nr_failed_migrations_affine ; t#u64 nr_failed_migrations_running ; t#u64 nr_failed_migrations_hot ; t#u64 nr_forced_migrations ; t#u64 nr_forced2_migrations ; t#u64 nr_wakeups ; t#u64 nr_wakeups_sync ; t#u64 nr_wakeups_migrate ; t#u64 nr_wakeups_local ; t#u64 nr_wakeups_remote ; t#u64 nr_wakeups_affine ; t#u64 nr_wakeups_affine_attempts ; t#u64 nr_wakeups_passive ; t#u64 nr_wakeups_idle ; s#sched_entity * parent ; s#cfs_rq * cfs_rq ; s#cfs_rq * my_q ; } 
s##rt_rq
s#sched_rt_entity struct sched_rt_entity { s#list_head run_list ; unsigned long timeout ; unsigned int time_slice ; int nr_cpus_allowed ; s#sched_rt_entity * back ; s#sched_rt_entity * parent ; s#rt_rq * rt_rq ; s#rt_rq * my_q ; } 
s#hlist_node struct hlist_node { s#hlist_node * next , * * pprev ; } 
s#hlist_head struct hlist_head { s#hlist_node * first ; } 
t#cpumask_t typedef s#cpumask cpumask_t 
s#sched_info struct sched_info { unsigned long pcount ; unsigned long long run_delay ; unsigned long long last_arrival , last_queued ; unsigned int bkl_count ; } 
s#plist_head struct plist_head { s#list_head prio_list ; s#list_head node_list ; } 
s#plist_node struct plist_node { int prio ; s#plist_head plist ; } 
t#pgprot_t typedef struct { unsigned long pgprot ; } pgprot_t 
s#prio_tree_node struct prio_tree_node { s#prio_tree_node * left ; s#prio_tree_node * right ; s#prio_tree_node * parent ; unsigned long start ; unsigned long last ; } 
s#raw_prio_tree_node struct raw_prio_tree_node { s#prio_tree_node * left ; s#prio_tree_node * right ; s#prio_tree_node * parent ; } 
s##anon_vma
t#__kernel_uid_t typedef unsigned int __kernel_uid_t 
t#__kernel_uid32_t typedef t#__kernel_uid_t __kernel_uid32_t 
t#uid_t typedef t#__kernel_uid32_t uid_t 
t#__kernel_gid_t typedef unsigned int __kernel_gid_t 
t#__kernel_gid32_t typedef t#__kernel_gid_t __kernel_gid32_t 
t#gid_t typedef t#__kernel_gid32_t gid_t 
t#__kernel_dev_t typedef t#__u32 __kernel_dev_t 
t#dev_t typedef t#__kernel_dev_t dev_t 
t#__kernel_time_t typedef long __kernel_time_t 
s#timespec struct timespec { t#__kernel_time_t tv_sec ; long tv_nsec ; } 
t#blkcnt_t typedef unsigned long blkcnt_t 
t#umode_t typedef unsigned short umode_t 
s##exec_domain
t#u32 typedef unsigned int u32 
t#__kernel_clockid_t typedef int __kernel_clockid_t 
t#clockid_t typedef t#__kernel_clockid_t clockid_t 
s##compat_timespec
s##pollfd
s#restart_block struct restart_block { long ( * fn ) ( s#restart_block * ) ; union { struct { unsigned long arg0 , arg1 , arg2 , arg3 ; } ; struct { t#u32 * uaddr ; t#u32 val ; t#u32 flags ; t#u32 bitset ; t#u64 time ; t#u32 * uaddr2 ; } futex ; struct { t#clockid_t index ; s#timespec * rmtp ; s#compat_timespec * compat_rmtp ; t#u64 expires ; } nanosleep ; struct { s#pollfd * ufds ; int nfds ; int has_timeout ; unsigned long tv_sec ; unsigned long tv_nsec ; } poll ; } ; } 
s#thread_info struct thread_info { s#task_struct * task ; s#exec_domain * exec_domain ; unsigned long flags ; unsigned int cpu ; int preempt_count ; s#restart_block restart_block ; t#__u64 user_timer ; t#__u64 system_timer ; } 
s#mutex struct mutex { t#atomic_t count ; t#spinlock_t wait_lock ; s#list_head wait_list ; s#thread_info * owner ; } 
s#rw_semaphore struct rw_semaphore { signed long count ; t#spinlock_t wait_lock ; s#list_head wait_list ; } 
s#qstr struct qstr { unsigned int hash ; unsigned int len ; const unsigned char * name ; } 
s#rcu_head struct rcu_head { s#rcu_head * next ; void ( * func ) ( s#rcu_head * ) ; } 
s##nameidata
s#dentry_operations struct dentry_operations { int ( * d_revalidate ) ( s#dentry * , s#nameidata * ) ; int ( * d_hash ) ( s#dentry * , s#qstr * ) ; int ( * d_compare ) ( s#dentry * , s#qstr * , s#qstr * ) ; int ( * d_delete ) ( s#dentry * ) ; void ( * d_release ) ( s#dentry * ) ; void ( * d_iput ) ( s#dentry * , s#inode * ) ; char * ( * d_dname ) ( s#dentry * , char * , int ) ; } 
s##vfsmount
s#lock_class_key struct lock_class_key { } 
s#file_system_type struct file_system_type { const char * name ; int fs_flags ; int ( * get_sb ) ( s#file_system_type * , int , const char * , void * , s#vfsmount * ) ; void ( * kill_sb ) ( s#super_block * ) ; s#module * owner ; s#file_system_type * next ; s#list_head fs_supers ; s#lock_class_key s_lock_key ; s#lock_class_key s_umount_key ; s#lock_class_key i_lock_key ; s#lock_class_key i_mutex_key ; s#lock_class_key i_mutex_dir_key ; s#lock_class_key i_alloc_sem_key ; } 
s##kstatfs
s##seq_file
t#gfp_t typedef unsigned gfp_t 
s#super_operations struct super_operations { s#inode * ( * alloc_inode ) ( s#super_block * ) ; void ( * destroy_inode ) ( s#inode * ) ; void ( * dirty_inode ) ( s#inode * ) ; int ( * write_inode ) ( s#inode * , int ) ; void ( * drop_inode ) ( s#inode * ) ; void ( * delete_inode ) ( s#inode * ) ; void ( * put_super ) ( s#super_block * ) ; void ( * write_super ) ( s#super_block * ) ; int ( * sync_fs ) ( s#super_block * , int ) ; int ( * freeze_fs ) ( s#super_block * ) ; int ( * unfreeze_fs ) ( s#super_block * ) ; int ( * statfs ) ( s#dentry * , s#kstatfs * ) ; int ( * remount_fs ) ( s#super_block * , int * , char * ) ; void ( * clear_inode ) ( s#inode * ) ; void ( * umount_begin ) ( s#super_block * ) ; int ( * show_options ) ( s#seq_file * , s#vfsmount * ) ; int ( * show_stats ) ( s#seq_file * , s#vfsmount * ) ; t#ssize_t ( * quota_read ) ( s#super_block * , int , char * , t#size_t , t#loff_t ) ; t#ssize_t ( * quota_write ) ( s#super_block * , int , const char * , t#size_t , t#loff_t ) ; int ( * bdev_try_to_free_page ) ( s#super_block * , s#page * , t#gfp_t ) ; } 
t#qsize_t typedef long long qsize_t 
s#path struct path { s#vfsmount * mnt ; s#dentry * dentry ; } 
s#aio_ring_info struct aio_ring_info { unsigned long mmap_base ; unsigned long mmap_size ; s#page * * ring_pages ; t#spinlock_t ring_lock ; long nr_pages ; unsigned nr , tail ; s#page * internal_pages [ 8 ] ; } 
t#atomic64_t typedef struct { volatile long counter ; } atomic64_t 
t#atomic_long_t typedef t#atomic64_t atomic_long_t 
t#work_func_t typedef void ( * work_func_t ) ( s#work_struct * ) 
s#work_struct struct work_struct { t#atomic_long_t data ; s#list_head entry ; t#work_func_t func ; } 
s##tvec_base
s#timer_list struct timer_list { s#list_head entry ; unsigned long expires ; void ( * function ) ( unsigned long ) ; unsigned long data ; s#tvec_base * base ; void * start_site ; char start_comm [ 16 ] ; int start_pid ; } 
s#delayed_work struct delayed_work { s#work_struct work ; s#timer_list timer ; } 
s#kioctx struct kioctx { t#atomic_t users ; int dead ; s#mm_struct * mm ; unsigned long user_id ; s#hlist_node list ; t#wait_queue_head_t wait ; t#spinlock_t ctx_lock ; int reqs_active ; s#list_head active_reqs ; s#list_head run_list ; unsigned max_reqs ; s#aio_ring_info ring_info ; s#delayed_work wq ; t#wait_queue_head_t poll_wait ; s#file * file ; s#rcu_head rcu_head ; } 
t#__s64 __extension__ typedef __signed__ long long __s64 
s#io_event struct io_event { t#__u64 data ; t#__u64 obj ; t#__s64 res ; t#__s64 res2 ; } 
t#wait_queue_func_t typedef int ( * wait_queue_func_t ) ( t#wait_queue_t * , unsigned , int , void * ) 
s#__wait_queue struct __wait_queue { unsigned int flags ; void * private ; t#wait_queue_func_t func ; s#list_head task_list ; } 
t#wait_queue_t typedef s#__wait_queue wait_queue_t 
s#iovec struct iovec { void * iov_base ; t#__kernel_size_t iov_len ; } 
s##eventfd_ctx
s#kiocb struct kiocb { s#list_head ki_run_list ; unsigned long ki_flags ; int ki_users ; unsigned ki_key ; s#file * ki_filp ; s#kioctx * ki_ctx ; int ( * ki_cancel ) ( s#kiocb * , s#io_event * ) ; t#ssize_t ( * ki_retry ) ( s#kiocb * ) ; void ( * ki_dtor ) ( s#kiocb * ) ; union { void * user ; s#task_struct * tsk ; } ki_obj ; t#__u64 ki_user_data ; t#wait_queue_t ki_wait ; t#loff_t ki_pos ; void * private ; unsigned short ki_opcode ; t#size_t ki_nbytes ; char * ki_buf ; t#size_t ki_left ; s#iovec ki_inline_vec ; s#iovec * ki_iovec ; unsigned long ki_nr_segs ; unsigned long ki_cur_seg ; s#list_head ki_list ; s#eventfd_ctx * ki_eventfd ; } 
t#filldir_t typedef int ( * filldir_t ) ( void * , const char * , int , t#loff_t , t#u64 , unsigned ) 
s##poll_table_struct
s##files_struct
t#fl_owner_t typedef s#files_struct * fl_owner_t 
s##pid_namespace
s#upid struct upid { int nr ; s#pid_namespace * ns ; s#hlist_node pid_chain ; } 
s#pid struct pid { t#atomic_t count ; unsigned int level ; s#hlist_head tasks [ PIDTYPE_MAX ] ; s#rcu_head rcu ; s#upid numbers [ 1 ] ; } 
s#fasync_struct struct fasync_struct { int magic ; int fa_fd ; s#fasync_struct * fa_next ; s#file * fa_file ; } 
s#file_lock_operations struct file_lock_operations { void ( * fl_copy_lock ) ( s#file_lock * , s#file_lock * ) ; void ( * fl_release_private ) ( s#file_lock * ) ; } 
s#lock_manager_operations struct lock_manager_operations { int ( * fl_compare_owner ) ( s#file_lock * , s#file_lock * ) ; void ( * fl_notify ) ( s#file_lock * ) ; int ( * fl_grant ) ( s#file_lock * , s#file_lock * , int ) ; void ( * fl_copy_lock ) ( s#file_lock * , s#file_lock * ) ; void ( * fl_release_private ) ( s#file_lock * ) ; void ( * fl_break ) ( s#file_lock * ) ; int ( * fl_mylease ) ( s#file_lock * , s#file_lock * ) ; int ( * fl_change ) ( s#file_lock * * , int ) ; } 
s##nlm_lockowner
s#nfs_lock_info struct nfs_lock_info { t#u32 state ; s#nlm_lockowner * owner ; s#list_head list ; } 
s##nfs4_lock_state
s#nfs4_lock_info struct nfs4_lock_info { s#nfs4_lock_state * owner ; } 
s#file_lock struct file_lock { s#file_lock * fl_next ; s#list_head fl_link ; s#list_head fl_block ; t#fl_owner_t fl_owner ; unsigned char fl_flags ; unsigned char fl_type ; unsigned int fl_pid ; s#pid * fl_nspid ; t#wait_queue_head_t fl_wait ; s#file * fl_file ; t#loff_t fl_start ; t#loff_t fl_end ; s#fasync_struct * fl_fasync ; unsigned long fl_break_time ; const s#file_lock_operations * fl_ops ; const s#lock_manager_operations * fl_lmops ; union { s#nfs_lock_info nfs_fl ; s#nfs4_lock_info nfs4_fl ; struct { s#list_head link ; int state ; } afs ; } fl_u ; } 
s##pipe_inode_info
s#file_operations struct file_operations { s#module * owner ; t#loff_t ( * llseek ) ( s#file * , t#loff_t , int ) ; t#ssize_t ( * read ) ( s#file * , char * , t#size_t , t#loff_t * ) ; t#ssize_t ( * write ) ( s#file * , const char * , t#size_t , t#loff_t * ) ; t#ssize_t ( * aio_read ) ( s#kiocb * , const s#iovec * , unsigned long , t#loff_t ) ; t#ssize_t ( * aio_write ) ( s#kiocb * , const s#iovec * , unsigned long , t#loff_t ) ; int ( * readdir ) ( s#file * , void * , t#filldir_t ) ; unsigned int ( * poll ) ( s#file * , s#poll_table_struct * ) ; int ( * ioctl ) ( s#inode * , s#file * , unsigned int , unsigned long ) ; long ( * unlocked_ioctl ) ( s#file * , unsigned int , unsigned long ) ; long ( * compat_ioctl ) ( s#file * , unsigned int , unsigned long ) ; int ( * mmap ) ( s#file * , s#vm_area_struct * ) ; int ( * open ) ( s#inode * , s#file * ) ; int ( * flush ) ( s#file * , t#fl_owner_t ) ; int ( * release ) ( s#inode * , s#file * ) ; int ( * fsync ) ( s#file * , s#dentry * , int ) ; int ( * aio_fsync ) ( s#kiocb * , int ) ; int ( * fasync ) ( int , s#file * , int ) ; int ( * lock ) ( s#file * , int , s#file_lock * ) ; t#ssize_t ( * sendpage ) ( s#file * , s#page * , int , t#size_t , t#loff_t * , int ) ; unsigned long ( * get_unmapped_area ) ( s#file * , unsigned long , unsigned long , unsigned long , unsigned long ) ; int ( * check_flags ) ( int ) ; int ( * flock ) ( s#file * , int , s#file_lock * ) ; t#ssize_t ( * splice_write ) ( s#pipe_inode_info * , s#file * , t#loff_t * , t#size_t , unsigned int ) ; t#ssize_t ( * splice_read ) ( s#file * , t#loff_t * , s#pipe_inode_info * , t#size_t , unsigned int ) ; int ( * open_exec ) ( s#inode * ) ; int ( * setlease ) ( s#file * , long , s#file_lock * * ) ; } 
t#fmode_t typedef unsigned fmode_t 
t#raw_rwlock_t typedef struct { volatile unsigned int lock ; } raw_rwlock_t 
t#rwlock_t typedef struct { t#raw_rwlock_t raw_lock ; } rwlock_t 
e#pid_type enum pid_type { PIDTYPE_PID , PIDTYPE_PGID , PIDTYPE_SID , PIDTYPE_MAX } 
s#fown_struct struct fown_struct { t#rwlock_t lock ; s#pid * pid ; e#pid_type pid_type ; t#uid_t uid , euid ; int signum ; } 
s#kernel_cap_struct struct kernel_cap_struct { t#__u32 cap [ 2 ] ; } 
t#kernel_cap_t typedef s#kernel_cap_struct kernel_cap_t 
t#__s32 typedef __signed__ int __s32 
t#int32_t typedef t#__s32 int32_t 
t#key_serial_t typedef t#int32_t key_serial_t 
s##key_type
s##key_user
t#time_t typedef t#__kernel_time_t time_t 
t#uint32_t typedef t#__u32 uint32_t 
t#key_perm_t typedef t#uint32_t key_perm_t 
s##keyring_list
s#key struct key { t#atomic_t usage ; t#key_serial_t serial ; s#rb_node serial_node ; s#key_type * type ; s#rw_semaphore sem ; s#key_user * user ; void * security ; union { t#time_t expiry ; t#time_t revoked_at ; } ; t#uid_t uid ; t#gid_t gid ; t#key_perm_t perm ; unsigned short quotalen ; unsigned short datalen ; unsigned long flags ; char * description ; union { s#list_head link ; unsigned long x [ 2 ] ; void * p [ 2 ] ; } type_data ; union { unsigned long value ; void * data ; s#keyring_list * subscriptions ; } payload ; } 
t#__kernel_pid_t typedef int __kernel_pid_t 
t#pid_t typedef t#__kernel_pid_t pid_t 
s#thread_group_cred struct thread_group_cred { t#atomic_t usage ; t#pid_t tgid ; t#spinlock_t lock ; s#key * session_keyring ; s#key * process_keyring ; s#rcu_head rcu ; } 
s##user_namespace
s#user_struct struct user_struct { t#atomic_t __count ; t#atomic_t processes ; t#atomic_t files ; t#atomic_t sigpending ; t#atomic_t inotify_watches ; t#atomic_t inotify_devs ; t#atomic_t epoll_watches ; unsigned long mq_bytes ; unsigned long locked_shm ; s#key * uid_keyring ; s#key * session_keyring ; s#hlist_node uidhash_node ; t#uid_t uid ; s#user_namespace * user_ns ; t#atomic_long_t locked_vm ; } 
s#group_info struct group_info { t#atomic_t usage ; int ngroups ; int nblocks ; t#gid_t small_block [ 32 ] ; t#gid_t * blocks [ 0 ] ; } 
s#cred struct cred { t#atomic_t usage ; t#uid_t uid ; t#gid_t gid ; t#uid_t suid ; t#gid_t sgid ; t#uid_t euid ; t#gid_t egid ; t#uid_t fsuid ; t#gid_t fsgid ; unsigned securebits ; t#kernel_cap_t cap_inheritable ; t#kernel_cap_t cap_permitted ; t#kernel_cap_t cap_effective ; t#kernel_cap_t cap_bset ; unsigned char jit_keyring ; s#key * thread_keyring ; s#key * request_key_auth ; s#thread_group_cred * tgcred ; void * security ; s#user_struct * user ; s#group_info * group_info ; s#rcu_head rcu ; } 
s#file_ra_state struct file_ra_state { unsigned long start ; unsigned int size ; unsigned int async_size ; unsigned int ra_pages ; unsigned int mmap_miss ; t#loff_t prev_pos ; } 
s#file struct file { union { s#list_head fu_list ; s#rcu_head fu_rcuhead ; } f_u ; s#path f_path ; const s#file_operations * f_op ; t#spinlock_t f_lock ; t#atomic_long_t f_count ; unsigned int f_flags ; t#fmode_t f_mode ; t#loff_t f_pos ; s#fown_struct f_owner ; const s#cred * f_cred ; s#file_ra_state f_ra ; t#u64 f_version ; void * f_security ; void * private_data ; s#list_head f_ep_links ; s#address_space * f_mapping ; } 
s#iattr struct iattr { unsigned int ia_valid ; t#umode_t ia_mode ; t#uid_t ia_uid ; t#gid_t ia_gid ; t#loff_t ia_size ; s#timespec ia_atime ; s#timespec ia_mtime ; s#timespec ia_ctime ; s#file * ia_file ; } 
s#mem_dqblk struct mem_dqblk { t#qsize_t dqb_bhardlimit ; t#qsize_t dqb_bsoftlimit ; t#qsize_t dqb_curspace ; t#qsize_t dqb_rsvspace ; t#qsize_t dqb_ihardlimit ; t#qsize_t dqb_isoftlimit ; t#qsize_t dqb_curinodes ; t#time_t dqb_btime ; t#time_t dqb_itime ; } 
s#dquot struct dquot { s#hlist_node dq_hash ; s#list_head dq_inuse ; s#list_head dq_free ; s#list_head dq_dirty ; s#mutex dq_lock ; t#atomic_t dq_count ; t#wait_queue_head_t dq_wait_unused ; s#super_block * dq_sb ; unsigned int dq_id ; t#loff_t dq_off ; unsigned long dq_flags ; short dq_type ; s#mem_dqblk dq_dqb ; } 
s#dquot_operations struct dquot_operations { int ( * initialize ) ( s#inode * , int ) ; int ( * drop ) ( s#inode * ) ; int ( * alloc_space ) ( s#inode * , t#qsize_t , int ) ; int ( * alloc_inode ) ( const s#inode * , t#qsize_t ) ; int ( * free_space ) ( s#inode * , t#qsize_t ) ; int ( * free_inode ) ( const s#inode * , t#qsize_t ) ; int ( * transfer ) ( s#inode * , s#iattr * ) ; int ( * write_dquot ) ( s#dquot * ) ; s#dquot * ( * alloc_dquot ) ( s#super_block * , int ) ; void ( * destroy_dquot ) ( s#dquot * ) ; int ( * acquire_dquot ) ( s#dquot * ) ; int ( * release_dquot ) ( s#dquot * ) ; int ( * mark_dirty ) ( s#dquot * ) ; int ( * write_info ) ( s#super_block * , int ) ; int ( * reserve_space ) ( s#inode * , t#qsize_t , int ) ; int ( * claim_space ) ( s#inode * , t#qsize_t ) ; void ( * release_rsv ) ( s#inode * , t#qsize_t ) ; t#qsize_t * ( * get_reserved_space ) ( s#inode * ) ; } 
s#if_dqinfo struct if_dqinfo { t#__u64 dqi_bgrace ; t#__u64 dqi_igrace ; t#__u32 dqi_flags ; t#__u32 dqi_valid ; } 
t#qid_t typedef t#__kernel_uid32_t qid_t 
s#if_dqblk struct if_dqblk { t#__u64 dqb_bhardlimit ; t#__u64 dqb_bsoftlimit ; t#__u64 dqb_curspace ; t#__u64 dqb_ihardlimit ; t#__u64 dqb_isoftlimit ; t#__u64 dqb_curinodes ; t#__u64 dqb_btime ; t#__u64 dqb_itime ; t#__u32 dqb_valid ; } 
t#__s8 typedef __signed__ char __s8 
s#fs_qfilestat struct fs_qfilestat { t#__u64 qfs_ino ; t#__u64 qfs_nblks ; t#__u32 qfs_nextents ; } 
t#fs_qfilestat_t typedef s#fs_qfilestat fs_qfilestat_t 
s#fs_quota_stat struct fs_quota_stat { t#__s8 qs_version ; t#__u16 qs_flags ; t#__s8 qs_pad ; t#fs_qfilestat_t qs_uquota ; t#fs_qfilestat_t qs_gquota ; t#__u32 qs_incoredqs ; t#__s32 qs_btimelimit ; t#__s32 qs_itimelimit ; t#__s32 qs_rtbtimelimit ; t#__u16 qs_bwarnlimit ; t#__u16 qs_iwarnlimit ; } 
t#__s16 typedef __signed__ short __s16 
s#fs_disk_quota struct fs_disk_quota { t#__s8 d_version ; t#__s8 d_flags ; t#__u16 d_fieldmask ; t#__u32 d_id ; t#__u64 d_blk_hardlimit ; t#__u64 d_blk_softlimit ; t#__u64 d_ino_hardlimit ; t#__u64 d_ino_softlimit ; t#__u64 d_bcount ; t#__u64 d_icount ; t#__s32 d_itimer ; t#__s32 d_btimer ; t#__u16 d_iwarns ; t#__u16 d_bwarns ; t#__s32 d_padding2 ; t#__u64 d_rtb_hardlimit ; t#__u64 d_rtb_softlimit ; t#__u64 d_rtbcount ; t#__s32 d_rtbtimer ; t#__u16 d_rtbwarns ; t#__s16 d_padding3 ; char d_padding4 [ 8 ] ; } 
s#quotactl_ops struct quotactl_ops { int ( * quota_on ) ( s#super_block * , int , int , char * , int ) ; int ( * quota_off ) ( s#super_block * , int , int ) ; int ( * quota_sync ) ( s#super_block * , int ) ; int ( * get_info ) ( s#super_block * , int , s#if_dqinfo * ) ; int ( * set_info ) ( s#super_block * , int , s#if_dqinfo * ) ; int ( * get_dqblk ) ( s#super_block * , int , t#qid_t , s#if_dqblk * ) ; int ( * set_dqblk ) ( s#super_block * , int , t#qid_t , s#if_dqblk * ) ; int ( * get_xstate ) ( s#super_block * , s#fs_quota_stat * ) ; int ( * set_xstate ) ( s#super_block * , unsigned int , int ) ; int ( * get_xquota ) ( s#super_block * , int , t#qid_t , s#fs_disk_quota * ) ; int ( * set_xquota ) ( s#super_block * , int , t#qid_t , s#fs_disk_quota * ) ; } 
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s#block_device struct block_device { t#dev_t bd_dev ; s#inode * bd_inode ; s#super_block * bd_super ; int bd_openers ; s#mutex bd_mutex ; s#list_head bd_inodes ; void * bd_holder ; int bd_holders ; s#list_head bd_holder_list ; s#block_device * bd_contains ; unsigned bd_block_size ; s#hd_struct * bd_part ; unsigned bd_part_count ; int bd_invalidated ; s#gendisk * bd_disk ; s#list_head bd_list ; unsigned long bd_private ; int bd_fsfreeze_count ; s#mutex bd_fsfreeze_mutex ; } 
s##backing_dev_info
s##mtd_info
s#quota_format_ops struct quota_format_ops { int ( * check_quota_file ) ( s#super_block * , int ) ; int ( * read_file_info ) ( s#super_block * , int ) ; int ( * write_file_info ) ( s#super_block * , int ) ; int ( * free_file_info ) ( s#super_block * , int ) ; int ( * read_dqblk ) ( s#dquot * ) ; int ( * commit_dqblk ) ( s#dquot * ) ; int ( * release_dqblk ) ( s#dquot * ) ; } 
s#quota_format_type struct quota_format_type { int qf_fmt_id ; s#quota_format_ops * qf_ops ; s#module * qf_owner ; s#quota_format_type * qf_next ; } 
s#mem_dqinfo struct mem_dqinfo { s#quota_format_type * dqi_format ; int dqi_fmt_id ; s#list_head dqi_dirty_list ; unsigned long dqi_flags ; unsigned int dqi_bgrace ; unsigned int dqi_igrace ; t#qsize_t dqi_maxblimit ; t#qsize_t dqi_maxilimit ; void * dqi_priv ; } 
s#quota_info struct quota_info { unsigned int flags ; s#mutex dqio_mutex ; s#mutex dqonoff_mutex ; s#rw_semaphore dqptr_sem ; s#inode * files [ 2 ] ; s#mem_dqinfo info [ 2 ] ; s#quota_format_ops * ops [ 2 ] ; } 
s#super_block struct super_block { s#list_head s_list ; t#dev_t s_dev ; unsigned long s_blocksize ; unsigned char s_blocksize_bits ; unsigned char s_dirt ; t#loff_t s_maxbytes ; s#file_system_type * s_type ; const s#super_operations * s_op ; const s#dquot_operations * dq_op ; const s#quotactl_ops * s_qcop ; const s#export_operations * s_export_op ; unsigned long s_flags ; unsigned long s_magic ; s#dentry * s_root ; s#rw_semaphore s_umount ; s#mutex s_lock ; int s_count ; int s_need_sync ; t#atomic_t s_active ; void * s_security ; s#xattr_handler * * s_xattr ; s#list_head s_inodes ; s#hlist_head s_anon ; s#list_head s_files ; s#list_head s_dentry_lru ; int s_nr_dentry_unused ; s#block_device * s_bdev ; s#backing_dev_info * s_bdi ; s#mtd_info * s_mtd ; s#list_head s_instances ; s#quota_info s_dquot ; int s_frozen ; t#wait_queue_head_t s_wait_unfrozen ; char s_id [ 32 ] ; void * s_fs_info ; t#fmode_t s_mode ; s#mutex s_vfs_rename_mutex ; t#u32 s_time_gran ; char * s_subtype ; char * s_options ; } 
s#dentry struct dentry { t#atomic_t d_count ; unsigned int d_flags ; t#spinlock_t d_lock ; int d_mounted ; s#inode * d_inode ; s#hlist_node d_hash ; s#dentry * d_parent ; s#qstr d_name ; s#list_head d_lru ; union { s#list_head d_child ; s#rcu_head d_rcu ; } d_u ; s#list_head d_subdirs ; s#list_head d_alias ; unsigned long d_time ; const s#dentry_operations * d_op ; s#super_block * d_sb ; void * d_fsdata ; unsigned char d_iname [ 32 ] ; } 
s#kstat struct kstat { t#u64 ino ; t#dev_t dev ; t#umode_t mode ; unsigned int nlink ; t#uid_t uid ; t#gid_t gid ; t#dev_t rdev ; t#loff_t size ; s#timespec atime ; s#timespec mtime ; s#timespec ctime ; unsigned long blksize ; unsigned long long blocks ; } 
s#fiemap_extent struct fiemap_extent { t#__u64 fe_logical ; t#__u64 fe_physical ; t#__u64 fe_length ; t#__u64 fe_reserved64 [ 2 ] ; t#__u32 fe_flags ; t#__u32 fe_reserved [ 3 ] ; } 
s#fiemap_extent_info struct fiemap_extent_info { unsigned int fi_flags ; unsigned int fi_extents_mapped ; unsigned int fi_extents_max ; s#fiemap_extent * fi_extents_start ; } 
s#inode_operations struct inode_operations { int ( * create ) ( s#inode * , s#dentry * , int , s#nameidata * ) ; s#dentry * ( * lookup ) ( s#inode * , s#dentry * , s#nameidata * ) ; int ( * link ) ( s#dentry * , s#inode * , s#dentry * ) ; int ( * unlink ) ( s#inode * , s#dentry * ) ; int ( * symlink ) ( s#inode * , s#dentry * , const char * ) ; int ( * mkdir ) ( s#inode * , s#dentry * , int ) ; int ( * rmdir ) ( s#inode * , s#dentry * ) ; int ( * mknod ) ( s#inode * , s#dentry * , int , t#dev_t ) ; int ( * rename ) ( s#inode * , s#dentry * , s#inode * , s#dentry * ) ; int ( * readlink ) ( s#dentry * , char * , int ) ; void * ( * follow_link ) ( s#dentry * , s#nameidata * ) ; void ( * put_link ) ( s#dentry * , s#nameidata * , void * ) ; void ( * truncate ) ( s#inode * ) ; int ( * permission ) ( s#inode * , int ) ; int ( * check_acl ) ( s#inode * , int ) ; int ( * may_create ) ( s#inode * , int ) ; int ( * may_delete ) ( s#inode * , s#inode * ) ; int ( * setattr ) ( s#dentry * , s#iattr * ) ; int ( * getattr ) ( s#vfsmount * , s#dentry * , s#kstat * ) ; int ( * setxattr ) ( s#dentry * , const char * , const void * , t#size_t , int ) ; t#ssize_t ( * getxattr ) ( s#dentry * , const char * , void * , t#size_t ) ; t#ssize_t ( * listxattr ) ( s#dentry * , char * , t#size_t ) ; int ( * removexattr ) ( s#dentry * , const char * ) ; void ( * truncate_range ) ( s#inode * , t#loff_t , t#loff_t ) ; long ( * fallocate ) ( s#inode * , int , t#loff_t , t#loff_t ) ; int ( * fiemap ) ( s#inode * , s#fiemap_extent_info * , t#u64 , t#u64 ) ; } 
s##cdev
s##posix_acl
s#inode struct inode { s#hlist_node i_hash ; s#list_head i_list ; s#list_head i_sb_list ; s#list_head i_dentry ; unsigned long i_ino ; t#atomic_t i_count ; unsigned int i_nlink ; t#uid_t i_uid ; t#gid_t i_gid ; t#dev_t i_rdev ; t#u64 i_version ; t#loff_t i_size ; s#timespec i_atime ; s#timespec i_mtime ; s#timespec i_ctime ; t#blkcnt_t i_blocks ; unsigned int i_blkbits ; unsigned short i_bytes ; t#umode_t i_mode ; t#spinlock_t i_lock ; s#mutex i_mutex ; s#rw_semaphore i_alloc_sem ; const s#inode_operations * i_op ; const s#file_operations * i_fop ; s#super_block * i_sb ; s#file_lock * i_flock ; s#address_space * i_mapping ; s#address_space i_data ; s#dquot * i_dquot [ 2 ] ; s#list_head i_devices ; union { s#pipe_inode_info * i_pipe ; s#block_device * i_bdev ; s#cdev * i_cdev ; } ; t#__u32 i_generation ; t#__u32 i_fsnotify_mask ; s#hlist_head i_fsnotify_mark_entries ; s#list_head inotify_watches ; s#mutex inotify_mutex ; unsigned long i_state ; unsigned long dirtied_when ; unsigned int i_flags ; t#atomic_t i_writecount ; void * i_security ; s#posix_acl * i_acl ; s#posix_acl * i_default_acl ; void * i_private ; } 
s##radix_tree_node
s#radix_tree_root struct radix_tree_root { unsigned int height ; t#gfp_t gfp_mask ; s#radix_tree_node * rnode ; } 
s#prio_tree_root struct prio_tree_root { s#prio_tree_node * prio_tree_node ; unsigned short index_bits ; unsigned short raw ; } 
s##writeback_control
t#sector_t typedef unsigned long sector_t 
t#read_descriptor_t typedef struct { t#size_t written ; t#size_t count ; union { char * buf ; void * data ; } arg ; int error ; } read_descriptor_t 
s#address_space_operations struct address_space_operations { int ( * writepage ) ( s#page * , s#writeback_control * ) ; int ( * readpage ) ( s#file * , s#page * ) ; void ( * sync_page ) ( s#page * ) ; int ( * writepages ) ( s#address_space * , s#writeback_control * ) ; int ( * set_page_dirty ) ( s#page * ) ; int ( * readpages ) ( s#file * , s#address_space * , s#list_head * , unsigned ) ; int ( * write_begin ) ( s#file * , s#address_space * , t#loff_t , unsigned , unsigned , s#page * * , void * * ) ; int ( * write_end ) ( s#file * , s#address_space * , t#loff_t , unsigned , unsigned , s#page * , void * ) ; t#sector_t ( * bmap ) ( s#address_space * , t#sector_t ) ; void ( * invalidatepage ) ( s#page * , unsigned long ) ; int ( * releasepage ) ( s#page * , t#gfp_t ) ; t#ssize_t ( * direct_IO ) ( int , s#kiocb * , const s#iovec * , t#loff_t , unsigned long ) ; int ( * get_xip_mem ) ( s#address_space * , unsigned long , int , void * * , unsigned long * ) ; int ( * migratepage ) ( s#address_space * , s#page * , s#page * ) ; int ( * launder_page ) ( s#page * ) ; int ( * is_partially_uptodate ) ( s#page * , t#read_descriptor_t * , unsigned long ) ; int ( * error_remove_page ) ( s#address_space * , s#page * ) ; int ( * swapon ) ( s#file * ) ; int ( * swapoff ) ( s#file * ) ; int ( * swap_out ) ( s#file * , s#page * , s#writeback_control * ) ; int ( * swap_in ) ( s#file * , s#page * ) ; } 
s#address_space struct address_space { s#inode * host ; s#radix_tree_root page_tree ; t#spinlock_t tree_lock ; unsigned int i_mmap_writable ; s#prio_tree_root i_mmap ; s#list_head i_mmap_nonlinear ; t#spinlock_t i_mmap_lock ; unsigned int truncate_count ; unsigned long nrpages ; unsigned long writeback_index ; const s#address_space_operations * a_ops ; unsigned long flags ; s#backing_dev_info * backing_dev_info ; t#spinlock_t private_lock ; s#list_head private_list ; s#address_space * assoc_mapping ; } 
s##array_cache
s##kmem_list3
s#kmem_cache struct kmem_cache { s#array_cache * array [ 64 ] ; unsigned int batchcount ; unsigned int limit ; unsigned int shared ; unsigned int buffer_size ; t#u32 reciprocal_buffer_size ; unsigned int flags ; unsigned int num ; unsigned int gfporder ; t#gfp_t gfpflags ; t#size_t colour ; unsigned int colour_off ; s#kmem_cache * slabp_cache ; unsigned int slab_size ; unsigned int dflags ; void ( * ctor ) ( void * ) ; const char * name ; s#list_head next ; s#kmem_list3 * nodelists [ ( 1 << 0 ) ] ; } 
s#page struct page { unsigned long flags ; t#atomic_t _count ; union { t#atomic_t _mapcount ; struct { t#u16 inuse ; t#u16 objects ; } ; } ; union { struct { unsigned long private ; s#address_space * mapping ; } ; t#spinlock_t ptl ; s#kmem_cache * slab ; s#page * first_page ; } ; union { unsigned long index ; void * freelist ; int reserve ; t#atomic_t frag_count ; } ; s#list_head lru ; } 
s#vm_fault struct vm_fault { unsigned int flags ; unsigned long pgoff ; void * virtual_address ; s#page * page ; } 
s#vm_operations_struct struct vm_operations_struct { void ( * open ) ( s#vm_area_struct * ) ; void ( * close ) ( s#vm_area_struct * ) ; int ( * fault ) ( s#vm_area_struct * , s#vm_fault * ) ; int ( * mprotect ) ( s#vm_area_struct * , unsigned int ) ; int ( * page_mkwrite ) ( s#vm_area_struct * , s#vm_fault * ) ; int ( * access ) ( s#vm_area_struct * , unsigned long , void * , int , int ) ; } 
s#vm_area_struct struct vm_area_struct { s#mm_struct * vm_mm ; unsigned long vm_start ; unsigned long vm_end ; s#vm_area_struct * vm_next ; t#pgprot_t vm_page_prot ; unsigned long vm_flags ; s#rb_node vm_rb ; union { struct { s#list_head list ; void * parent ; s#vm_area_struct * head ; } vm_set ; s#raw_prio_tree_node prio_tree_node ; } shared ; s#list_head anon_vma_node ; s#anon_vma * anon_vma ; const s#vm_operations_struct * vm_ops ; unsigned long vm_pgoff ; s#file * vm_file ; void * vm_private_data ; unsigned long vm_truncate_count ; } 
s#rb_root struct rb_root { s#rb_node * rb_node ; } 
t#pgd_t typedef struct { unsigned long pgd ; } pgd_t 
t#mm_counter_t typedef t#atomic_long_t mm_counter_t 
s##linux_binfmt
t#mm_context_t typedef struct { t#spinlock_t list_lock ; s#list_head crst_list ; s#list_head pgtable_list ; unsigned long asce_bits ; unsigned long asce_limit ; unsigned long vdso_base ; int noexec ; int has_pgste ; int alloc_pgste ; } mm_context_t 
s#core_thread struct core_thread { s#task_struct * task ; s#core_thread * next ; } 
s#core_state struct core_state { t#atomic_t nr_threads ; s#core_thread dumper ; s#completion startup ; } 
s#mm_struct struct mm_struct { s#vm_area_struct * mmap ; s#rb_root mm_rb ; s#vm_area_struct * mmap_cache ; unsigned long ( * get_unmapped_area ) ( s#file * , unsigned long , unsigned long , unsigned long , unsigned long ) ; void ( * unmap_area ) ( s#mm_struct * , unsigned long ) ; unsigned long mmap_base ; unsigned long task_size ; unsigned long cached_hole_size ; unsigned long free_area_cache ; t#pgd_t * pgd ; t#atomic_t mm_users ; t#atomic_t mm_count ; int map_count ; s#rw_semaphore mmap_sem ; t#spinlock_t page_table_lock ; s#list_head mmlist ; t#mm_counter_t _file_rss ; t#mm_counter_t _anon_rss ; unsigned long hiwater_rss ; unsigned long hiwater_vm ; unsigned long total_vm , locked_vm , shared_vm , exec_vm ; unsigned long stack_vm , reserved_vm , def_flags , nr_ptes ; unsigned long start_code , end_code , start_data , end_data ; unsigned long start_brk , brk , start_stack ; unsigned long arg_start , arg_end , env_start , env_end ; unsigned long saved_auxv [ ( 2 * ( 0 + 19 + 1 ) ) ] ; s#linux_binfmt * binfmt ; t#cpumask_t cpu_vm_mask ; t#mm_context_t context ; unsigned int faultstamp ; unsigned int token_priority ; unsigned int last_interval ; unsigned long flags ; s#core_state * core_state ; t#spinlock_t ioctx_lock ; s#hlist_head ioctx_list ; s#task_struct * owner ; s#file * exe_file ; unsigned long num_exe_file_vmas ; } 
s##bts_context
s#pid_link struct pid_link { s#hlist_node node ; s#pid * pid ; } 
t#cputime_t typedef unsigned long long cputime_t 
s#task_cputime struct task_cputime { t#cputime_t utime ; t#cputime_t stime ; unsigned long long sum_exec_runtime ; } 
s#sem_undo_list struct sem_undo_list { t#atomic_t refcnt ; t#spinlock_t lock ; s#list_head list_proc ; } 
s#sysv_sem struct sysv_sem { s#sem_undo_list * undo_list ; } 
t#freg_t typedef union { float f ; double d ; t#__u64 ui ; struct { t#__u32 hi ; t#__u32 lo ; } fp ; } freg_t 
t#s390_fp_regs typedef struct { t#__u32 fpc ; t#freg_t fprs [ 16 ] ; } s390_fp_regs 
t#mm_segment_t typedef struct { t#__u32 ar4 ; } mm_segment_t 
t#per_cr_words typedef struct { unsigned long cr [ 3 ] ; } per_cr_words 
t#per_cr_bits typedef struct { unsigned : 32 ; unsigned em_branching : 1 ; unsigned em_instruction_fetch : 1 ; unsigned em_storage_alteration : 1 ; unsigned em_gpr_alt_unused : 1 ; unsigned em_store_real_address : 1 ; unsigned : 3 ; unsigned branch_addr_ctl : 1 ; unsigned : 1 ; unsigned storage_alt_space_ctl : 1 ; unsigned : 21 ; unsigned long starting_addr ; unsigned long ending_addr ; } per_cr_bits 
t#per_lowcore_words typedef struct { unsigned short perc_atmid ; unsigned long address ; unsigned char access_id ; } per_lowcore_words 
t#per_lowcore_bits typedef struct { unsigned perc_branching : 1 ; unsigned perc_instruction_fetch : 1 ; unsigned perc_storage_alteration : 1 ; unsigned perc_gpr_alt_unused : 1 ; unsigned perc_store_real_address : 1 ; unsigned : 3 ; unsigned atmid_psw_bit_31 : 1 ; unsigned atmid_validity_bit : 1 ; unsigned atmid_psw_bit_32 : 1 ; unsigned atmid_psw_bit_5 : 1 ; unsigned atmid_psw_bit_16 : 1 ; unsigned atmid_psw_bit_17 : 1 ; unsigned si : 2 ; unsigned long address ; unsigned : 4 ; unsigned access_id : 4 ; } per_lowcore_bits 
t#per_struct typedef struct { union { t#per_cr_words words ; t#per_cr_bits bits ; } control_regs ; unsigned single_step : 1 ; unsigned instruction_fetch : 1 ; unsigned : 30 ; unsigned long starting_addr ; unsigned long ending_addr ; union { t#per_lowcore_words words ; t#per_lowcore_bits bits ; } lowcore ; } per_struct 
s#thread_struct struct thread_struct { t#s390_fp_regs fp_regs ; unsigned int acrs [ 16 ] ; unsigned long ksp ; t#mm_segment_t mm_segment ; unsigned long prot_addr ; unsigned int trap_no ; t#per_struct per_info ; unsigned long ieee_instruction_pointer ; unsigned long pfault_wait ; } 
s##fs_struct
t#sigset_t typedef struct { unsigned long sig [ ( 64 / 64 ) ] ; } sigset_t 
s#sigpending struct sigpending { s#list_head list ; t#sigset_t signal ; } 
u#ktime union ktime { t#s64 tv64 ; } 
t#ktime_t typedef u#ktime ktime_t 
e#hrtimer_restart enum hrtimer_restart { HRTIMER_NORESTART , HRTIMER_RESTART , } 
s#hrtimer_cpu_base struct hrtimer_cpu_base { t#spinlock_t lock ; s#hrtimer_clock_base clock_base [ 2 ] ; t#ktime_t expires_next ; int hres_active ; unsigned long nr_events ; } 
s#hrtimer_clock_base struct hrtimer_clock_base { s#hrtimer_cpu_base * cpu_base ; t#clockid_t index ; s#rb_root active ; s#rb_node * first ; t#ktime_t resolution ; t#ktime_t ( * get_time ) ( void ) ; t#ktime_t softirq_time ; t#ktime_t offset ; } 
s#hrtimer struct hrtimer { s#rb_node node ; t#ktime_t _expires ; t#ktime_t _softexpires ; e#hrtimer_restart ( * function ) ( s#hrtimer * ) ; s#hrtimer_clock_base * base ; unsigned long state ; int start_pid ; void * start_site ; char start_comm [ 16 ] ; } 
s#cpu_itimer struct cpu_itimer { t#cputime_t expires ; t#cputime_t incr ; t#u32 error ; t#u32 incr_error ; } 
s#thread_group_cputimer struct thread_group_cputimer { s#task_cputime cputime ; int running ; t#spinlock_t lock ; } 
s##tty_struct
s#task_io_accounting struct task_io_accounting { t#u64 rchar ; t#u64 wchar ; t#u64 syscr ; t#u64 syscw ; t#u64 read_bytes ; t#u64 write_bytes ; t#u64 cancelled_write_bytes ; } 
s#rlimit struct rlimit { unsigned long rlim_cur ; unsigned long rlim_max ; } 
s#pacct_struct struct pacct_struct { int ac_flag ; long ac_exitcode ; unsigned long ac_mem ; t#cputime_t ac_utime , ac_stime ; unsigned long ac_minflt , ac_majflt ; } 
t#__u8 typedef unsigned char __u8 
s#taskstats struct taskstats { t#__u16 version ; t#__u32 ac_exitcode ; t#__u8 ac_flag ; t#__u8 ac_nice ; t#__u64 cpu_count __attribute__ ( ( aligned ( 8 ) ) ) ; t#__u64 cpu_delay_total ; t#__u64 blkio_count ; t#__u64 blkio_delay_total ; t#__u64 swapin_count ; t#__u64 swapin_delay_total ; t#__u64 cpu_run_real_total ; t#__u64 cpu_run_virtual_total ; char ac_comm [ 32 ] ; t#__u8 ac_sched __attribute__ ( ( aligned ( 8 ) ) ) ; t#__u8 ac_pad [ 3 ] ; t#__u32 ac_uid __attribute__ ( ( aligned ( 8 ) ) ) ; t#__u32 ac_gid ; t#__u32 ac_pid ; t#__u32 ac_ppid ; t#__u32 ac_btime ; t#__u64 ac_etime __attribute__ ( ( aligned ( 8 ) ) ) ; t#__u64 ac_utime ; t#__u64 ac_stime ; t#__u64 ac_minflt ; t#__u64 ac_majflt ; t#__u64 coremem ; t#__u64 virtmem ; t#__u64 hiwater_rss ; t#__u64 hiwater_vm ; t#__u64 read_char ; t#__u64 write_char ; t#__u64 read_syscalls ; t#__u64 write_syscalls ; t#__u64 read_bytes ; t#__u64 write_bytes ; t#__u64 cancelled_write_bytes ; t#__u64 nvcsw ; t#__u64 nivcsw ; t#__u64 ac_utimescaled ; t#__u64 ac_stimescaled ; t#__u64 cpu_scaled_run_real_total ; t#__u64 freepages_count ; t#__u64 freepages_delay_total ; } 
s##tty_audit_buf
s#signal_struct struct signal_struct { t#atomic_t count ; t#atomic_t live ; t#wait_queue_head_t wait_chldexit ; s#task_struct * curr_target ; s#sigpending shared_pending ; int group_exit_code ; int notify_count ; s#task_struct * group_exit_task ; int group_stop_count ; unsigned int flags ; s#list_head posix_timers ; s#hrtimer real_timer ; s#pid * leader_pid ; t#ktime_t it_real_incr ; s#cpu_itimer it [ 2 ] ; s#thread_group_cputimer cputimer ; s#task_cputime cputime_expires ; s#list_head cpu_timers [ 3 ] ; s#pid * tty_old_pgrp ; int leader ; s#tty_struct * tty ; t#cputime_t utime , stime , cutime , cstime ; t#cputime_t gtime ; t#cputime_t cgtime ; unsigned long nvcsw , nivcsw , cnvcsw , cnivcsw ; unsigned long min_flt , maj_flt , cmin_flt , cmaj_flt ; unsigned long inblock , oublock , cinblock , coublock ; unsigned long maxrss , cmaxrss ; s#task_io_accounting ioac ; unsigned long long sum_sched_runtime ; s#rlimit rlim [ 16 ] ; s#pacct_struct pacct ; s#taskstats * stats ; unsigned audit_tty ; s#tty_audit_buf * tty_audit_buf ; int oom_adj ; } 
t#__signalfn_t typedef void __signalfn_t ( int ) 
t#__sighandler_t typedef t#__signalfn_t * __sighandler_t 
s#sigaction struct sigaction { t#__sighandler_t sa_handler ; unsigned long sa_flags ; void ( * sa_restorer ) ( void ) ; t#sigset_t sa_mask ; } 
s#k_sigaction struct k_sigaction { s#sigaction sa ; } 
s#sighand_struct struct sighand_struct { t#atomic_t count ; s#k_sigaction action [ 64 ] ; t#spinlock_t siglock ; t#wait_queue_head_t signalfd_wqh ; } 
s##audit_context
t#seccomp_t typedef struct { int mode ; } seccomp_t 
s##utrace_engine
s#utrace struct utrace { s#task_struct * cloning ; s#list_head attached , attaching ; t#spinlock_t lock ; s#utrace_engine * reporting ; unsigned int stopped : 1 ; unsigned int report : 1 ; unsigned int interrupt : 1 ; unsigned int signal_handler : 1 ; unsigned int vfork_stop : 1 ; unsigned int death : 1 ; unsigned int reap : 1 ; unsigned int pending_attach : 1 ; } 
s##rt_mutex_waiter
s##bio
s#reclaim_state struct reclaim_state { unsigned long reclaimed_slab ; } 
s##io_context
t#__kernel_timer_t typedef int __kernel_timer_t 
u#sigval union sigval { int sival_int ; void * sival_ptr ; } 
t#sigval_t typedef u#sigval sigval_t 
t#__kernel_clock_t typedef long __kernel_clock_t 
s#siginfo struct siginfo { int si_signo ; int si_errno ; int si_code ; union { int _pad [ ( ( 128 - ( 4 * sizeof ( int ) ) ) / sizeof ( int ) ) ] ; struct { t#__kernel_pid_t _pid ; t#__kernel_uid32_t _uid ; } _kill ; struct { t#__kernel_timer_t _tid ; int _overrun ; char _pad [ sizeof ( __kernel_uid32_t ) - sizeof ( int ) ] ; t#sigval_t _sigval ; int _sys_private ; } _timer ; struct { t#__kernel_pid_t _pid ; t#__kernel_uid32_t _uid ; t#sigval_t _sigval ; } _rt ; struct { t#__kernel_pid_t _pid ; t#__kernel_uid32_t _uid ; int _status ; t#__kernel_clock_t _utime ; t#__kernel_clock_t _stime ; } _sigchld ; struct { void * _addr ; short _addr_lsb ; } _sigfault ; struct { long _band ; int _fd ; } _sigpoll ; } _sifields ; } 
t#siginfo_t typedef s#siginfo siginfo_t 
t#nodemask_t typedef struct { unsigned long bits [ ( ( ( ( 1 << 0 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; } nodemask_t 
s##cgroupfs_root
s#cgroup struct cgroup { unsigned long flags ; t#atomic_t count ; s#list_head sibling ; s#list_head children ; s#cgroup * parent ; s#dentry * dentry ; s#cgroup_subsys_state * subsys [ CGROUP_SUBSYS_COUNT ] ; s#cgroupfs_root * root ; s#cgroup * top_cgroup ; s#list_head css_sets ; s#list_head release_list ; s#list_head pidlists ; s#mutex pidlist_mutex ; s#rcu_head rcu_head ; } 
s##css_id
s#cgroup_subsys_state struct cgroup_subsys_state { s#cgroup * cgroup ; t#atomic_t refcnt ; unsigned long flags ; s#css_id * id ; } 
s#css_set struct css_set { t#atomic_t refcount ; s#hlist_node hlist ; s#list_head tasks ; s#list_head cg_links ; s#cgroup_subsys_state * subsys [ CGROUP_SUBSYS_COUNT ] ; s#rcu_head rcu_head ; } 
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s#task_delay_info struct task_delay_info { t#spinlock_t lock ; unsigned int flags ; s#timespec blkio_start , blkio_end ; t#u64 blkio_delay ; t#u64 swapin_delay ; t#u32 blkio_count ; t#u32 swapin_count ; s#timespec freepages_start , freepages_end ; t#u64 freepages_delay ; t#u32 freepages_count ; } 
s#prop_local_single struct prop_local_single { unsigned long events ; unsigned long period ; int shift ; t#spinlock_t lock ; } 
s#latency_record struct latency_record { unsigned long backtrace [ 12 ] ; unsigned int count ; unsigned long time ; unsigned long max ; } 
s##ftrace_ret_stack
s##mem_cgroup
s#memcg_batch_info struct memcg_batch_info { int do_batch ; s#mem_cgroup * memcg ; unsigned long bytes ; unsigned long memsw_bytes ; } 
s#task_struct struct task_struct { volatile long state ; void * stack ; t#atomic_t usage ; unsigned int flags ; unsigned int ptrace ; int lock_depth ; int prio , static_prio , normal_prio ; unsigned int rt_priority ; const s#sched_class * sched_class ; s#sched_entity se ; s#sched_rt_entity rt ; s#hlist_head preempt_notifiers ; unsigned char fpu_counter ; unsigned int btrace_seq ; unsigned int policy ; t#cpumask_t cpus_allowed ; s#sched_info sched_info ; s#list_head tasks ; s#plist_node pushable_tasks ; s#mm_struct * mm , * active_mm ; int exit_state ; int exit_code , exit_signal ; int pdeath_signal ; unsigned int personality ; unsigned did_exec : 1 ; unsigned in_execve : 1 ; unsigned in_iowait : 1 ; unsigned sched_reset_on_fork : 1 ; t#pid_t pid ; t#pid_t tgid ; s#task_struct * real_parent ; s#task_struct * parent ; s#list_head children ; s#list_head sibling ; s#task_struct * group_leader ; s#list_head ptraced ; s#list_head ptrace_entry ; s#bts_context * bts ; s#pid_link pids [ PIDTYPE_MAX ] ; s#list_head thread_group ; s#completion * vfork_done ; int * set_child_tid ; int * clear_child_tid ; t#cputime_t utime , stime , utimescaled , stimescaled ; t#cputime_t gtime ; t#cputime_t prev_utime , prev_stime ; unsigned long nvcsw , nivcsw ; s#timespec start_time ; s#timespec real_start_time ; unsigned long min_flt , maj_flt ; s#task_cputime cputime_expires ; s#list_head cpu_timers [ 3 ] ; const s#cred * real_cred ; const s#cred * cred ; s#mutex cred_guard_mutex ; s#cred * replacement_session_keyring ; char comm [ 16 ] ; int link_count , total_link_count ; s#sysv_sem sysvsem ; unsigned long last_switch_count ; s#thread_struct thread ; s#fs_struct * fs ; s#files_struct * files ; s#nsproxy * nsproxy ; s#signal_struct * signal ; s#sighand_struct * sighand ; t#sigset_t blocked , real_blocked ; t#sigset_t saved_sigmask ; s#sigpending pending ; unsigned long sas_ss_sp ; t#size_t sas_ss_size ; int ( * notifier ) ( void * ) ; void * notifier_data ; t#sigset_t * notifier_mask ; s#audit_context * audit_context ; t#uid_t loginuid ; unsigned int sessionid ; t#seccomp_t seccomp ; s#utrace utrace ; unsigned long utrace_flags ; t#u32 parent_exec_id ; t#u32 self_exec_id ; t#spinlock_t alloc_lock ; t#spinlock_t pi_lock ; s#plist_head pi_waiters ; s#rt_mutex_waiter * pi_blocked_on ; unsigned int irq_events ; int hardirqs_enabled ; unsigned long hardirq_enable_ip ; unsigned int hardirq_enable_event ; unsigned long hardirq_disable_ip ; unsigned int hardirq_disable_event ; int softirqs_enabled ; unsigned long softirq_disable_ip ; unsigned int softirq_disable_event ; unsigned long softirq_enable_ip ; unsigned int softirq_enable_event ; int hardirq_context ; int softirq_context ; void * journal_info ; s#bio * bio_list , * * bio_tail ; s#reclaim_state * reclaim_state ; s#backing_dev_info * backing_dev_info ; s#io_context * io_context ; unsigned long ptrace_message ; t#siginfo_t * last_siginfo ; s#task_io_accounting ioac ; t#u64 acct_rss_mem1 ; t#u64 acct_vm_mem1 ; t#cputime_t acct_timexpd ; t#nodemask_t mems_allowed ; int cpuset_mem_spread_rotor ; s#css_set * cgroups ; s#list_head cg_list ; s#robust_list_head * robust_list ; s#compat_robust_list_head * compat_robust_list ; s#list_head pi_state_list ; s#futex_pi_state * pi_state_cache ; s#perf_event_context * perf_event_ctxp ; s#mutex perf_event_mutex ; s#list_head perf_event_list ; t#atomic_t fs_excl ; s#rcu_head rcu ; s#pipe_inode_info * splice_pipe ; s#task_delay_info * delays ; s#prop_local_single dirties ; int latency_record_count ; s#latency_record latency_record [ 32 ] ; unsigned long timer_slack_ns ; unsigned long default_timer_slack_ns ; s#list_head * scm_work_list ; int curr_ret_stack ; s#ftrace_ret_stack * ret_stack ; unsigned long long ftrace_timestamp ; t#atomic_t trace_overrun ; t#atomic_t tracing_graph_pause ; unsigned long trace ; unsigned long trace_recursion ; unsigned long stack_start ; s#memcg_batch_info memcg_batch ; } 
t#ctor_fn_t typedef void ( * ctor_fn_t ) ( void ) 
s#module struct module { e#module_state state ; s#list_head list ; char name [ ( 64 - sizeof ( unsigned long ) ) ] ; s#module_kobject mkobj ; s#module_attribute * modinfo_attrs ; const char * version ; const char * srcversion ; s#kobject * holders_dir ; const s#kernel_symbol * syms ; const unsigned long * crcs ; unsigned int num_syms ; s#kernel_param * kp ; unsigned int num_kp ; unsigned int num_gpl_syms ; const s#kernel_symbol * gpl_syms ; const unsigned long * gpl_crcs ; const s#kernel_symbol * unused_syms ; const unsigned long * unused_crcs ; unsigned int num_unused_syms ; unsigned int num_unused_gpl_syms ; const s#kernel_symbol * unused_gpl_syms ; const unsigned long * unused_gpl_crcs ; const s#kernel_symbol * gpl_future_syms ; const unsigned long * gpl_future_crcs ; unsigned int num_gpl_future_syms ; unsigned int num_exentries ; s#exception_table_entry * extable ; int ( * init ) ( void ) ; void * module_init ; void * module_core ; unsigned int init_size , core_size ; unsigned int init_text_size , core_text_size ; void * unwind_info ; s#mod_arch_specific arch ; unsigned int taints ; unsigned num_bugs ; s#list_head bug_list ; s#bug_entry * bug_table ; t#Elf64_Sym * symtab , * core_symtab ; unsigned int num_symtab , core_num_syms ; char * strtab , * core_strtab ; s#module_sect_attrs * sect_attrs ; s#module_notes_attrs * notes_attrs ; void * percpu ; char * args ; s#tracepoint * tracepoints ; unsigned int num_tracepoints ; const char * * trace_bprintk_fmt_start ; unsigned int num_trace_bprintk_fmt ; s#ftrace_event_call * trace_events ; unsigned int num_trace_events ; unsigned long * ftrace_callsites ; unsigned int num_ftrace_callsites ; s#list_head modules_which_use_me ; s#task_struct * waiter ; void ( * exit ) ( void ) ; char * refptr ; t#ctor_fn_t * ctors ; unsigned int num_ctors ; } 
s#appldata_ops struct appldata_ops { s#list_head list ; s#ctl_table_header * sysctl_header ; s#ctl_table * ctl_table ; int active ; char name [ 16 ] ; unsigned char record_nr ; void ( * callback ) ( void * ) ; void * data ; unsigned int size ; s#module * owner ; char mod_lvl [ 2 ] ; } 
appldata_register_ops extern int appldata_register_ops ( s#appldata_ops * ) 
appldata_unregister_ops extern void appldata_unregister_ops ( s#appldata_ops * ) 
appldata_diag extern int appldata_diag ( char , t#u16 , unsigned long , t#u16 , char * ) 
s#sysinfo struct sysinfo { long uptime ; unsigned long loads [ 3 ] ; unsigned long totalram ; unsigned long freeram ; unsigned long sharedram ; unsigned long bufferram ; unsigned long totalswap ; unsigned long freeswap ; unsigned short procs ; unsigned short pad ; unsigned long totalhigh ; unsigned long freehigh ; unsigned int mem_unit ; char _f [ 20 - 2 * sizeof ( long ) - sizeof ( int ) ] ; } 
si_swapinfo extern void si_swapinfo ( s#sysinfo * ) 
nr_threads extern int nr_threads 
nr_running extern unsigned long nr_running ( void ) 
nr_iowait extern unsigned long nr_iowait ( void ) 

/* arch/s390/boot/kerntypes.o */
s##exec_domain
t#s32 typedef signed int s32 
t#compat_time_t typedef t#s32 compat_time_t 
s#compat_timespec struct compat_timespec { t#compat_time_t tv_sec ; t#s32 tv_nsec ; } 
s#pollfd struct pollfd { int fd ; short events ; short revents ; } 
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
e#print_line_t enum print_line_t { TRACE_TYPE_PARTIAL_LINE = 0 , TRACE_TYPE_HANDLED = 1 , TRACE_TYPE_UNHANDLED = 2 , TRACE_TYPE_NO_CONSUME = 3 } 
s##trace_array
s##tracer
s##ring_buffer_iter
s#trace_seq struct trace_seq { unsigned char buffer [ ( ( 1UL ) << 12 ) ] ; unsigned int len ; unsigned int readpos ; } 
s#trace_entry struct trace_entry { unsigned short type ; unsigned char flags ; unsigned char preempt_count ; int pid ; int lock_depth ; } 
t#cpumask_var_t typedef s#cpumask cpumask_var_t [ 1 ] 
s#trace_iterator struct trace_iterator { s#trace_array * tr ; s#tracer * trace ; void * private ; int cpu_file ; s#mutex mutex ; s#ring_buffer_iter * buffer_iter [ 64 ] ; unsigned long iter_flags ; s#trace_seq seq ; s#trace_entry * ent ; int cpu ; t#u64 ts ; t#loff_t pos ; long idx ; t#cpumask_var_t started ; } 
t#trace_print_func typedef e#print_line_t ( * trace_print_func ) ( s#trace_iterator * , int ) 
s#trace_event struct trace_event { s#hlist_node node ; s#list_head list ; int type ; t#trace_print_func trace ; t#trace_print_func raw ; t#trace_print_func hex ; t#trace_print_func binary ; } 
s##event_filter
s#ftrace_event_call struct ftrace_event_call { s#list_head list ; char * name ; char * system ; s#dentry * dir ; s#trace_event * event ; int enabled ; int ( * regfunc ) ( void * ) ; void ( * unregfunc ) ( void * ) ; int id ; int ( * raw_init ) ( void ) ; int ( * show_format ) ( s#ftrace_event_call * , s#trace_seq * ) ; int ( * define_fields ) ( s#ftrace_event_call * ) ; s#list_head fields ; int filter_active ; s#event_filter * filter ; void * mod ; void * data ; t#atomic_t profile_count ; int ( * profile_enable ) ( void ) ; void ( * profile_disable ) ( void ) ; } 
t#__kernel_fsid_t typedef struct { int val [ 2 ] ; } __kernel_fsid_t 
s#kstatfs struct kstatfs { long f_type ; long f_bsize ; t#u64 f_blocks ; t#u64 f_bfree ; t#u64 f_bavail ; t#u64 f_files ; t#u64 f_ffree ; t#__kernel_fsid_t f_fsid ; long f_namelen ; long f_frsize ; long f_spare [ 5 ] ; } 
s#seq_operations struct seq_operations { void * ( * start ) ( s#seq_file * , t#loff_t * ) ; void ( * stop ) ( s#seq_file * , void * ) ; void * ( * next ) ( s#seq_file * , void * , t#loff_t * ) ; int ( * show ) ( s#seq_file * , void * ) ; } 
s#seq_file struct seq_file { char * buf ; t#size_t size ; t#size_t from ; t#size_t count ; t#loff_t index ; t#loff_t read_pos ; t#u64 version ; s#mutex lock ; const s#seq_operations * op ; void * private ; } 
s##radix_tree_node
t#congested_fn typedef int ( congested_fn ) ( void * , int ) 
s#percpu_counter struct percpu_counter { t#spinlock_t lock ; t#s64 count ; s#list_head list ; t#s32 * counters ; } 
s#prop_local_percpu struct prop_local_percpu { s#percpu_counter events ; int shift ; unsigned long period ; t#spinlock_t lock ; } 
s#bdi_writeback struct bdi_writeback { s#list_head list ; s#backing_dev_info * bdi ; unsigned int nr ; unsigned long last_old_flush ; s#task_struct * task ; s#list_head b_dirty ; s#list_head b_io ; s#list_head b_more_io ; } 
s##device_private
s#attribute_group struct attribute_group { const char * name ; t#mode_t ( * is_visible ) ( s#kobject * , s#attribute * , int ) ; s#attribute * * attrs ; } 
s#dev_pm_ops struct dev_pm_ops { int ( * prepare ) ( s#device * ) ; void ( * complete ) ( s#device * ) ; int ( * suspend ) ( s#device * ) ; int ( * resume ) ( s#device * ) ; int ( * freeze ) ( s#device * ) ; int ( * thaw ) ( s#device * ) ; int ( * poweroff ) ( s#device * ) ; int ( * restore ) ( s#device * ) ; int ( * suspend_noirq ) ( s#device * ) ; int ( * resume_noirq ) ( s#device * ) ; int ( * freeze_noirq ) ( s#device * ) ; int ( * thaw_noirq ) ( s#device * ) ; int ( * poweroff_noirq ) ( s#device * ) ; int ( * restore_noirq ) ( s#device * ) ; int ( * runtime_suspend ) ( s#device * ) ; int ( * runtime_resume ) ( s#device * ) ; int ( * runtime_idle ) ( s#device * ) ; } 
s#device_type struct device_type { const char * name ; const s#attribute_group * * groups ; int ( * uevent ) ( s#device * , s#kobj_uevent_env * ) ; char * ( * devnode ) ( s#device * , t#mode_t * ) ; void ( * release ) ( s#device * ) ; const s#dev_pm_ops * pm ; } 
s#semaphore struct semaphore { t#spinlock_t lock ; unsigned int count ; s#list_head wait_list ; } 
s#bus_attribute struct bus_attribute { s#attribute attr ; t#ssize_t ( * show ) ( s#bus_type * , char * ) ; t#ssize_t ( * store ) ( s#bus_type * , const char * , t#size_t ) ; } 
s#device_attribute struct device_attribute { s#attribute attr ; t#ssize_t ( * show ) ( s#device * , s#device_attribute * , char * ) ; t#ssize_t ( * store ) ( s#device * , s#device_attribute * , const char * , t#size_t ) ; } 
t#bool typedef _Bool bool 
s#pm_message struct pm_message { int event ; } 
t#pm_message_t typedef s#pm_message pm_message_t 
s##driver_private
s#device_driver struct device_driver { const char * name ; s#bus_type * bus ; s#module * owner ; const char * mod_name ; t#bool suppress_bind_attrs ; int ( * probe ) ( s#device * ) ; int ( * remove ) ( s#device * ) ; void ( * shutdown ) ( s#device * ) ; int ( * suspend ) ( s#device * , t#pm_message_t ) ; int ( * resume ) ( s#device * ) ; const s#attribute_group * * groups ; const s#dev_pm_ops * pm ; s#driver_private * p ; } 
s#driver_attribute struct driver_attribute { s#attribute attr ; t#ssize_t ( * show ) ( s#device_driver * , char * ) ; t#ssize_t ( * store ) ( s#device_driver * , const char * , t#size_t ) ; } 
s##bus_type_private
s#bus_type struct bus_type { const char * name ; s#bus_attribute * bus_attrs ; s#device_attribute * dev_attrs ; s#driver_attribute * drv_attrs ; int ( * match ) ( s#device * , s#device_driver * ) ; int ( * uevent ) ( s#device * , s#kobj_uevent_env * ) ; int ( * probe ) ( s#device * ) ; int ( * remove ) ( s#device * ) ; void ( * shutdown ) ( s#device * ) ; int ( * suspend ) ( s#device * , t#pm_message_t ) ; int ( * resume ) ( s#device * ) ; const s#dev_pm_ops * pm ; s#bus_type_private * p ; } 
e#dpm_state enum dpm_state { DPM_INVALID , DPM_ON , DPM_PREPARING , DPM_RESUMING , DPM_SUSPENDING , DPM_OFF , DPM_OFF_IRQ , } 
s#dev_pm_info struct dev_pm_info { t#pm_message_t power_state ; unsigned int can_wakeup : 1 ; unsigned int should_wakeup : 1 ; e#dpm_state status ; s#list_head entry ; } 
s#device_dma_parameters struct device_dma_parameters { unsigned int max_segment_size ; unsigned long segment_boundary_mask ; } 
s##dma_coherent_mem
s#dev_archdata struct dev_archdata { } 
s#klist_node struct klist_node { void * n_klist ; s#list_head n_node ; s#kref n_ref ; } 
s#class_attribute struct class_attribute { s#attribute attr ; t#ssize_t ( * show ) ( s#class * , char * ) ; t#ssize_t ( * store ) ( s#class * , const char * , t#size_t ) ; } 
s##class_private
s#class struct class { const char * name ; s#module * owner ; s#class_attribute * class_attrs ; s#device_attribute * dev_attrs ; s#kobject * dev_kobj ; int ( * dev_uevent ) ( s#device * , s#kobj_uevent_env * ) ; char * ( * devnode ) ( s#device * , t#mode_t * ) ; void ( * class_release ) ( s#class * ) ; void ( * dev_release ) ( s#device * ) ; int ( * suspend ) ( s#device * , t#pm_message_t ) ; int ( * resume ) ( s#device * ) ; const s#dev_pm_ops * pm ; s#class_private * p ; } 
s#device struct device { s#device * parent ; s#device_private * p ; s#kobject kobj ; const char * init_name ; s#device_type * type ; s#semaphore sem ; s#bus_type * bus ; s#device_driver * driver ; void * platform_data ; s#dev_pm_info power ; t#u64 * dma_mask ; t#u64 coherent_dma_mask ; s#device_dma_parameters * dma_parms ; s#list_head dma_pools ; s#dma_coherent_mem * dma_mem ; s#dev_archdata archdata ; t#dev_t devt ; t#spinlock_t devres_lock ; s#list_head devres_head ; s#klist_node knode_class ; s#class * class ; const s#attribute_group * * groups ; void ( * release ) ( s#device * ) ; } 
s#backing_dev_info struct backing_dev_info { s#list_head bdi_list ; s#rcu_head rcu_head ; unsigned long ra_pages ; unsigned long state ; unsigned int capabilities ; t#congested_fn * congested_fn ; void * congested_data ; void ( * unplug_io_fn ) ( s#backing_dev_info * , s#page * ) ; void * unplug_io_data ; char * name ; s#percpu_counter bdi_stat [ NR_BDI_STAT_ITEMS ] ; s#prop_local_percpu completions ; int dirty_exceeded ; unsigned int min_ratio ; unsigned int max_ratio , max_prop_frac ; s#bdi_writeback wb ; t#spinlock_t wb_lock ; s#list_head wb_list ; unsigned long wb_mask ; unsigned int wb_cnt ; s#list_head work_list ; s#device * dev ; s#dentry * debug_dir ; s#dentry * debug_stats ; } 
e#writeback_sync_modes enum writeback_sync_modes { WB_SYNC_NONE , WB_SYNC_ALL , } 
s#writeback_control struct writeback_control { s#backing_dev_info * bdi ; s#super_block * sb ; e#writeback_sync_modes sync_mode ; unsigned long * older_than_this ; long nr_to_write ; long pages_skipped ; t#loff_t range_start ; t#loff_t range_end ; unsigned nonblocking : 1 ; unsigned encountered_congestion : 1 ; unsigned for_kupdate : 1 ; unsigned for_reclaim : 1 ; unsigned range_cyclic : 1 ; unsigned more_io : 1 ; unsigned no_nrwrite_index_update : 1 ; } 
s##anon_vma
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s#linux_binprm struct linux_binprm { char buf [ 128 ] ; s#vm_area_struct * vma ; s#mm_struct * mm ; unsigned long p ; unsigned int cred_prepared : 1 , cap_effective : 1 ; unsigned int recursion_depth ; s#file * file ; s#cred * cred ; int unsafe ; unsigned int per_clear ; int argc , envc ; char * filename ; char * interp ; unsigned interp_flags ; unsigned interp_data ; unsigned long loader , exec ; } 
t#psw_t typedef struct { unsigned long mask ; unsigned long addr ; } __attribute__ ( ( aligned ( 8 ) ) ) psw_t 
s#pt_regs struct pt_regs { unsigned long args [ 1 ] ; t#psw_t psw ; unsigned long gprs [ 16 ] ; unsigned long orig_gpr2 ; unsigned short svcnr ; unsigned short ilc ; } 
s#linux_binfmt struct linux_binfmt { s#list_head lh ; s#module * module ; int ( * load_binary ) ( s#linux_binprm * , s#pt_regs * ) ; int ( * load_shlib ) ( s#file * ) ; int ( * core_dump ) ( long , s#pt_regs * , s#file * , unsigned long ) ; unsigned long min_coredump ; int hasvdso ; } 
s##tvec_base
s##eventfd_ctx
t#poll_queue_proc typedef void ( * poll_queue_proc ) ( s#file * , t#wait_queue_head_t * , s#poll_table_struct * ) 
s#poll_table_struct struct poll_table_struct { t#poll_queue_proc qproc ; unsigned long key ; } 
s##files_struct
s#pidmap struct pidmap { t#atomic_t nr_free ; void * page ; } 
s##array_cache
s##kmem_list3
s##bsd_acct_struct
s#pid_namespace struct pid_namespace { s#kref kref ; s#pidmap pidmap [ ( ( ( 0 ? ( ( 1UL ) << 12 ) * 8 : ( sizeof ( long ) > 4 ? 4 * 1024 * 1024 : ( 0 ? 0x1000 : 0x8000 ) ) ) + 8 * ( ( 1UL ) << 12 ) - 1 ) / ( ( 1UL ) << 12 ) / 8 ) ] ; int last_pid ; s#task_struct * child_reaper ; s#kmem_cache * pid_cachep ; unsigned int level ; s#pid_namespace * parent ; s#vfsmount * proc_mnt ; s#bsd_acct_struct * bacct ; } 
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##export_operations
s##xattr_handler
s#disk_stats struct disk_stats { unsigned long sectors [ 2 ] ; unsigned long ios [ 2 ] ; unsigned long merges [ 2 ] ; unsigned long ticks [ 2 ] ; unsigned long io_ticks ; unsigned long time_in_queue ; } 
s#hd_struct struct hd_struct { t#sector_t start_sect ; t#sector_t nr_sects ; t#sector_t alignment_offset ; s#device __dev ; s#kobject * holder_dir ; int policy , partno ; unsigned long stamp ; int in_flight [ 2 ] ; s#disk_stats * dkstats ; s#rcu_head rcu_head ; } 
s#disk_part_tbl struct disk_part_tbl { s#rcu_head rcu_head ; int len ; s#hd_struct * last_lookup ; s#hd_struct * part [ ] ; } 
s#hd_geometry struct hd_geometry { unsigned char heads ; unsigned char sectors ; unsigned short cylinders ; unsigned long start ; } 
s#block_device_operations struct block_device_operations { int ( * open ) ( s#block_device * , t#fmode_t ) ; int ( * release ) ( s#gendisk * , t#fmode_t ) ; int ( * locked_ioctl ) ( s#block_device * , t#fmode_t , unsigned , unsigned long ) ; int ( * ioctl ) ( s#block_device * , t#fmode_t , unsigned , unsigned long ) ; int ( * compat_ioctl ) ( s#block_device * , t#fmode_t , unsigned , unsigned long ) ; int ( * direct_access ) ( s#block_device * , t#sector_t , void * * , unsigned long * ) ; int ( * media_changed ) ( s#gendisk * ) ; unsigned long long ( * set_capacity ) ( s#gendisk * , unsigned long long ) ; int ( * revalidate_disk ) ( s#gendisk * ) ; int ( * getgeo ) ( s#block_device * , s#hd_geometry * ) ; s#module * owner ; } 
s#call_single_data struct call_single_data { s#list_head list ; void ( * func ) ( void * ) ; void * info ; t#u16 flags ; t#u16 priv ; } 
e#rq_cmd_type_bits enum rq_cmd_type_bits { REQ_TYPE_FS = 1 , REQ_TYPE_BLOCK_PC , REQ_TYPE_SENSE , REQ_TYPE_PM_SUSPEND , REQ_TYPE_PM_RESUME , REQ_TYPE_PM_SHUTDOWN , REQ_TYPE_SPECIAL , REQ_TYPE_LINUX_BLOCK , REQ_TYPE_ATA_TASKFILE , REQ_TYPE_ATA_PC , } 
s#bio_vec struct bio_vec { s#page * bv_page ; unsigned int bv_len ; unsigned int bv_offset ; } 
t#bio_end_io_t typedef void ( bio_end_io_t ) ( s#bio * , int ) 
s#bio_integrity_payload struct bio_integrity_payload { s#bio * bip_bio ; t#sector_t bip_sector ; void * bip_buf ; t#bio_end_io_t * bip_end_io ; unsigned int bip_size ; unsigned short bip_slab ; unsigned short bip_vcnt ; unsigned short bip_idx ; s#work_struct bip_work ; s#bio_vec bip_vec [ 0 ] ; } 
t#bio_destructor_t typedef void ( bio_destructor_t ) ( s#bio * ) 
s#bio struct bio { t#sector_t bi_sector ; s#bio * bi_next ; s#block_device * bi_bdev ; unsigned long bi_flags ; unsigned long bi_rw ; unsigned short bi_vcnt ; unsigned short bi_idx ; unsigned int bi_phys_segments ; unsigned int bi_size ; unsigned int bi_seg_front_size ; unsigned int bi_seg_back_size ; unsigned int bi_max_vecs ; unsigned int bi_comp_cpu ; t#atomic_t bi_cnt ; s#bio_vec * bi_io_vec ; t#bio_end_io_t * bi_end_io ; void * bi_private ; s#bio_integrity_payload * bi_integrity ; t#bio_destructor_t * bi_destructor ; s#bio_vec bi_inline_vecs [ 0 ] ; } 
t#rq_end_io_fn typedef void ( rq_end_io_fn ) ( s#request * , int ) 
s#request struct request { s#list_head queuelist ; s#call_single_data csd ; int cpu ; s#request_queue * q ; unsigned int cmd_flags ; e#rq_cmd_type_bits cmd_type ; unsigned long atomic_flags ; t#sector_t __sector ; unsigned int __data_len ; s#bio * bio ; s#bio * biotail ; s#hlist_node hash ; union { s#rb_node rb_node ; void * completion_data ; } ; void * elevator_private ; void * elevator_private2 ; s#gendisk * rq_disk ; unsigned long start_time ; unsigned short nr_phys_segments ; unsigned short ioprio ; void * special ; char * buffer ; int tag ; int errors ; int ref_count ; unsigned short cmd_len ; unsigned char __cmd [ 16 ] ; unsigned char * cmd ; unsigned int extra_len ; unsigned int sense_len ; unsigned int resid_len ; void * sense ; unsigned long deadline ; s#list_head timeout_list ; unsigned int timeout ; int retries ; t#rq_end_io_fn * end_io ; void * end_io_data ; s#request * next_rq ; } 
t#elevator_merge_fn typedef int ( elevator_merge_fn ) ( s#request_queue * , s#request * * , s#bio * ) 
t#elevator_merged_fn typedef void ( elevator_merged_fn ) ( s#request_queue * , s#request * , int ) 
t#elevator_merge_req_fn typedef void ( elevator_merge_req_fn ) ( s#request_queue * , s#request * , s#request * ) 
t#elevator_allow_merge_fn typedef int ( elevator_allow_merge_fn ) ( s#request_queue * , s#request * , s#bio * ) 
t#elevator_dispatch_fn typedef int ( elevator_dispatch_fn ) ( s#request_queue * , int ) 
t#elevator_add_req_fn typedef void ( elevator_add_req_fn ) ( s#request_queue * , s#request * ) 
t#elevator_activate_req_fn typedef void ( elevator_activate_req_fn ) ( s#request_queue * , s#request * ) 
t#elevator_deactivate_req_fn typedef void ( elevator_deactivate_req_fn ) ( s#request_queue * , s#request * ) 
t#elevator_queue_empty_fn typedef int ( elevator_queue_empty_fn ) ( s#request_queue * ) 
t#elevator_completed_req_fn typedef void ( elevator_completed_req_fn ) ( s#request_queue * , s#request * ) 
t#elevator_request_list_fn typedef s#request * ( elevator_request_list_fn ) ( s#request_queue * , s#request * ) 
t#elevator_set_req_fn typedef int ( elevator_set_req_fn ) ( s#request_queue * , s#request * , t#gfp_t ) 
t#elevator_put_req_fn typedef void ( elevator_put_req_fn ) ( s#request * ) 
t#elevator_may_queue_fn typedef int ( elevator_may_queue_fn ) ( s#request_queue * , int ) 
t#elevator_init_fn typedef void * ( elevator_init_fn ) ( s#request_queue * ) 
t#elevator_exit_fn typedef void ( elevator_exit_fn ) ( s#elevator_queue * ) 
s#as_io_context struct as_io_context { t#spinlock_t lock ; void ( * dtor ) ( s#as_io_context * ) ; void ( * exit ) ( s#as_io_context * ) ; unsigned long state ; t#atomic_t nr_queued ; t#atomic_t nr_dispatched ; unsigned long last_end_request ; unsigned long ttime_total ; unsigned long ttime_samples ; unsigned long ttime_mean ; unsigned int seek_samples ; t#sector_t last_request_pos ; t#u64 seek_total ; t#sector_t seek_mean ; } 
s#io_context struct io_context { t#atomic_long_t refcount ; t#atomic_t nr_tasks ; t#spinlock_t lock ; unsigned short ioprio ; unsigned short ioprio_changed ; unsigned long last_waited ; int nr_batch_requests ; s#as_io_context * aic ; s#radix_tree_root radix_root ; s#hlist_head cic_list ; void * ioc_data ; } 
s#elevator_ops struct elevator_ops { t#elevator_merge_fn * elevator_merge_fn ; t#elevator_merged_fn * elevator_merged_fn ; t#elevator_merge_req_fn * elevator_merge_req_fn ; t#elevator_allow_merge_fn * elevator_allow_merge_fn ; t#elevator_dispatch_fn * elevator_dispatch_fn ; t#elevator_add_req_fn * elevator_add_req_fn ; t#elevator_activate_req_fn * elevator_activate_req_fn ; t#elevator_deactivate_req_fn * elevator_deactivate_req_fn ; t#elevator_queue_empty_fn * elevator_queue_empty_fn ; t#elevator_completed_req_fn * elevator_completed_req_fn ; t#elevator_request_list_fn * elevator_former_req_fn ; t#elevator_request_list_fn * elevator_latter_req_fn ; t#elevator_set_req_fn * elevator_set_req_fn ; t#elevator_put_req_fn * elevator_put_req_fn ; t#elevator_may_queue_fn * elevator_may_queue_fn ; t#elevator_init_fn * elevator_init_fn ; t#elevator_exit_fn * elevator_exit_fn ; void ( * trim ) ( s#io_context * ) ; } 
s#elv_fs_entry struct elv_fs_entry { s#attribute attr ; t#ssize_t ( * show ) ( s#elevator_queue * , char * ) ; t#ssize_t ( * store ) ( s#elevator_queue * , const char * , t#size_t ) ; } 
s#elevator_type struct elevator_type { s#list_head list ; s#elevator_ops ops ; s#elv_fs_entry * elevator_attrs ; char elevator_name [ ( 16 ) ] ; s#module * elevator_owner ; } 
s#elevator_queue struct elevator_queue { s#elevator_ops * ops ; void * elevator_data ; s#kobject kobj ; s#elevator_type * elevator_type ; s#mutex sysfs_lock ; s#hlist_head * hash ; } 
t#mempool_alloc_t typedef void * ( mempool_alloc_t ) ( t#gfp_t , void * ) 
t#mempool_free_t typedef void ( mempool_free_t ) ( void * , void * ) 
s#mempool_s struct mempool_s { t#spinlock_t lock ; int min_nr ; int curr_nr ; void * * elements ; void * pool_data ; t#mempool_alloc_t * alloc ; t#mempool_free_t * free ; t#wait_queue_head_t wait ; } 
t#mempool_t typedef s#mempool_s mempool_t 
s#request_list struct request_list { int count [ 2 ] ; int starved [ 2 ] ; int elvpriv ; t#mempool_t * rq_pool ; t#wait_queue_head_t wait [ 2 ] ; } 
t#request_fn_proc typedef void ( request_fn_proc ) ( s#request_queue * ) 
t#make_request_fn typedef int ( make_request_fn ) ( s#request_queue * , s#bio * ) 
t#prep_rq_fn typedef int ( prep_rq_fn ) ( s#request_queue * , s#request * ) 
t#unprep_rq_fn typedef void ( unprep_rq_fn ) ( s#request_queue * , s#request * ) 
t#unplug_fn typedef void ( unplug_fn ) ( s#request_queue * ) 
s#bvec_merge_data struct bvec_merge_data { s#block_device * bi_bdev ; t#sector_t bi_sector ; unsigned bi_size ; unsigned long bi_rw ; } 
t#merge_bvec_fn typedef int ( merge_bvec_fn ) ( s#request_queue * , s#bvec_merge_data * , s#bio_vec * ) 
t#prepare_flush_fn typedef void ( prepare_flush_fn ) ( s#request_queue * , s#request * ) 
t#softirq_done_fn typedef void ( softirq_done_fn ) ( s#request * ) 
e#blk_eh_timer_return enum blk_eh_timer_return { BLK_EH_NOT_HANDLED , BLK_EH_HANDLED , BLK_EH_RESET_TIMER , } 
t#rq_timed_out_fn typedef e#blk_eh_timer_return ( rq_timed_out_fn ) ( s#request * ) 
t#dma_drain_needed_fn typedef int ( dma_drain_needed_fn ) ( s#request * ) 
t#lld_busy_fn typedef int ( lld_busy_fn ) ( s#request_queue * ) 
s#blk_queue_tag struct blk_queue_tag { s#request * * tag_index ; unsigned long * tag_map ; int busy ; int max_depth ; int real_max_depth ; t#atomic_t refcnt ; } 
s#queue_limits struct queue_limits { unsigned long bounce_pfn ; unsigned long seg_boundary_mask ; unsigned int max_hw_sectors ; unsigned int max_sectors ; unsigned int max_segment_size ; unsigned int physical_block_size ; unsigned int alignment_offset ; unsigned int io_min ; unsigned int io_opt ; unsigned int max_discard_sectors ; unsigned short logical_block_size ; unsigned short max_hw_segments ; unsigned short max_phys_segments ; unsigned char misaligned ; unsigned char no_cluster ; } 
s##blk_trace
s#bsg_class_device struct bsg_class_device { s#device * class_dev ; s#device * parent ; int minor ; s#request_queue * queue ; s#kref ref ; void ( * release ) ( s#device * ) ; } 
s#request_queue struct request_queue { s#list_head queue_head ; s#request * last_merge ; s#elevator_queue * elevator ; s#request_list rq ; t#request_fn_proc * request_fn ; t#make_request_fn * make_request_fn ; t#prep_rq_fn * prep_rq_fn ; t#unprep_rq_fn * unprep_rq_fn ; t#unplug_fn * unplug_fn ; t#merge_bvec_fn * merge_bvec_fn ; t#prepare_flush_fn * prepare_flush_fn ; t#softirq_done_fn * softirq_done_fn ; t#rq_timed_out_fn * rq_timed_out_fn ; t#dma_drain_needed_fn * dma_drain_needed ; t#lld_busy_fn * lld_busy_fn ; t#sector_t end_sector ; s#request * boundary_rq ; s#timer_list unplug_timer ; int unplug_thresh ; unsigned long unplug_delay ; s#work_struct unplug_work ; s#backing_dev_info backing_dev_info ; void * queuedata ; t#gfp_t bounce_gfp ; unsigned long queue_flags ; t#spinlock_t __queue_lock ; t#spinlock_t * queue_lock ; s#kobject kobj ; unsigned long nr_requests ; unsigned int nr_congestion_on ; unsigned int nr_congestion_off ; unsigned int nr_batching ; void * dma_drain_buffer ; unsigned int dma_drain_size ; unsigned int dma_pad_mask ; unsigned int dma_alignment ; s#blk_queue_tag * queue_tags ; s#list_head tag_busy_list ; unsigned int nr_sorted ; unsigned int in_flight [ 2 ] ; unsigned int rq_timeout ; s#timer_list timeout ; s#list_head timeout_list ; s#queue_limits limits ; unsigned int sg_timeout ; unsigned int sg_reserved_size ; int node ; s#blk_trace * blk_trace ; unsigned int ordered , next_ordered , ordseq ; int orderr , ordcolor ; s#request pre_flush_rq , bar_rq , post_flush_rq ; s#request * orig_bar_rq ; s#mutex sysfs_lock ; s#bsg_class_device bsg_dev ; } 
s##timer_rand_state
s#blk_integrity_exchg struct blk_integrity_exchg { void * prot_buf ; void * data_buf ; t#sector_t sector ; unsigned int data_size ; unsigned short sector_size ; const char * disk_name ; } 
t#integrity_gen_fn typedef void ( integrity_gen_fn ) ( s#blk_integrity_exchg * ) 
t#integrity_vrfy_fn typedef int ( integrity_vrfy_fn ) ( s#blk_integrity_exchg * ) 
t#integrity_set_tag_fn typedef void ( integrity_set_tag_fn ) ( void * , void * , unsigned int ) 
t#integrity_get_tag_fn typedef void ( integrity_get_tag_fn ) ( void * , void * , unsigned int ) 
s#blk_integrity struct blk_integrity { t#integrity_gen_fn * generate_fn ; t#integrity_vrfy_fn * verify_fn ; t#integrity_set_tag_fn * set_tag_fn ; t#integrity_get_tag_fn * get_tag_fn ; unsigned short flags ; unsigned short tuple_size ; unsigned short sector_size ; unsigned short tag_size ; const char * name ; s#kobject kobj ; } 
s#gendisk struct gendisk { int major ; int first_minor ; int minors ; char disk_name [ 32 ] ; char * ( * devnode ) ( s#gendisk * , t#mode_t * ) ; s#disk_part_tbl * part_tbl ; s#hd_struct part0 ; const s#block_device_operations * fops ; s#request_queue * queue ; void * private_data ; int flags ; s#device * driverfs_dev ; s#kobject * slave_dir ; s#timer_rand_state * random ; t#atomic_t sync_io ; s#work_struct async_notify ; s#blk_integrity * integrity ; int node_id ; } 
s##mtd_info
s#mnt_namespace struct mnt_namespace { t#atomic_t count ; s#vfsmount * root ; s#list_head list ; t#wait_queue_head_t poll ; int event ; } 
s#vfsmount struct vfsmount { s#list_head mnt_hash ; s#vfsmount * mnt_parent ; s#dentry * mnt_mountpoint ; s#dentry * mnt_root ; s#super_block * mnt_sb ; s#list_head mnt_mounts ; s#list_head mnt_child ; int mnt_flags ; const char * mnt_devname ; s#list_head mnt_list ; s#list_head mnt_expire ; s#list_head mnt_share ; s#list_head mnt_slave_list ; s#list_head mnt_slave ; s#vfsmount * mnt_master ; s#mnt_namespace * mnt_ns ; int mnt_id ; int mnt_group_id ; t#atomic_t mnt_count ; int mnt_expiry_mark ; int mnt_pinned ; int mnt_ghosts ; int * mnt_writers ; } 
s#open_intent struct open_intent { int flags ; int create_mode ; s#file * file ; } 
s#nameidata struct nameidata { s#path path ; s#qstr last ; s#path root ; unsigned int flags ; int last_type ; unsigned depth ; char * saved_names [ MAX_NESTED_LINKS + 1 ] ; union { s#open_intent open ; } intent ; } 
s#cdev struct cdev { s#kobject kobj ; s#module * owner ; const s#file_operations * ops ; s#list_head list ; t#dev_t dev ; unsigned int count ; } 
s#posix_acl_entry struct posix_acl_entry { short e_tag ; unsigned short e_perm ; unsigned int e_id ; } 
s#posix_acl struct posix_acl { t#atomic_t a_refcount ; unsigned int a_count ; s#posix_acl_entry a_entries [ 0 ] ; } 
s##cgroupfs_root
s##css_id
s#rt_prio_array struct rt_prio_array { unsigned long bitmap [ ( ( ( 100 + 1 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; s#list_head queue [ 100 ] ; } 
s#rt_rq struct rt_rq { s#rt_prio_array active ; unsigned long rt_nr_running ; struct { int curr ; int next ; } highest_prio ; unsigned long rt_nr_migratory ; unsigned long rt_nr_total ; int overloaded ; s#plist_head pushable_tasks ; int rt_throttled ; t#u64 rt_time ; t#u64 rt_runtime ; t#spinlock_t rt_runtime_lock ; unsigned long rt_nr_boosted ; s#rq * rq ; s#list_head leaf_rt_rq_list ; s#task_group * tg ; s#sched_rt_entity * rt_se ; } 
s#rt_bandwidth struct rt_bandwidth { t#spinlock_t rt_runtime_lock ; t#ktime_t rt_period ; t#u64 rt_runtime ; s#hrtimer rt_period_timer ; } 
s#task_group struct task_group { s#cgroup_subsys_state css ; s#sched_entity * * se ; s#cfs_rq * * cfs_rq ; unsigned long shares ; s#sched_rt_entity * * rt_se ; s#rt_rq * * rt_rq ; s#rt_bandwidth rt_bandwidth ; s#rcu_head rcu ; s#list_head list ; s#task_group * parent ; s#list_head siblings ; s#list_head children ; } 
s#cfs_rq struct cfs_rq { s#load_weight load ; unsigned long nr_running ; t#u64 exec_clock ; t#u64 min_vruntime ; s#rb_root tasks_timeline ; s#rb_node * rb_leftmost ; s#list_head tasks ; s#list_head * balance_iterator ; s#sched_entity * curr , * next , * last ; unsigned int nr_spread_over ; s#rq * rq ; s#list_head leaf_cfs_rq_list ; s#task_group * tg ; unsigned long task_weight ; unsigned long h_load ; unsigned long shares ; unsigned long rq_weight ; } 
s#cpupri_vec struct cpupri_vec { t#spinlock_t lock ; int count ; t#cpumask_var_t mask ; } 
s#cpupri struct cpupri { s#cpupri_vec pri_to_cpu [ ( 100 + 2 ) ] ; long pri_active [ ( ( ( ( 100 + 2 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; int cpu_to_pri [ 64 ] ; } 
s#root_domain struct root_domain { t#atomic_t refcount ; t#cpumask_var_t span ; t#cpumask_var_t online ; t#cpumask_var_t rto_mask ; t#atomic_t rto_count ; s#cpupri cpupri ; } 
s#rq struct rq { t#spinlock_t lock ; unsigned long nr_running ; unsigned long cpu_load [ 5 ] ; unsigned long last_tick_seen ; unsigned char in_nohz_recently ; s#load_weight load ; unsigned long nr_load_updates ; t#u64 nr_switches ; t#u64 nr_migrations_in ; s#cfs_rq cfs ; s#rt_rq rt ; s#list_head leaf_cfs_rq_list ; s#list_head leaf_rt_rq_list ; unsigned long nr_uninterruptible ; s#task_struct * curr , * idle ; unsigned long next_balance ; s#mm_struct * prev_mm ; t#u64 clock ; t#atomic_t nr_iowait ; s#root_domain * rd ; s#sched_domain * sd ; unsigned char idle_at_tick ; int post_schedule ; int active_balance ; int push_cpu ; int cpu ; int online ; unsigned long avg_load_per_task ; s#task_struct * migration_thread ; s#list_head migration_queue ; t#u64 rt_avg ; t#u64 age_stamp ; t#u64 idle_stamp ; t#u64 avg_idle ; unsigned long calc_load_update ; long calc_load_active ; int hrtick_csd_pending ; s#call_single_data hrtick_csd ; s#hrtimer hrtick_timer ; s#sched_info rq_sched_info ; unsigned long long rq_cpu_time ; unsigned int yld_count ; unsigned int sched_switch ; unsigned int sched_count ; unsigned int sched_goidle ; unsigned int ttwu_count ; unsigned int ttwu_local ; unsigned int bkl_count ; } 
s##bts_context
s##fs_struct
s#new_utsname struct new_utsname { char sysname [ 64 + 1 ] ; char nodename [ 64 + 1 ] ; char release [ 64 + 1 ] ; char version [ 64 + 1 ] ; char machine [ 64 + 1 ] ; char domainname [ 64 + 1 ] ; } 
s#uts_namespace struct uts_namespace { s#kref kref ; s#new_utsname name ; } 
s##ipc_namespace
t#__kernel_nlink_t typedef unsigned int __kernel_nlink_t 
t#nlink_t typedef t#__kernel_nlink_t nlink_t 
t#__kernel_off_t typedef long __kernel_off_t 
t#off_t typedef t#__kernel_off_t off_t 
t#read_proc_t typedef int ( read_proc_t ) ( char * , char * * , t#off_t , int , int * , void * ) 
t#write_proc_t typedef int ( write_proc_t ) ( s#file * , const char * , unsigned long , void * ) 
s#proc_dir_entry struct proc_dir_entry { unsigned int low_ino ; unsigned short namelen ; const char * name ; t#mode_t mode ; t#nlink_t nlink ; t#uid_t uid ; t#gid_t gid ; t#loff_t size ; const s#inode_operations * proc_iops ; const s#file_operations * proc_fops ; s#proc_dir_entry * next , * parent , * subdir ; void * data ; t#read_proc_t * read_proc ; t#write_proc_t * write_proc ; t#atomic_t count ; int pde_users ; t#spinlock_t pde_unload_lock ; s#completion * pde_unload_completion ; s#list_head pde_openers ; } 
s#net_device_stats struct net_device_stats { unsigned long rx_packets ; unsigned long tx_packets ; unsigned long rx_bytes ; unsigned long tx_bytes ; unsigned long rx_errors ; unsigned long tx_errors ; unsigned long rx_dropped ; unsigned long tx_dropped ; unsigned long multicast ; unsigned long collisions ; unsigned long rx_length_errors ; unsigned long rx_over_errors ; unsigned long rx_crc_errors ; unsigned long rx_frame_errors ; unsigned long rx_fifo_errors ; unsigned long rx_missed_errors ; unsigned long tx_aborted_errors ; unsigned long tx_carrier_errors ; unsigned long tx_fifo_errors ; unsigned long tx_heartbeat_errors ; unsigned long tx_window_errors ; unsigned long rx_compressed ; unsigned long tx_compressed ; } 
e#netdev_tx enum netdev_tx { NETDEV_TX_OK = 0 , NETDEV_TX_BUSY , NETDEV_TX_LOCKED = - 1 , } 
t#netdev_tx_t typedef e#netdev_tx netdev_tx_t 
s#hlist_nulls_node struct hlist_nulls_node { s#hlist_nulls_node * next , * * pprev ; } 
t#sa_family_t typedef unsigned short sa_family_t 
s#sockaddr struct sockaddr { t#sa_family_t sa_family ; char sa_data [ 14 ] ; } 
s#msghdr struct msghdr { void * msg_name ; int msg_namelen ; s#iovec * msg_iov ; t#__kernel_size_t msg_iovlen ; void * msg_control ; t#__kernel_size_t msg_controllen ; unsigned msg_flags ; } 
t#u8 typedef unsigned char u8 
s#request_sock struct request_sock { s#request_sock * dl_next ; t#u16 mss ; t#u8 retrans ; t#u8 cookie_ts ; t#u32 window_clamp ; t#u32 rcv_wnd ; t#u32 ts_recent ; unsigned long expires ; const s#request_sock_ops * rsk_ops ; s#sock * sk ; t#u32 secid ; t#u32 peer_secid ; } 
s#request_sock_ops struct request_sock_ops { int family ; int obj_size ; s#kmem_cache * slab ; char * slab_name ; int ( * rtx_syn_ack ) ( s#sock * , s#request_sock * ) ; void ( * send_ack ) ( s#sock * , s#sk_buff * , s#request_sock * ) ; void ( * send_reset ) ( s#sock * , s#sk_buff * ) ; void ( * destructor ) ( s#request_sock * ) ; } 
s#timewait_sock_ops struct timewait_sock_ops { s#kmem_cache * twsk_slab ; char * twsk_slab_name ; unsigned int twsk_obj_size ; int ( * twsk_unique ) ( s#sock * , s#sock * , void * ) ; void ( * twsk_destructor ) ( s#sock * ) ; } 
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s#proto struct proto { void ( * close ) ( s#sock * , long ) ; int ( * connect ) ( s#sock * , s#sockaddr * , int ) ; int ( * disconnect ) ( s#sock * , int ) ; s#sock * ( * accept ) ( s#sock * , int , int * ) ; int ( * ioctl ) ( s#sock * , int , unsigned long ) ; int ( * init ) ( s#sock * ) ; void ( * destroy ) ( s#sock * ) ; void ( * shutdown ) ( s#sock * , int ) ; int ( * setsockopt ) ( s#sock * , int , int , char * , unsigned int ) ; int ( * getsockopt ) ( s#sock * , int , int , char * , int * ) ; int ( * compat_setsockopt ) ( s#sock * , int , int , char * , unsigned int ) ; int ( * compat_getsockopt ) ( s#sock * , int , int , char * , int * ) ; int ( * sendmsg ) ( s#kiocb * , s#sock * , s#msghdr * , t#size_t ) ; int ( * recvmsg ) ( s#kiocb * , s#sock * , s#msghdr * , t#size_t , int , int , int * ) ; int ( * sendpage ) ( s#sock * , s#page * , int , t#size_t , int ) ; int ( * bind ) ( s#sock * , s#sockaddr * , int ) ; int ( * backlog_rcv ) ( s#sock * , s#sk_buff * ) ; void ( * hash ) ( s#sock * ) ; void ( * unhash ) ( s#sock * ) ; int ( * get_port ) ( s#sock * , unsigned short ) ; unsigned int inuse_idx ; void ( * enter_memory_pressure ) ( s#sock * ) ; t#atomic_t * memory_allocated ; s#percpu_counter * sockets_allocated ; int * memory_pressure ; int * sysctl_mem ; int * sysctl_wmem ; int * sysctl_rmem ; int max_header ; s#kmem_cache * slab ; unsigned int obj_size ; int slab_flags ; s#percpu_counter * orphan_count ; s#request_sock_ops * rsk_prot ; s#timewait_sock_ops * twsk_prot ; union { s#inet_hashinfo * hashinfo ; s#udp_table * udp_table ; s#raw_hashinfo * raw_hash ; } h ; s#module * owner ; char name [ 32 ] ; s#list_head node ; } 
s#sock_common struct sock_common { union { s#hlist_node skc_node ; s#hlist_nulls_node skc_nulls_node ; } ; t#atomic_t skc_refcnt ; unsigned int skc_hash ; unsigned short skc_family ; volatile unsigned char skc_state ; unsigned char skc_reuse ; int skc_bound_dev_if ; s#hlist_node skc_bind_node ; s#proto * skc_prot ; s#net * skc_net ; } 
t#socket_lock_t typedef struct { t#spinlock_t slock ; int owned ; t#wait_queue_head_t wq ; } socket_lock_t 
s#pneigh_entry struct pneigh_entry { s#pneigh_entry * next ; s#net * net ; s#net_device * dev ; t#u8 flags ; t#u8 key [ 0 ] ; } 
s#neigh_parms struct neigh_parms { s#net * net ; s#net_device * dev ; s#neigh_parms * next ; int ( * neigh_setup ) ( s#neighbour * ) ; void ( * neigh_cleanup ) ( s#neighbour * ) ; s#neigh_table * tbl ; void * sysctl_table ; int dead ; t#atomic_t refcnt ; s#rcu_head rcu_head ; int base_reachable_time ; int retrans_time ; int gc_staletime ; int reachable_time ; int delay_probe_time ; int queue_len ; int ucast_probes ; int app_probes ; int mcast_probes ; int anycast_delay ; int proxy_delay ; int proxy_qlen ; int locktime ; } 
s#sk_buff_head struct sk_buff_head { s#sk_buff * next ; s#sk_buff * prev ; t#__u32 qlen ; t#spinlock_t lock ; } 
s#neigh_statistics struct neigh_statistics { unsigned long allocs ; unsigned long destroys ; unsigned long hash_grows ; unsigned long res_failed ; unsigned long lookups ; unsigned long hits ; unsigned long rcv_probes_mcast ; unsigned long rcv_probes_ucast ; unsigned long periodic_gc_runs ; unsigned long forced_gc_runs ; unsigned long unres_discards ; } 
s#neigh_table struct neigh_table { s#neigh_table * next ; int family ; int entry_size ; int key_len ; t#__u32 ( * hash ) ( const void * , const s#net_device * ) ; int ( * constructor ) ( s#neighbour * ) ; int ( * pconstructor ) ( s#pneigh_entry * ) ; void ( * pdestructor ) ( s#pneigh_entry * ) ; void ( * proxy_redo ) ( s#sk_buff * ) ; char * id ; s#neigh_parms parms ; int gc_interval ; int gc_thresh1 ; int gc_thresh2 ; int gc_thresh3 ; unsigned long last_flush ; s#delayed_work gc_work ; s#timer_list proxy_timer ; s#sk_buff_head proxy_queue ; t#atomic_t entries ; t#rwlock_t lock ; unsigned long last_rand ; s#kmem_cache * kmem_cachep ; s#neigh_statistics * stats ; s#neighbour * * hash_buckets ; unsigned int hash_mask ; t#__u32 hash_rnd ; s#pneigh_entry * * phash_buckets ; } 
t#__be16 typedef t#__u16 __be16 
t#seqlock_t typedef struct { unsigned sequence ; t#spinlock_t lock ; } seqlock_t 
s#hh_cache struct hh_cache { s#hh_cache * hh_next ; t#atomic_t hh_refcnt ; t#__be16 hh_type __attribute__ ( ( __aligned__ ( 256 ) ) ) ; t#u16 hh_len ; int ( * hh_output ) ( s#sk_buff * ) ; t#seqlock_t hh_lock ; unsigned long hh_data [ ( ( ( 48 ) + ( 16 - 1 ) ) & ~ ( 16 - 1 ) ) / sizeof ( long ) ] ; } 
s#neigh_ops struct neigh_ops { int family ; void ( * solicit ) ( s#neighbour * , s#sk_buff * ) ; void ( * error_report ) ( s#neighbour * , s#sk_buff * ) ; int ( * output ) ( s#sk_buff * ) ; int ( * connected_output ) ( s#sk_buff * ) ; int ( * hh_output ) ( s#sk_buff * ) ; int ( * queue_xmit ) ( s#sk_buff * ) ; } 
s#neighbour struct neighbour { s#neighbour * next ; s#neigh_table * tbl ; s#neigh_parms * parms ; s#net_device * dev ; unsigned long used ; unsigned long confirmed ; unsigned long updated ; t#__u8 flags ; t#__u8 nud_state ; t#__u8 type ; t#__u8 dead ; t#atomic_t probes ; t#rwlock_t lock ; unsigned char ha [ ( ( ( 32 ) + ( ( typeof ( 32 ) ) ( sizeof ( unsigned long ) ) - 1 ) ) & ~ ( ( typeof ( 32 ) ) ( sizeof ( unsigned long ) ) - 1 ) ) ] ; s#hh_cache * hh ; t#atomic_t refcnt ; int ( * output ) ( s#sk_buff * ) ; s#sk_buff_head arp_queue ; s#timer_list timer ; const s#neigh_ops * ops ; t#u8 primary_key [ 0 ] ; } 
s##xfrm_state
s#dst_ops struct dst_ops { unsigned short family ; t#__be16 protocol ; unsigned gc_thresh ; int ( * gc ) ( s#dst_ops * ) ; s#dst_entry * ( * check ) ( s#dst_entry * , t#__u32 ) ; void ( * destroy ) ( s#dst_entry * ) ; void ( * ifdown ) ( s#dst_entry * , s#net_device * , int ) ; s#dst_entry * ( * negative_advice ) ( s#dst_entry * ) ; void ( * link_failure ) ( s#sk_buff * ) ; void ( * update_pmtu ) ( s#dst_entry * , t#u32 ) ; int ( * local_out ) ( s#sk_buff * ) ; t#atomic_t entries ; s#kmem_cache * kmem_cachep ; } 
s##rtable
s##rt6_info
s##dn_route
s#dst_entry struct dst_entry { s#rcu_head rcu_head ; s#dst_entry * child ; s#net_device * dev ; short error ; short obsolete ; int flags ; unsigned long expires ; unsigned short header_len ; unsigned short trailer_len ; unsigned int rate_tokens ; unsigned long rate_last ; s#dst_entry * path ; s#neighbour * neighbour ; s#hh_cache * hh ; s#xfrm_state * xfrm ; int ( * input ) ( s#sk_buff * ) ; int ( * output ) ( s#sk_buff * ) ; s#dst_ops * ops ; t#u32 metrics [ ( __RTAX_MAX - 1 ) ] ; t#__u32 tclassid ; long __pad_to_align_refcnt [ 2 ] ; t#atomic_t __refcnt ; int __use ; unsigned long lastuse ; union { s#dst_entry * next ; s#rtable * rt_next ; s#rt6_info * rt6_next ; s#dn_route * dn_next ; } ; } 
s##xfrm_policy
s#ucred struct ucred { t#__u32 pid ; t#__u32 uid ; t#__u32 gid ; } 
s#sock_filter struct sock_filter { t#__u16 code ; t#__u8 jt ; t#__u8 jf ; t#__u32 k ; } 
s#sk_filter struct sk_filter { t#atomic_t refcnt ; unsigned int len ; s#rcu_head rcu ; s#sock_filter insns [ 0 ] ; } 
t#socket_state typedef enum { SS_FREE = 0 , SS_UNCONNECTED , SS_CONNECTING , SS_CONNECTED , SS_DISCONNECTING } socket_state 
s#proto_ops struct proto_ops { int family ; s#module * owner ; int ( * release ) ( s#socket * ) ; int ( * bind ) ( s#socket * , s#sockaddr * , int ) ; int ( * connect ) ( s#socket * , s#sockaddr * , int , int ) ; int ( * socketpair ) ( s#socket * , s#socket * ) ; int ( * accept ) ( s#socket * , s#socket * , int ) ; int ( * getname ) ( s#socket * , s#sockaddr * , int * , int ) ; unsigned int ( * poll ) ( s#file * , s#socket * , s#poll_table_struct * ) ; int ( * ioctl ) ( s#socket * , unsigned int , unsigned long ) ; int ( * compat_ioctl ) ( s#socket * , unsigned int , unsigned long ) ; int ( * listen ) ( s#socket * , int ) ; int ( * shutdown ) ( s#socket * , int ) ; int ( * setsockopt ) ( s#socket * , int , int , char * , unsigned int ) ; int ( * getsockopt ) ( s#socket * , int , int , char * , int * ) ; int ( * compat_setsockopt ) ( s#socket * , int , int , char * , unsigned int ) ; int ( * compat_getsockopt ) ( s#socket * , int , int , char * , int * ) ; int ( * sendmsg ) ( s#kiocb * , s#socket * , s#msghdr * , t#size_t ) ; int ( * recvmsg ) ( s#kiocb * , s#socket * , s#msghdr * , t#size_t , int ) ; int ( * mmap ) ( s#file * , s#socket * , s#vm_area_struct * ) ; t#ssize_t ( * sendpage ) ( s#socket * , s#page * , int , t#size_t , int ) ; t#ssize_t ( * splice_read ) ( s#socket * , t#loff_t * , s#pipe_inode_info * , t#size_t , unsigned int ) ; } 
s#socket struct socket { t#socket_state state ; int type_begin [ 0 ] ; ; short type ; int type_end [ 0 ] ; ; unsigned long flags ; s#fasync_struct * fasync_list ; t#wait_queue_head_t wait ; s#file * file ; s#sock * sk ; const s#proto_ops * ops ; } 
s#sock struct sock { s#sock_common __sk_common ; int flags_begin [ 0 ] ; ; unsigned int sk_shutdown : 2 , sk_no_check : 2 , sk_userlocks : 4 , sk_protocol : 8 , sk_type : 16 ; int flags_end [ 0 ] ; ; int sk_rcvbuf ; t#socket_lock_t sk_lock ; struct { s#sk_buff * head ; s#sk_buff * tail ; } sk_backlog ; t#wait_queue_head_t * sk_sleep ; s#dst_entry * sk_dst_cache ; s#xfrm_policy * sk_policy [ 2 ] ; t#rwlock_t sk_dst_lock ; t#atomic_t sk_rmem_alloc ; t#atomic_t sk_wmem_alloc ; t#atomic_t sk_omem_alloc ; int sk_sndbuf ; s#sk_buff_head sk_receive_queue ; s#sk_buff_head sk_write_queue ; int sk_wmem_queued ; int sk_forward_alloc ; t#gfp_t sk_allocation ; int sk_route_caps ; int sk_gso_type ; unsigned int sk_gso_max_size ; int sk_rcvlowat ; unsigned long sk_flags ; unsigned long sk_lingertime ; s#sk_buff_head sk_error_queue ; s#proto * sk_prot_creator ; t#rwlock_t sk_callback_lock ; int sk_err , sk_err_soft ; t#atomic_t sk_drops ; unsigned short sk_ack_backlog ; unsigned short sk_max_ack_backlog ; t#__u32 sk_priority ; s#ucred sk_peercred ; long sk_rcvtimeo ; long sk_sndtimeo ; s#sk_filter * sk_filter ; void * sk_protinfo ; s#timer_list sk_timer ; t#ktime_t sk_stamp ; s#socket * sk_socket ; void * sk_user_data ; s#page * sk_sndmsg_page ; s#sk_buff * sk_send_head ; t#__u32 sk_sndmsg_off ; int sk_write_pending ; void * sk_security ; t#__u32 sk_mark ; void ( * sk_state_change ) ( s#sock * ) ; void ( * sk_data_ready ) ( s#sock * , int ) ; void ( * sk_write_space ) ( s#sock * ) ; void ( * sk_error_report ) ( s#sock * ) ; int ( * sk_backlog_rcv ) ( s#sock * , s#sk_buff * ) ; void ( * sk_destruct ) ( s#sock * ) ; } 
s##sec_path
t#__wsum typedef t#__u32 __wsum 
s#nf_conntrack struct nf_conntrack { t#atomic_t use ; } 
s#nf_bridge_info struct nf_bridge_info { t#atomic_t use ; s#net_device * physindev ; s#net_device * physoutdev ; unsigned int mask ; unsigned long data [ 32 / sizeof ( unsigned long ) ] ; } 
t#sk_buff_data_t typedef unsigned int sk_buff_data_t 
s#sk_buff struct sk_buff { s#sk_buff * next ; s#sk_buff * prev ; s#sock * sk ; t#ktime_t tstamp ; s#net_device * dev ; unsigned long _skb_dst ; s#sec_path * sp ; char cb [ 48 ] ; unsigned int len , data_len ; t#__u16 mac_len , hdr_len ; union { t#__wsum csum ; struct { t#__u16 csum_start ; t#__u16 csum_offset ; } ; } ; t#__u32 priority ; int flags1_begin [ 0 ] ; ; t#__u8 local_df : 1 , cloned : 1 , ip_summed : 2 , nohdr : 1 , nfctinfo : 3 ; t#__u8 pkt_type : 3 , fclone : 2 , ipvs_property : 1 , peeked : 1 , nf_trace : 1 ; t#__be16 protocol : 16 ; int flags1_end [ 0 ] ; ; void ( * destructor ) ( s#sk_buff * ) ; s#nf_conntrack * nfct ; s#sk_buff * nfct_reasm ; s#nf_bridge_info * nf_bridge ; int iif ; t#__u16 tc_index ; t#__u16 tc_verd ; int flags2_begin [ 0 ] ; ; t#__u16 queue_mapping : 16 ; t#__u8 ndisc_nodetype : 2 ; t#__u8 emergency : 1 ; int flags2_end [ 0 ] ; ; t#__u32 secmark ; t#__u32 mark ; t#__u16 vlan_tci ; t#sk_buff_data_t transport_header ; t#sk_buff_data_t network_header ; t#sk_buff_data_t mac_header ; t#sk_buff_data_t tail ; t#sk_buff_data_t end ; unsigned char * head , * data ; unsigned int truesize ; t#atomic_t users ; } 
s#ifmap struct ifmap { unsigned long mem_start ; unsigned long mem_end ; unsigned short base_addr ; unsigned char irq ; unsigned char dma ; unsigned char port ; } 
t#raw_hdlc_proto typedef struct { unsigned short encoding ; unsigned short parity ; } raw_hdlc_proto 
t#cisco_proto typedef struct { unsigned int interval ; unsigned int timeout ; } cisco_proto 
t#fr_proto typedef struct { unsigned int t391 ; unsigned int t392 ; unsigned int n391 ; unsigned int n392 ; unsigned int n393 ; unsigned short lmi ; unsigned short dce ; } fr_proto 
t#fr_proto_pvc typedef struct { unsigned int dlci ; } fr_proto_pvc 
t#fr_proto_pvc_info typedef struct { unsigned int dlci ; char master [ 16 ] ; } fr_proto_pvc_info 
t#sync_serial_settings typedef struct { unsigned int clock_rate ; unsigned int clock_type ; unsigned short loopback ; } sync_serial_settings 
t#te1_settings typedef struct { unsigned int clock_rate ; unsigned int clock_type ; unsigned short loopback ; unsigned int slot_map ; } te1_settings 
s#if_settings struct if_settings { unsigned int type ; unsigned int size ; union { t#raw_hdlc_proto * raw_hdlc ; t#cisco_proto * cisco ; t#fr_proto * fr ; t#fr_proto_pvc * fr_pvc ; t#fr_proto_pvc_info * fr_pvc_info ; t#sync_serial_settings * sync ; t#te1_settings * te1 ; } ifs_ifsu ; } 
s#ifreq struct ifreq { union { char ifrn_name [ 16 ] ; } ifr_ifrn ; union { s#sockaddr ifru_addr ; s#sockaddr ifru_dstaddr ; s#sockaddr ifru_broadaddr ; s#sockaddr ifru_netmask ; s#sockaddr ifru_hwaddr ; short ifru_flags ; int ifru_ivalue ; int ifru_mtu ; s#ifmap ifru_map ; char ifru_slave [ 16 ] ; char ifru_newname [ 16 ] ; void * ifru_data ; s#if_settings ifru_settings ; } ifr_ifru ; } 
s#vlan_group struct vlan_group { s#net_device * real_dev ; unsigned int nr_vlans ; s#hlist_node hlist ; s#net_device * * vlan_devices_arrays [ 8 ] ; s#rcu_head rcu ; } 
s#net_device_ops struct net_device_ops { int ( * ndo_init ) ( s#net_device * ) ; void ( * ndo_uninit ) ( s#net_device * ) ; int ( * ndo_open ) ( s#net_device * ) ; int ( * ndo_stop ) ( s#net_device * ) ; t#netdev_tx_t ( * ndo_start_xmit ) ( s#sk_buff * , s#net_device * ) ; t#u16 ( * ndo_select_queue ) ( s#net_device * , s#sk_buff * ) ; void ( * ndo_change_rx_flags ) ( s#net_device * , int ) ; void ( * ndo_set_rx_mode ) ( s#net_device * ) ; void ( * ndo_set_multicast_list ) ( s#net_device * ) ; int ( * ndo_set_mac_address ) ( s#net_device * , void * ) ; int ( * ndo_validate_addr ) ( s#net_device * ) ; int ( * ndo_do_ioctl ) ( s#net_device * , s#ifreq * , int ) ; int ( * ndo_set_config ) ( s#net_device * , s#ifmap * ) ; int ( * ndo_change_mtu ) ( s#net_device * , int ) ; int ( * ndo_neigh_setup ) ( s#net_device * , s#neigh_parms * ) ; void ( * ndo_tx_timeout ) ( s#net_device * ) ; s#net_device_stats * ( * ndo_get_stats ) ( s#net_device * ) ; void ( * ndo_vlan_rx_register ) ( s#net_device * , s#vlan_group * ) ; void ( * ndo_vlan_rx_add_vid ) ( s#net_device * , unsigned short ) ; void ( * ndo_vlan_rx_kill_vid ) ( s#net_device * , unsigned short ) ; } 
s#ethtool_cmd struct ethtool_cmd { t#__u32 cmd ; t#__u32 supported ; t#__u32 advertising ; t#__u16 speed ; t#__u8 duplex ; t#__u8 port ; t#__u8 phy_address ; t#__u8 transceiver ; t#__u8 autoneg ; t#__u8 mdio_support ; t#__u32 maxtxpkt ; t#__u32 maxrxpkt ; t#__u16 speed_hi ; t#__u8 eth_tp_mdix ; t#__u8 reserved2 ; t#__u32 lp_advertising ; t#__u32 reserved [ 2 ] ; } 
s#ethtool_drvinfo struct ethtool_drvinfo { t#__u32 cmd ; char driver [ 32 ] ; char version [ 32 ] ; char fw_version [ 32 ] ; char bus_info [ 32 ] ; char reserved1 [ 32 ] ; char reserved2 [ 12 ] ; t#__u32 n_priv_flags ; t#__u32 n_stats ; t#__u32 testinfo_len ; t#__u32 eedump_len ; t#__u32 regdump_len ; } 
s#ethtool_regs struct ethtool_regs { t#__u32 cmd ; t#__u32 version ; t#__u32 len ; t#__u8 data [ 0 ] ; } 
s#ethtool_wolinfo struct ethtool_wolinfo { t#__u32 cmd ; t#__u32 supported ; t#__u32 wolopts ; t#__u8 sopass [ 6 ] ; } 
s#ethtool_eeprom struct ethtool_eeprom { t#__u32 cmd ; t#__u32 magic ; t#__u32 offset ; t#__u32 len ; t#__u8 data [ 0 ] ; } 
s#ethtool_coalesce struct ethtool_coalesce { t#__u32 cmd ; t#__u32 rx_coalesce_usecs ; t#__u32 rx_max_coalesced_frames ; t#__u32 rx_coalesce_usecs_irq ; t#__u32 rx_max_coalesced_frames_irq ; t#__u32 tx_coalesce_usecs ; t#__u32 tx_max_coalesced_frames ; t#__u32 tx_coalesce_usecs_irq ; t#__u32 tx_max_coalesced_frames_irq ; t#__u32 stats_block_coalesce_usecs ; t#__u32 use_adaptive_rx_coalesce ; t#__u32 use_adaptive_tx_coalesce ; t#__u32 pkt_rate_low ; t#__u32 rx_coalesce_usecs_low ; t#__u32 rx_max_coalesced_frames_low ; t#__u32 tx_coalesce_usecs_low ; t#__u32 tx_max_coalesced_frames_low ; t#__u32 pkt_rate_high ; t#__u32 rx_coalesce_usecs_high ; t#__u32 rx_max_coalesced_frames_high ; t#__u32 tx_coalesce_usecs_high ; t#__u32 tx_max_coalesced_frames_high ; t#__u32 rate_sample_interval ; } 
s#ethtool_ringparam struct ethtool_ringparam { t#__u32 cmd ; t#__u32 rx_max_pending ; t#__u32 rx_mini_max_pending ; t#__u32 rx_jumbo_max_pending ; t#__u32 tx_max_pending ; t#__u32 rx_pending ; t#__u32 rx_mini_pending ; t#__u32 rx_jumbo_pending ; t#__u32 tx_pending ; } 
s#ethtool_pauseparam struct ethtool_pauseparam { t#__u32 cmd ; t#__u32 autoneg ; t#__u32 rx_pause ; t#__u32 tx_pause ; } 
s#ethtool_test struct ethtool_test { t#__u32 cmd ; t#__u32 flags ; t#__u32 reserved ; t#__u32 len ; t#__u64 data [ 0 ] ; } 
s#ethtool_stats struct ethtool_stats { t#__u32 cmd ; t#__u32 n_stats ; t#__u64 data [ 0 ] ; } 
t#__be32 typedef t#__u32 __be32 
s#ethtool_tcpip4_spec struct ethtool_tcpip4_spec { t#__be32 ip4src ; t#__be32 ip4dst ; t#__be16 psrc ; t#__be16 pdst ; t#__u8 tos ; } 
s#ethtool_ah_espip4_spec struct ethtool_ah_espip4_spec { t#__be32 ip4src ; t#__be32 ip4dst ; t#__be32 spi ; t#__u8 tos ; } 
s#ethtool_rawip4_spec struct ethtool_rawip4_spec { t#__be32 ip4src ; t#__be32 ip4dst ; t#__u8 hdata [ 64 ] ; } 
s#ethtool_ether_spec struct ethtool_ether_spec { t#__be16 ether_type ; t#__u8 frame_size ; t#__u8 eframe [ 16 ] ; } 
s#ethtool_usrip4_spec struct ethtool_usrip4_spec { t#__be32 ip4src ; t#__be32 ip4dst ; t#__be32 l4_4_bytes ; t#__u8 tos ; t#__u8 ip_ver ; t#__u8 proto ; } 
s#ethtool_rx_flow_spec struct ethtool_rx_flow_spec { t#__u32 flow_type ; union { s#ethtool_tcpip4_spec tcp_ip4_spec ; s#ethtool_tcpip4_spec udp_ip4_spec ; s#ethtool_tcpip4_spec sctp_ip4_spec ; s#ethtool_ah_espip4_spec ah_ip4_spec ; s#ethtool_ah_espip4_spec esp_ip4_spec ; s#ethtool_rawip4_spec raw_ip4_spec ; s#ethtool_ether_spec ether_spec ; s#ethtool_usrip4_spec usr_ip4_spec ; t#__u8 hdata [ 64 ] ; } h_u , m_u ; t#__u64 ring_cookie ; t#__u32 location ; } 
s#ethtool_rxnfc struct ethtool_rxnfc { t#__u32 cmd ; t#__u32 flow_type ; t#__u64 data ; s#ethtool_rx_flow_spec fs ; t#__u32 rule_cnt ; t#__u32 rule_locs [ 0 ] ; } 
s#ethtool_flash struct ethtool_flash { t#__u32 cmd ; t#__u32 region ; char data [ 128 ] ; } 
s#ethtool_ops struct ethtool_ops { int ( * get_settings ) ( s#net_device * , s#ethtool_cmd * ) ; int ( * set_settings ) ( s#net_device * , s#ethtool_cmd * ) ; void ( * get_drvinfo ) ( s#net_device * , s#ethtool_drvinfo * ) ; int ( * get_regs_len ) ( s#net_device * ) ; void ( * get_regs ) ( s#net_device * , s#ethtool_regs * , void * ) ; void ( * get_wol ) ( s#net_device * , s#ethtool_wolinfo * ) ; int ( * set_wol ) ( s#net_device * , s#ethtool_wolinfo * ) ; t#u32 ( * get_msglevel ) ( s#net_device * ) ; void ( * set_msglevel ) ( s#net_device * , t#u32 ) ; int ( * nway_reset ) ( s#net_device * ) ; t#u32 ( * get_link ) ( s#net_device * ) ; int ( * get_eeprom_len ) ( s#net_device * ) ; int ( * get_eeprom ) ( s#net_device * , s#ethtool_eeprom * , t#u8 * ) ; int ( * set_eeprom ) ( s#net_device * , s#ethtool_eeprom * , t#u8 * ) ; int ( * get_coalesce ) ( s#net_device * , s#ethtool_coalesce * ) ; int ( * set_coalesce ) ( s#net_device * , s#ethtool_coalesce * ) ; void ( * get_ringparam ) ( s#net_device * , s#ethtool_ringparam * ) ; int ( * set_ringparam ) ( s#net_device * , s#ethtool_ringparam * ) ; void ( * get_pauseparam ) ( s#net_device * , s#ethtool_pauseparam * ) ; int ( * set_pauseparam ) ( s#net_device * , s#ethtool_pauseparam * ) ; t#u32 ( * get_rx_csum ) ( s#net_device * ) ; int ( * set_rx_csum ) ( s#net_device * , t#u32 ) ; t#u32 ( * get_tx_csum ) ( s#net_device * ) ; int ( * set_tx_csum ) ( s#net_device * , t#u32 ) ; t#u32 ( * get_sg ) ( s#net_device * ) ; int ( * set_sg ) ( s#net_device * , t#u32 ) ; t#u32 ( * get_tso ) ( s#net_device * ) ; int ( * set_tso ) ( s#net_device * , t#u32 ) ; void ( * self_test ) ( s#net_device * , s#ethtool_test * , t#u64 * ) ; void ( * get_strings ) ( s#net_device * , t#u32 , t#u8 * ) ; int ( * phys_id ) ( s#net_device * , t#u32 ) ; void ( * get_ethtool_stats ) ( s#net_device * , s#ethtool_stats * , t#u64 * ) ; int ( * begin ) ( s#net_device * ) ; void ( * complete ) ( s#net_device * ) ; t#u32 ( * get_ufo ) ( s#net_device * ) ; int ( * set_ufo ) ( s#net_device * , t#u32 ) ; t#u32 ( * get_flags ) ( s#net_device * ) ; int ( * set_flags ) ( s#net_device * , t#u32 ) ; t#u32 ( * get_priv_flags ) ( s#net_device * ) ; int ( * set_priv_flags ) ( s#net_device * , t#u32 ) ; int ( * get_sset_count ) ( s#net_device * , int ) ; int ( * self_test_count ) ( s#net_device * ) ; int ( * get_stats_count ) ( s#net_device * ) ; int ( * get_rxnfc ) ( s#net_device * , s#ethtool_rxnfc * , void * ) ; int ( * set_rxnfc ) ( s#net_device * , s#ethtool_rxnfc * ) ; int ( * flash_device ) ( s#net_device * , s#ethtool_flash * ) ; } 
s#header_ops struct header_ops { int ( * create ) ( s#sk_buff * , s#net_device * , unsigned short , const void * , const void * , unsigned ) ; int ( * parse ) ( const s#sk_buff * , unsigned char * ) ; int ( * rebuild ) ( s#sk_buff * ) ; int ( * cache ) ( const s#neighbour * , s#hh_cache * ) ; void ( * cache_update ) ( s#hh_cache * , const s#net_device * , const unsigned char * ) ; } 
s#netdev_hw_addr_list struct netdev_hw_addr_list { s#list_head list ; int count ; } 
s#dev_addr_list struct dev_addr_list { s#dev_addr_list * next ; t#u8 da_addr [ 32 ] ; t#u8 da_addrlen ; t#u8 da_synced ; int da_users ; int da_gusers ; } 
s##wireless_dev
s##Qdisc
s#netdev_queue struct netdev_queue { s#net_device * dev ; s#Qdisc * qdisc ; unsigned long state ; s#Qdisc * qdisc_sleeping ; t#spinlock_t _xmit_lock __attribute__ ( ( __aligned__ ( 256 ) ) ) ; int xmit_lock_owner ; unsigned long trans_start ; unsigned long tx_bytes ; unsigned long tx_packets ; unsigned long tx_dropped ; } 
s##net_bridge_port
s##macvlan_port
s##garp_port
s#nla_policy struct nla_policy { t#u16 type ; t#u16 len ; } 
s#nlattr struct nlattr { t#__u16 nla_len ; t#__u16 nla_type ; } 
s#rtnl_link_ops struct rtnl_link_ops { s#list_head list ; const char * kind ; t#size_t priv_size ; void ( * setup ) ( s#net_device * ) ; int maxtype ; const s#nla_policy * policy ; int ( * validate ) ( s#nlattr * [ ] , s#nlattr * [ ] ) ; int ( * newlink ) ( s#net_device * , s#nlattr * [ ] , s#nlattr * [ ] ) ; int ( * changelink ) ( s#net_device * , s#nlattr * [ ] , s#nlattr * [ ] ) ; void ( * dellink ) ( s#net_device * ) ; t#size_t ( * get_size ) ( const s#net_device * ) ; int ( * fill_info ) ( s#sk_buff * , const s#net_device * ) ; t#size_t ( * get_xstats_size ) ( const s#net_device * ) ; int ( * fill_xstats ) ( s#sk_buff * , const s#net_device * ) ; int ( * get_tx_queues ) ( s#net * , s#nlattr * [ ] , unsigned int * , unsigned int * ) ; } 
s#dcbnl_rtnl_ops struct dcbnl_rtnl_ops { t#u8 ( * getstate ) ( s#net_device * ) ; t#u8 ( * setstate ) ( s#net_device * , t#u8 ) ; void ( * getpermhwaddr ) ( s#net_device * , t#u8 * ) ; void ( * setpgtccfgtx ) ( s#net_device * , int , t#u8 , t#u8 , t#u8 , t#u8 ) ; void ( * setpgbwgcfgtx ) ( s#net_device * , int , t#u8 ) ; void ( * setpgtccfgrx ) ( s#net_device * , int , t#u8 , t#u8 , t#u8 , t#u8 ) ; void ( * setpgbwgcfgrx ) ( s#net_device * , int , t#u8 ) ; void ( * getpgtccfgtx ) ( s#net_device * , int , t#u8 * , t#u8 * , t#u8 * , t#u8 * ) ; void ( * getpgbwgcfgtx ) ( s#net_device * , int , t#u8 * ) ; void ( * getpgtccfgrx ) ( s#net_device * , int , t#u8 * , t#u8 * , t#u8 * , t#u8 * ) ; void ( * getpgbwgcfgrx ) ( s#net_device * , int , t#u8 * ) ; void ( * setpfccfg ) ( s#net_device * , int , t#u8 ) ; void ( * getpfccfg ) ( s#net_device * , int , t#u8 * ) ; t#u8 ( * setall ) ( s#net_device * ) ; t#u8 ( * getcap ) ( s#net_device * , int , t#u8 * ) ; t#u8 ( * getnumtcs ) ( s#net_device * , int , t#u8 * ) ; t#u8 ( * setnumtcs ) ( s#net_device * , int , t#u8 ) ; t#u8 ( * getpfcstate ) ( s#net_device * ) ; void ( * setpfcstate ) ( s#net_device * , t#u8 ) ; void ( * getbcncfg ) ( s#net_device * , int , t#u32 * ) ; void ( * setbcncfg ) ( s#net_device * , int , t#u32 ) ; void ( * getbcnrp ) ( s#net_device * , int , t#u8 * ) ; void ( * setbcnrp ) ( s#net_device * , int , t#u8 ) ; t#u8 ( * setapp ) ( s#net_device * , t#u8 , t#u16 , t#u8 ) ; t#u8 ( * getapp ) ( s#net_device * , t#u8 , t#u16 ) ; } 
s#net_device struct net_device { char name [ 16 ] ; s#hlist_node name_hlist ; char * ifalias ; unsigned long mem_end ; unsigned long mem_start ; unsigned long base_addr ; unsigned int irq ; unsigned char if_port ; unsigned char dma ; unsigned long state ; s#list_head dev_list ; s#list_head napi_list ; unsigned long features ; int ifindex ; int iflink ; s#net_device_stats stats ; const s#net_device_ops * netdev_ops ; const s#ethtool_ops * ethtool_ops ; const s#header_ops * header_ops ; unsigned int flags ; unsigned short gflags ; unsigned short priv_flags ; unsigned short padded ; unsigned char operstate ; unsigned char link_mode ; unsigned mtu ; unsigned short type ; unsigned short hard_header_len ; unsigned short needed_headroom ; unsigned short needed_tailroom ; s#net_device * master ; unsigned char perm_addr [ 32 ] ; unsigned char addr_len ; unsigned short dev_id ; s#netdev_hw_addr_list uc ; int uc_promisc ; t#spinlock_t addr_list_lock ; s#dev_addr_list * mc_list ; int mc_count ; unsigned int promiscuity ; unsigned int allmulti ; void * atalk_ptr ; void * ip_ptr ; void * dn_ptr ; void * ip6_ptr ; void * ec_ptr ; void * ax25_ptr ; s#wireless_dev * ieee80211_ptr ; unsigned long last_rx ; unsigned char * dev_addr ; s#netdev_hw_addr_list dev_addrs ; unsigned char broadcast [ 32 ] ; s#netdev_queue rx_queue ; s#netdev_queue * _tx __attribute__ ( ( __aligned__ ( 256 ) ) ) ; unsigned int num_tx_queues ; unsigned int real_num_tx_queues ; s#Qdisc * qdisc ; unsigned long tx_queue_len ; t#spinlock_t tx_global_lock ; unsigned long trans_start ; int watchdog_timeo ; s#timer_list watchdog_timer ; t#atomic_t refcnt __attribute__ ( ( __aligned__ ( 256 ) ) ) ; s#list_head todo_list ; s#hlist_node index_hlist ; s#net_device * link_watch_next ; enum { NETREG_UNINITIALIZED = 0 , NETREG_REGISTERED , NETREG_UNREGISTERING , NETREG_UNREGISTERED , NETREG_RELEASED , NETREG_DUMMY , } reg_state ; void ( * destructor ) ( s#net_device * ) ; s#net * nd_net ; void * ml_priv ; s#net_bridge_port * br_port ; s#macvlan_port * macvlan_port ; s#garp_port * garp_port ; s#device dev ; const s#attribute_group * sysfs_groups [ 3 ] ; const s#rtnl_link_ops * rtnl_link_ops ; unsigned long vlan_features ; unsigned int gso_max_size ; const s#dcbnl_rtnl_ops * dcbnl_ops ; } 
s##prot_inuse
s#netns_core struct netns_core { s#ctl_table_header * sysctl_hdr ; int sysctl_somaxconn ; s#prot_inuse * inuse ; } 
s#tcp_mib struct tcp_mib { unsigned long mibs [ __TCP_MIB_MAX ] ; } 
s#ipstats_mib struct ipstats_mib { unsigned long mibs [ __IPSTATS_MIB_MAX ] ; } 
s#linux_mib struct linux_mib { unsigned long mibs [ __LINUX_MIB_MAX ] ; } 
s#udp_mib struct udp_mib { unsigned long mibs [ __UDP_MIB_MAX ] ; } 
s#icmp_mib struct icmp_mib { unsigned long mibs [ ( __ICMP_MIB_MAX + 1 ) ] ; } 
s#icmpmsg_mib struct icmpmsg_mib { unsigned long mibs [ 512 ] ; } 
s#icmpv6_mib struct icmpv6_mib { unsigned long mibs [ __ICMP6_MIB_MAX ] ; } 
s#icmpv6msg_mib struct icmpv6msg_mib { unsigned long mibs [ 512 ] ; } 
s#netns_mib struct netns_mib { __typeof__ ( s#tcp_mib ) * tcp_statistics [ 2 ] ; __typeof__ ( s#ipstats_mib ) * ip_statistics [ 2 ] ; __typeof__ ( s#linux_mib ) * net_statistics [ 2 ] ; __typeof__ ( s#udp_mib ) * udp_statistics [ 2 ] ; __typeof__ ( s#udp_mib ) * udplite_statistics [ 2 ] ; __typeof__ ( s#icmp_mib ) * icmp_statistics [ 2 ] ; __typeof__ ( s#icmpmsg_mib ) * icmpmsg_statistics [ 2 ] ; s#proc_dir_entry * proc_net_devsnmp6 ; __typeof__ ( s#udp_mib ) * udp_stats_in6 [ 2 ] ; __typeof__ ( s#udp_mib ) * udplite_stats_in6 [ 2 ] ; __typeof__ ( s#ipstats_mib ) * ipv6_statistics [ 2 ] ; __typeof__ ( s#icmpv6_mib ) * icmpv6_statistics [ 2 ] ; __typeof__ ( s#icmpv6msg_mib ) * icmpv6msg_statistics [ 2 ] ; } 
s#netns_packet struct netns_packet { t#rwlock_t sklist_lock ; s#hlist_head sklist ; } 
s#netns_unix struct netns_unix { int sysctl_max_dgram_qlen ; s#ctl_table_header * ctl ; } 
s#ipv4_devconf struct ipv4_devconf { void * sysctl ; int data [ __NET_IPV4_CONF_MAX - 1 ] ; unsigned long state [ ( ( ( __NET_IPV4_CONF_MAX - 1 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; } 
s##fib_rules_ops
s#mem_reserve struct mem_reserve { s#mem_reserve * parent ; s#list_head children ; s#list_head siblings ; const char * name ; long pages ; long limit ; long usage ; t#spinlock_t lock ; t#wait_queue_head_t waitqueue ; } 
s#netns_frags struct netns_frags { int nqueues ; t#atomic_t mem ; s#list_head lru_list ; int timeout ; int high_thresh ; int low_thresh ; s#mutex lock ; s#mem_reserve reserve ; } 
s##xt_table
s##mfc_cache
s##vif_device
s#netns_ipv4 struct netns_ipv4 { s#ctl_table_header * forw_hdr ; s#ctl_table_header * frags_hdr ; s#ctl_table_header * ipv4_hdr ; s#ctl_table_header * route_hdr ; s#ipv4_devconf * devconf_all ; s#ipv4_devconf * devconf_dflt ; s#fib_rules_ops * rules_ops ; s#hlist_head * fib_table_hash ; s#sock * fibnl ; s#sock * * icmp_sk ; s#sock * tcp_sock ; s#netns_frags frags ; s#xt_table * iptable_filter ; s#xt_table * iptable_mangle ; s#xt_table * iptable_raw ; s#xt_table * arptable_filter ; s#xt_table * iptable_security ; s#xt_table * nat_table ; s#hlist_head * nat_bysource ; unsigned int nat_htable_size ; int nat_vmalloced ; int sysctl_icmp_echo_ignore_all ; int sysctl_icmp_echo_ignore_broadcasts ; int sysctl_icmp_ignore_bogus_error_responses ; int sysctl_icmp_ratelimit ; int sysctl_icmp_ratemask ; int sysctl_icmp_errors_use_inbound_ifaddr ; int sysctl_rt_cache_rebuild_count ; int current_rt_cache_rebuild_count ; s#timer_list rt_secret_timer ; t#atomic_t rt_genid ; s#sock * mroute_sk ; s#mfc_cache * * mfc_cache_array ; s#vif_device * vif_table ; int maxvif ; t#atomic_t cache_resolve_queue_len ; int mroute_do_assert ; int mroute_do_pim ; int mroute_reg_vif_num ; } 
s#netns_sysctl_ipv6 struct netns_sysctl_ipv6 { s#ctl_table_header * table ; s#ctl_table_header * frags_hdr ; int bindv6only ; int flush_delay ; int ip6_rt_max_size ; int ip6_rt_gc_min_interval ; int ip6_rt_gc_timeout ; int ip6_rt_gc_interval ; int ip6_rt_gc_elasticity ; int ip6_rt_mtu_expires ; int ip6_rt_min_advmss ; int icmpv6_time ; s#mutex ip6_rt_lock ; } 
s#ipv6_devconf struct ipv6_devconf { t#__s32 forwarding ; t#__s32 hop_limit ; t#__s32 mtu6 ; t#__s32 accept_ra ; t#__s32 accept_redirects ; t#__s32 autoconf ; t#__s32 dad_transmits ; t#__s32 rtr_solicits ; t#__s32 rtr_solicit_interval ; t#__s32 rtr_solicit_delay ; t#__s32 force_mld_version ; t#__s32 use_tempaddr ; t#__s32 temp_valid_lft ; t#__s32 temp_prefered_lft ; t#__s32 regen_max_retry ; t#__s32 max_desync_factor ; t#__s32 max_addresses ; t#__s32 accept_ra_defrtr ; t#__s32 accept_ra_pinfo ; t#__s32 accept_ra_rtr_pref ; t#__s32 rtr_probe_interval ; t#__s32 accept_ra_rt_info_max_plen ; t#__s32 proxy_ndp ; t#__s32 accept_source_route ; t#__s32 disable_ipv6 ; t#__s32 accept_dad ; void * sysctl ; } 
s##rt6_statistics
s##fib6_table
s#netns_ipv6 struct netns_ipv6 { s#netns_sysctl_ipv6 sysctl ; s#ipv6_devconf * devconf_all ; s#ipv6_devconf * devconf_dflt ; s#netns_frags frags ; s#xt_table * ip6table_filter ; s#xt_table * ip6table_mangle ; s#xt_table * ip6table_raw ; s#xt_table * ip6table_security ; s#rt6_info * ip6_null_entry ; s#rt6_statistics * rt6_stats ; s#timer_list ip6_fib_timer ; s#hlist_head * fib_table_hash ; s#fib6_table * fib6_main_tbl ; s#dst_ops ip6_dst_ops ; unsigned int ip6_rt_gc_expire ; unsigned long ip6_rt_last_gc ; s#rt6_info * ip6_prohibit_entry ; s#rt6_info * ip6_blk_hole_entry ; s#fib6_table * fib6_local_tbl ; s#fib_rules_ops * fib6_rules_ops ; s#sock * * icmp_sk ; s#sock * ndisc_sk ; s#sock * tcp_sk ; s#sock * igmp_sk ; s#mem_reserve ip6_rt_reserve ; } 
s#netns_dccp struct netns_dccp { s#sock * v4_ctl_sk ; s#sock * v6_ctl_sk ; } 
s#netns_xt struct netns_xt { s#list_head tables [ NFPROTO_NUMPROTO ] ; } 
s#hlist_nulls_head struct hlist_nulls_head { s#hlist_nulls_node * first ; } 
s##ip_conntrack_stat
s#netns_ct struct netns_ct { t#atomic_t count ; unsigned int expect_count ; unsigned int htable_size ; s#kmem_cache * nf_conntrack_cachep ; s#hlist_nulls_head * hash ; s#hlist_head * expect_hash ; s#hlist_nulls_head unconfirmed ; s#hlist_nulls_head dying ; s#ip_conntrack_stat * stat ; int sysctl_events ; unsigned int sysctl_events_retry_timeout ; int sysctl_acct ; int sysctl_checksum ; unsigned int sysctl_log_invalid ; s#ctl_table_header * sysctl_header ; s#ctl_table_header * acct_sysctl_header ; s#ctl_table_header * event_sysctl_header ; int hash_vmalloc ; int expect_vmalloc ; char * slabname ; } 
s#xfrm_policy_hash struct xfrm_policy_hash { s#hlist_head * table ; unsigned int hmask ; } 
s#netns_xfrm struct netns_xfrm { s#list_head state_all ; s#hlist_head * state_bydst ; s#hlist_head * state_bysrc ; s#hlist_head * state_byspi ; unsigned int state_hmask ; unsigned int state_num ; s#work_struct state_hash_work ; s#hlist_head state_gc_list ; s#work_struct state_gc_work ; t#wait_queue_head_t km_waitq ; s#list_head policy_all ; s#hlist_head * policy_byidx ; unsigned int policy_idx_hmask ; s#hlist_head policy_inexact [ XFRM_POLICY_MAX * 2 ] ; s#xfrm_policy_hash policy_bydst [ XFRM_POLICY_MAX * 2 ] ; unsigned int policy_count [ XFRM_POLICY_MAX * 2 ] ; s#work_struct policy_hash_work ; s#sock * nlsk ; t#u32 sysctl_aevent_etime ; t#u32 sysctl_aevent_rseqth ; int sysctl_larval_drop ; t#u32 sysctl_acq_expires ; s#ctl_table_header * sysctl_hdr ; } 
s##net_generic
s#net struct net { t#atomic_t count ; s#list_head list ; s#work_struct work ; s#proc_dir_entry * proc_net ; s#proc_dir_entry * proc_net_stat ; s#ctl_table_set sysctls ; s#net_device * loopback_dev ; s#list_head dev_base_head ; s#hlist_head * dev_name_head ; s#hlist_head * dev_index_head ; s#list_head rules_ops ; t#spinlock_t rules_mod_lock ; s#sock * rtnl ; s#sock * genl_sock ; s#netns_core core ; s#netns_mib mib ; s#netns_packet packet ; s#netns_unix unx ; s#netns_ipv4 ipv4 ; s#netns_ipv6 ipv6 ; s#netns_dccp dccp ; s#netns_xt xt ; s#netns_ct ct ; s#netns_xfrm xfrm ; s#net_generic * gen ; } 
s#nsproxy struct nsproxy { t#atomic_t count ; s#uts_namespace * uts_ns ; s#ipc_namespace * ipc_ns ; s#mnt_namespace * mnt_ns ; s#pid_namespace * pid_ns ; s#net * net_ns ; } 
t#tcflag_t typedef unsigned int tcflag_t 
t#cc_t typedef unsigned char cc_t 
t#speed_t typedef unsigned int speed_t 
s#ktermios struct ktermios { t#tcflag_t c_iflag ; t#tcflag_t c_oflag ; t#tcflag_t c_cflag ; t#tcflag_t c_lflag ; t#cc_t c_line ; t#cc_t c_cc [ 19 ] ; t#speed_t c_ispeed ; t#speed_t c_ospeed ; } 
s#winsize struct winsize { unsigned short ws_row ; unsigned short ws_col ; unsigned short ws_xpixel ; unsigned short ws_ypixel ; } 
s#termiox struct termiox { t#__u16 x_hflag ; t#__u16 x_cflag ; t#__u16 x_rflag [ 5 ] ; t#__u16 x_sflag ; } 
s#tty_operations struct tty_operations { s#tty_struct * ( * lookup ) ( s#tty_driver * , s#inode * , int ) ; int ( * install ) ( s#tty_driver * , s#tty_struct * ) ; void ( * remove ) ( s#tty_driver * , s#tty_struct * ) ; int ( * open ) ( s#tty_struct * , s#file * ) ; void ( * close ) ( s#tty_struct * , s#file * ) ; void ( * shutdown ) ( s#tty_struct * ) ; void ( * cleanup ) ( s#tty_struct * ) ; int ( * write ) ( s#tty_struct * , const unsigned char * , int ) ; int ( * put_char ) ( s#tty_struct * , unsigned char ) ; void ( * flush_chars ) ( s#tty_struct * ) ; int ( * write_room ) ( s#tty_struct * ) ; int ( * chars_in_buffer ) ( s#tty_struct * ) ; int ( * ioctl ) ( s#tty_struct * , s#file * , unsigned int , unsigned long ) ; long ( * compat_ioctl ) ( s#tty_struct * , s#file * , unsigned int , unsigned long ) ; void ( * set_termios ) ( s#tty_struct * , s#ktermios * ) ; void ( * throttle ) ( s#tty_struct * ) ; void ( * unthrottle ) ( s#tty_struct * ) ; void ( * stop ) ( s#tty_struct * ) ; void ( * start ) ( s#tty_struct * ) ; void ( * hangup ) ( s#tty_struct * ) ; int ( * break_ctl ) ( s#tty_struct * , int ) ; void ( * flush_buffer ) ( s#tty_struct * ) ; void ( * set_ldisc ) ( s#tty_struct * ) ; void ( * wait_until_sent ) ( s#tty_struct * , int ) ; void ( * send_xchar ) ( s#tty_struct * , char ) ; int ( * tiocmget ) ( s#tty_struct * , s#file * ) ; int ( * tiocmset ) ( s#tty_struct * , s#file * , unsigned int , unsigned int ) ; int ( * resize ) ( s#tty_struct * , s#winsize * ) ; int ( * set_termiox ) ( s#tty_struct * , s#termiox * ) ; const s#file_operations * proc_fops ; } 
s#tty_driver struct tty_driver { int magic ; s#kref kref ; s#cdev cdev ; s#module * owner ; const char * driver_name ; const char * name ; int name_base ; int major ; int minor_start ; int minor_num ; int num ; short type ; short subtype ; s#ktermios init_termios ; int flags ; s#proc_dir_entry * proc_entry ; s#tty_driver * other ; s#tty_struct * * ttys ; s#ktermios * * termios ; s#ktermios * * termios_locked ; void * driver_state ; const s#tty_operations * ops ; s#list_head tty_drivers ; } 
s#tty_ldisc_ops struct tty_ldisc_ops { int magic ; char * name ; int num ; int flags ; int ( * open ) ( s#tty_struct * ) ; void ( * close ) ( s#tty_struct * ) ; void ( * flush_buffer ) ( s#tty_struct * ) ; t#ssize_t ( * chars_in_buffer ) ( s#tty_struct * ) ; t#ssize_t ( * read ) ( s#tty_struct * , s#file * , unsigned char * , t#size_t ) ; t#ssize_t ( * write ) ( s#tty_struct * , s#file * , const unsigned char * , t#size_t ) ; int ( * ioctl ) ( s#tty_struct * , s#file * , unsigned int , unsigned long ) ; long ( * compat_ioctl ) ( s#tty_struct * , s#file * , unsigned int , unsigned long ) ; void ( * set_termios ) ( s#tty_struct * , s#ktermios * ) ; unsigned int ( * poll ) ( s#tty_struct * , s#file * , s#poll_table_struct * ) ; int ( * hangup ) ( s#tty_struct * ) ; void ( * receive_buf ) ( s#tty_struct * , const unsigned char * , char * , int ) ; void ( * write_wakeup ) ( s#tty_struct * ) ; s#module * owner ; int refcount ; } 
s#tty_ldisc struct tty_ldisc { s#tty_ldisc_ops * ops ; t#atomic_t users ; } 
s#tty_buffer struct tty_buffer { s#tty_buffer * next ; char * char_buf_ptr ; unsigned char * flag_buf_ptr ; int used ; int size ; int commit ; int read ; unsigned long data [ 0 ] ; } 
s#tty_bufhead struct tty_bufhead { s#delayed_work work ; t#spinlock_t lock ; s#tty_buffer * head ; s#tty_buffer * tail ; s#tty_buffer * free ; int memory_used ; } 
s#tty_port_operations struct tty_port_operations { int ( * carrier_raised ) ( s#tty_port * ) ; void ( * dtr_rts ) ( s#tty_port * , int ) ; void ( * shutdown ) ( s#tty_port * ) ; void ( * drop ) ( s#tty_port * ) ; } 
s#tty_port struct tty_port { s#tty_struct * tty ; const s#tty_port_operations * ops ; t#spinlock_t lock ; int blocked_open ; int count ; t#wait_queue_head_t open_wait ; t#wait_queue_head_t close_wait ; t#wait_queue_head_t delta_msr_wait ; unsigned long flags ; s#mutex mutex ; unsigned char * xmit_buf ; unsigned int close_delay ; unsigned int closing_wait ; int drain_delay ; } 
s#tty_struct struct tty_struct { int magic ; s#kref kref ; s#tty_driver * driver ; const s#tty_operations * ops ; int index ; s#mutex ldisc_mutex ; s#tty_ldisc * ldisc ; s#mutex termios_mutex ; t#spinlock_t ctrl_lock ; s#ktermios * termios , * termios_locked ; s#termiox * termiox ; char name [ 64 ] ; s#pid * pgrp ; s#pid * session ; unsigned long flags ; int count ; s#winsize winsize ; unsigned char stopped : 1 , hw_stopped : 1 , flow_stopped : 1 , packet : 1 ; unsigned char low_latency : 1 , warned : 1 ; unsigned char ctrl_status ; unsigned int receive_room ; s#tty_struct * link ; s#fasync_struct * fasync ; s#tty_bufhead buf ; int alt_speed ; t#wait_queue_head_t write_wait ; t#wait_queue_head_t read_wait ; s#work_struct hangup_work ; void * disc_data ; void * driver_data ; s#list_head tty_files ; unsigned int column ; unsigned char lnext : 1 , erasing : 1 , raw : 1 , real_raw : 1 , icanon : 1 ; unsigned char closing : 1 ; unsigned char echo_overrun : 1 ; unsigned short minimum_to_wake ; unsigned long overrun_time ; int num_overrun ; unsigned long process_char_map [ 256 / ( 8 * sizeof ( unsigned long ) ) ] ; char * read_buf ; int read_head ; int read_tail ; int read_cnt ; unsigned long read_flags [ 4096 / ( 8 * sizeof ( unsigned long ) ) ] ; unsigned char * echo_buf ; unsigned int echo_pos ; unsigned int echo_cnt ; int canon_data ; unsigned long canon_head ; unsigned int canon_column ; s#mutex atomic_read_lock ; s#mutex atomic_write_lock ; s#mutex output_lock ; s#mutex echo_lock ; unsigned char * write_buf ; int write_cnt ; t#spinlock_t read_lock ; s#work_struct SAK_work ; s#tty_port * port ; } 
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s#robust_list struct robust_list { s#robust_list * next ; } 
s#robust_list_head struct robust_list_head { s#robust_list list ; long futex_offset ; s#robust_list * list_op_pending ; } 
t#compat_uptr_t typedef t#u32 compat_uptr_t 
s#compat_robust_list struct compat_robust_list { t#compat_uptr_t next ; } 
t#compat_long_t typedef t#s32 compat_long_t 
s#compat_robust_list_head struct compat_robust_list_head { s#compat_robust_list list ; t#compat_long_t futex_offset ; t#compat_uptr_t list_op_pending ; } 
s##futex_pi_state
s#perf_event_context struct perf_event_context { t#spinlock_t lock ; s#mutex mutex ; s#list_head group_list ; s#list_head event_list ; int nr_events ; int nr_active ; int is_active ; int nr_stat ; t#atomic_t refcount ; s#task_struct * task ; t#u64 time ; t#u64 timestamp ; s#perf_event_context * parent_ctx ; t#u64 parent_gen ; t#u64 generation ; int pin_count ; s#rcu_head rcu_head ; } 
s#ftrace_ret_stack struct ftrace_ret_stack { unsigned long ret ; unsigned long func ; unsigned long long calltime ; unsigned long long subtime ; unsigned long fp ; } 
s##mem_cgroup
kthread_bind void kthread_bind ( s#task_struct * , unsigned int ) 
kick_process extern void kick_process ( s#task_struct * ) 
wake_up_process extern int wake_up_process ( s#task_struct * ) 
s#preempt_ops struct preempt_ops { void ( * sched_in ) ( s#preempt_notifier * , int ) ; void ( * sched_out ) ( s#preempt_notifier * , s#task_struct * ) ; } 
s#preempt_notifier struct preempt_notifier { s#hlist_node link ; s#preempt_ops * ops ; } 
preempt_notifier_register void preempt_notifier_register ( s#preempt_notifier * ) 
preempt_notifier_unregister void preempt_notifier_unregister ( s#preempt_notifier * ) 
avenrun extern unsigned long avenrun [ ] 
t#cputime64_t typedef unsigned long long cputime64_t 
s#cpu_usage_stat struct cpu_usage_stat { t#cputime64_t user ; t#cputime64_t nice ; t#cputime64_t system ; t#cputime64_t softirq ; t#cputime64_t irq ; t#cputime64_t idle ; t#cputime64_t iowait ; t#cputime64_t steal ; t#cputime64_t guest ; } 
s#kernel_stat struct kernel_stat { s#cpu_usage_stat cpustat ; unsigned int irqs [ NR_IRQS ] ; unsigned int softirqs [ NR_SOFTIRQS ] ; } 
per_cpu__kstat extern __attribute__ ( ( section ( ".data.percpu" "" ) ) ) __typeof__ ( s#kernel_stat ) per_cpu__kstat 
schedule void schedule ( void ) 
default_wake_function int default_wake_function ( t#wait_queue_t * , unsigned , int , void * ) 
__wake_up void __wake_up ( t#wait_queue_head_t * , unsigned int , int , void * ) 
__wake_up_sync_key void __wake_up_sync_key ( t#wait_queue_head_t * , unsigned int , int , void * ) 
__wake_up_sync void __wake_up_sync ( t#wait_queue_head_t * , unsigned int , int ) 
complete extern void complete ( s#completion * ) 
complete_all extern void complete_all ( s#completion * ) 
wait_for_completion extern void wait_for_completion ( s#completion * ) 
wait_for_completion_timeout extern unsigned long wait_for_completion_timeout ( s#completion * , unsigned long ) 
wait_for_completion_interruptible extern int wait_for_completion_interruptible ( s#completion * ) 
wait_for_completion_interruptible_timeout extern unsigned long wait_for_completion_interruptible_timeout ( s#completion * , unsigned long ) 
wait_for_completion_killable extern int wait_for_completion_killable ( s#completion * ) 
try_wait_for_completion extern t#bool try_wait_for_completion ( s#completion * ) 
completion_done extern t#bool completion_done ( s#completion * ) 
interruptible_sleep_on extern void interruptible_sleep_on ( t#wait_queue_head_t * ) 
interruptible_sleep_on_timeout extern long interruptible_sleep_on_timeout ( t#wait_queue_head_t * , signed long ) 
sleep_on extern void sleep_on ( t#wait_queue_head_t * ) 
sleep_on_timeout extern long sleep_on_timeout ( t#wait_queue_head_t * , signed long ) 
set_user_nice extern void set_user_nice ( s#task_struct * , long ) 
task_nice extern int task_nice ( const s#task_struct * ) 
s#sched_param struct sched_param { int sched_priority ; } 
sched_setscheduler extern int sched_setscheduler ( s#task_struct * , int , s#sched_param * ) 
_cond_resched extern int _cond_resched ( void ) 
__cond_resched_lock extern int __cond_resched_lock ( t#spinlock_t * ) 
__cond_resched_softirq extern int __cond_resched_softirq ( void ) 
yield void yield ( void ) 
io_schedule void io_schedule ( void ) 
set_cpus_allowed_ptr extern int set_cpus_allowed_ptr ( s#task_struct * , const s#cpumask * ) 
rcu_expedited_torture_stats extern int rcu_expedited_torture_stats ( char * ) 
synchronize_sched_expedited extern void synchronize_sched_expedited ( void ) 
slab_buffer_size extern t#size_t slab_buffer_size ( s#kmem_cache * ) 
s#cache_sizes struct cache_sizes { t#size_t cs_size ; s#kmem_cache * cs_cachep ; s#kmem_cache * cs_dmacachep ; } 
malloc_sizes extern s#cache_sizes malloc_sizes [ ] 
kmem_cache_create s#kmem_cache * kmem_cache_create ( const char * , t#size_t , t#size_t , unsigned long , void ( * ) ( void * ) ) 
kmem_cache_shrink int kmem_cache_shrink ( s#kmem_cache * ) 
kmem_cache_destroy void kmem_cache_destroy ( s#kmem_cache * ) 
kmem_cache_alloc void * kmem_cache_alloc ( s#kmem_cache * , t#gfp_t ) 
kmem_cache_alloc_notrace extern void * kmem_cache_alloc_notrace ( s#kmem_cache * , t#gfp_t ) 
__kmalloc void * __kmalloc ( t#size_t , t#gfp_t ) 
__kmalloc_track_caller void * __kmalloc_track_caller ( t#size_t , t#gfp_t , unsigned long ) 
kmem_cache_free void kmem_cache_free ( s#kmem_cache * , void * ) 
kfree void kfree ( const void * ) 
kmem_cache_size unsigned int kmem_cache_size ( s#kmem_cache * ) 
kmem_cache_name const char * kmem_cache_name ( s#kmem_cache * ) 
kmalloc_estimate_objs unsigned kmalloc_estimate_objs ( t#size_t , t#gfp_t , int ) 
kmalloc_estimate_bytes unsigned kmalloc_estimate_bytes ( t#gfp_t , t#size_t ) 
ksize t#size_t ksize ( const void * ) 

/* arch/s390/crypto/des_check_key.o */
crypto_des_check_key extern int crypto_des_check_key ( const t#u8 * , unsigned int , t#u32 * ) 

/* arch/s390/crypto/sha_common.o */
s#crypto_ablkcipher struct crypto_ablkcipher { s#crypto_tfm base ; } 
t#crypto_completion_t typedef void ( * crypto_completion_t ) ( s#crypto_async_request * , int ) 
s#crypto_async_request struct crypto_async_request { s#list_head list ; t#crypto_completion_t complete ; void * data ; s#crypto_tfm * tfm ; t#u32 flags ; } 
s##scatterlist
s#ablkcipher_request struct ablkcipher_request { s#crypto_async_request base ; unsigned int nbytes ; void * info ; s#scatterlist * src ; s#scatterlist * dst ; void * __ctx [ ] __attribute__ ( ( __aligned__ ( __alignof__ ( unsigned long long ) ) ) ) ; } 
s##skcipher_givcrypt_request
s#ablkcipher_tfm struct ablkcipher_tfm { int ( * setkey ) ( s#crypto_ablkcipher * , const t#u8 * , unsigned int ) ; int ( * encrypt ) ( s#ablkcipher_request * ) ; int ( * decrypt ) ( s#ablkcipher_request * ) ; int ( * givencrypt ) ( s#skcipher_givcrypt_request * ) ; int ( * givdecrypt ) ( s#skcipher_givcrypt_request * ) ; s#crypto_ablkcipher * base ; unsigned int ivsize ; unsigned int reqsize ; } 
s#crypto_aead struct crypto_aead { s#crypto_tfm base ; } 
s#aead_request struct aead_request { s#crypto_async_request base ; unsigned int assoclen ; unsigned int cryptlen ; t#u8 * iv ; s#scatterlist * assoc ; s#scatterlist * src ; s#scatterlist * dst ; void * __ctx [ ] __attribute__ ( ( __aligned__ ( __alignof__ ( unsigned long long ) ) ) ) ; } 
s##aead_givcrypt_request
s#aead_tfm struct aead_tfm { int ( * setkey ) ( s#crypto_aead * , const t#u8 * , unsigned int ) ; int ( * encrypt ) ( s#aead_request * ) ; int ( * decrypt ) ( s#aead_request * ) ; int ( * givencrypt ) ( s#aead_givcrypt_request * ) ; int ( * givdecrypt ) ( s#aead_givcrypt_request * ) ; s#crypto_aead * base ; unsigned int ivsize ; unsigned int authsize ; unsigned int reqsize ; } 
s#crypto_blkcipher struct crypto_blkcipher { s#crypto_tfm base ; } 
s#blkcipher_desc struct blkcipher_desc { s#crypto_blkcipher * tfm ; void * info ; t#u32 flags ; } 
s#blkcipher_tfm struct blkcipher_tfm { void * iv ; int ( * setkey ) ( s#crypto_tfm * , const t#u8 * , unsigned int ) ; int ( * encrypt ) ( s#blkcipher_desc * , s#scatterlist * , s#scatterlist * , unsigned int ) ; int ( * decrypt ) ( s#blkcipher_desc * , s#scatterlist * , s#scatterlist * , unsigned int ) ; } 
s#cipher_tfm struct cipher_tfm { int ( * cit_setkey ) ( s#crypto_tfm * , const t#u8 * , unsigned int ) ; void ( * cit_encrypt_one ) ( s#crypto_tfm * , t#u8 * , const t#u8 * ) ; void ( * cit_decrypt_one ) ( s#crypto_tfm * , t#u8 * , const t#u8 * ) ; } 
s#crypto_hash struct crypto_hash { s#crypto_tfm base ; } 
s#hash_desc struct hash_desc { s#crypto_hash * tfm ; t#u32 flags ; } 
s#hash_tfm struct hash_tfm { int ( * init ) ( s#hash_desc * ) ; int ( * update ) ( s#hash_desc * , s#scatterlist * , unsigned int ) ; int ( * final ) ( s#hash_desc * , t#u8 * ) ; int ( * digest ) ( s#hash_desc * , s#scatterlist * , unsigned int , t#u8 * ) ; int ( * setkey ) ( s#crypto_hash * , const t#u8 * , unsigned int ) ; unsigned int digestsize ; } 
s#compress_tfm struct compress_tfm { int ( * cot_compress ) ( s#crypto_tfm * , const t#u8 * , unsigned int , t#u8 * , unsigned int * ) ; int ( * cot_decompress ) ( s#crypto_tfm * , const t#u8 * , unsigned int , t#u8 * , unsigned int * ) ; } 
s#crypto_rng struct crypto_rng { s#crypto_tfm base ; } 
s#rng_tfm struct rng_tfm { int ( * rng_gen_random ) ( s#crypto_rng * , t#u8 * , unsigned int ) ; int ( * rng_reset ) ( s#crypto_rng * , t#u8 * , unsigned int ) ; } 
s##seq_file
s#crypto_type struct crypto_type { unsigned int ( * ctxsize ) ( s#crypto_alg * , t#u32 , t#u32 ) ; unsigned int ( * extsize ) ( s#crypto_alg * ) ; int ( * init ) ( s#crypto_tfm * , t#u32 , t#u32 ) ; int ( * init_tfm ) ( s#crypto_tfm * ) ; void ( * show ) ( s#seq_file * , s#crypto_alg * ) ; s#crypto_alg * ( * lookup ) ( const char * , t#u32 , t#u32 ) ; unsigned int type ; unsigned int maskclear ; unsigned int maskset ; unsigned int tfmsize ; } 
s#ablkcipher_alg struct ablkcipher_alg { int ( * setkey ) ( s#crypto_ablkcipher * , const t#u8 * , unsigned int ) ; int ( * encrypt ) ( s#ablkcipher_request * ) ; int ( * decrypt ) ( s#ablkcipher_request * ) ; int ( * givencrypt ) ( s#skcipher_givcrypt_request * ) ; int ( * givdecrypt ) ( s#skcipher_givcrypt_request * ) ; const char * geniv ; unsigned int min_keysize ; unsigned int max_keysize ; unsigned int ivsize ; } 
s#aead_alg struct aead_alg { int ( * setkey ) ( s#crypto_aead * , const t#u8 * , unsigned int ) ; int ( * setauthsize ) ( s#crypto_aead * , unsigned int ) ; int ( * encrypt ) ( s#aead_request * ) ; int ( * decrypt ) ( s#aead_request * ) ; int ( * givencrypt ) ( s#aead_givcrypt_request * ) ; int ( * givdecrypt ) ( s#aead_givcrypt_request * ) ; const char * geniv ; unsigned int ivsize ; unsigned int maxauthsize ; } 
s#blkcipher_alg struct blkcipher_alg { int ( * setkey ) ( s#crypto_tfm * , const t#u8 * , unsigned int ) ; int ( * encrypt ) ( s#blkcipher_desc * , s#scatterlist * , s#scatterlist * , unsigned int ) ; int ( * decrypt ) ( s#blkcipher_desc * , s#scatterlist * , s#scatterlist * , unsigned int ) ; const char * geniv ; unsigned int min_keysize ; unsigned int max_keysize ; unsigned int ivsize ; } 
s#cipher_alg struct cipher_alg { unsigned int cia_min_keysize ; unsigned int cia_max_keysize ; int ( * cia_setkey ) ( s#crypto_tfm * , const t#u8 * , unsigned int ) ; void ( * cia_encrypt ) ( s#crypto_tfm * , t#u8 * , const t#u8 * ) ; void ( * cia_decrypt ) ( s#crypto_tfm * , t#u8 * , const t#u8 * ) ; } 
s#digest_alg struct digest_alg { unsigned int dia_digestsize ; void ( * dia_init ) ( s#crypto_tfm * ) ; void ( * dia_update ) ( s#crypto_tfm * , const t#u8 * , unsigned int ) ; void ( * dia_final ) ( s#crypto_tfm * , t#u8 * ) ; int ( * dia_setkey ) ( s#crypto_tfm * , const t#u8 * , unsigned int ) ; } 
s#hash_alg struct hash_alg { int ( * init ) ( s#hash_desc * ) ; int ( * update ) ( s#hash_desc * , s#scatterlist * , unsigned int ) ; int ( * final ) ( s#hash_desc * , t#u8 * ) ; int ( * digest ) ( s#hash_desc * , s#scatterlist * , unsigned int , t#u8 * ) ; int ( * setkey ) ( s#crypto_hash * , const t#u8 * , unsigned int ) ; unsigned int digestsize ; } 
s#compress_alg struct compress_alg { int ( * coa_compress ) ( s#crypto_tfm * , const t#u8 * , unsigned int , t#u8 * , unsigned int * ) ; int ( * coa_decompress ) ( s#crypto_tfm * , const t#u8 * , unsigned int , t#u8 * , unsigned int * ) ; } 
s#rng_alg struct rng_alg { int ( * rng_make_random ) ( s#crypto_rng * , t#u8 * , unsigned int ) ; int ( * rng_reset ) ( s#crypto_rng * , t#u8 * , unsigned int ) ; unsigned int seedsize ; } 
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##file
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##exec_domain
s##compat_timespec
s##pollfd
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s#crypto_alg struct crypto_alg { s#list_head cra_list ; s#list_head cra_users ; t#u32 cra_flags ; unsigned int cra_blocksize ; unsigned int cra_ctxsize ; unsigned int cra_alignmask ; int cra_priority ; t#atomic_t cra_refcnt ; char cra_name [ 64 ] ; char cra_driver_name [ 64 ] ; const s#crypto_type * cra_type ; union { s#ablkcipher_alg ablkcipher ; s#aead_alg aead ; s#blkcipher_alg blkcipher ; s#cipher_alg cipher ; s#digest_alg digest ; s#hash_alg hash ; s#compress_alg compress ; s#rng_alg rng ; } cra_u ; int ( * cra_init ) ( s#crypto_tfm * ) ; void ( * cra_exit ) ( s#crypto_tfm * ) ; void ( * cra_destroy ) ( s#crypto_alg * ) ; s#module * cra_module ; } 
s#crypto_tfm struct crypto_tfm { t#u32 crt_flags ; union { s#ablkcipher_tfm ablkcipher ; s#aead_tfm aead ; s#blkcipher_tfm blkcipher ; s#cipher_tfm cipher ; s#hash_tfm hash ; s#compress_tfm compress ; s#rng_tfm rng ; } crt_u ; void ( * exit ) ( s#crypto_tfm * ) ; s#crypto_alg * __crt_alg ; void * __crt_ctx [ ] __attribute__ ( ( __aligned__ ( __alignof__ ( unsigned long long ) ) ) ) ; } 
s#crypto_shash struct crypto_shash { unsigned int descsize ; s#crypto_tfm base ; } 
s#shash_desc struct shash_desc { s#crypto_shash * tfm ; t#u32 flags ; void * __ctx [ ] __attribute__ ( ( __aligned__ ( __alignof__ ( unsigned long long ) ) ) ) ; } 
s390_sha_update int s390_sha_update ( s#shash_desc * , const t#u8 * , unsigned int ) 
s390_sha_final int s390_sha_final ( s#shash_desc * , t#u8 * ) 

/* arch/s390/kernel/bitmap.o */
_oi_bitmap extern const char _oi_bitmap [ ] 
_ni_bitmap extern const char _ni_bitmap [ ] 
_zb_findmap extern const char _zb_findmap [ ] 
_sb_findmap extern const char _sb_findmap [ ] 

/* arch/s390/kernel/cpcmd.o */
__cpcmd extern int __cpcmd ( const char * , char * , int , int * ) 
cpcmd extern int cpcmd ( const char * , char * , int , int * ) 

/* arch/s390/kernel/debug.o */
s#__debug_entry struct __debug_entry { union { struct { unsigned long long clock : 52 ; unsigned long long exception : 1 ; unsigned long long level : 3 ; unsigned long long cpuid : 8 ; } fields ; unsigned long long stck ; } id ; void * caller ; } 
t#debug_entry_t typedef s#__debug_entry debug_entry_t 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##backing_dev_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
t#debug_prolog_proc_t typedef int ( debug_prolog_proc_t ) ( t#debug_info_t * , s#debug_view * , char * ) 
t#debug_header_proc_t typedef int ( debug_header_proc_t ) ( t#debug_info_t * , s#debug_view * , int , t#debug_entry_t * , char * ) 
t#debug_format_proc_t typedef int ( debug_format_proc_t ) ( t#debug_info_t * , s#debug_view * , char * , const char * ) 
t#debug_input_proc_t typedef int ( debug_input_proc_t ) ( t#debug_info_t * , s#debug_view * , s#file * , const char * , t#size_t , t#loff_t * ) 
s#debug_view struct debug_view { char name [ 64 ] ; t#debug_prolog_proc_t * prolog_proc ; t#debug_header_proc_t * header_proc ; t#debug_format_proc_t * format_proc ; t#debug_input_proc_t * input_proc ; void * private_data ; } 
s#debug_info struct debug_info { s#debug_info * next ; s#debug_info * prev ; t#atomic_t ref_count ; t#spinlock_t lock ; int level ; int nr_areas ; int pages_per_area ; int buf_size ; int entry_size ; t#debug_entry_t * * * areas ; int active_area ; int * active_pages ; int * active_entries ; s#dentry * debugfs_root_entry ; s#dentry * debugfs_entries [ 10 ] ; s#debug_view * views [ 10 ] ; char name [ 64 ] ; t#mode_t mode ; } 
t#debug_info_t typedef s#debug_info debug_info_t 
debug_register_mode t#debug_info_t * debug_register_mode ( const char * , int , int , int , t#mode_t , t#uid_t , t#gid_t ) 
debug_register t#debug_info_t * debug_register ( const char * , int , int , int ) 
debug_unregister void debug_unregister ( t#debug_info_t * ) 
debug_set_level void debug_set_level ( t#debug_info_t * , int ) 
debug_stop_all void debug_stop_all ( void ) 
debug_register_view int debug_register_view ( t#debug_info_t * , s#debug_view * ) 
debug_unregister_view int debug_unregister_view ( t#debug_info_t * , s#debug_view * ) 
debug_event_common t#debug_entry_t * debug_event_common ( t#debug_info_t * , int , const void * , int ) 
debug_exception_common t#debug_entry_t * debug_exception_common ( t#debug_info_t * , int , const void * , int ) 
debug_hex_ascii_view extern s#debug_view debug_hex_ascii_view 
debug_raw_view extern s#debug_view debug_raw_view 
debug_dflt_header_fn int debug_dflt_header_fn ( t#debug_info_t * , s#debug_view * , int , t#debug_entry_t * , char * ) 
debug_sprintf_view extern s#debug_view debug_sprintf_view 
debug_sprintf_exception extern t#debug_entry_t * debug_sprintf_exception ( t#debug_info_t * , int , char * , ... ) 
debug_sprintf_event extern t#debug_entry_t * debug_sprintf_event ( t#debug_info_t * , int , char * , ... ) 

/* arch/s390/kernel/diag.o */
diag10 extern void diag10 ( unsigned long ) 
diag14 extern int diag14 ( unsigned long , unsigned long , unsigned long ) 
s#diag210 struct diag210 { t#u16 vrdcdvno ; t#u16 vrdclen ; t#u8 vrdcvcla ; t#u8 vrdcvtyp ; t#u8 vrdcvsta ; t#u8 vrdcvfla ; t#u8 vrdcrccl ; t#u8 vrdccrty ; t#u8 vrdccrmd ; t#u8 vrdccrft ; } 
diag210 extern int diag210 ( s#diag210 * ) 

/* arch/s390/kernel/ebcdic.o */
_ascebc_500 extern t#__u8 _ascebc_500 [ 256 ] 
_ebcasc_500 extern t#__u8 _ebcasc_500 [ 256 ] 
_ascebc extern t#__u8 _ascebc [ 256 ] 
_ebcasc extern t#__u8 _ebcasc [ 256 ] 
_ebc_tolower extern t#__u8 _ebc_tolower [ 256 ] 
_ebc_toupper extern t#__u8 _ebc_toupper [ 256 ] 

/* arch/s390/kernel/init_task.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##array_cache
s##kmem_list3
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s#user_namespace struct user_namespace { s#kref kref ; s#hlist_head uidhash_table [ ( 1 << ( 0 ? 3 : 8 ) ) ] ; s#user_struct * creator ; s#work_struct destroyer ; } 
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##linux_binfmt
s##bts_context
s##fs_struct
s##ipc_namespace
s##mnt_namespace
s##net_device
s##sock
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sec_path
s##ip_conntrack_stat
s##net_generic
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
init_task extern s#task_struct init_task 

/* arch/s390/kernel/ipl.o */
diag308 extern int diag308 ( unsigned long , void * ) 
e#ipl_type enum ipl_type { IPL_TYPE_UNKNOWN = 1 , IPL_TYPE_CCW = 2 , IPL_TYPE_FCP = 4 , IPL_TYPE_FCP_DUMP = 8 , IPL_TYPE_NSS = 16 , } 
s#ccw_dev_id struct ccw_dev_id { t#u8 ssid ; t#u16 devno ; } 
s#ipl_info struct ipl_info { e#ipl_type type ; union { struct { s#ccw_dev_id dev_id ; } ccw ; struct { s#ccw_dev_id dev_id ; t#u64 wwpn ; t#u64 lun ; } fcp ; struct { char name [ 8 + 1 ] ; } nss ; } data ; } 
ipl_info extern s#ipl_info ipl_info 
s#reset_call struct reset_call { s#list_head list ; void ( * fn ) ( void ) ; } 
register_reset_call extern void register_reset_call ( s#reset_call * ) 
unregister_reset_call extern void unregister_reset_call ( s#reset_call * ) 

/* arch/s390/kernel/mem_detect.o */
s#mem_chunk struct mem_chunk { unsigned long addr ; unsigned long size ; int type ; } 
detect_memory_layout void detect_memory_layout ( s#mem_chunk [ ] ) 

/* arch/s390/kernel/nmi.o */
s390_handle_mcck extern void s390_handle_mcck ( void ) 

/* arch/s390/kernel/process.o */
kernel_thread extern int kernel_thread ( int ( * ) ( void * ) , void * , unsigned long ) 
t#elf_fpregset_t typedef t#s390_fp_regs elf_fpregset_t 
dump_fpu extern int dump_fpu ( s#pt_regs * , t#elf_fpregset_t * ) 

/* arch/s390/kernel/s390_ext.o */
t#ext_int_handler_t typedef void ( * ext_int_handler_t ) ( t#__u16 ) 
register_external_interrupt int register_external_interrupt ( t#__u16 , t#ext_int_handler_t ) 
unregister_external_interrupt int unregister_external_interrupt ( t#__u16 , t#ext_int_handler_t ) 

/* arch/s390/kernel/s390_ksyms.o */
_mcount extern void _mcount ( void ) 

/* arch/s390/kernel/setup.o */
s#uaccess_ops struct uaccess_ops { t#size_t ( * copy_from_user ) ( t#size_t , const void * , void * ) ; t#size_t ( * copy_from_user_small ) ( t#size_t , const void * , void * ) ; t#size_t ( * copy_to_user ) ( t#size_t , void * , const void * ) ; t#size_t ( * copy_to_user_small ) ( t#size_t , void * , const void * ) ; t#size_t ( * copy_in_user ) ( t#size_t , void * , const void * ) ; t#size_t ( * clear_user ) ( t#size_t , void * ) ; t#size_t ( * strnlen_user ) ( t#size_t , const char * ) ; t#size_t ( * strncpy_from_user ) ( t#size_t , const char * , char * ) ; int ( * futex_atomic_op ) ( int , int * , int , int * ) ; int ( * futex_atomic_cmpxchg ) ( int * , int , int ) ; } 
uaccess extern s#uaccess_ops uaccess 
console_mode extern unsigned int console_mode 
console_devno extern unsigned int console_devno 
console_irq extern unsigned int console_irq 
t#addr_t typedef unsigned long addr_t 
s#cpuid struct cpuid { unsigned int version : 8 ; unsigned int ident : 24 ; unsigned int machine : 16 ; unsigned int unused : 16 ; } 
s#_lowcore struct _lowcore { t#__u32 ccw1 [ 2 ] ; t#__u32 ccw2 [ 4 ] ; t#__u8 pad_0x0018 [ 0x0080 - 0x0018 ] ; t#__u32 ext_params ; t#__u16 cpu_addr ; t#__u16 ext_int_code ; t#__u16 svc_ilc ; t#__u16 svc_code ; t#__u16 pgm_ilc ; t#__u16 pgm_code ; t#__u32 data_exc_code ; t#__u16 mon_class_num ; t#__u16 per_perc_atmid ; t#addr_t per_address ; t#__u8 exc_access_id ; t#__u8 per_access_id ; t#__u8 op_access_id ; t#__u8 ar_access_id ; t#__u8 pad_0x00a4 [ 0x00a8 - 0x00a4 ] ; t#addr_t trans_exc_code ; t#addr_t monitor_code ; t#__u16 subchannel_id ; t#__u16 subchannel_nr ; t#__u32 io_int_parm ; t#__u32 io_int_word ; t#__u8 pad_0x00c4 [ 0x00c8 - 0x00c4 ] ; t#__u32 stfl_fac_list ; t#__u8 pad_0x00cc [ 0x00e8 - 0x00cc ] ; t#__u32 mcck_interruption_code [ 2 ] ; t#__u8 pad_0x00f0 [ 0x00f4 - 0x00f0 ] ; t#__u32 external_damage_code ; t#addr_t failing_storage_address ; t#__u8 pad_0x0100 [ 0x0120 - 0x0100 ] ; t#psw_t restart_old_psw ; t#psw_t external_old_psw ; t#psw_t svc_old_psw ; t#psw_t program_old_psw ; t#psw_t mcck_old_psw ; t#psw_t io_old_psw ; t#__u8 pad_0x0180 [ 0x01a0 - 0x0180 ] ; t#psw_t restart_psw ; t#psw_t external_new_psw ; t#psw_t svc_new_psw ; t#psw_t program_new_psw ; t#psw_t mcck_new_psw ; t#psw_t io_new_psw ; t#__u64 save_area [ 16 ] ; t#psw_t return_psw ; t#psw_t return_mcck_psw ; t#__u64 sync_enter_timer ; t#__u64 async_enter_timer ; t#__u64 exit_timer ; t#__u64 user_timer ; t#__u64 system_timer ; t#__u64 steal_timer ; t#__u64 last_update_timer ; t#__u64 last_update_clock ; t#__u64 current_task ; t#__u64 thread_info ; t#__u64 kernel_stack ; t#__u64 async_stack ; t#__u64 panic_stack ; t#__u64 kernel_asce ; t#__u64 user_asce ; t#__u64 user_exec_asce ; s#cpuid cpu_id ; t#__u32 cpu_nr ; t#__u32 softirq_pending ; t#__u64 percpu_offset ; t#__u64 ext_call_fast ; t#__u64 int_clock ; t#__u64 clock_comparator ; t#__u64 vdso_per_cpu_data ; t#__u64 machine_flags ; t#__u64 ftrace_func ; t#__u8 pad_0x0368 [ 0x0380 - 0x0368 ] ; t#__u8 irb [ 64 ] ; t#__u32 paste [ 16 ] ; t#__u8 pad_0x0400 [ 0x0e00 - 0x0400 ] ; t#__u64 ipib ; t#__u32 ipib_checksum ; t#__u8 pad_0x0e0c [ 0x11b8 - 0x0e0c ] ; t#__u64 ext_params2 ; t#__u8 pad_0x11c0 [ 0x1200 - 0x11C0 ] ; t#__u64 floating_pt_save_area [ 16 ] ; t#__u64 gpregs_save_area [ 16 ] ; t#__u32 st_status_fixed_logout [ 4 ] ; t#__u8 pad_0x1310 [ 0x1318 - 0x1310 ] ; t#__u32 prefixreg_save_area ; t#__u32 fpt_creg_save_area ; t#__u8 pad_0x1320 [ 0x1324 - 0x1320 ] ; t#__u32 tod_progreg_save_area ; t#__u32 cpu_timer_save_area [ 2 ] ; t#__u32 clock_comp_save_area [ 2 ] ; t#__u8 pad_0x1338 [ 0x1340 - 0x1338 ] ; t#__u32 access_regs_save_area [ 16 ] ; t#__u64 cregs_save_area [ 16 ] ; t#__u8 pad_0x1400 [ 0x2000 - 0x1400 ] ; } 
lowcore_ptr extern s#_lowcore * lowcore_ptr [ ] 
user_mode extern unsigned int user_mode 
real_memory_size extern unsigned long real_memory_size 

/* arch/s390/kernel/smp.o */
smp_ctl_set_bit extern void smp_ctl_set_bit ( int , int ) 
smp_ctl_clear_bit extern void smp_ctl_clear_bit ( int , int ) 
s#save_area_s390 struct save_area_s390 { t#u32 ext_save ; t#u64 timer ; t#u64 clk_cmp ; t#u8 pad1 [ 24 ] ; t#u8 psw [ 8 ] ; t#u32 pref_reg ; t#u8 pad2 [ 20 ] ; t#u32 acc_regs [ 16 ] ; t#u64 fp_regs [ 4 ] ; t#u32 gp_regs [ 16 ] ; t#u32 ctrl_regs [ 16 ] ; } 
s#save_area_s390x struct save_area_s390x { t#u64 fp_regs [ 16 ] ; t#u64 gp_regs [ 16 ] ; t#u8 psw [ 16 ] ; t#u8 pad1 [ 8 ] ; t#u32 pref_reg ; t#u32 fp_ctrl_reg ; t#u8 pad2 [ 4 ] ; t#u32 tod_reg ; t#u64 timer ; t#u64 clk_cmp ; t#u8 pad3 [ 8 ] ; t#u32 acc_regs [ 16 ] ; t#u64 ctrl_regs [ 16 ] ; } 
u#save_area union save_area { s#save_area_s390 s390 ; s#save_area_s390x s390x ; } 
zfcpdump_save_areas extern u#save_area * zfcpdump_save_areas [ 64 + 1 ] 

/* arch/s390/kernel/stacktrace.o */
s#stack_trace struct stack_trace { unsigned int nr_entries , max_entries ; unsigned long * entries ; int skip ; } 
save_stack_trace extern void save_stack_trace ( s#stack_trace * ) 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##file
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##exec_domain
s##compat_timespec
s##pollfd
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
save_stack_trace_tsk extern void save_stack_trace_tsk ( s#task_struct * , s#stack_trace * ) 

/* arch/s390/kernel/sysinfo.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s#service_level struct service_level { s#list_head list ; void ( * seq_print ) ( s#seq_file * , s#service_level * ) ; } 
register_service_level int register_service_level ( s#service_level * ) 
unregister_service_level int unregister_service_level ( s#service_level * ) 

/* arch/s390/kernel/time.o */
sched_clock_base_cc extern t#u64 sched_clock_base_cc 
monotonic_clock unsigned long long monotonic_clock ( void ) 
tod_to_timeval void tod_to_timeval ( t#__u64 , s#timespec * ) 
get_sync_clock int get_sync_clock ( unsigned long long * ) 

/* arch/s390/kernel/traps.o */
dump_stack extern void dump_stack ( void ) 

/* arch/s390/kernel/vtime.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##file
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##exec_domain
s##compat_timespec
s##pollfd
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
account_system_vtime extern void account_system_vtime ( s#task_struct * ) 
s#vtimer_list struct vtimer_list { s#list_head entry ; int cpu ; t#__u64 expires ; t#__u64 interval ; void ( * function ) ( unsigned long ) ; unsigned long data ; } 
init_virt_timer extern void init_virt_timer ( s#vtimer_list * ) 
add_virt_timer extern void add_virt_timer ( void * ) 
add_virt_timer_periodic extern void add_virt_timer_periodic ( void * ) 
mod_virt_timer extern int mod_virt_timer ( s#vtimer_list * , t#__u64 ) 
mod_virt_timer_periodic extern int mod_virt_timer_periodic ( s#vtimer_list * , t#__u64 ) 
del_virt_timer extern int del_virt_timer ( s#vtimer_list * ) 

/* arch/s390/lib/delay.o */
__udelay extern void __udelay ( unsigned long long ) 

/* arch/s390/lib/spinlock.o */
_raw_spin_lock_wait extern void _raw_spin_lock_wait ( t#raw_spinlock_t * ) 
_raw_spin_lock_wait_flags extern void _raw_spin_lock_wait_flags ( t#raw_spinlock_t * , unsigned long ) 
_raw_spin_trylock_retry extern int _raw_spin_trylock_retry ( t#raw_spinlock_t * ) 
_raw_spin_relax extern void _raw_spin_relax ( t#raw_spinlock_t * ) 
_raw_read_lock_wait extern void _raw_read_lock_wait ( t#raw_rwlock_t * ) 
_raw_read_lock_wait_flags extern void _raw_read_lock_wait_flags ( t#raw_rwlock_t * , unsigned long ) 
_raw_read_trylock_retry extern int _raw_read_trylock_retry ( t#raw_rwlock_t * ) 
_raw_write_lock_wait extern void _raw_write_lock_wait ( t#raw_rwlock_t * ) 
_raw_write_lock_wait_flags extern void _raw_write_lock_wait_flags ( t#raw_rwlock_t * , unsigned long ) 
_raw_write_trylock_retry extern int _raw_write_trylock_retry ( t#raw_rwlock_t * ) 

/* arch/s390/lib/string.o */
strlen t#size_t strlen ( const char * ) 
strnlen t#size_t strnlen ( const char * , t#size_t ) 
strcpy char * strcpy ( char * , const char * ) 
strlcpy extern t#size_t strlcpy ( char * , const char * , t#size_t ) 
strncpy extern char * strncpy ( char * , const char * , t#size_t ) 
strcat char * strcat ( char * , const char * ) 
strlcat extern t#size_t strlcat ( char * , const char * , t#size_t ) 
strncat extern char * strncat ( char * , const char * , t#size_t ) 
strcmp extern int strcmp ( const char * , const char * ) 
strrchr extern char * strrchr ( const char * , int ) 
strstr extern char * strstr ( const char * , const char * ) 
memchr void * memchr ( const void * , int , t#size_t ) 
memcmp extern int memcmp ( const void * , const void * , t#size_t ) 
memscan void * memscan ( void * , int , t#size_t ) 
memcpy extern void * memcpy ( void * , const void * , t#size_t ) 
memset extern void * memset ( void * , int , t#size_t ) 

/* arch/s390/mm/cmm.o */
cmm_set_pages void cmm_set_pages ( long ) 
cmm_get_pages long cmm_get_pages ( void ) 
cmm_add_timed_pages void cmm_add_timed_pages ( long ) 
cmm_get_timed_pages long cmm_get_timed_pages ( void ) 
cmm_set_timeout void cmm_set_timeout ( long , long ) 

/* arch/s390/mm/extmem.o */
segment_load int segment_load ( char * , int , unsigned long * , unsigned long * ) 
segment_unload void segment_unload ( char * ) 
segment_save void segment_save ( char * ) 
segment_type int segment_type ( char * ) 
segment_modify_shared int segment_modify_shared ( char * , int ) 
segment_warning void segment_warning ( int , char * ) 

/* arch/s390/mm/init.o */
empty_zero_page extern char empty_zero_page [ ( ( 1UL ) << 12 ) ] 

/* arch/s390/mm/mmap.o */
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##file
s##linux_binfmt
s##rq
s##cfs_rq
s##rt_rq
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
t#handler_t typedef void ( * handler_t ) ( int , s#pt_regs * ) 
s##map_segment
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s#exec_domain struct exec_domain { const char * name ; t#handler_t handler ; unsigned char pers_low ; unsigned char pers_high ; unsigned long * signal_map ; unsigned long * signal_invmap ; s#map_segment * err_map ; s#map_segment * socktype_map ; s#map_segment * sockopt_map ; s#map_segment * af_map ; s#module * module ; s#exec_domain * next ; } 
s##pollfd
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
arch_pick_mmap_layout extern void arch_pick_mmap_layout ( s#mm_struct * ) 

/* arch/s390/mm/pgtable.o */
VMALLOC_START extern unsigned long VMALLOC_START 
s390_enable_sie extern int s390_enable_sie ( void ) 

/* block/blk-barrier.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##mtd_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##hd_geometry
s##timer_rand_state
s##blk_trace
blk_queue_ordered extern int blk_queue_ordered ( s#request_queue * , unsigned , t#prepare_flush_fn * ) 
blkdev_issue_flush extern int blkdev_issue_flush ( s#block_device * , t#sector_t * ) 
blkdev_issue_discard extern int blkdev_issue_discard ( s#block_device * , t#sector_t , t#sector_t , t#gfp_t , int ) 

/* block/blk-core.o */
__tracepoint_block_remap extern s#tracepoint __tracepoint_block_remap 
__tracepoint_block_rq_remap extern s#tracepoint __tracepoint_block_rq_remap 
__tracepoint_block_bio_complete extern s#tracepoint __tracepoint_block_bio_complete 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##kstatfs
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##hd_geometry
s##radix_tree_node
s##tvec_base
s#rchan_buf struct rchan_buf { void * start ; void * data ; t#size_t offset ; t#size_t subbufs_produced ; t#size_t subbufs_consumed ; s#rchan * chan ; t#wait_queue_head_t read_wait ; s#timer_list timer ; s#dentry * dentry ; s#kref kref ; s#page * * page_array ; unsigned int page_count ; unsigned int finalized ; t#size_t * padding ; t#size_t prev_padding ; t#size_t bytes_consumed ; t#size_t early_bytes ; unsigned int cpu ; } 
s#rchan_callbacks struct rchan_callbacks { int ( * subbuf_start ) ( s#rchan_buf * , void * , void * , t#size_t ) ; void ( * buf_mapped ) ( s#rchan_buf * , s#file * ) ; void ( * buf_unmapped ) ( s#rchan_buf * , s#file * ) ; s#dentry * ( * create_buf_file ) ( const char * , s#dentry * , int , s#rchan_buf * , int * ) ; int ( * remove_buf_file ) ( s#dentry * ) ; } 
s#rchan struct rchan { t#u32 version ; t#size_t subbuf_size ; t#size_t n_subbufs ; t#size_t alloc_size ; s#rchan_callbacks * cb ; s#kref kref ; void * private_data ; t#size_t last_toobig ; s#rchan_buf * buf [ 64 ] ; int is_global ; s#list_head list ; s#dentry * parent ; int has_base_filename ; char base_filename [ 255 ] ; } 
s#blk_trace struct blk_trace { int trace_state ; s#rchan * rchan ; unsigned long * sequence ; unsigned char * msg_data ; t#u16 act_mask ; t#u64 start_lba ; t#u64 end_lba ; t#u32 pid ; t#u32 dev ; s#dentry * dir ; s#dentry * dropped_file ; s#dentry * msg_file ; t#atomic_t dropped ; } 
s##timer_rand_state
s##mtd_info
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
blk_get_backing_dev_info extern s#backing_dev_info * blk_get_backing_dev_info ( s#block_device * ) 
blk_rq_init extern void blk_rq_init ( s#request_queue * , s#request * ) 
blk_dump_rq_flags extern void blk_dump_rq_flags ( s#request * , char * ) 
blk_plug_device extern void blk_plug_device ( s#request_queue * ) 
blk_plug_device_unlocked extern void blk_plug_device_unlocked ( s#request_queue * ) 
blk_remove_plug extern int blk_remove_plug ( s#request_queue * ) 
generic_unplug_device extern void generic_unplug_device ( s#request_queue * ) 
blk_unplug extern void blk_unplug ( s#request_queue * ) 
blk_start_queue extern void blk_start_queue ( s#request_queue * ) 
blk_stop_queue extern void blk_stop_queue ( s#request_queue * ) 
blk_sync_queue extern void blk_sync_queue ( s#request_queue * ) 
__blk_run_queue extern void __blk_run_queue ( s#request_queue * ) 
blk_run_queue extern void blk_run_queue ( s#request_queue * ) 
blk_cleanup_queue extern void blk_cleanup_queue ( s#request_queue * ) 
blk_alloc_queue s#request_queue * blk_alloc_queue ( t#gfp_t ) 
blk_alloc_queue_node s#request_queue * blk_alloc_queue_node ( t#gfp_t , int ) 
blk_init_queue extern s#request_queue * blk_init_queue ( t#request_fn_proc * , t#spinlock_t * ) 
blk_init_queue_node extern s#request_queue * blk_init_queue_node ( t#request_fn_proc * , t#spinlock_t * , int ) 
blk_get_request extern s#request * blk_get_request ( s#request_queue * , int , t#gfp_t ) 
blk_make_request extern s#request * blk_make_request ( s#request_queue * , s#bio * , t#gfp_t ) 
blk_requeue_request extern void blk_requeue_request ( s#request_queue * , s#request * ) 
blk_insert_request extern void blk_insert_request ( s#request_queue * , s#request * , int , void * ) 
part_round_stats extern void part_round_stats ( int , s#hd_struct * ) 
__blk_put_request extern void __blk_put_request ( s#request_queue * , s#request * ) 
blk_put_request extern void blk_put_request ( s#request * ) 
generic_make_request extern void generic_make_request ( s#bio * ) 
submit_bio extern void submit_bio ( int , s#bio * ) 
blk_rq_check_limits extern int blk_rq_check_limits ( s#request_queue * , s#request * ) 
blk_insert_cloned_request extern int blk_insert_cloned_request ( s#request_queue * , s#request * ) 
blk_rq_err_bytes extern unsigned int blk_rq_err_bytes ( const s#request * ) 
blk_peek_request extern s#request * blk_peek_request ( s#request_queue * ) 
blk_start_request extern void blk_start_request ( s#request * ) 
blk_fetch_request extern s#request * blk_fetch_request ( s#request_queue * ) 
blk_update_request extern t#bool blk_update_request ( s#request * , int , unsigned int ) 
blk_end_request extern t#bool blk_end_request ( s#request * , int , unsigned int ) 
blk_end_request_all extern void blk_end_request_all ( s#request * , int ) 
blk_end_request_cur extern t#bool blk_end_request_cur ( s#request * , int ) 
blk_end_request_err extern t#bool blk_end_request_err ( s#request * , int ) 
__blk_end_request extern t#bool __blk_end_request ( s#request * , int , unsigned int ) 
__blk_end_request_all extern void __blk_end_request_all ( s#request * , int ) 
__blk_end_request_cur extern t#bool __blk_end_request_cur ( s#request * , int ) 
__blk_end_request_err extern t#bool __blk_end_request_err ( s#request * , int ) 
blk_lld_busy extern int blk_lld_busy ( s#request_queue * ) 
blk_rq_unprep_clone extern void blk_rq_unprep_clone ( s#request * ) 
s#bio_set struct bio_set { s#kmem_cache * bio_slab ; unsigned int front_pad ; t#mempool_t * bio_pool ; t#mempool_t * bio_integrity_pool ; t#mempool_t * bvec_pool ; } 
blk_rq_prep_clone extern int blk_rq_prep_clone ( s#request * , s#request * , s#bio_set * , t#gfp_t , int ( * ) ( s#bio * , s#bio * , void * ) , void * ) 
kblockd_schedule_work int kblockd_schedule_work ( s#request_queue * , s#work_struct * ) 

/* block/blk-exec.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##mtd_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##hd_geometry
s##timer_rand_state
s##blk_trace
blk_execute_rq_nowait extern void blk_execute_rq_nowait ( s#request_queue * , s#gendisk * , s#request * , int , t#rq_end_io_fn * ) 
blk_execute_rq extern int blk_execute_rq ( s#request_queue * , s#gendisk * , s#request * , int ) 

/* block/blk-integrity.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##mtd_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##hd_geometry
s##timer_rand_state
s##blk_trace
blk_rq_count_integrity_sg extern int blk_rq_count_integrity_sg ( s#request * ) 
t#dma_addr_t typedef t#u64 dma_addr_t 
s#scatterlist struct scatterlist { unsigned long page_link ; unsigned int offset ; unsigned int length ; t#dma_addr_t dma_address ; unsigned int dma_length ; } 
blk_rq_map_integrity_sg extern int blk_rq_map_integrity_sg ( s#request * , s#scatterlist * ) 
blk_integrity_compare extern int blk_integrity_compare ( s#gendisk * , s#gendisk * ) 
blk_integrity_register extern int blk_integrity_register ( s#gendisk * , s#blk_integrity * ) 
blk_integrity_unregister extern void blk_integrity_unregister ( s#gendisk * ) 

/* block/blk-ioc.o */
s##radix_tree_node
put_io_context int put_io_context ( s#io_context * ) 
get_io_context s#io_context * get_io_context ( t#gfp_t , int ) 
copy_io_context void copy_io_context ( s#io_context * * , s#io_context * * ) 

/* block/blk-iopoll.o */
blk_iopoll_enabled extern int blk_iopoll_enabled 
t#blk_iopoll_fn typedef int ( blk_iopoll_fn ) ( s#blk_iopoll * , int ) 
s#blk_iopoll struct blk_iopoll { s#list_head list ; unsigned long state ; unsigned long data ; int weight ; int max ; t#blk_iopoll_fn * poll ; } 
blk_iopoll_sched extern void blk_iopoll_sched ( s#blk_iopoll * ) 
__blk_iopoll_complete extern void __blk_iopoll_complete ( s#blk_iopoll * ) 
blk_iopoll_complete extern void blk_iopoll_complete ( s#blk_iopoll * ) 
blk_iopoll_disable extern void blk_iopoll_disable ( s#blk_iopoll * ) 
blk_iopoll_enable extern void blk_iopoll_enable ( s#blk_iopoll * ) 
blk_iopoll_init extern void blk_iopoll_init ( s#blk_iopoll * , int , t#blk_iopoll_fn * ) 

/* block/blk-map.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##mtd_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##hd_geometry
s##timer_rand_state
s##blk_trace
s#rq_map_data struct rq_map_data { s#page * * pages ; int page_order ; int nr_entries ; unsigned long offset ; int null_mapped ; int from_user ; } 
blk_rq_map_user extern int blk_rq_map_user ( s#request_queue * , s#request * , s#rq_map_data * , void * , unsigned long , t#gfp_t ) 
s#sg_iovec struct sg_iovec { void * iov_base ; t#size_t iov_len ; } 
blk_rq_map_user_iov extern int blk_rq_map_user_iov ( s#request_queue * , s#request * , s#rq_map_data * , s#sg_iovec * , int , unsigned int , t#gfp_t ) 
blk_rq_unmap_user extern int blk_rq_unmap_user ( s#bio * ) 
blk_rq_map_kern extern int blk_rq_map_kern ( s#request_queue * , s#request * , void * , unsigned int , t#gfp_t ) 

/* block/blk-merge.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##mtd_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##hd_geometry
s##timer_rand_state
s##blk_trace
blk_recount_segments extern void blk_recount_segments ( s#request_queue * , s#bio * ) 
blk_rq_map_sg extern int blk_rq_map_sg ( s#request_queue * , s#request * , s#scatterlist * ) 

/* block/blk-settings.o */
blk_max_low_pfn extern unsigned long blk_max_low_pfn 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##mtd_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##hd_geometry
s##timer_rand_state
s##blk_trace
blk_queue_prep_rq extern void blk_queue_prep_rq ( s#request_queue * , t#prep_rq_fn * ) 
blk_queue_unprep_rq extern void blk_queue_unprep_rq ( s#request_queue * , t#unprep_rq_fn * ) 
blk_queue_merge_bvec extern void blk_queue_merge_bvec ( s#request_queue * , t#merge_bvec_fn * ) 
blk_queue_softirq_done extern void blk_queue_softirq_done ( s#request_queue * , t#softirq_done_fn * ) 
blk_queue_rq_timeout extern void blk_queue_rq_timeout ( s#request_queue * , unsigned int ) 
blk_queue_rq_timed_out extern void blk_queue_rq_timed_out ( s#request_queue * , t#rq_timed_out_fn * ) 
blk_queue_lld_busy extern void blk_queue_lld_busy ( s#request_queue * , t#lld_busy_fn * ) 
blk_set_default_limits extern void blk_set_default_limits ( s#queue_limits * ) 
blk_queue_make_request extern void blk_queue_make_request ( s#request_queue * , t#make_request_fn * ) 
blk_queue_bounce_limit extern void blk_queue_bounce_limit ( s#request_queue * , t#u64 ) 
blk_queue_max_sectors extern void blk_queue_max_sectors ( s#request_queue * , unsigned int ) 
blk_queue_max_hw_sectors extern void blk_queue_max_hw_sectors ( s#request_queue * , unsigned int ) 
blk_queue_max_discard_sectors extern void blk_queue_max_discard_sectors ( s#request_queue * , unsigned int ) 
blk_queue_max_phys_segments extern void blk_queue_max_phys_segments ( s#request_queue * , unsigned short ) 
blk_queue_max_hw_segments extern void blk_queue_max_hw_segments ( s#request_queue * , unsigned short ) 
blk_queue_max_segment_size extern void blk_queue_max_segment_size ( s#request_queue * , unsigned int ) 
blk_queue_logical_block_size extern void blk_queue_logical_block_size ( s#request_queue * , unsigned short ) 
blk_queue_physical_block_size extern void blk_queue_physical_block_size ( s#request_queue * , unsigned short ) 
blk_queue_alignment_offset extern void blk_queue_alignment_offset ( s#request_queue * , unsigned int ) 
blk_limits_io_min extern void blk_limits_io_min ( s#queue_limits * , unsigned int ) 
blk_queue_io_min extern void blk_queue_io_min ( s#request_queue * , unsigned int ) 
blk_limits_io_opt extern void blk_limits_io_opt ( s#queue_limits * , unsigned int ) 
blk_queue_io_opt extern void blk_queue_io_opt ( s#request_queue * , unsigned int ) 
blk_queue_stack_limits extern void blk_queue_stack_limits ( s#request_queue * , s#request_queue * ) 
blk_stack_limits extern int blk_stack_limits ( s#queue_limits * , s#queue_limits * , t#sector_t ) 
bdev_stack_limits extern int bdev_stack_limits ( s#queue_limits * , s#block_device * , t#sector_t ) 
disk_stack_limits extern void disk_stack_limits ( s#gendisk * , s#block_device * , t#sector_t ) 
blk_queue_dma_pad extern void blk_queue_dma_pad ( s#request_queue * , unsigned int ) 
blk_queue_update_dma_pad extern void blk_queue_update_dma_pad ( s#request_queue * , unsigned int ) 
blk_queue_dma_drain extern int blk_queue_dma_drain ( s#request_queue * , t#dma_drain_needed_fn * , void * , unsigned int ) 
blk_queue_segment_boundary extern void blk_queue_segment_boundary ( s#request_queue * , unsigned long ) 
blk_queue_dma_alignment extern void blk_queue_dma_alignment ( s#request_queue * , int ) 
blk_queue_update_dma_alignment extern void blk_queue_update_dma_alignment ( s#request_queue * , int ) 

/* block/blk-softirq.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##mtd_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##hd_geometry
s##timer_rand_state
s##blk_trace
blk_complete_request extern void blk_complete_request ( s#request * ) 

/* block/blk-tag.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##mtd_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##hd_geometry
s##timer_rand_state
s##blk_trace
blk_queue_find_tag extern s#request * blk_queue_find_tag ( s#request_queue * , int ) 
blk_free_tags extern void blk_free_tags ( s#blk_queue_tag * ) 
blk_queue_free_tags extern void blk_queue_free_tags ( s#request_queue * ) 
blk_init_tags extern s#blk_queue_tag * blk_init_tags ( int ) 
blk_queue_init_tags extern int blk_queue_init_tags ( s#request_queue * , int , s#blk_queue_tag * ) 
blk_queue_resize_tags extern int blk_queue_resize_tags ( s#request_queue * , int ) 
blk_queue_end_tag extern void blk_queue_end_tag ( s#request_queue * , s#request * ) 
blk_queue_start_tag extern int blk_queue_start_tag ( s#request_queue * , s#request * ) 
blk_queue_invalidate_tags extern void blk_queue_invalidate_tags ( s#request_queue * ) 

/* block/blk-timeout.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##mtd_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##hd_geometry
s##timer_rand_state
s##blk_trace
blk_abort_request extern void blk_abort_request ( s#request * ) 
blk_request_aborted extern int blk_request_aborted ( s#request * ) 
blk_abort_queue extern void blk_abort_queue ( s#request_queue * ) 

/* block/bsg.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##mtd_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##posix_acl
s##hd_geometry
s##timer_rand_state
s##blk_trace
bsg_unregister_queue extern void bsg_unregister_queue ( s#request_queue * ) 
bsg_register_queue extern int bsg_register_queue ( s#request_queue * , s#device * , const char * , void ( * ) ( s#device * ) ) 

/* block/elevator.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##mtd_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##cdev
s##posix_acl
s##hd_geometry
s##timer_rand_state
elv_rq_merge_ok extern int elv_rq_merge_ok ( s#request * , s#bio * ) 
elevator_init extern int elevator_init ( s#request_queue * , char * ) 
elevator_exit extern void elevator_exit ( s#elevator_queue * ) 
elv_rb_add extern s#request * elv_rb_add ( s#rb_root * , s#request * ) 
elv_rb_del extern void elv_rb_del ( s#rb_root * , s#request * ) 
elv_rb_find extern s#request * elv_rb_find ( s#rb_root * , t#sector_t ) 
elv_dispatch_sort extern void elv_dispatch_sort ( s#request_queue * , s#request * ) 
elv_dispatch_add_tail extern void elv_dispatch_add_tail ( s#request_queue * , s#request * ) 
__elv_add_request extern void __elv_add_request ( s#request_queue * , s#request * , int , int ) 
elv_add_request extern void elv_add_request ( s#request_queue * , s#request * , int , int ) 
elv_queue_empty extern int elv_queue_empty ( s#request_queue * ) 
elv_abort_queue extern void elv_abort_queue ( s#request_queue * ) 
elv_register extern void elv_register ( s#elevator_type * ) 
elv_unregister extern void elv_unregister ( s#elevator_type * ) 
elv_rb_former_request extern s#request * elv_rb_former_request ( s#request_queue * , s#request * ) 
elv_rb_latter_request extern s#request * elv_rb_latter_request ( s#request_queue * , s#request * ) 

/* block/genhd.o */
blk_mangle_devt extern int blk_mangle_devt 
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##timer_rand_state
s##mtd_info
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
disk_get_part extern s#hd_struct * disk_get_part ( s#gendisk * , int ) 
s#disk_part_iter struct disk_part_iter { s#gendisk * disk ; s#hd_struct * part ; int idx ; unsigned int flags ; } 
disk_part_iter_init extern void disk_part_iter_init ( s#disk_part_iter * , s#gendisk * , unsigned int ) 
disk_part_iter_next extern s#hd_struct * disk_part_iter_next ( s#disk_part_iter * ) 
disk_part_iter_exit extern void disk_part_iter_exit ( s#disk_part_iter * ) 
disk_map_sector_rcu extern s#hd_struct * disk_map_sector_rcu ( s#gendisk * , t#sector_t ) 
register_blkdev extern int register_blkdev ( unsigned int , const char * ) 
unregister_blkdev extern void unregister_blkdev ( unsigned int , const char * ) 
blk_register_region extern void blk_register_region ( t#dev_t , unsigned long , s#module * , s#kobject * ( * ) ( t#dev_t , int * , void * ) , int ( * ) ( t#dev_t , void * ) , void * ) 
blk_unregister_region extern void blk_unregister_region ( t#dev_t , unsigned long ) 
add_disk extern void add_disk ( s#gendisk * ) 
del_gendisk extern void del_gendisk ( s#gendisk * ) 
bdget_disk extern s#block_device * bdget_disk ( s#gendisk * , int ) 
blk_lookup_devt extern t#dev_t blk_lookup_devt ( const char * , int ) 
alloc_disk extern s#gendisk * alloc_disk ( int ) 
alloc_disk_node extern s#gendisk * alloc_disk_node ( int , int ) 
get_disk extern s#kobject * get_disk ( s#gendisk * ) 
put_disk extern void put_disk ( s#gendisk * ) 
set_device_ro extern void set_device_ro ( s#block_device * , int ) 
set_disk_ro extern void set_disk_ro ( s#gendisk * , int ) 
bdev_read_only extern int bdev_read_only ( s#block_device * ) 
invalidate_partition extern int invalidate_partition ( s#gendisk * , int ) 

/* block/ioctl.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##mtd_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##cdev
s##posix_acl
s##timer_rand_state
__blkdev_driver_ioctl extern int __blkdev_driver_ioctl ( s#block_device * , t#fmode_t , unsigned int , unsigned long ) 
blkdev_ioctl extern int blkdev_ioctl ( s#block_device * , t#fmode_t , unsigned , unsigned long ) 

/* block/scsi_ioctl.o */
scsi_command_size_tbl extern const unsigned char scsi_command_size_tbl [ 8 ] 
blk_verify_command extern int blk_verify_command ( unsigned char * , t#fmode_t ) 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##mtd_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##hd_geometry
s##timer_rand_state
s##blk_trace
s#scsi_ioctl_command struct scsi_ioctl_command { unsigned int inlen ; unsigned int outlen ; unsigned char data [ 0 ] ; } 
sg_scsi_ioctl extern int sg_scsi_ioctl ( s#request_queue * , s#gendisk * , t#fmode_t , s#scsi_ioctl_command * ) 
scsi_cmd_ioctl extern int scsi_cmd_ioctl ( s#request_queue * , s#gendisk * , t#fmode_t , unsigned int , void * ) 

/* crypto/ablkcipher.o */
s#skcipher_givcrypt_request struct skcipher_givcrypt_request { t#u64 seq ; t#u8 * giv ; s#ablkcipher_request creq ; } 
s##aead_givcrypt_request
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
crypto_ablkcipher_type extern const s#crypto_type crypto_ablkcipher_type 
crypto_givcipher_type extern const s#crypto_type crypto_givcipher_type 
s#rtattr struct rtattr { unsigned short rta_len ; unsigned short rta_type ; } 
s#crypto_template struct crypto_template { s#list_head list ; s#hlist_head instances ; s#module * module ; s#crypto_instance * ( * alloc ) ( s#rtattr * * ) ; void ( * free ) ( s#crypto_instance * ) ; int ( * create ) ( s#crypto_template * , s#rtattr * * ) ; char name [ 64 ] ; } 
s#crypto_instance struct crypto_instance { s#crypto_alg alg ; s#crypto_template * tmpl ; s#hlist_node list ; void * __ctx [ ] __attribute__ ( ( __aligned__ ( __alignof__ ( unsigned long long ) ) ) ) ; } 
s#crypto_spawn struct crypto_spawn { s#list_head list ; s#crypto_alg * alg ; s#crypto_instance * inst ; const s#crypto_type * frontend ; t#u32 mask ; } 
s#crypto_skcipher_spawn struct crypto_skcipher_spawn { s#crypto_spawn base ; } 
crypto_grab_skcipher int crypto_grab_skcipher ( s#crypto_skcipher_spawn * , const char * , t#u32 , t#u32 ) 
crypto_alloc_ablkcipher s#crypto_ablkcipher * crypto_alloc_ablkcipher ( const char * , t#u32 , t#u32 ) 

/* crypto/aead.o */
s##skcipher_givcrypt_request
s#aead_givcrypt_request struct aead_givcrypt_request { t#u64 seq ; t#u8 * giv ; s#aead_request areq ; } 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
crypto_aead_setauthsize int crypto_aead_setauthsize ( s#crypto_aead * , unsigned int ) 
crypto_aead_type extern const s#crypto_type crypto_aead_type 
crypto_nivaead_type extern const s#crypto_type crypto_nivaead_type 
aead_geniv_alloc s#crypto_instance * aead_geniv_alloc ( s#crypto_template * , s#rtattr * * , t#u32 , t#u32 ) 
aead_geniv_free void aead_geniv_free ( s#crypto_instance * ) 
aead_geniv_init int aead_geniv_init ( s#crypto_tfm * ) 
aead_geniv_exit void aead_geniv_exit ( s#crypto_tfm * ) 
s#crypto_aead_spawn struct crypto_aead_spawn { s#crypto_spawn base ; } 
crypto_grab_aead int crypto_grab_aead ( s#crypto_aead_spawn * , const char * , t#u32 , t#u32 ) 
crypto_alloc_aead s#crypto_aead * crypto_alloc_aead ( const char * , t#u32 , t#u32 ) 

/* crypto/aes_generic.o */
crypto_ft_tab extern const t#u32 crypto_ft_tab [ 4 ] [ 256 ] 
crypto_fl_tab extern const t#u32 crypto_fl_tab [ 4 ] [ 256 ] 
crypto_it_tab extern const t#u32 crypto_it_tab [ 4 ] [ 256 ] 
crypto_il_tab extern const t#u32 crypto_il_tab [ 4 ] [ 256 ] 
s#crypto_aes_ctx struct crypto_aes_ctx { t#u32 key_enc [ ( ( 15 * 16 ) / sizeof ( u32 ) ) ] ; t#u32 key_dec [ ( ( 15 * 16 ) / sizeof ( u32 ) ) ] ; t#u32 key_length ; } 
crypto_aes_expand_key int crypto_aes_expand_key ( s#crypto_aes_ctx * , const t#u8 * , unsigned int ) 
s##scatterlist
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s##crypto_type
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##file
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##exec_domain
s##compat_timespec
s##pollfd
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
crypto_aes_set_key int crypto_aes_set_key ( s#crypto_tfm * , const t#u8 * , unsigned int ) 

/* crypto/ahash.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s#crypto_hash_walk struct crypto_hash_walk { char * data ; unsigned int offset ; unsigned int alignmask ; s#page * pg ; unsigned int entrylen ; unsigned int total ; s#scatterlist * sg ; unsigned int flags ; } 
crypto_hash_walk_done int crypto_hash_walk_done ( s#crypto_hash_walk * , int ) 
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s#ahash_request struct ahash_request { s#crypto_async_request base ; unsigned int nbytes ; s#scatterlist * src ; t#u8 * result ; void * priv ; void * __ctx [ ] __attribute__ ( ( __aligned__ ( __alignof__ ( unsigned long long ) ) ) ) ; } 
crypto_hash_walk_first int crypto_hash_walk_first ( s#ahash_request * , s#crypto_hash_walk * ) 
s#crypto_ahash struct crypto_ahash { int ( * init ) ( s#ahash_request * ) ; int ( * update ) ( s#ahash_request * ) ; int ( * final ) ( s#ahash_request * ) ; int ( * finup ) ( s#ahash_request * ) ; int ( * digest ) ( s#ahash_request * ) ; int ( * export ) ( s#ahash_request * , void * ) ; int ( * import ) ( s#ahash_request * , const void * ) ; int ( * setkey ) ( s#crypto_ahash * , const t#u8 * , unsigned int ) ; unsigned int reqsize ; s#crypto_tfm base ; } 
crypto_ahash_setkey int crypto_ahash_setkey ( s#crypto_ahash * , const t#u8 * , unsigned int ) 
crypto_ahash_final int crypto_ahash_final ( s#ahash_request * ) 
crypto_ahash_finup int crypto_ahash_finup ( s#ahash_request * ) 
crypto_ahash_digest int crypto_ahash_digest ( s#ahash_request * ) 
crypto_ahash_type extern const s#crypto_type crypto_ahash_type 
crypto_alloc_ahash s#crypto_ahash * crypto_alloc_ahash ( const char * , t#u32 , t#u32 ) 
s#hash_alg_common struct hash_alg_common { unsigned int digestsize ; unsigned int statesize ; s#crypto_alg base ; } 
s#ahash_alg struct ahash_alg { int ( * init ) ( s#ahash_request * ) ; int ( * update ) ( s#ahash_request * ) ; int ( * final ) ( s#ahash_request * ) ; int ( * finup ) ( s#ahash_request * ) ; int ( * digest ) ( s#ahash_request * ) ; int ( * export ) ( s#ahash_request * , void * ) ; int ( * import ) ( s#ahash_request * , const void * ) ; int ( * setkey ) ( s#crypto_ahash * , const t#u8 * , unsigned int ) ; s#hash_alg_common halg ; } 
crypto_register_ahash int crypto_register_ahash ( s#ahash_alg * ) 
crypto_unregister_ahash int crypto_unregister_ahash ( s#ahash_alg * ) 
s##rtattr
s#ahash_instance struct ahash_instance { s#ahash_alg alg ; } 
ahash_register_instance int ahash_register_instance ( s#crypto_template * , s#ahash_instance * ) 
ahash_free_instance void ahash_free_instance ( s#crypto_instance * ) 
s#crypto_ahash_spawn struct crypto_ahash_spawn { s#crypto_spawn base ; } 
crypto_init_ahash_spawn int crypto_init_ahash_spawn ( s#crypto_ahash_spawn * , s#hash_alg_common * , s#crypto_instance * ) 
ahash_attr_alg s#hash_alg_common * ahash_attr_alg ( s#rtattr * , t#u32 , t#u32 ) 

/* crypto/algapi.o */
crypto_larval_error void crypto_larval_error ( const char * , t#u32 , t#u32 ) 
crypto_alg_tested void crypto_alg_tested ( const char * , int ) 
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s##seq_file
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
crypto_register_alg int crypto_register_alg ( s#crypto_alg * ) 
crypto_unregister_alg int crypto_unregister_alg ( s#crypto_alg * ) 
crypto_register_template int crypto_register_template ( s#crypto_template * ) 
crypto_unregister_template void crypto_unregister_template ( s#crypto_template * ) 
crypto_lookup_template s#crypto_template * crypto_lookup_template ( const char * ) 
crypto_register_instance int crypto_register_instance ( s#crypto_template * , s#crypto_instance * ) 
crypto_init_spawn int crypto_init_spawn ( s#crypto_spawn * , s#crypto_alg * , s#crypto_instance * , t#u32 ) 
crypto_init_spawn2 int crypto_init_spawn2 ( s#crypto_spawn * , s#crypto_alg * , s#crypto_instance * , const s#crypto_type * ) 
crypto_drop_spawn void crypto_drop_spawn ( s#crypto_spawn * ) 
crypto_spawn_tfm s#crypto_tfm * crypto_spawn_tfm ( s#crypto_spawn * , t#u32 , t#u32 ) 
crypto_spawn_tfm2 void * crypto_spawn_tfm2 ( s#crypto_spawn * ) 
s#notifier_block struct notifier_block { int ( * notifier_call ) ( s#notifier_block * , unsigned long , void * ) ; s#notifier_block * next ; int priority ; } 
crypto_register_notifier int crypto_register_notifier ( s#notifier_block * ) 
crypto_unregister_notifier int crypto_unregister_notifier ( s#notifier_block * ) 
s#crypto_attr_type struct crypto_attr_type { t#u32 type ; t#u32 mask ; } 
crypto_get_attr_type s#crypto_attr_type * crypto_get_attr_type ( s#rtattr * * ) 
crypto_check_attr_type int crypto_check_attr_type ( s#rtattr * * , t#u32 ) 
crypto_attr_alg_name const char * crypto_attr_alg_name ( s#rtattr * ) 
crypto_attr_alg2 s#crypto_alg * crypto_attr_alg2 ( s#rtattr * , const s#crypto_type * , t#u32 , t#u32 ) 
crypto_attr_u32 int crypto_attr_u32 ( s#rtattr * , t#u32 * ) 
crypto_alloc_instance2 void * crypto_alloc_instance2 ( const char * , s#crypto_alg * , unsigned int ) 
crypto_alloc_instance s#crypto_instance * crypto_alloc_instance ( const char * , s#crypto_alg * ) 
s#crypto_queue struct crypto_queue { s#list_head list ; s#list_head * backlog ; unsigned int qlen ; unsigned int max_qlen ; } 
crypto_init_queue void crypto_init_queue ( s#crypto_queue * , unsigned int ) 
crypto_enqueue_request int crypto_enqueue_request ( s#crypto_queue * , s#crypto_async_request * ) 
__crypto_dequeue_request void * __crypto_dequeue_request ( s#crypto_queue * , unsigned int ) 
crypto_dequeue_request s#crypto_async_request * crypto_dequeue_request ( s#crypto_queue * ) 
crypto_tfm_in_queue int crypto_tfm_in_queue ( s#crypto_queue * , s#crypto_tfm * ) 
crypto_inc void crypto_inc ( t#u8 * , unsigned int ) 
crypto_xor void crypto_xor ( t#u8 * , const t#u8 * , unsigned int ) 

/* crypto/api.o */
crypto_alg_list extern s#list_head crypto_alg_list 
crypto_alg_sem extern s#rw_semaphore crypto_alg_sem 
s#blocking_notifier_head struct blocking_notifier_head { s#rw_semaphore rwsem ; s#notifier_block * head ; } 
crypto_chain extern s#blocking_notifier_head crypto_chain 
s##scatterlist
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s##seq_file
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
crypto_mod_get s#crypto_alg * crypto_mod_get ( s#crypto_alg * ) 
crypto_mod_put void crypto_mod_put ( s#crypto_alg * ) 
s#crypto_larval struct crypto_larval { s#crypto_alg alg ; s#crypto_alg * adult ; s#completion completion ; t#u32 mask ; } 
crypto_larval_alloc s#crypto_larval * crypto_larval_alloc ( const char * , t#u32 , t#u32 ) 
crypto_larval_kill void crypto_larval_kill ( s#crypto_alg * ) 
crypto_alg_lookup s#crypto_alg * crypto_alg_lookup ( const char * , t#u32 , t#u32 ) 
crypto_larval_lookup s#crypto_alg * crypto_larval_lookup ( const char * , t#u32 , t#u32 ) 
crypto_probing_notify int crypto_probing_notify ( unsigned long , void * ) 
crypto_alg_mod_lookup s#crypto_alg * crypto_alg_mod_lookup ( const char * , t#u32 , t#u32 ) 
crypto_shoot_alg void crypto_shoot_alg ( s#crypto_alg * ) 
__crypto_alloc_tfm s#crypto_tfm * __crypto_alloc_tfm ( s#crypto_alg * , t#u32 , t#u32 ) 
crypto_alloc_base s#crypto_tfm * crypto_alloc_base ( const char * , t#u32 , t#u32 ) 
crypto_create_tfm void * crypto_create_tfm ( s#crypto_alg * , const s#crypto_type * ) 
crypto_find_alg s#crypto_alg * crypto_find_alg ( const char * , const s#crypto_type * , t#u32 , t#u32 ) 
crypto_alloc_tfm void * crypto_alloc_tfm ( const char * , const s#crypto_type * , t#u32 , t#u32 ) 
crypto_destroy_tfm void crypto_destroy_tfm ( void * , s#crypto_tfm * ) 
crypto_has_alg int crypto_has_alg ( const char * , t#u32 , t#u32 ) 

/* crypto/async_tx/async_memcpy.o */
t#dma_cookie_t typedef t#s32 dma_cookie_t 
e#dma_ctrl_flags enum dma_ctrl_flags { DMA_PREP_INTERRUPT = ( 1 << 0 ) , DMA_CTRL_ACK = ( 1 << 1 ) , DMA_COMPL_SKIP_SRC_UNMAP = ( 1 << 2 ) , DMA_COMPL_SKIP_DEST_UNMAP = ( 1 << 3 ) , DMA_COMPL_SRC_UNMAP_SINGLE = ( 1 << 4 ) , DMA_COMPL_DEST_UNMAP_SINGLE = ( 1 << 5 ) , DMA_PREP_PQ_DISABLE_P = ( 1 << 6 ) , DMA_PREP_PQ_DISABLE_Q = ( 1 << 7 ) , DMA_PREP_CONTINUE = ( 1 << 8 ) , DMA_PREP_FENCE = ( 1 << 9 ) , } 
t#dma_cap_mask_t typedef struct { unsigned long bits [ ( ( ( ( DMA_SLAVE + 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; } dma_cap_mask_t 
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
e#sum_check_flags enum sum_check_flags { SUM_CHECK_P_RESULT = ( 1 << SUM_CHECK_P ) , SUM_CHECK_Q_RESULT = ( 1 << SUM_CHECK_Q ) , } 
e#dma_data_direction enum dma_data_direction { DMA_BIDIRECTIONAL = 0 , DMA_TO_DEVICE = 1 , DMA_FROM_DEVICE = 2 , DMA_NONE = 3 , } 
e#dma_status enum dma_status { DMA_SUCCESS , DMA_IN_PROGRESS , DMA_ERROR , } 
s#dma_device struct dma_device { unsigned int chancnt ; unsigned int privatecnt ; s#list_head channels ; s#list_head global_node ; t#dma_cap_mask_t cap_mask ; unsigned short max_xor ; unsigned short max_pq ; t#u8 copy_align ; t#u8 xor_align ; t#u8 pq_align ; t#u8 fill_align ; int dev_id ; s#device * dev ; int ( * device_alloc_chan_resources ) ( s#dma_chan * ) ; void ( * device_free_chan_resources ) ( s#dma_chan * ) ; s#dma_async_tx_descriptor * ( * device_prep_dma_memcpy ) ( s#dma_chan * , t#dma_addr_t , t#dma_addr_t , t#size_t , unsigned long ) ; s#dma_async_tx_descriptor * ( * device_prep_dma_xor ) ( s#dma_chan * , t#dma_addr_t , t#dma_addr_t * , unsigned int , t#size_t , unsigned long ) ; s#dma_async_tx_descriptor * ( * device_prep_dma_xor_val ) ( s#dma_chan * , t#dma_addr_t * , unsigned int , t#size_t , e#sum_check_flags * , unsigned long ) ; s#dma_async_tx_descriptor * ( * device_prep_dma_pq ) ( s#dma_chan * , t#dma_addr_t * , t#dma_addr_t * , unsigned int , const unsigned char * , t#size_t , unsigned long ) ; s#dma_async_tx_descriptor * ( * device_prep_dma_pq_val ) ( s#dma_chan * , t#dma_addr_t * , t#dma_addr_t * , unsigned int , const unsigned char * , t#size_t , e#sum_check_flags * , unsigned long ) ; s#dma_async_tx_descriptor * ( * device_prep_dma_memset ) ( s#dma_chan * , t#dma_addr_t , int , t#size_t , unsigned long ) ; s#dma_async_tx_descriptor * ( * device_prep_dma_interrupt ) ( s#dma_chan * , unsigned long ) ; s#dma_async_tx_descriptor * ( * device_prep_slave_sg ) ( s#dma_chan * , s#scatterlist * , unsigned int , e#dma_data_direction , unsigned long ) ; void ( * device_terminate_all ) ( s#dma_chan * ) ; e#dma_status ( * device_is_tx_complete ) ( s#dma_chan * , t#dma_cookie_t , t#dma_cookie_t * , t#dma_cookie_t * ) ; void ( * device_issue_pending ) ( s#dma_chan * ) ; } 
s#dma_chan_dev struct dma_chan_dev { s#dma_chan * chan ; s#device device ; int dev_id ; t#atomic_t * idr_ref ; } 
s#dma_chan_percpu struct dma_chan_percpu { unsigned long memcpy_count ; unsigned long bytes_transferred ; } 
s#dma_chan struct dma_chan { s#dma_device * device ; t#dma_cookie_t cookie ; int chan_id ; s#dma_chan_dev * dev ; s#list_head device_node ; s#dma_chan_percpu * local ; int client_count ; int table_count ; void * private ; } 
t#dma_async_tx_callback typedef void ( * dma_async_tx_callback ) ( void * ) 
s#dma_async_tx_descriptor struct dma_async_tx_descriptor { t#dma_cookie_t cookie ; e#dma_ctrl_flags flags ; t#dma_addr_t phys ; s#dma_chan * chan ; t#dma_cookie_t ( * tx_submit ) ( s#dma_async_tx_descriptor * ) ; t#dma_async_tx_callback callback ; void * callback_param ; s#dma_async_tx_descriptor * next ; s#dma_async_tx_descriptor * parent ; t#spinlock_t lock ; } 
e#async_tx_flags enum async_tx_flags { ASYNC_TX_XOR_ZERO_DST = ( 1 << 0 ) , ASYNC_TX_XOR_DROP_DST = ( 1 << 1 ) , ASYNC_TX_ACK = ( 1 << 2 ) , ASYNC_TX_FENCE = ( 1 << 3 ) , } 
s#async_submit_ctl struct async_submit_ctl { e#async_tx_flags flags ; s#dma_async_tx_descriptor * depend_tx ; t#dma_async_tx_callback cb_fn ; void * cb_param ; void * scribble ; } 
async_memcpy s#dma_async_tx_descriptor * async_memcpy ( s#page * , s#page * , unsigned int , unsigned int , t#size_t , s#async_submit_ctl * ) 

/* crypto/async_tx/async_pq.o */
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##timer_rand_state
s##mtd_info
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
async_gen_syndrome s#dma_async_tx_descriptor * async_gen_syndrome ( s#page * * , unsigned int , int , t#size_t , s#async_submit_ctl * ) 
async_syndrome_val s#dma_async_tx_descriptor * async_syndrome_val ( s#page * * , unsigned int , int , t#size_t , e#sum_check_flags * , s#page * , s#async_submit_ctl * ) 

/* crypto/async_tx/async_raid6_recov.o */
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##timer_rand_state
s##mtd_info
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
async_raid6_2data_recov s#dma_async_tx_descriptor * async_raid6_2data_recov ( int , t#size_t , int , int , s#page * * , s#async_submit_ctl * ) 
async_raid6_datap_recov s#dma_async_tx_descriptor * async_raid6_datap_recov ( int , t#size_t , int , s#page * * , s#async_submit_ctl * ) 

/* crypto/async_tx/async_tx.o */
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##file
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##exec_domain
s##compat_timespec
s##pollfd
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
async_tx_submit void async_tx_submit ( s#dma_chan * , s#dma_async_tx_descriptor * , s#async_submit_ctl * ) 
async_trigger_callback s#dma_async_tx_descriptor * async_trigger_callback ( s#async_submit_ctl * ) 
async_tx_quiesce void async_tx_quiesce ( s#dma_async_tx_descriptor * * ) 

/* crypto/async_tx/async_xor.o */
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##file
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##exec_domain
s##compat_timespec
s##pollfd
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
async_xor s#dma_async_tx_descriptor * async_xor ( s#page * , s#page * * , unsigned int , int , t#size_t , s#async_submit_ctl * ) 
async_xor_val s#dma_async_tx_descriptor * async_xor_val ( s#page * , s#page * * , unsigned int , int , t#size_t , e#sum_check_flags * , s#async_submit_ctl * ) 

/* crypto/blkcipher.o */
s##aead_givcrypt_request
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s#scatter_walk struct scatter_walk { s#scatterlist * sg ; unsigned int offset ; } 
s#blkcipher_walk struct blkcipher_walk { union { struct { s#page * page ; unsigned long offset ; } phys ; struct { t#u8 * page ; t#u8 * addr ; } virt ; } src , dst ; s#scatter_walk in ; unsigned int nbytes ; s#scatter_walk out ; unsigned int total ; void * page ; t#u8 * buffer ; t#u8 * iv ; int flags ; unsigned int blocksize ; } 
blkcipher_walk_done int blkcipher_walk_done ( s#blkcipher_desc * , s#blkcipher_walk * , int ) 
blkcipher_walk_virt int blkcipher_walk_virt ( s#blkcipher_desc * , s#blkcipher_walk * ) 
blkcipher_walk_phys int blkcipher_walk_phys ( s#blkcipher_desc * , s#blkcipher_walk * ) 
blkcipher_walk_virt_block int blkcipher_walk_virt_block ( s#blkcipher_desc * , s#blkcipher_walk * , unsigned int ) 
crypto_blkcipher_type extern const s#crypto_type crypto_blkcipher_type 
s##rtattr
skcipher_geniv_alloc s#crypto_instance * skcipher_geniv_alloc ( s#crypto_template * , s#rtattr * * , t#u32 , t#u32 ) 
skcipher_geniv_free void skcipher_geniv_free ( s#crypto_instance * ) 
skcipher_geniv_init int skcipher_geniv_init ( s#crypto_tfm * ) 
skcipher_geniv_exit void skcipher_geniv_exit ( s#crypto_tfm * ) 

/* crypto/cryptd.o */
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s##seq_file
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##file
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##exec_domain
s##compat_timespec
s##pollfd
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s#cryptd_ablkcipher struct cryptd_ablkcipher { s#crypto_ablkcipher base ; } 
cryptd_alloc_ablkcipher s#cryptd_ablkcipher * cryptd_alloc_ablkcipher ( const char * , t#u32 , t#u32 ) 
cryptd_ablkcipher_child s#crypto_blkcipher * cryptd_ablkcipher_child ( s#cryptd_ablkcipher * ) 
cryptd_free_ablkcipher void cryptd_free_ablkcipher ( s#cryptd_ablkcipher * ) 
s#cryptd_ahash struct cryptd_ahash { s#crypto_ahash base ; } 
cryptd_alloc_ahash s#cryptd_ahash * cryptd_alloc_ahash ( const char * , t#u32 , t#u32 ) 
cryptd_ahash_child s#crypto_shash * cryptd_ahash_child ( s#cryptd_ahash * ) 
cryptd_shash_desc s#shash_desc * cryptd_shash_desc ( s#ahash_request * ) 
cryptd_free_ahash void cryptd_free_ahash ( s#cryptd_ahash * ) 

/* crypto/crypto_wq.o */
s##workqueue_struct
kcrypto_wq extern s#workqueue_struct * kcrypto_wq 

/* crypto/des_generic.o */
des_ekey extern unsigned long des_ekey ( t#u32 * , const t#u8 * ) 

/* crypto/fips.o */
fips_enabled extern int fips_enabled 

/* crypto/gf128mul.o */
t#__be64 typedef t#__u64 __be64 
t#be128 typedef struct { t#__be64 a , b ; } be128 
gf128mul_x_ble void gf128mul_x_ble ( t#be128 * , const t#be128 * ) 
gf128mul_lle void gf128mul_lle ( t#be128 * , const t#be128 * ) 
gf128mul_bbe void gf128mul_bbe ( t#be128 * , const t#be128 * ) 
s#gf128mul_4k struct gf128mul_4k { t#be128 t [ 256 ] ; } 
s#gf128mul_64k struct gf128mul_64k { s#gf128mul_4k * t [ 16 ] ; } 
gf128mul_init_64k_lle s#gf128mul_64k * gf128mul_init_64k_lle ( const t#be128 * ) 
gf128mul_init_64k_bbe s#gf128mul_64k * gf128mul_init_64k_bbe ( const t#be128 * ) 
gf128mul_free_64k void gf128mul_free_64k ( s#gf128mul_64k * ) 
gf128mul_64k_lle void gf128mul_64k_lle ( t#be128 * , s#gf128mul_64k * ) 
gf128mul_64k_bbe void gf128mul_64k_bbe ( t#be128 * , s#gf128mul_64k * ) 
gf128mul_init_4k_lle s#gf128mul_4k * gf128mul_init_4k_lle ( const t#be128 * ) 
gf128mul_init_4k_bbe s#gf128mul_4k * gf128mul_init_4k_bbe ( const t#be128 * ) 
gf128mul_4k_lle void gf128mul_4k_lle ( t#be128 * , s#gf128mul_4k * ) 
gf128mul_4k_bbe void gf128mul_4k_bbe ( t#be128 * , s#gf128mul_4k * ) 

/* crypto/pcompress.o */
s##scatterlist
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s#crypto_pcomp struct crypto_pcomp { s#crypto_tfm base ; } 
crypto_alloc_pcomp extern s#crypto_pcomp * crypto_alloc_pcomp ( const char * , t#u32 , t#u32 ) 
s#comp_request struct comp_request { const void * next_in ; void * next_out ; unsigned int avail_in ; unsigned int avail_out ; } 
s#pcomp_alg struct pcomp_alg { int ( * compress_setup ) ( s#crypto_pcomp * , void * , unsigned int ) ; int ( * compress_init ) ( s#crypto_pcomp * ) ; int ( * compress_update ) ( s#crypto_pcomp * , s#comp_request * ) ; int ( * compress_final ) ( s#crypto_pcomp * , s#comp_request * ) ; int ( * decompress_setup ) ( s#crypto_pcomp * , void * , unsigned int ) ; int ( * decompress_init ) ( s#crypto_pcomp * ) ; int ( * decompress_update ) ( s#crypto_pcomp * , s#comp_request * ) ; int ( * decompress_final ) ( s#crypto_pcomp * , s#comp_request * ) ; s#crypto_alg base ; } 
crypto_register_pcomp extern int crypto_register_pcomp ( s#pcomp_alg * ) 
crypto_unregister_pcomp extern int crypto_unregister_pcomp ( s#pcomp_alg * ) 

/* crypto/rng.o */
s##scatterlist
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##file
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
crypto_default_rng extern s#crypto_rng * crypto_default_rng 
crypto_rng_type extern const s#crypto_type crypto_rng_type 
crypto_get_default_rng int crypto_get_default_rng ( void ) 
crypto_put_default_rng void crypto_put_default_rng ( void ) 

/* crypto/scatterwalk.o */
scatterwalk_start void scatterwalk_start ( s#scatter_walk * , s#scatterlist * ) 
scatterwalk_map void * scatterwalk_map ( s#scatter_walk * , int ) 
scatterwalk_done void scatterwalk_done ( s#scatter_walk * , int , int ) 
scatterwalk_copychunks void scatterwalk_copychunks ( void * , s#scatter_walk * , t#size_t , int ) 
scatterwalk_map_and_copy void scatterwalk_map_and_copy ( void * , s#scatterlist * , unsigned int , unsigned int , int ) 

/* crypto/shash.o */
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
crypto_shash_setkey int crypto_shash_setkey ( s#crypto_shash * , const t#u8 * , unsigned int ) 
crypto_shash_update int crypto_shash_update ( s#shash_desc * , const t#u8 * , unsigned int ) 
crypto_shash_final int crypto_shash_final ( s#shash_desc * , t#u8 * ) 
crypto_shash_finup int crypto_shash_finup ( s#shash_desc * , const t#u8 * , unsigned int , t#u8 * ) 
crypto_shash_digest int crypto_shash_digest ( s#shash_desc * , const t#u8 * , unsigned int , t#u8 * ) 
shash_ahash_update int shash_ahash_update ( s#ahash_request * , s#shash_desc * ) 
shash_ahash_finup int shash_ahash_finup ( s#ahash_request * , s#shash_desc * ) 
shash_ahash_digest int shash_ahash_digest ( s#ahash_request * , s#shash_desc * ) 
crypto_alloc_shash s#crypto_shash * crypto_alloc_shash ( const char * , t#u32 , t#u32 ) 
s#shash_alg struct shash_alg { int ( * init ) ( s#shash_desc * ) ; int ( * update ) ( s#shash_desc * , const t#u8 * , unsigned int ) ; int ( * final ) ( s#shash_desc * , t#u8 * ) ; int ( * finup ) ( s#shash_desc * , const t#u8 * , unsigned int , t#u8 * ) ; int ( * digest ) ( s#shash_desc * , const t#u8 * , unsigned int , t#u8 * ) ; int ( * export ) ( s#shash_desc * , void * ) ; int ( * import ) ( s#shash_desc * , const void * ) ; int ( * setkey ) ( s#crypto_shash * , const t#u8 * , unsigned int ) ; unsigned int descsize ; unsigned int digestsize __attribute__ ( ( aligned ( __alignof__ ( struct hash_alg_common ) ) ) ) ; unsigned int statesize ; s#crypto_alg base ; } 
crypto_register_shash int crypto_register_shash ( s#shash_alg * ) 
crypto_unregister_shash int crypto_unregister_shash ( s#shash_alg * ) 
s##rtattr
s#shash_instance struct shash_instance { s#shash_alg alg ; } 
shash_register_instance int shash_register_instance ( s#crypto_template * , s#shash_instance * ) 
shash_free_instance void shash_free_instance ( s#crypto_instance * ) 
s#crypto_shash_spawn struct crypto_shash_spawn { s#crypto_spawn base ; } 
crypto_init_shash_spawn int crypto_init_shash_spawn ( s#crypto_shash_spawn * , s#shash_alg * , s#crypto_instance * ) 
shash_attr_alg s#shash_alg * shash_attr_alg ( s#rtattr * , t#u32 , t#u32 ) 

/* crypto/testmgr.o */
alg_test int alg_test ( const char * , const char * , t#u32 , t#u32 ) 

/* crypto/twofish_common.o */
s##scatterlist
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s##crypto_type
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##file
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##exec_domain
s##compat_timespec
s##pollfd
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
twofish_setkey int twofish_setkey ( s#crypto_tfm * , const t#u8 * , unsigned int ) 

/* crypto/xor.o */
xor_blocks extern void xor_blocks ( unsigned int , unsigned int , void * , void * * ) 

/* drivers/base/attribute_container.o */
s#klist struct klist { t#spinlock_t k_lock ; s#list_head k_list ; void ( * get ) ( s#klist_node * ) ; void ( * put ) ( s#klist_node * ) ; } 
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##file
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##exec_domain
s##compat_timespec
s##pollfd
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s#device_private struct device_private { s#klist klist_children ; s#klist_node knode_parent ; s#klist_node knode_driver ; s#klist_node knode_bus ; void * driver_data ; s#device * device ; } 
s#driver_private struct driver_private { s#kobject kobj ; s#klist klist_devices ; s#klist_node knode_bus ; s#module_kobject * mkobj ; s#device_driver * driver ; } 
s#bus_type_private struct bus_type_private { s#kset subsys ; s#kset * drivers_kset ; s#kset * devices_kset ; s#klist klist_devices ; s#klist klist_drivers ; s#blocking_notifier_head bus_notifier ; unsigned int drivers_autoprobe : 1 ; s#bus_type * bus ; } 
s##dma_coherent_mem
s#class_private struct class_private { s#kset class_subsys ; s#klist class_devices ; s#list_head class_interfaces ; s#kset class_dirs ; s#mutex class_mutex ; s#class * class ; } 
s#attribute_container struct attribute_container { s#list_head node ; s#klist containers ; s#class * class ; const s#attribute_group * grp ; s#device_attribute * * attrs ; int ( * match ) ( s#attribute_container * , s#device * ) ; unsigned long flags ; } 
attribute_container_classdev_to_container s#attribute_container * attribute_container_classdev_to_container ( s#device * ) 
attribute_container_register int attribute_container_register ( s#attribute_container * ) 
attribute_container_unregister int attribute_container_unregister ( s#attribute_container * ) 
attribute_container_find_class_device s#device * attribute_container_find_class_device ( s#attribute_container * , s#device * ) 

/* drivers/base/bus.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##file
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##exec_domain
s##compat_timespec
s##pollfd
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##dma_coherent_mem
bus_create_file extern int bus_create_file ( s#bus_type * , s#bus_attribute * ) 
bus_remove_file extern void bus_remove_file ( s#bus_type * , s#bus_attribute * ) 
bus_for_each_dev int bus_for_each_dev ( s#bus_type * , s#device * , void * , int ( * ) ( s#device * , void * ) ) 
bus_find_device s#device * bus_find_device ( s#bus_type * , s#device * , void * , int ( * ) ( s#device * , void * ) ) 
bus_find_device_by_name s#device * bus_find_device_by_name ( s#bus_type * , s#device * , const char * ) 
bus_for_each_drv int bus_for_each_drv ( s#bus_type * , s#device_driver * , void * , int ( * ) ( s#device_driver * , void * ) ) 
bus_rescan_devices extern int bus_rescan_devices ( s#bus_type * ) 
device_reprobe extern int device_reprobe ( s#device * ) 
bus_register extern int bus_register ( s#bus_type * ) 
bus_unregister extern void bus_unregister ( s#bus_type * ) 
bus_register_notifier extern int bus_register_notifier ( s#bus_type * , s#notifier_block * ) 
bus_unregister_notifier extern int bus_unregister_notifier ( s#bus_type * , s#notifier_block * ) 
bus_get_kset extern s#kset * bus_get_kset ( s#bus_type * ) 
bus_get_device_klist extern s#klist * bus_get_device_klist ( s#bus_type * ) 
bus_sort_breadthfirst void bus_sort_breadthfirst ( s#bus_type * , int ( * ) ( const s#device * , const s#device * ) ) 

/* drivers/base/class.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##dma_coherent_mem
s##block_device_operations
s##request_queue
s##timer_rand_state
s##blk_integrity
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
__class_register extern int __class_register ( s#class * , s#lock_class_key * ) 
__class_create extern s#class * __class_create ( s#module * , const char * , s#lock_class_key * ) 
s#klist_iter struct klist_iter { s#klist * i_klist ; s#klist_node * i_cur ; } 
s#class_dev_iter struct class_dev_iter { s#klist_iter ki ; const s#device_type * type ; } 
class_dev_iter_init extern void class_dev_iter_init ( s#class_dev_iter * , s#class * , s#device * , const s#device_type * ) 
class_dev_iter_next extern s#device * class_dev_iter_next ( s#class_dev_iter * ) 
class_dev_iter_exit extern void class_dev_iter_exit ( s#class_dev_iter * ) 
class_for_each_device extern int class_for_each_device ( s#class * , s#device * , void * , int ( * ) ( s#device * , void * ) ) 
class_find_device extern s#device * class_find_device ( s#class * , s#device * , void * , int ( * ) ( s#device * , void * ) ) 
s#class_compat struct class_compat { s#kobject * kobj ; } 
class_compat_register s#class_compat * class_compat_register ( const char * ) 
class_compat_unregister void class_compat_unregister ( s#class_compat * ) 
class_compat_create_link int class_compat_create_link ( s#class_compat * , s#device * , s#device * ) 
class_compat_remove_link void class_compat_remove_link ( s#class_compat * , s#device * , s#device * ) 
class_create_file extern int class_create_file ( s#class * , const s#class_attribute * ) 
class_remove_file extern void class_remove_file ( s#class * , const s#class_attribute * ) 
class_unregister extern void class_unregister ( s#class * ) 
class_destroy extern void class_destroy ( s#class * ) 
s#class_interface struct class_interface { s#list_head node ; s#class * class ; int ( * add_dev ) ( s#device * , s#class_interface * ) ; void ( * remove_dev ) ( s#device * , s#class_interface * ) ; } 
class_interface_register extern int class_interface_register ( s#class_interface * ) 
class_interface_unregister extern void class_interface_unregister ( s#class_interface * ) 

/* drivers/base/core.o */
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##block_device_operations
s##request_queue
s##timer_rand_state
s##blk_integrity
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##sysfs_dirent
s##dma_coherent_mem
dev_driver_string extern const char * dev_driver_string ( const s#device * ) 
s#bin_attribute struct bin_attribute { s#attribute attr ; t#size_t size ; void * private ; t#ssize_t ( * read ) ( s#kobject * , s#bin_attribute * , char * , t#loff_t , t#size_t ) ; t#ssize_t ( * write ) ( s#kobject * , s#bin_attribute * , char * , t#loff_t , t#size_t ) ; int ( * mmap ) ( s#kobject * , s#bin_attribute * , s#vm_area_struct * ) ; } 
device_create_bin_file extern int device_create_bin_file ( s#device * , s#bin_attribute * ) 
device_remove_bin_file extern void device_remove_bin_file ( s#device * , s#bin_attribute * ) 
device_schedule_callback_owner extern int device_schedule_callback_owner ( s#device * , void ( * ) ( s#device * ) , s#module * ) 
dev_set_name extern int dev_set_name ( s#device * , const char * , ... ) 
device_for_each_child extern int device_for_each_child ( s#device * , void * , int ( * ) ( s#device * , void * ) ) 
device_find_child extern s#device * device_find_child ( s#device * , void * , int ( * ) ( s#device * , void * ) ) 
device_initialize extern void device_initialize ( s#device * ) 
device_add extern int device_add ( s#device * ) 
device_register extern int device_register ( s#device * ) 
device_del extern void device_del ( s#device * ) 
device_unregister extern void device_unregister ( s#device * ) 
get_device extern s#device * get_device ( s#device * ) 
put_device extern void put_device ( s#device * ) 
device_create_file extern int device_create_file ( s#device * , s#device_attribute * ) 
device_remove_file extern void device_remove_file ( s#device * , s#device_attribute * ) 
__root_device_register extern s#device * __root_device_register ( const char * , s#module * ) 
root_device_unregister extern void root_device_unregister ( s#device * ) 
device_create_vargs extern s#device * device_create_vargs ( s#class * , s#device * , t#dev_t , void * , const char * , va_list vargs ) 
device_create extern s#device * device_create ( s#class * , s#device * , t#dev_t , void * , const char * , ... ) 
device_destroy extern void device_destroy ( s#class * , t#dev_t ) 
device_rename extern int device_rename ( s#device * , char * ) 
e#dpm_order enum dpm_order { DPM_ORDER_NONE , DPM_ORDER_DEV_AFTER_PARENT , DPM_ORDER_PARENT_BEFORE_DEV , DPM_ORDER_DEV_LAST , } 
device_move extern int device_move ( s#device * , s#device * , e#dpm_order ) 

/* drivers/base/cpu.o */
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##file
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##exec_domain
s##compat_timespec
s##pollfd
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##sysfs_dirent
s#sys_device struct sys_device { t#u32 id ; s#sysdev_class * cls ; s#kobject kobj ; } 
s#sysdev_class struct sysdev_class { const char * name ; s#list_head drivers ; int ( * shutdown ) ( s#sys_device * ) ; int ( * suspend ) ( s#sys_device * , t#pm_message_t ) ; int ( * resume ) ( s#sys_device * ) ; s#kset kset ; } 
cpu_sysdev_class extern s#sysdev_class cpu_sysdev_class 
get_cpu_sysdev extern s#sys_device * get_cpu_sysdev ( unsigned ) 

/* drivers/base/dd.o */
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##file
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##exec_domain
s##compat_timespec
s##pollfd
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##sysfs_dirent
s##dma_coherent_mem
device_bind_driver extern int device_bind_driver ( s#device * ) 
wait_for_device_probe extern void wait_for_device_probe ( void ) 
device_attach extern int device_attach ( s#device * ) 
driver_attach extern int driver_attach ( s#device_driver * ) 
device_release_driver extern void device_release_driver ( s#device * ) 
dev_get_drvdata extern void * dev_get_drvdata ( const s#device * ) 
dev_set_drvdata extern void dev_set_drvdata ( s#device * , void * ) 

/* drivers/base/devres.o */
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##file
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##exec_domain
s##compat_timespec
s##pollfd
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##sysfs_dirent
s##dma_coherent_mem
t#dr_release_t typedef void ( * dr_release_t ) ( s#device * , void * ) 
devres_alloc extern void * devres_alloc ( t#dr_release_t , t#size_t , t#gfp_t ) 
devres_free extern void devres_free ( void * ) 
devres_add extern void devres_add ( s#device * , void * ) 
t#dr_match_t typedef int ( * dr_match_t ) ( s#device * , void * , void * ) 
devres_find extern void * devres_find ( s#device * , t#dr_release_t , t#dr_match_t , void * ) 
devres_get extern void * devres_get ( s#device * , void * , t#dr_match_t , void * ) 
devres_remove extern void * devres_remove ( s#device * , t#dr_release_t , t#dr_match_t , void * ) 
devres_destroy extern int devres_destroy ( s#device * , t#dr_release_t , t#dr_match_t , void * ) 
devres_open_group extern void * devres_open_group ( s#device * , void * , t#gfp_t ) 
devres_close_group extern void devres_close_group ( s#device * , void * ) 
devres_remove_group extern void devres_remove_group ( s#device * , void * ) 
devres_release_group extern int devres_release_group ( s#device * , void * ) 
devm_kzalloc extern void * devm_kzalloc ( s#device * , t#size_t , t#gfp_t ) 
devm_kfree extern void devm_kfree ( s#device * , void * ) 

/* drivers/base/driver.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##file
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##exec_domain
s##compat_timespec
s##pollfd
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##dma_coherent_mem
driver_for_each_device extern int driver_for_each_device ( s#device_driver * , s#device * , void * , int ( * ) ( s#device * , void * ) ) 
driver_find_device s#device * driver_find_device ( s#device_driver * , s#device * , void * , int ( * ) ( s#device * , void * ) ) 
driver_create_file extern int driver_create_file ( s#device_driver * , s#driver_attribute * ) 
driver_remove_file extern void driver_remove_file ( s#device_driver * , s#driver_attribute * ) 
driver_add_kobj extern int driver_add_kobj ( s#device_driver * , s#kobject * , const char * , ... ) 
get_driver extern s#device_driver * get_driver ( s#device_driver * ) 
put_driver extern void put_driver ( s#device_driver * ) 
driver_register extern int driver_register ( s#device_driver * ) 
driver_unregister extern void driver_unregister ( s#device_driver * ) 
driver_find extern s#device_driver * driver_find ( const char * , s#bus_type * ) 

/* drivers/base/firmware.o */
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##file
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##exec_domain
s##compat_timespec
s##pollfd
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##sysfs_dirent
firmware_kobj extern s#kobject * firmware_kobj 

/* drivers/base/firmware_class.o */
s#firmware struct firmware { t#size_t size ; const t#u8 * data ; } 
release_firmware void release_firmware ( const s#firmware * ) 
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##sysfs_dirent
s##dma_coherent_mem
request_firmware int request_firmware ( const s#firmware * * , const char * , s#device * ) 
request_firmware_nowait int request_firmware_nowait ( s#module * , int , const char * , s#device * , void * , void ( * ) ( const s#firmware * , void * ) ) 

/* drivers/base/hypervisor.o */
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##file
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##exec_domain
s##compat_timespec
s##pollfd
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##sysfs_dirent
hypervisor_kobj extern s#kobject * hypervisor_kobj 

/* drivers/base/memory.o */
register_memory_notifier extern int register_memory_notifier ( s#notifier_block * ) 
unregister_memory_notifier extern void unregister_memory_notifier ( s#notifier_block * ) 

/* drivers/base/platform.o */
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##file
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##exec_domain
s##compat_timespec
s##pollfd
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##sysfs_dirent
s##dma_coherent_mem
platform_bus extern s#device platform_bus 
t#phys_addr_t typedef t#u64 phys_addr_t 
t#resource_size_t typedef t#phys_addr_t resource_size_t 
s#resource struct resource { t#resource_size_t start ; t#resource_size_t end ; const char * name ; unsigned long flags ; s#resource * parent , * sibling , * child ; } 
t#kernel_ulong_t typedef unsigned long kernel_ulong_t 
s#platform_device_id struct platform_device_id { char name [ 20 ] ; t#kernel_ulong_t driver_data __attribute__ ( ( aligned ( sizeof ( kernel_ulong_t ) ) ) ) ; } 
s#pdev_archdata struct pdev_archdata { } 
s#platform_device struct platform_device { const char * name ; int id ; s#device dev ; t#u32 num_resources ; s#resource * resource ; s#platform_device_id * id_entry ; s#pdev_archdata archdata ; } 
platform_get_resource extern s#resource * platform_get_resource ( s#platform_device * , unsigned int , unsigned int ) 
platform_get_irq extern int platform_get_irq ( s#platform_device * , unsigned int ) 
platform_get_resource_byname extern s#resource * platform_get_resource_byname ( s#platform_device * , unsigned int , const char * ) 
platform_get_irq_byname extern int platform_get_irq_byname ( s#platform_device * , const char * ) 
platform_add_devices extern int platform_add_devices ( s#platform_device * * , int ) 
platform_device_put extern void platform_device_put ( s#platform_device * ) 
platform_device_alloc extern s#platform_device * platform_device_alloc ( const char * , int ) 
platform_device_add_resources extern int platform_device_add_resources ( s#platform_device * , s#resource * , unsigned int ) 
platform_device_add_data extern int platform_device_add_data ( s#platform_device * , const void * , t#size_t ) 
platform_device_add extern int platform_device_add ( s#platform_device * ) 
platform_device_del extern void platform_device_del ( s#platform_device * ) 
platform_device_register extern int platform_device_register ( s#platform_device * ) 
platform_device_unregister extern void platform_device_unregister ( s#platform_device * ) 
platform_device_register_simple extern s#platform_device * platform_device_register_simple ( const char * , int , s#resource * , unsigned int ) 
s#platform_driver struct platform_driver { int ( * probe ) ( s#platform_device * ) ; int ( * remove ) ( s#platform_device * ) ; void ( * shutdown ) ( s#platform_device * ) ; int ( * suspend ) ( s#platform_device * , t#pm_message_t ) ; int ( * resume ) ( s#platform_device * ) ; s#device_driver driver ; s#platform_device_id * id_table ; } 
platform_driver_register extern int platform_driver_register ( s#platform_driver * ) 
platform_driver_unregister extern void platform_driver_unregister ( s#platform_driver * ) 
platform_driver_probe extern int platform_driver_probe ( s#platform_driver * , int ( * ) ( s#platform_device * ) ) 
platform_bus_type extern s#bus_type platform_bus_type 
dma_get_required_mask extern t#u64 dma_get_required_mask ( s#device * ) 

/* drivers/base/power/main.o */
dpm_resume_noirq extern void dpm_resume_noirq ( t#pm_message_t ) 
dpm_resume_end extern void dpm_resume_end ( t#pm_message_t ) 
dpm_suspend_noirq extern int dpm_suspend_noirq ( t#pm_message_t ) 
dpm_suspend_start extern int dpm_suspend_start ( t#pm_message_t ) 
__suspend_report_result extern void __suspend_report_result ( const char * , void * , int ) 

/* drivers/base/sys.o */
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##file
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##exec_domain
s##compat_timespec
s##pollfd
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##sysfs_dirent
s#sysdev_attribute struct sysdev_attribute { s#attribute attr ; t#ssize_t ( * show ) ( s#sys_device * , s#sysdev_attribute * , char * ) ; t#ssize_t ( * store ) ( s#sys_device * , s#sysdev_attribute * , const char * , t#size_t ) ; } 
sysdev_create_file extern int sysdev_create_file ( s#sys_device * , s#sysdev_attribute * ) 
sysdev_remove_file extern void sysdev_remove_file ( s#sys_device * , s#sysdev_attribute * ) 
s#sysdev_class_attribute struct sysdev_class_attribute { s#attribute attr ; t#ssize_t ( * show ) ( s#sysdev_class * , char * ) ; t#ssize_t ( * store ) ( s#sysdev_class * , const char * , t#size_t ) ; } 
sysdev_class_create_file extern int sysdev_class_create_file ( s#sysdev_class * , s#sysdev_class_attribute * ) 
sysdev_class_remove_file extern void sysdev_class_remove_file ( s#sysdev_class * , s#sysdev_class_attribute * ) 
sysdev_class_register extern int sysdev_class_register ( s#sysdev_class * ) 
sysdev_class_unregister extern void sysdev_class_unregister ( s#sysdev_class * ) 
s#sysdev_driver struct sysdev_driver { s#list_head entry ; int ( * add ) ( s#sys_device * ) ; int ( * remove ) ( s#sys_device * ) ; int ( * shutdown ) ( s#sys_device * ) ; int ( * suspend ) ( s#sys_device * , t#pm_message_t ) ; int ( * resume ) ( s#sys_device * ) ; } 
sysdev_driver_register extern int sysdev_driver_register ( s#sysdev_class * , s#sysdev_driver * ) 
sysdev_driver_unregister extern void sysdev_driver_unregister ( s#sysdev_class * , s#sysdev_driver * ) 
sysdev_suspend extern int sysdev_suspend ( t#pm_message_t ) 
sysdev_resume extern int sysdev_resume ( void ) 
sysdev_register extern int sysdev_register ( s#sys_device * ) 
sysdev_unregister extern void sysdev_unregister ( s#sys_device * ) 
sysdev_store_ulong extern t#ssize_t sysdev_store_ulong ( s#sys_device * , s#sysdev_attribute * , const char * , t#size_t ) 
sysdev_show_ulong extern t#ssize_t sysdev_show_ulong ( s#sys_device * , s#sysdev_attribute * , char * ) 
sysdev_store_int extern t#ssize_t sysdev_store_int ( s#sys_device * , s#sysdev_attribute * , const char * , t#size_t ) 
sysdev_show_int extern t#ssize_t sysdev_show_int ( s#sys_device * , s#sysdev_attribute * , char * ) 

/* drivers/base/transport_class.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##file
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##exec_domain
s##compat_timespec
s##pollfd
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s#transport_container struct transport_container { s#attribute_container ac ; const s#attribute_group * statistics ; } 
s#transport_class struct transport_class { s#class class ; int ( * setup ) ( s#transport_container * , s#device * , s#device * ) ; int ( * configure ) ( s#transport_container * , s#device * , s#device * ) ; int ( * remove ) ( s#transport_container * , s#device * , s#device * ) ; } 
transport_class_register int transport_class_register ( s#transport_class * ) 
transport_class_unregister void transport_class_unregister ( s#transport_class * ) 
s#anon_transport_class struct anon_transport_class { s#transport_class tclass ; s#attribute_container container ; } 
anon_transport_class_register int anon_transport_class_register ( s#anon_transport_class * ) 
anon_transport_class_unregister void anon_transport_class_unregister ( s#anon_transport_class * ) 
transport_setup_device void transport_setup_device ( s#device * ) 
transport_add_device void transport_add_device ( s#device * ) 
transport_configure_device void transport_configure_device ( s#device * ) 
transport_remove_device void transport_remove_device ( s#device * ) 
transport_destroy_device void transport_destroy_device ( s#device * ) 

/* drivers/block/loop.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##hd_geometry
s##radix_tree_node
s##tvec_base
s##blk_trace
s##timer_rand_state
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s#pipe_buf_operations struct pipe_buf_operations { int can_merge ; void * ( * map ) ( s#pipe_inode_info * , s#pipe_buffer * , int ) ; void ( * unmap ) ( s#pipe_inode_info * , s#pipe_buffer * , void * ) ; int ( * confirm ) ( s#pipe_inode_info * , s#pipe_buffer * ) ; void ( * release ) ( s#pipe_inode_info * , s#pipe_buffer * ) ; int ( * steal ) ( s#pipe_inode_info * , s#pipe_buffer * ) ; void ( * get ) ( s#pipe_inode_info * , s#pipe_buffer * ) ; } 
s#pipe_buffer struct pipe_buffer { s#page * page ; unsigned int offset , len ; const s#pipe_buf_operations * ops ; unsigned int flags ; unsigned long private ; } 
s#pipe_inode_info struct pipe_inode_info { t#wait_queue_head_t wait ; unsigned int nrbufs , curbuf ; s#page * tmp_page ; unsigned int readers ; unsigned int writers ; unsigned int waiting_writers ; unsigned int r_counter ; unsigned int w_counter ; s#fasync_struct * fasync_readers ; s#fasync_struct * fasync_writers ; s#inode * inode ; s#pipe_buffer bufs [ ( 16 ) ] ; } 
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##pollfd
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
s#bio_list struct bio_list { s#bio * head ; s#bio * tail ; } 
s#loop_device struct loop_device { int lo_number ; int lo_refcnt ; t#loff_t lo_offset ; t#loff_t lo_sizelimit ; int lo_flags ; int ( * transfer ) ( s#loop_device * , int , s#page * , unsigned , s#page * , unsigned , int , t#sector_t ) ; char lo_file_name [ 64 ] ; char lo_crypt_name [ 64 ] ; char lo_encrypt_key [ 32 ] ; int lo_encrypt_key_size ; s#loop_func_table * lo_encryption ; t#__u32 lo_init [ 2 ] ; t#uid_t lo_key_owner ; int ( * ioctl ) ( s#loop_device * , int , unsigned long ) ; s#file * lo_backing_file ; s#block_device * lo_device ; unsigned lo_blocksize ; void * key_data ; t#gfp_t old_gfp_mask ; t#spinlock_t lo_lock ; s#bio_list lo_bio_list ; int lo_state ; s#mutex lo_ctl_mutex ; s#task_struct * lo_thread ; t#wait_queue_head_t lo_event ; s#request_queue * lo_queue ; s#gendisk * lo_disk ; s#list_head lo_list ; } 
s#loop_info64 struct loop_info64 { t#__u64 lo_device ; t#__u64 lo_inode ; t#__u64 lo_rdevice ; t#__u64 lo_offset ; t#__u64 lo_sizelimit ; t#__u32 lo_number ; t#__u32 lo_encrypt_type ; t#__u32 lo_encrypt_key_size ; t#__u32 lo_flags ; t#__u8 lo_file_name [ 64 ] ; t#__u8 lo_crypt_name [ 64 ] ; t#__u8 lo_encrypt_key [ 32 ] ; t#__u64 lo_init [ 2 ] ; } 
s#loop_func_table struct loop_func_table { int number ; int ( * transfer ) ( s#loop_device * , int , s#page * , unsigned , s#page * , unsigned , int , t#sector_t ) ; int ( * init ) ( s#loop_device * , const s#loop_info64 * ) ; int ( * release ) ( s#loop_device * ) ; int ( * ioctl ) ( s#loop_device * , int , unsigned long ) ; s#module * owner ; } 
loop_register_transfer int loop_register_transfer ( s#loop_func_table * ) 
loop_unregister_transfer int loop_unregister_transfer ( int ) 

/* drivers/cdrom/cdrom.o */
s#cdrom_msf0 struct cdrom_msf0 { t#__u8 minute ; t#__u8 second ; t#__u8 frame ; } 
u#cdrom_addr union cdrom_addr { s#cdrom_msf0 msf ; int lba ; } 
s#cdrom_multisession struct cdrom_multisession { u#cdrom_addr addr ; t#__u8 xa_flag ; t#__u8 addr_format ; } 
s#cdrom_mcn struct cdrom_mcn { t#__u8 medium_catalog_number [ 14 ] ; } 
s#request_sense struct request_sense { t#__u8 valid : 1 ; t#__u8 error_code : 7 ; t#__u8 segment_number ; t#__u8 reserved1 : 2 ; t#__u8 ili : 1 ; t#__u8 reserved2 : 1 ; t#__u8 sense_key : 4 ; t#__u8 information [ 4 ] ; t#__u8 add_sense_len ; t#__u8 command_info [ 4 ] ; t#__u8 asc ; t#__u8 ascq ; t#__u8 fruc ; t#__u8 sks [ 3 ] ; t#__u8 asb [ 46 ] ; } 
s#packet_command struct packet_command { unsigned char cmd [ 12 ] ; unsigned char * buffer ; unsigned int buflen ; int stat ; s#request_sense * sense ; unsigned char data_direction ; int quiet ; int timeout ; void * reserved [ 1 ] ; } 
s#cdrom_device_ops struct cdrom_device_ops { int ( * open ) ( s#cdrom_device_info * , int ) ; void ( * release ) ( s#cdrom_device_info * ) ; int ( * drive_status ) ( s#cdrom_device_info * , int ) ; int ( * media_changed ) ( s#cdrom_device_info * , int ) ; int ( * tray_move ) ( s#cdrom_device_info * , int ) ; int ( * lock_door ) ( s#cdrom_device_info * , int ) ; int ( * select_speed ) ( s#cdrom_device_info * , int ) ; int ( * select_disc ) ( s#cdrom_device_info * , int ) ; int ( * get_last_session ) ( s#cdrom_device_info * , s#cdrom_multisession * ) ; int ( * get_mcn ) ( s#cdrom_device_info * , s#cdrom_mcn * ) ; int ( * reset ) ( s#cdrom_device_info * ) ; int ( * audio_ioctl ) ( s#cdrom_device_info * , unsigned int , void * ) ; const int capability ; int n_minors ; int ( * generic_packet ) ( s#cdrom_device_info * , s#packet_command * ) ; } 
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##hd_geometry
s##blk_trace
s##timer_rand_state
s#cdrom_device_info struct cdrom_device_info { s#cdrom_device_ops * ops ; s#list_head list ; s#gendisk * disk ; void * handle ; int mask ; int speed ; int capacity ; unsigned int options : 30 ; unsigned mc_flags : 2 ; int use_count ; char name [ 20 ] ; t#__u8 sanyo_slot : 2 ; t#__u8 reserved : 6 ; int cdda_method ; t#__u8 last_sense ; t#__u8 media_written ; unsigned short mmc3_profile ; int for_data ; int ( * exit ) ( s#cdrom_device_info * ) ; int mrw_mode_page ; } 
cdrom_get_last_written extern int cdrom_get_last_written ( s#cdrom_device_info * , long * ) 
register_cdrom extern int register_cdrom ( s#cdrom_device_info * ) 
unregister_cdrom extern void unregister_cdrom ( s#cdrom_device_info * ) 
cdrom_open extern int cdrom_open ( s#cdrom_device_info * , s#block_device * , t#fmode_t ) 
cdrom_release extern void cdrom_release ( s#cdrom_device_info * , t#fmode_t ) 
cdrom_ioctl extern int cdrom_ioctl ( s#cdrom_device_info * , s#block_device * , t#fmode_t , unsigned int , unsigned long ) 
cdrom_media_changed extern int cdrom_media_changed ( s#cdrom_device_info * ) 
cdrom_number_of_slots extern int cdrom_number_of_slots ( s#cdrom_device_info * ) 
cdrom_mode_select extern int cdrom_mode_select ( s#cdrom_device_info * , s#packet_command * ) 
cdrom_mode_sense extern int cdrom_mode_sense ( s#cdrom_device_info * , s#packet_command * , int , int ) 
init_cdrom_command extern void init_cdrom_command ( s#packet_command * , void * , int , int ) 
s#media_event_desc struct media_event_desc { t#__u8 reserved1 : 4 ; t#__u8 media_event_code : 4 ; t#__u8 reserved2 : 6 ; t#__u8 media_present : 1 ; t#__u8 door_open : 1 ; t#__u8 start_slot ; t#__u8 end_slot ; } 
cdrom_get_media_event extern int cdrom_get_media_event ( s#cdrom_device_info * , s#media_event_desc * ) 

/* drivers/char/hvc_console.o */
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##sysfs_dirent
s##proc_dir_entry
s#hvc_struct struct hvc_struct { t#spinlock_t lock ; int index ; s#tty_struct * tty ; int count ; int do_wakeup ; char * outbuf ; int outbuf_size ; int n_outbuf ; t#uint32_t vtermno ; s#hv_ops * ops ; int irq_requested ; int data ; s#winsize ws ; s#work_struct tty_resize ; s#list_head next ; s#kref kref ; } 
s#hv_ops struct hv_ops { int ( * get_chars ) ( t#uint32_t , char * , int ) ; int ( * put_chars ) ( t#uint32_t , const char * , int ) ; int ( * notifier_add ) ( s#hvc_struct * , int ) ; void ( * notifier_del ) ( s#hvc_struct * , int ) ; void ( * notifier_hangup ) ( s#hvc_struct * , int ) ; } 
hvc_instantiate extern int hvc_instantiate ( t#uint32_t , int , s#hv_ops * ) 
hvc_kick void hvc_kick ( void ) 
hvc_poll int hvc_poll ( s#hvc_struct * ) 
__hvc_resize extern void __hvc_resize ( s#hvc_struct * , s#winsize ) 
hvc_alloc extern s#hvc_struct * __attribute__ ( ( __section__ ( ".devinit.text" ) ) ) __attribute__ ( ( __cold__ ) ) hvc_alloc ( t#uint32_t , int , s#hv_ops * , int ) 

/* drivers/char/hw_random/core.o */
s#hwrng struct hwrng { const char * name ; int ( * init ) ( s#hwrng * ) ; void ( * cleanup ) ( s#hwrng * ) ; int ( * data_present ) ( s#hwrng * , int ) ; int ( * data_read ) ( s#hwrng * , t#u32 * ) ; unsigned long priv ; s#list_head list ; } 
hwrng_register extern int hwrng_register ( s#hwrng * ) 
hwrng_unregister extern void hwrng_unregister ( s#hwrng * ) 

/* drivers/char/misc.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##files_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##posix_acl
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##poll_table_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s#miscdevice struct miscdevice { int minor ; const char * name ; const s#file_operations * fops ; s#list_head list ; s#device * parent ; s#device * this_device ; const char * nodename ; t#mode_t mode ; } 
misc_register extern int misc_register ( s#miscdevice * ) 
misc_deregister extern int misc_deregister ( s#miscdevice * ) 

/* drivers/char/random.o */
add_input_randomness extern void add_input_randomness ( unsigned int , unsigned int , unsigned int ) 
get_random_bytes extern void get_random_bytes ( void * , int ) 
generate_random_uuid void generate_random_uuid ( unsigned char [ 16 ] ) 
secure_tcpv6_sequence_number extern t#__u32 secure_tcpv6_sequence_number ( t#__be32 * , t#__be32 * , t#__be16 , t#__be16 ) 
secure_ipv4_port_ephemeral extern t#u32 secure_ipv4_port_ephemeral ( t#__be32 , t#__be32 , t#__be16 ) 
secure_dccp_sequence_number extern t#u64 secure_dccp_sequence_number ( t#__be32 , t#__be32 , t#__be16 , t#__be16 ) 

/* drivers/char/sysrq.o */
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##mnt_namespace
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##array_cache
s##kmem_list3
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##posix_acl
s##radix_tree_node
s##linux_binfmt
s##bts_context
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##net
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##mem_cgroup
s##sysfs_dirent
handle_sysrq void handle_sysrq ( int , s#tty_struct * ) 
s#sysrq_key_op struct sysrq_key_op { void ( * handler ) ( int , s#tty_struct * ) ; char * help_msg ; char * action_msg ; int enable_mask ; } 
register_sysrq_key int register_sysrq_key ( int , s#sysrq_key_op * ) 
unregister_sysrq_key int unregister_sysrq_key ( int , s#sysrq_key_op * ) 

/* drivers/char/tty_buffer.o */
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##sysfs_dirent
s##proc_dir_entry
tty_buffer_request_room extern int tty_buffer_request_room ( s#tty_struct * , t#size_t ) 
tty_insert_flip_string extern int tty_insert_flip_string ( s#tty_struct * , const unsigned char * , t#size_t ) 
tty_insert_flip_string_flags extern int tty_insert_flip_string_flags ( s#tty_struct * , const unsigned char * , const char * , t#size_t ) 
tty_schedule_flip void tty_schedule_flip ( s#tty_struct * ) 
tty_prepare_flip_string extern int tty_prepare_flip_string ( s#tty_struct * , unsigned char * * , t#size_t ) 
tty_prepare_flip_string_flags extern int tty_prepare_flip_string_flags ( s#tty_struct * , unsigned char * * , char * * , t#size_t ) 
tty_flip_buffer_push extern void tty_flip_buffer_push ( s#tty_struct * ) 

/* drivers/char/tty_io.o */
tty_std_termios extern s#ktermios tty_std_termios 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##tvec_base
s##eventfd_ctx
t#__kernel_fd_set typedef struct { unsigned long fds_bits [ ( 1024 / ( 8 * sizeof ( unsigned long ) ) ) ] ; } __kernel_fd_set 
t#fd_set typedef t#__kernel_fd_set fd_set 
s#fdtable struct fdtable { unsigned int max_fds ; s#file * * fd ; t#fd_set * close_on_exec ; t#fd_set * open_fds ; s#rcu_head rcu ; s#fdtable * next ; } 
s#embedded_fd_set struct embedded_fd_set { unsigned long fds_bits [ 1 ] ; } 
s#files_struct struct files_struct { t#atomic_t count ; s#fdtable * fdt ; s#fdtable fdtab ; t#spinlock_t file_lock __attribute__ ( ( __aligned__ ( 256 ) ) ) ; int next_fd ; s#embedded_fd_set close_on_exec_init ; s#embedded_fd_set open_fds_init ; s#file * fd_array [ 64 ] ; } 
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
tty_mutex extern s#mutex tty_mutex 
tty_name extern char * tty_name ( s#tty_struct * , char * ) 
tty_check_change extern int tty_check_change ( s#tty_struct * ) 
tty_wakeup extern void tty_wakeup ( s#tty_struct * ) 
tty_hangup extern void tty_hangup ( s#tty_struct * ) 
tty_vhangup extern void tty_vhangup ( s#tty_struct * ) 
tty_hung_up_p extern int tty_hung_up_p ( s#file * ) 
stop_tty extern void stop_tty ( s#tty_struct * ) 
start_tty extern void start_tty ( s#tty_struct * ) 
tty_init_termios extern int tty_init_termios ( s#tty_struct * ) 
tty_free_termios extern void tty_free_termios ( s#tty_struct * ) 
tty_shutdown extern void tty_shutdown ( s#tty_struct * ) 
tty_kref_put extern void tty_kref_put ( s#tty_struct * ) 
tty_get_pgrp extern s#pid * tty_get_pgrp ( s#tty_struct * ) 
tty_pair_get_tty extern s#tty_struct * tty_pair_get_tty ( s#tty_struct * ) 
tty_pair_get_pty extern s#tty_struct * tty_pair_get_pty ( s#tty_struct * ) 
do_SAK extern void do_SAK ( s#tty_struct * ) 
tty_put_char extern int tty_put_char ( s#tty_struct * , unsigned char ) 
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
tty_register_device extern s#device * tty_register_device ( s#tty_driver * , unsigned , s#device * ) 
tty_unregister_device extern void tty_unregister_device ( s#tty_driver * , unsigned ) 
alloc_tty_driver extern s#tty_driver * alloc_tty_driver ( int ) 
tty_driver_kref_put extern void tty_driver_kref_put ( s#tty_driver * ) 
tty_set_operations extern void tty_set_operations ( s#tty_driver * , const s#tty_operations * ) 
put_tty_driver extern void put_tty_driver ( s#tty_driver * ) 
tty_register_driver extern int tty_register_driver ( s#tty_driver * ) 
tty_unregister_driver extern int tty_unregister_driver ( s#tty_driver * ) 
tty_devnum extern t#dev_t tty_devnum ( s#tty_struct * ) 
get_current_tty extern s#tty_struct * get_current_tty ( void ) 

/* drivers/char/tty_ioctl.o */
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##sysfs_dirent
s##proc_dir_entry
tty_chars_in_buffer extern int tty_chars_in_buffer ( s#tty_struct * ) 
tty_write_room extern int tty_write_room ( s#tty_struct * ) 
tty_driver_flush_buffer extern void tty_driver_flush_buffer ( s#tty_struct * ) 
tty_throttle extern void tty_throttle ( s#tty_struct * ) 
tty_unthrottle extern void tty_unthrottle ( s#tty_struct * ) 
tty_wait_until_sent extern void tty_wait_until_sent ( s#tty_struct * , long ) 
tty_termios_baud_rate extern t#speed_t tty_termios_baud_rate ( s#ktermios * ) 
tty_termios_input_baud_rate extern t#speed_t tty_termios_input_baud_rate ( s#ktermios * ) 
tty_termios_encode_baud_rate extern void tty_termios_encode_baud_rate ( s#ktermios * , t#speed_t , t#speed_t ) 
tty_encode_baud_rate extern void tty_encode_baud_rate ( s#tty_struct * , t#speed_t , t#speed_t ) 
tty_get_baud_rate extern t#speed_t tty_get_baud_rate ( s#tty_struct * ) 
tty_termios_copy_hw extern void tty_termios_copy_hw ( s#ktermios * , s#ktermios * ) 
tty_termios_hw_change extern int tty_termios_hw_change ( s#ktermios * , s#ktermios * ) 
tty_mode_ioctl extern int tty_mode_ioctl ( s#tty_struct * , s#file * , unsigned int , unsigned long ) 
tty_perform_flush extern int tty_perform_flush ( s#tty_struct * , unsigned long ) 
n_tty_ioctl_helper extern int n_tty_ioctl_helper ( s#tty_struct * , s#file * , unsigned int , unsigned long ) 

/* drivers/char/tty_ldisc.o */
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##nameidata
s##vfsmount
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##sysfs_dirent
tty_register_ldisc extern int tty_register_ldisc ( int , s#tty_ldisc_ops * ) 
tty_unregister_ldisc extern int tty_unregister_ldisc ( int ) 
tty_ldisc_ref_wait extern s#tty_ldisc * tty_ldisc_ref_wait ( s#tty_struct * ) 
tty_ldisc_ref extern s#tty_ldisc * tty_ldisc_ref ( s#tty_struct * ) 
tty_ldisc_deref extern void tty_ldisc_deref ( s#tty_ldisc * ) 
tty_ldisc_flush extern void tty_ldisc_flush ( s#tty_struct * ) 

/* drivers/char/tty_port.o */
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##sysfs_dirent
s##proc_dir_entry
tty_port_init extern void tty_port_init ( s#tty_port * ) 
tty_port_alloc_xmit_buf extern int tty_port_alloc_xmit_buf ( s#tty_port * ) 
tty_port_free_xmit_buf extern void tty_port_free_xmit_buf ( s#tty_port * ) 
tty_port_tty_get extern s#tty_struct * tty_port_tty_get ( s#tty_port * ) 
tty_port_tty_set extern void tty_port_tty_set ( s#tty_port * , s#tty_struct * ) 
tty_port_hangup extern void tty_port_hangup ( s#tty_port * ) 
tty_port_carrier_raised extern int tty_port_carrier_raised ( s#tty_port * ) 
tty_port_raise_dtr_rts extern void tty_port_raise_dtr_rts ( s#tty_port * ) 
tty_port_lower_dtr_rts extern void tty_port_lower_dtr_rts ( s#tty_port * ) 
tty_port_block_til_ready extern int tty_port_block_til_ready ( s#tty_port * , s#tty_struct * , s#file * ) 
tty_port_close_start extern int tty_port_close_start ( s#tty_port * , s#tty_struct * , s#file * ) 
tty_port_close_end extern void tty_port_close_end ( s#tty_port * , s#tty_struct * ) 
tty_port_close extern void tty_port_close ( s#tty_port * , s#tty_struct * , s#file * ) 

/* drivers/connector/connector.o */
s#cb_id struct cb_id { t#__u32 idx ; t#__u32 val ; } 
s#cn_msg struct cn_msg { s#cb_id id ; t#__u32 seq ; t#__u32 ack ; t#__u16 len ; t#__u16 flags ; t#__u8 data [ 0 ] ; } 
cn_netlink_send int cn_netlink_send ( s#cn_msg * , t#u32 , t#gfp_t ) 
s#netlink_skb_parms struct netlink_skb_parms { s#ucred creds ; t#__u32 pid ; t#__u32 dst_group ; t#kernel_cap_t eff_cap ; t#__u32 loginuid ; t#__u32 sessionid ; t#__u32 sid ; } 
cn_add_callback int cn_add_callback ( s#cb_id * , char * , void ( * ) ( s#cn_msg * , s#netlink_skb_parms * ) ) 
cn_del_callback void cn_del_callback ( s#cb_id * ) 

/* drivers/md/bitmap.o */
s#bitmap_page struct bitmap_page { char * map ; unsigned int hijacked : 1 ; unsigned int count : 31 ; } 
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##mnt_namespace
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##timer_rand_state
s##mtd_info
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s#mdk_rdev_s struct mdk_rdev_s { s#list_head same_set ; t#sector_t sectors ; t#mddev_t * mddev ; int last_events ; s#block_device * bdev ; s#page * sb_page ; int sb_loaded ; t#__u64 sb_events ; t#sector_t data_offset ; t#sector_t sb_start ; int sb_size ; int preferred_minor ; s#kobject kobj ; unsigned long flags ; t#wait_queue_head_t blocked_wait ; int desc_nr ; int raid_disk ; int saved_raid_disk ; t#sector_t recovery_offset ; t#atomic_t nr_pending ; t#atomic_t read_errors ; t#atomic_t corrected_errors ; s#work_struct del_work ; s#sysfs_dirent * sysfs_state ; } 
t#mdk_rdev_t typedef s#mdk_rdev_s mdk_rdev_t 
s#mdk_personality struct mdk_personality { char * name ; int level ; s#list_head list ; s#module * owner ; int ( * make_request ) ( s#request_queue * , s#bio * ) ; int ( * run ) ( t#mddev_t * ) ; int ( * stop ) ( t#mddev_t * ) ; void ( * status ) ( s#seq_file * , t#mddev_t * ) ; void ( * error_handler ) ( t#mddev_t * , t#mdk_rdev_t * ) ; int ( * hot_add_disk ) ( t#mddev_t * , t#mdk_rdev_t * ) ; int ( * hot_remove_disk ) ( t#mddev_t * , int ) ; int ( * spare_active ) ( t#mddev_t * ) ; t#sector_t ( * sync_request ) ( t#mddev_t * , t#sector_t , int * , int ) ; int ( * resize ) ( t#mddev_t * , t#sector_t ) ; t#sector_t ( * size ) ( t#mddev_t * , t#sector_t , int ) ; int ( * check_reshape ) ( t#mddev_t * ) ; int ( * start_reshape ) ( t#mddev_t * ) ; void ( * finish_reshape ) ( t#mddev_t * ) ; void ( * quiesce ) ( t#mddev_t * , int ) ; void * ( * takeover ) ( t#mddev_t * ) ; } 
s#mdk_thread_s struct mdk_thread_s { void ( * run ) ( t#mddev_t * ) ; t#mddev_t * mddev ; t#wait_queue_head_t wqueue ; unsigned long flags ; s#task_struct * tsk ; unsigned long timeout ; } 
s#mddev_s struct mddev_s { void * private ; s#mdk_personality * pers ; t#dev_t unit ; int md_minor ; s#list_head disks ; unsigned long flags ; int suspended ; t#atomic_t active_io ; int ro ; s#gendisk * gendisk ; s#kobject kobj ; int hold_active ; int major_version , minor_version , patch_version ; int persistent ; int external ; char metadata_type [ 17 ] ; int chunk_sectors ; t#time_t ctime , utime ; int level , layout ; char clevel [ 16 ] ; int raid_disks ; int max_disks ; t#sector_t dev_sectors ; t#sector_t array_sectors ; int external_size ; t#__u64 events ; char uuid [ 16 ] ; t#sector_t reshape_position ; int delta_disks , new_level , new_layout ; int new_chunk_sectors ; s#mdk_thread_s * thread ; s#mdk_thread_s * sync_thread ; t#sector_t curr_resync ; t#sector_t curr_resync_completed ; unsigned long resync_mark ; t#sector_t resync_mark_cnt ; t#sector_t curr_mark_cnt ; t#sector_t resync_max_sectors ; t#sector_t resync_mismatches ; t#sector_t suspend_lo ; t#sector_t suspend_hi ; int sync_speed_min ; int sync_speed_max ; int parallel_resync ; int ok_start_degraded ; unsigned long recovery ; int recovery_disabled ; int in_sync ; s#mutex open_mutex ; s#mutex reconfig_mutex ; t#atomic_t active ; t#atomic_t openers ; int changed ; int degraded ; int barriers_work ; s#bio * biolist ; t#atomic_t recovery_active ; t#wait_queue_head_t recovery_wait ; t#sector_t recovery_cp ; t#sector_t resync_min ; t#sector_t resync_max ; s#sysfs_dirent * sysfs_state ; s#sysfs_dirent * sysfs_action ; s#work_struct del_work ; t#spinlock_t write_lock ; t#wait_queue_head_t sb_wait ; t#atomic_t pending_writes ; unsigned int safemode ; unsigned int safemode_delay ; s#timer_list safemode_timer ; t#atomic_t writes_pending ; s#request_queue * queue ; t#atomic_t write_behind ; unsigned int max_write_behind ; s#bitmap * bitmap ; s#file * bitmap_file ; long bitmap_offset ; long default_bitmap_offset ; s#mutex bitmap_mutex ; s#list_head all_mddevs ; } 
t#mddev_t typedef s#mddev_s mddev_t 
s#bitmap struct bitmap { s#bitmap_page * bp ; unsigned long pages ; unsigned long missing_pages ; t#mddev_t * mddev ; int counter_bits ; unsigned long chunksize ; unsigned long chunkshift ; unsigned long chunks ; unsigned long syncchunk ; t#__u64 events_cleared ; int need_sync ; t#spinlock_t lock ; long offset ; s#file * file ; s#page * sb_page ; s#page * * filemap ; unsigned long * filemap_attr ; unsigned long file_pages ; int last_page_size ; unsigned long flags ; int allclean ; unsigned long max_write_behind ; t#atomic_t behind_writes ; unsigned long daemon_lastrun ; unsigned long daemon_sleep ; unsigned long last_end_sync ; t#atomic_t pending_writes ; t#wait_queue_head_t write_wait ; t#wait_queue_head_t overflow_wait ; } 
bitmap_startwrite int bitmap_startwrite ( s#bitmap * , t#sector_t , unsigned long , int ) 
bitmap_endwrite void bitmap_endwrite ( s#bitmap * , t#sector_t , unsigned long , int , int ) 
bitmap_start_sync int bitmap_start_sync ( s#bitmap * , t#sector_t , int * , int ) 
bitmap_end_sync void bitmap_end_sync ( s#bitmap * , t#sector_t , int * , int ) 
bitmap_unplug void bitmap_unplug ( s#bitmap * ) 
bitmap_close_sync void bitmap_close_sync ( s#bitmap * ) 
bitmap_cond_end_sync void bitmap_cond_end_sync ( s#bitmap * , t#sector_t ) 

/* drivers/md/dm.o */
u#map_info union map_info { void * ptr ; unsigned long long ll ; unsigned flush_request ; } 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##mtd_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##cdev
s##posix_acl
s##timer_rand_state
dm_get_rq_mapinfo u#map_info * dm_get_rq_mapinfo ( s#request * ) 
dm_requeue_unmapped_request void dm_requeue_unmapped_request ( s#request * ) 
dm_kill_unmapped_request void dm_kill_unmapped_request ( s#request * , int ) 
dm_dispatch_request void dm_dispatch_request ( s#request * ) 
dm_underlying_device_busy int dm_underlying_device_busy ( s#request_queue * ) 
s##workqueue_struct
s##dm_table
s#mapped_device struct mapped_device { s#rw_semaphore io_lock ; s#mutex suspend_lock ; t#rwlock_t map_lock ; t#atomic_t holders ; t#atomic_t open_count ; unsigned long flags ; s#request_queue * queue ; s#gendisk * disk ; char name [ 16 ] ; void * interface_ptr ; t#atomic_t pending [ 2 ] ; t#wait_queue_head_t wait ; s#work_struct work ; s#bio_list deferred ; t#spinlock_t deferred_lock ; int barrier_error ; s#workqueue_struct * wq ; s#dm_table * map ; t#mempool_t * io_pool ; t#mempool_t * tio_pool ; s#bio_set * bs ; t#atomic_t event_nr ; t#wait_queue_head_t eventq ; t#atomic_t uevent_seq ; s#list_head uevent_list ; t#spinlock_t uevent_lock ; s#super_block * frozen_sb ; s#block_device * bdev ; s#hd_geometry geometry ; t#make_request_fn * saved_make_request_fn ; s#kobject kobj ; s#bio barrier_bio ; } 
dm_device_name const char * dm_device_name ( s#mapped_device * ) 
dm_put void dm_put ( s#mapped_device * ) 
dm_disk s#gendisk * dm_disk ( s#mapped_device * ) 
t#uint64_t typedef t#__u64 uint64_t 
t#dm_ctr_fn typedef int ( * dm_ctr_fn ) ( s#dm_target * , unsigned int , char * * ) 
t#dm_dtr_fn typedef void ( * dm_dtr_fn ) ( s#dm_target * ) 
t#dm_map_fn typedef int ( * dm_map_fn ) ( s#dm_target * , s#bio * , u#map_info * ) 
t#dm_map_request_fn typedef int ( * dm_map_request_fn ) ( s#dm_target * , s#request * , u#map_info * ) 
t#dm_endio_fn typedef int ( * dm_endio_fn ) ( s#dm_target * , s#bio * , int , u#map_info * ) 
t#dm_request_endio_fn typedef int ( * dm_request_endio_fn ) ( s#dm_target * , s#request * , int , u#map_info * ) 
t#dm_flush_fn typedef void ( * dm_flush_fn ) ( s#dm_target * ) 
t#dm_presuspend_fn typedef void ( * dm_presuspend_fn ) ( s#dm_target * ) 
t#dm_postsuspend_fn typedef void ( * dm_postsuspend_fn ) ( s#dm_target * ) 
t#dm_preresume_fn typedef int ( * dm_preresume_fn ) ( s#dm_target * ) 
t#dm_resume_fn typedef void ( * dm_resume_fn ) ( s#dm_target * ) 
t#status_type_t typedef enum { STATUSTYPE_INFO , STATUSTYPE_TABLE } status_type_t 
t#dm_status_fn typedef int ( * dm_status_fn ) ( s#dm_target * , t#status_type_t , char * , unsigned int ) 
t#dm_message_fn typedef int ( * dm_message_fn ) ( s#dm_target * , unsigned , char * * ) 
t#dm_ioctl_fn typedef int ( * dm_ioctl_fn ) ( s#dm_target * , unsigned int , unsigned long ) 
t#dm_merge_fn typedef int ( * dm_merge_fn ) ( s#dm_target * , s#bvec_merge_data * , s#bio_vec * , int ) 
t#dm_busy_fn typedef int ( * dm_busy_fn ) ( s#dm_target * ) 
s#dm_dev struct dm_dev { s#block_device * bdev ; t#fmode_t mode ; char name [ 16 ] ; } 
t#iterate_devices_callout_fn typedef int ( * iterate_devices_callout_fn ) ( s#dm_target * , s#dm_dev * , t#sector_t , t#sector_t , void * ) 
t#dm_iterate_devices_fn typedef int ( * dm_iterate_devices_fn ) ( s#dm_target * , t#iterate_devices_callout_fn , void * ) 
t#dm_io_hints_fn typedef void ( * dm_io_hints_fn ) ( s#dm_target * , s#queue_limits * ) 
s#target_type struct target_type { t#uint64_t features ; const char * name ; s#module * module ; unsigned version [ 3 ] ; t#dm_ctr_fn ctr ; t#dm_dtr_fn dtr ; t#dm_map_fn map ; t#dm_map_request_fn map_rq ; t#dm_endio_fn end_io ; t#dm_request_endio_fn rq_end_io ; t#dm_flush_fn flush ; t#dm_presuspend_fn presuspend ; t#dm_postsuspend_fn postsuspend ; t#dm_preresume_fn preresume ; t#dm_resume_fn resume ; t#dm_status_fn status ; t#dm_message_fn message ; t#dm_ioctl_fn ioctl ; t#dm_merge_fn merge ; t#dm_busy_fn busy ; t#dm_iterate_devices_fn iterate_devices ; t#dm_io_hints_fn io_hints ; s#list_head list ; } 
s#dm_target struct dm_target { s#dm_table * table ; s#target_type * type ; t#sector_t begin ; t#sector_t len ; t#sector_t split_io ; unsigned num_flush_requests ; void * private ; char * error ; } 
dm_noflush_suspending int dm_noflush_suspending ( s#dm_target * ) 
dm_get_mapinfo u#map_info * dm_get_mapinfo ( s#bio * ) 

/* drivers/md/dm-exception-store.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##timer_rand_state
s##mtd_info
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##dm_table
s#dm_exception_store struct dm_exception_store { s#dm_exception_store_type * type ; s#dm_target * ti ; s#dm_dev * cow ; unsigned chunk_size ; unsigned chunk_mask ; unsigned chunk_shift ; void * context ; } 
t#chunk_t typedef t#sector_t chunk_t 
s#dm_snap_exception struct dm_snap_exception { s#list_head hash_list ; t#chunk_t old_chunk ; t#chunk_t new_chunk ; } 
s#dm_exception_store_type struct dm_exception_store_type { const char * name ; s#module * module ; int ( * ctr ) ( s#dm_exception_store * , unsigned , char * * ) ; void ( * dtr ) ( s#dm_exception_store * ) ; int ( * read_metadata ) ( s#dm_exception_store * , int ( * ) ( void * , t#chunk_t , t#chunk_t ) , void * ) ; int ( * prepare_exception ) ( s#dm_exception_store * , s#dm_snap_exception * ) ; void ( * commit_exception ) ( s#dm_exception_store * , s#dm_snap_exception * , void ( * ) ( void * , int ) , void * ) ; void ( * drop_snapshot ) ( s#dm_exception_store * ) ; unsigned ( * status ) ( s#dm_exception_store * , t#status_type_t , char * , unsigned ) ; void ( * fraction_full ) ( s#dm_exception_store * , t#sector_t * , t#sector_t * ) ; s#list_head list ; } 
dm_exception_store_type_register int dm_exception_store_type_register ( s#dm_exception_store_type * ) 
dm_exception_store_type_unregister int dm_exception_store_type_unregister ( s#dm_exception_store_type * ) 
dm_exception_store_create int dm_exception_store_create ( s#dm_target * , int , char * * , unsigned * , s#dm_exception_store * * ) 
dm_exception_store_destroy void dm_exception_store_destroy ( s#dm_exception_store * ) 

/* drivers/md/dm-io.o */
s##array_cache
s##kmem_list3
s#dm_io_client struct dm_io_client { t#mempool_t * pool ; s#bio_set * bios ; } 
dm_io_client_create s#dm_io_client * dm_io_client_create ( unsigned ) 
dm_io_client_resize int dm_io_client_resize ( unsigned , s#dm_io_client * ) 
dm_io_client_destroy void dm_io_client_destroy ( s#dm_io_client * ) 
e#dm_io_mem_type enum dm_io_mem_type { DM_IO_PAGE_LIST , DM_IO_BVEC , DM_IO_VMA , DM_IO_KMEM , } 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##hd_geometry
s##radix_tree_node
s##tvec_base
s##blk_trace
s##timer_rand_state
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s#page_list struct page_list { s#page_list * next ; s#page * page ; } 
s#dm_io_memory struct dm_io_memory { e#dm_io_mem_type type ; union { s#page_list * pl ; s#bio_vec * bvec ; void * vma ; void * addr ; } ptr ; unsigned offset ; } 
t#io_notify_fn typedef void ( * io_notify_fn ) ( unsigned long , void * ) 
s#dm_io_notify struct dm_io_notify { t#io_notify_fn fn ; void * context ; } 
s#dm_io_request struct dm_io_request { int bi_rw ; s#dm_io_memory mem ; s#dm_io_notify notify ; s#dm_io_client * client ; } 
s#dm_io_region struct dm_io_region { s#block_device * bdev ; t#sector_t sector ; t#sector_t count ; } 
dm_io int dm_io ( s#dm_io_request * , unsigned , s#dm_io_region * , unsigned long * ) 

/* drivers/md/dm-kcopyd.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##radix_tree_node
s##tvec_base
s##blk_trace
s##timer_rand_state
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
s##dm_io_client
s##workqueue_struct
s#dm_kcopyd_client struct dm_kcopyd_client { t#spinlock_t lock ; s#page_list * pages ; unsigned int nr_pages ; unsigned int nr_free_pages ; s#dm_io_client * io_client ; t#wait_queue_head_t destroyq ; t#atomic_t nr_jobs ; t#mempool_t * job_pool ; s#workqueue_struct * kcopyd_wq ; s#work_struct kcopyd_work ; t#spinlock_t job_lock ; s#list_head complete_jobs ; s#list_head io_jobs ; s#list_head pages_jobs ; } 
t#dm_kcopyd_notify_fn typedef void ( * dm_kcopyd_notify_fn ) ( int , unsigned long , void * ) 
dm_kcopyd_copy int dm_kcopyd_copy ( s#dm_kcopyd_client * , s#dm_io_region * , unsigned , s#dm_io_region * , unsigned , t#dm_kcopyd_notify_fn , void * ) 
dm_kcopyd_client_create int dm_kcopyd_client_create ( unsigned , s#dm_kcopyd_client * * ) 
dm_kcopyd_client_destroy void dm_kcopyd_client_destroy ( s#dm_kcopyd_client * ) 

/* drivers/md/dm-log.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##timer_rand_state
s##mtd_info
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s#dm_dirty_log struct dm_dirty_log { s#dm_dirty_log_type * type ; void * context ; } 
s##dm_table
t#region_t typedef t#sector_t region_t 
s#dm_dirty_log_type struct dm_dirty_log_type { const char * name ; s#module * module ; s#list_head list ; int ( * ctr ) ( s#dm_dirty_log * , s#dm_target * , unsigned , char * * ) ; void ( * dtr ) ( s#dm_dirty_log * ) ; int ( * presuspend ) ( s#dm_dirty_log * ) ; int ( * postsuspend ) ( s#dm_dirty_log * ) ; int ( * resume ) ( s#dm_dirty_log * ) ; t#uint32_t ( * get_region_size ) ( s#dm_dirty_log * ) ; int ( * is_clean ) ( s#dm_dirty_log * , t#region_t ) ; int ( * in_sync ) ( s#dm_dirty_log * , t#region_t , int ) ; int ( * flush ) ( s#dm_dirty_log * ) ; void ( * mark_region ) ( s#dm_dirty_log * , t#region_t ) ; void ( * clear_region ) ( s#dm_dirty_log * , t#region_t ) ; int ( * get_resync_work ) ( s#dm_dirty_log * , t#region_t * ) ; void ( * set_region_sync ) ( s#dm_dirty_log * , t#region_t , int ) ; t#region_t ( * get_sync_count ) ( s#dm_dirty_log * ) ; int ( * status ) ( s#dm_dirty_log * , t#status_type_t , char * , unsigned ) ; int ( * is_remote_recovering ) ( s#dm_dirty_log * , t#region_t ) ; } 
dm_dirty_log_type_register int dm_dirty_log_type_register ( s#dm_dirty_log_type * ) 
dm_dirty_log_type_unregister int dm_dirty_log_type_unregister ( s#dm_dirty_log_type * ) 
dm_dirty_log_create s#dm_dirty_log * dm_dirty_log_create ( const char * , s#dm_target * , unsigned , char * * ) 
dm_dirty_log_destroy void dm_dirty_log_destroy ( s#dm_dirty_log * ) 

/* drivers/md/dm-memcache.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##radix_tree_node
s##tvec_base
s##blk_trace
s##timer_rand_state
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
s#dm_mem_cache_client struct dm_mem_cache_client { t#spinlock_t lock ; t#mempool_t * objs_pool ; s#page_list * free_list ; unsigned objects ; unsigned chunks ; unsigned pages_per_chunk ; unsigned free_pages ; unsigned total_pages ; } 
dm_mem_cache_client_create s#dm_mem_cache_client * dm_mem_cache_client_create ( unsigned , unsigned , unsigned ) 
dm_mem_cache_client_destroy void dm_mem_cache_client_destroy ( s#dm_mem_cache_client * ) 
dm_mem_cache_grow int dm_mem_cache_grow ( s#dm_mem_cache_client * , unsigned ) 
dm_mem_cache_shrink int dm_mem_cache_shrink ( s#dm_mem_cache_client * , unsigned ) 
s#dm_mem_cache_object struct dm_mem_cache_object { s#page_list * pl ; void * private ; } 
dm_mem_cache_alloc s#dm_mem_cache_object * dm_mem_cache_alloc ( s#dm_mem_cache_client * ) 
dm_mem_cache_free void dm_mem_cache_free ( s#dm_mem_cache_client * , s#dm_mem_cache_object * ) 

/* drivers/md/dm-path-selector.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##timer_rand_state
s##mtd_info
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s#path_selector struct path_selector { s#path_selector_type * type ; void * context ; } 
s#dm_path struct dm_path { char pdev [ 16 ] ; s#dm_dev * dev ; void * pscontext ; } 
s#path_selector_type struct path_selector_type { char * name ; s#module * module ; unsigned int table_args ; unsigned int info_args ; int ( * create ) ( s#path_selector * , unsigned , char * * ) ; void ( * destroy ) ( s#path_selector * ) ; int ( * add_path ) ( s#path_selector * , s#dm_path * , int , char * * , char * * ) ; s#dm_path * ( * select_path ) ( s#path_selector * , unsigned * , t#size_t ) ; void ( * fail_path ) ( s#path_selector * , s#dm_path * ) ; int ( * reinstate_path ) ( s#path_selector * , s#dm_path * ) ; int ( * status ) ( s#path_selector * , s#dm_path * , t#status_type_t , char * , unsigned int ) ; int ( * start_io ) ( s#path_selector * , s#dm_path * , t#size_t ) ; int ( * end_io ) ( s#path_selector * , s#dm_path * , t#size_t ) ; } 
dm_register_path_selector int dm_register_path_selector ( s#path_selector_type * ) 
dm_unregister_path_selector int dm_unregister_path_selector ( s#path_selector_type * ) 

/* drivers/md/dm-region-hash.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##radix_tree_node
s##blk_trace
s##timer_rand_state
s##mtd_info
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##dm_table
s#dm_region_hash struct dm_region_hash { t#uint32_t region_size ; unsigned region_shift ; s#dm_dirty_log * log ; t#rwlock_t hash_lock ; t#mempool_t * region_pool ; unsigned mask ; unsigned nr_buckets ; unsigned prime ; unsigned shift ; s#list_head * buckets ; unsigned max_recovery ; t#spinlock_t region_lock ; t#atomic_t recovery_in_flight ; s#semaphore recovery_count ; s#list_head clean_regions ; s#list_head quiesced_regions ; s#list_head recovered_regions ; s#list_head failed_recovered_regions ; void * context ; t#sector_t target_begin ; void ( * dispatch_bios ) ( void * , s#bio_list * ) ; void ( * wakeup_workers ) ( void * ) ; void ( * wakeup_all_recovery_waiters ) ( void * ) ; } 
dm_rh_sector_to_region t#region_t dm_rh_sector_to_region ( s#dm_region_hash * , t#sector_t ) 
dm_rh_region_to_sector t#sector_t dm_rh_region_to_sector ( s#dm_region_hash * , t#region_t ) 
dm_rh_bio_to_region t#region_t dm_rh_bio_to_region ( s#dm_region_hash * , s#bio * ) 
s#dm_region struct dm_region { s#dm_region_hash * rh ; t#region_t key ; int state ; s#list_head hash_list ; s#list_head list ; t#atomic_t pending ; s#bio_list delayed_bios ; } 
dm_rh_region_context void * dm_rh_region_context ( s#dm_region * ) 
dm_rh_get_region_key t#region_t dm_rh_get_region_key ( s#dm_region * ) 
dm_rh_get_region_size t#sector_t dm_rh_get_region_size ( s#dm_region_hash * ) 
dm_region_hash_create s#dm_region_hash * dm_region_hash_create ( void * , void ( * ) ( void * , s#bio_list * ) , void ( * ) ( void * ) , void ( * ) ( void * ) , t#sector_t , unsigned , s#dm_dirty_log * , t#uint32_t , t#region_t ) 
dm_region_hash_destroy void dm_region_hash_destroy ( s#dm_region_hash * ) 
dm_rh_dirty_log s#dm_dirty_log * dm_rh_dirty_log ( s#dm_region_hash * ) 
dm_rh_get_state int dm_rh_get_state ( s#dm_region_hash * , t#region_t , int ) 
dm_rh_mark_nosync void dm_rh_mark_nosync ( s#dm_region_hash * , s#bio * , unsigned , int ) 
dm_rh_update_states void dm_rh_update_states ( s#dm_region_hash * , int ) 
dm_rh_inc void dm_rh_inc ( s#dm_region_hash * , t#region_t ) 
dm_rh_inc_pending void dm_rh_inc_pending ( s#dm_region_hash * , s#bio_list * ) 
dm_rh_dec void dm_rh_dec ( s#dm_region_hash * , t#region_t ) 
dm_rh_recovery_prepare void dm_rh_recovery_prepare ( s#dm_region_hash * ) 
dm_rh_recovery_start s#dm_region * dm_rh_recovery_start ( s#dm_region_hash * ) 
dm_rh_recovery_end void dm_rh_recovery_end ( s#dm_region * , int ) 
dm_rh_recovery_in_flight int dm_rh_recovery_in_flight ( s#dm_region_hash * ) 
dm_rh_flush int dm_rh_flush ( s#dm_region_hash * ) 
dm_rh_delay void dm_rh_delay ( s#dm_region_hash * , s#bio * ) 
dm_rh_delay_by_region void dm_rh_delay_by_region ( s#dm_region_hash * , s#bio * , t#region_t ) 
dm_rh_stop_recovery void dm_rh_stop_recovery ( s#dm_region_hash * ) 
dm_rh_start_recovery void dm_rh_start_recovery ( s#dm_region_hash * ) 

/* drivers/md/dm-table.o */
s##mapped_device
s##dm_md_mempools
s#dm_table struct dm_table { s#mapped_device * md ; t#atomic_t holders ; unsigned type ; unsigned int depth ; unsigned int counts [ 16 ] ; t#sector_t * index [ 16 ] ; unsigned int num_targets ; unsigned int num_allocated ; t#sector_t * highs ; s#dm_target * targets ; t#fmode_t mode ; s#list_head devices ; void ( * event_fn ) ( void * ) ; void * event_context ; s#dm_md_mempools * mempools ; } 
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##radix_tree_node
s##blk_trace
s##timer_rand_state
s##mtd_info
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
dm_set_device_limits int dm_set_device_limits ( s#dm_target * , s#dm_dev * , t#sector_t , t#sector_t , void * ) 
dm_vcalloc void * dm_vcalloc ( unsigned long , unsigned long ) 
dm_get_device int dm_get_device ( s#dm_target * , const char * , t#sector_t , t#sector_t , t#fmode_t , s#dm_dev * * ) 
dm_put_device void dm_put_device ( s#dm_target * , s#dm_dev * ) 
dm_table_event void dm_table_event ( s#dm_table * ) 
dm_table_get_size t#sector_t dm_table_get_size ( s#dm_table * ) 
dm_table_get_mode t#fmode_t dm_table_get_mode ( s#dm_table * ) 
dm_table_get_md s#mapped_device * dm_table_get_md ( s#dm_table * ) 
dm_table_put void dm_table_put ( s#dm_table * ) 
dm_table_get void dm_table_get ( s#dm_table * ) 
dm_table_unplug_all void dm_table_unplug_all ( s#dm_table * ) 

/* drivers/md/dm-target.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##radix_tree_node
s##blk_trace
s##timer_rand_state
s##mtd_info
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##dm_table
dm_register_target int dm_register_target ( s#target_type * ) 
dm_unregister_target void dm_unregister_target ( s#target_type * ) 

/* drivers/md/dm-uevent.o */
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##radix_tree_node
s##blk_trace
s##timer_rand_state
s##mtd_info
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##sysfs_dirent
dm_send_uevents extern void dm_send_uevents ( s#list_head * , s#kobject * ) 
e#dm_uevent_type enum dm_uevent_type { DM_UEVENT_PATH_FAILED , DM_UEVENT_PATH_REINSTATED , } 
s##dm_table
dm_path_uevent extern void dm_path_uevent ( e#dm_uevent_type , s#dm_target * , const char * , unsigned ) 

/* drivers/md/md.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##nameidata
s##vfsmount
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##radix_tree_node
s##blk_trace
s##timer_rand_state
s##mtd_info
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
md_new_event extern void md_new_event ( t#mddev_t * ) 
mddev_congested extern int mddev_congested ( t#mddev_t * , int ) 
sync_page_io extern int sync_page_io ( s#block_device * , t#sector_t , int , s#page * , int ) 
md_check_no_bitmap extern int md_check_no_bitmap ( t#mddev_t * ) 
md_integrity_register extern int md_integrity_register ( t#mddev_t * ) 
md_integrity_add_rdev void md_integrity_add_rdev ( t#mdk_rdev_t * , t#mddev_t * ) 
md_set_array_sectors extern void md_set_array_sectors ( t#mddev_t * , t#sector_t ) 
md_allow_write extern int md_allow_write ( t#mddev_t * ) 
md_do_sync extern void md_do_sync ( t#mddev_t * ) 
md_wait_for_blocked_rdev extern void md_wait_for_blocked_rdev ( t#mdk_rdev_t * , t#mddev_t * ) 
register_md_personality extern int register_md_personality ( s#mdk_personality * ) 
unregister_md_personality extern int unregister_md_personality ( s#mdk_personality * ) 
md_error extern void md_error ( t#mddev_t * , t#mdk_rdev_t * ) 
md_done_sync extern void md_done_sync ( t#mddev_t * , int , int ) 
md_write_start extern void md_write_start ( t#mddev_t * , s#bio * ) 
md_write_end extern void md_write_end ( t#mddev_t * ) 
t#mdk_thread_t typedef s#mdk_thread_s mdk_thread_t 
md_register_thread extern t#mdk_thread_t * md_register_thread ( void ( * ) ( t#mddev_t * ) , t#mddev_t * , const char * ) 
md_unregister_thread extern void md_unregister_thread ( t#mdk_thread_t * ) 
md_wakeup_thread extern void md_wakeup_thread ( t#mdk_thread_t * ) 
md_check_recovery extern void md_check_recovery ( t#mddev_t * ) 

/* drivers/md/raid6algos.o */
raid6_empty_zero_page extern const char raid6_empty_zero_page [ ( ( 1UL ) << 12 ) ] 
s#raid6_calls struct raid6_calls { void ( * gen_syndrome ) ( int , t#size_t , void * * ) ; int ( * valid ) ( void ) ; const char * name ; int prefer ; } 
raid6_call extern s#raid6_calls raid6_call 

/* drivers/md/raid6recov.o */
raid6_2data_recov void raid6_2data_recov ( int , t#size_t , int , int , void * * ) 
raid6_datap_recov void raid6_datap_recov ( int , t#size_t , int , void * * ) 

/* drivers/md/raid6tables.o */
raid6_gfmul extern const t#u8 raid6_gfmul [ 256 ] [ 256 ] 
raid6_gfexp extern const t#u8 raid6_gfexp [ 256 ] 
raid6_gfinv extern const t#u8 raid6_gfinv [ 256 ] 
raid6_gfexi extern const t#u8 raid6_gfexi [ 256 ] 

/* drivers/misc/c2port/core.o */
s#c2port_ops struct c2port_ops { unsigned short block_size ; unsigned short blocks_num ; void ( * access ) ( s#c2port_device * , int ) ; void ( * c2d_dir ) ( s#c2port_device * , int ) ; int ( * c2d_get ) ( s#c2port_device * ) ; void ( * c2d_set ) ( s#c2port_device * , int ) ; void ( * c2ck_set ) ( s#c2port_device * , int ) ; } 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##file
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s#c2port_device struct c2port_device { int flags_begin [ 0 ] ; ; unsigned int access : 1 ; unsigned int flash_access : 1 ; int flags_end [ 0 ] ; ; int id ; char name [ 32 ] ; s#c2port_ops * ops ; s#mutex mutex ; s#device * dev ; void * private_data ; } 
c2port_device_register extern s#c2port_device * c2port_device_register ( char * , s#c2port_ops * , void * ) 
c2port_device_unregister extern void c2port_device_unregister ( s#c2port_device * ) 

/* drivers/misc/eeprom/eeprom_93cx6.o */
s#eeprom_93cx6 struct eeprom_93cx6 { void * data ; void ( * register_read ) ( s#eeprom_93cx6 * ) ; void ( * register_write ) ( s#eeprom_93cx6 * ) ; int width ; char reg_data_in ; char reg_data_out ; char reg_data_clock ; char reg_chip_select ; } 
eeprom_93cx6_read extern void eeprom_93cx6_read ( s#eeprom_93cx6 * , const t#u8 , t#u16 * ) 
t#__le16 typedef t#__u16 __le16 
eeprom_93cx6_multiread extern void eeprom_93cx6_multiread ( s#eeprom_93cx6 * , const t#u8 , t#__le16 * , const t#u16 ) 

/* drivers/misc/enclosure.o */
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##file
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##exec_domain
s##compat_timespec
s##pollfd
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
e#enclosure_component_type enum enclosure_component_type { ENCLOSURE_COMPONENT_DEVICE = 0x01 , ENCLOSURE_COMPONENT_ARRAY_DEVICE = 0x17 , } 
e#enclosure_status enum enclosure_status { ENCLOSURE_STATUS_UNSUPPORTED = 0 , ENCLOSURE_STATUS_OK , ENCLOSURE_STATUS_CRITICAL , ENCLOSURE_STATUS_NON_CRITICAL , ENCLOSURE_STATUS_UNRECOVERABLE , ENCLOSURE_STATUS_NOT_INSTALLED , ENCLOSURE_STATUS_UNKNOWN , ENCLOSURE_STATUS_UNAVAILABLE , ENCLOSURE_STATUS_MAX } 
s#enclosure_component struct enclosure_component { void * scratch ; s#device cdev ; s#device * dev ; e#enclosure_component_type type ; int number ; int fault ; int active ; int locate ; e#enclosure_status status ; } 
e#enclosure_component_setting enum enclosure_component_setting { ENCLOSURE_SETTING_DISABLED = 0 , ENCLOSURE_SETTING_ENABLED = 1 , ENCLOSURE_SETTING_BLINK_A_ON_OFF = 2 , ENCLOSURE_SETTING_BLINK_A_OFF_ON = 3 , ENCLOSURE_SETTING_BLINK_B_ON_OFF = 6 , ENCLOSURE_SETTING_BLINK_B_OFF_ON = 7 , } 
s#enclosure_component_callbacks struct enclosure_component_callbacks { void ( * get_status ) ( s#enclosure_device * , s#enclosure_component * ) ; int ( * set_status ) ( s#enclosure_device * , s#enclosure_component * , e#enclosure_status ) ; void ( * get_fault ) ( s#enclosure_device * , s#enclosure_component * ) ; int ( * set_fault ) ( s#enclosure_device * , s#enclosure_component * , e#enclosure_component_setting ) ; void ( * get_active ) ( s#enclosure_device * , s#enclosure_component * ) ; int ( * set_active ) ( s#enclosure_device * , s#enclosure_component * , e#enclosure_component_setting ) ; void ( * get_locate ) ( s#enclosure_device * , s#enclosure_component * ) ; int ( * set_locate ) ( s#enclosure_device * , s#enclosure_component * , e#enclosure_component_setting ) ; } 
s#enclosure_device struct enclosure_device { void * scratch ; s#list_head node ; s#device edev ; s#enclosure_component_callbacks * cb ; int components ; s#enclosure_component component [ 0 ] ; } 
enclosure_find s#enclosure_device * enclosure_find ( s#device * , s#enclosure_device * ) 
enclosure_for_each_device int enclosure_for_each_device ( int ( * ) ( s#enclosure_device * , void * ) , void * ) 
enclosure_register s#enclosure_device * enclosure_register ( s#device * , const char * , int , s#enclosure_component_callbacks * ) 
enclosure_unregister void enclosure_unregister ( s#enclosure_device * ) 
enclosure_component_register s#enclosure_component * enclosure_component_register ( s#enclosure_device * , unsigned int , e#enclosure_component_type , const char * ) 
enclosure_add_device int enclosure_add_device ( s#enclosure_device * , int , s#device * ) 
enclosure_remove_device int enclosure_remove_device ( s#enclosure_device * , s#device * ) 

/* drivers/net/bonding_ipv6_ops.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##xfrm_policy
s##sec_path
s#in6_addr struct in6_addr { union { t#__u8 u6_addr8 [ 16 ] ; t#__be16 u6_addr16 [ 8 ] ; t#__be32 u6_addr32 [ 4 ] ; } in6_u ; } 
t#__sum16 typedef t#__u16 __sum16 
s#icmpv6_echo struct icmpv6_echo { t#__be16 identifier ; t#__be16 sequence ; } 
s#icmpv6_nd_advt struct icmpv6_nd_advt { t#__u32 router : 1 , solicited : 1 , override : 1 , reserved : 29 ; } 
s#icmpv6_nd_ra struct icmpv6_nd_ra { t#__u8 hop_limit ; t#__u8 managed : 1 , other : 1 , home_agent : 1 , router_pref : 2 , reserved : 3 ; t#__be16 rt_lifetime ; } 
s#icmp6hdr struct icmp6hdr { t#__u8 icmp6_type ; t#__u8 icmp6_code ; t#__sum16 icmp6_cksum ; union { t#__be32 un_data32 [ 1 ] ; t#__be16 un_data16 [ 2 ] ; t#__u8 un_data8 [ 4 ] ; s#icmpv6_echo u_echo ; s#icmpv6_nd_advt u_nd_advt ; s#icmpv6_nd_ra u_nd_ra ; } icmp6_dataun ; } 
s#inet6_ifaddr struct inet6_ifaddr { s#in6_addr addr ; t#__u32 prefix_len ; t#__u32 valid_lft ; t#__u32 prefered_lft ; t#atomic_t refcnt ; t#spinlock_t lock ; t#__u8 probes ; t#__u8 flags ; t#__u16 scope ; unsigned long cstamp ; unsigned long tstamp ; s#timer_list timer ; s#inet6_dev * idev ; s#rt6_info * rt ; s#inet6_ifaddr * lst_next ; s#inet6_ifaddr * if_next ; s#inet6_ifaddr * tmp_next ; s#inet6_ifaddr * ifpub ; int regen_count ; int dead ; } 
s#ip6_sf_list struct ip6_sf_list { s#ip6_sf_list * sf_next ; s#in6_addr sf_addr ; unsigned long sf_count [ 2 ] ; unsigned char sf_gsresp ; unsigned char sf_oldin ; unsigned char sf_crcount ; } 
s#ifmcaddr6 struct ifmcaddr6 { s#in6_addr mca_addr ; s#inet6_dev * idev ; s#ifmcaddr6 * next ; s#ip6_sf_list * mca_sources ; s#ip6_sf_list * mca_tomb ; unsigned int mca_sfmode ; unsigned char mca_crcount ; unsigned long mca_sfcount [ 2 ] ; s#timer_list mca_timer ; unsigned mca_flags ; int mca_users ; t#atomic_t mca_refcnt ; t#spinlock_t mca_lock ; unsigned long mca_cstamp ; unsigned long mca_tstamp ; } 
s#ifacaddr6 struct ifacaddr6 { s#in6_addr aca_addr ; s#inet6_dev * aca_idev ; s#rt6_info * aca_rt ; s#ifacaddr6 * aca_next ; int aca_users ; t#atomic_t aca_refcnt ; t#spinlock_t aca_lock ; unsigned long aca_cstamp ; unsigned long aca_tstamp ; } 
s#ipv6_devstat struct ipv6_devstat { s#proc_dir_entry * proc_dir_entry ; __typeof__ ( s#ipstats_mib ) * ipv6 [ 2 ] ; __typeof__ ( s#icmpv6_mib ) * icmpv6 [ 2 ] ; __typeof__ ( s#icmpv6msg_mib ) * icmpv6msg [ 2 ] ; } 
s#inet6_dev struct inet6_dev { s#net_device * dev ; s#inet6_ifaddr * addr_list ; s#ifmcaddr6 * mc_list ; s#ifmcaddr6 * mc_tomb ; t#rwlock_t mc_lock ; unsigned char mc_qrv ; unsigned char mc_gq_running ; unsigned char mc_ifc_count ; unsigned long mc_v1_seen ; unsigned long mc_maxdelay ; s#timer_list mc_gq_timer ; s#timer_list mc_ifc_timer ; s#ifacaddr6 * ac_list ; t#rwlock_t lock ; t#atomic_t refcnt ; t#__u32 if_flags ; int dead ; t#u8 rndid [ 8 ] ; s#timer_list regen_timer ; s#inet6_ifaddr * tempaddr_list ; s#neigh_parms * nd_parms ; s#inet6_dev * next ; s#ipv6_devconf cnf ; s#ipv6_devstat stats ; unsigned long tstamp ; s#rcu_head rcu ; } 
s#bonding_ipv6_ops struct bonding_ipv6_ops { s#sk_buff * ( * ndisc_build_skb ) ( s#net_device * , const s#in6_addr * , const s#in6_addr * , s#icmp6hdr * , const s#in6_addr * , int ) ; void ( * ndisc_send_skb ) ( s#sk_buff * , s#net_device * , s#neighbour * , const s#in6_addr * , const s#in6_addr * , s#icmp6hdr * ) ; void ( * in6_dev_put ) ( s#inet6_dev * ) ; int ( * register_inet6addr_notifier ) ( s#notifier_block * ) ; int ( * unregister_inet6addr_notifier ) ( s#notifier_block * ) ; } 
bonding_ipv6_ops extern s#bonding_ipv6_ops * bonding_ipv6_ops 
bonding_ipv6_ops_dummy extern s#bonding_ipv6_ops bonding_ipv6_ops_dummy 
bonding_ipv6_ops_sem extern s#rw_semaphore bonding_ipv6_ops_sem 

/* drivers/net/can/dev.o */
s##sock
s##neigh_parms
s##vlan_group
s##neighbour
s##wireless_dev
s##Qdisc
s##tvec_base
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ip_conntrack_stat
s##net_generic
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##sec_path
can_put_echo_skb void can_put_echo_skb ( s#sk_buff * , s#net_device * , int ) 
can_get_echo_skb void can_get_echo_skb ( s#net_device * , int ) 
can_free_echo_skb void can_free_echo_skb ( s#net_device * , int ) 
can_bus_off void can_bus_off ( s#net_device * ) 
alloc_candev s#net_device * alloc_candev ( int ) 
free_candev void free_candev ( s#net_device * ) 
open_candev int open_candev ( s#net_device * ) 
close_candev void close_candev ( s#net_device * ) 
register_candev int register_candev ( s#net_device * ) 
unregister_candev void unregister_candev ( s#net_device * ) 

/* drivers/net/mii.o */
s##sock
s##sec_path
s##neigh_parms
s##vlan_group
s##neighbour
s##wireless_dev
s##Qdisc
s##tvec_base
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ip_conntrack_stat
s##net_generic
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##rtnl_link_ops
s#mii_if_info struct mii_if_info { int phy_id ; int advertising ; int phy_id_mask ; int reg_num_mask ; unsigned int full_duplex : 1 ; unsigned int force_media : 1 ; unsigned int supports_gmii : 1 ; s#net_device * dev ; int ( * mdio_read ) ( s#net_device * , int , int ) ; void ( * mdio_write ) ( s#net_device * , int , int , int ) ; } 
mii_link_ok extern int mii_link_ok ( s#mii_if_info * ) 
mii_nway_restart extern int mii_nway_restart ( s#mii_if_info * ) 
mii_ethtool_gset extern int mii_ethtool_gset ( s#mii_if_info * , s#ethtool_cmd * ) 
mii_ethtool_sset extern int mii_ethtool_sset ( s#mii_if_info * , s#ethtool_cmd * ) 
mii_check_link extern void mii_check_link ( s#mii_if_info * ) 
mii_check_media extern unsigned int mii_check_media ( s#mii_if_info * , unsigned int , unsigned int ) 
mii_check_gmii_support extern int mii_check_gmii_support ( s#mii_if_info * ) 
s#mii_ioctl_data struct mii_ioctl_data { t#__u16 phy_id ; t#__u16 reg_num ; t#__u16 val_in ; t#__u16 val_out ; } 
generic_mii_ioctl extern int generic_mii_ioctl ( s#mii_if_info * , s#mii_ioctl_data * , int , unsigned int * ) 

/* drivers/net/ppp_generic.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##cdev
s##posix_acl
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_state
s##rtable
s##rt6_info
s##dn_route
s##xfrm_policy
s##sec_path
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_statistics
s##fib6_table
s##ip_conntrack_stat
s#net_generic struct net_generic { unsigned int len ; s#rcu_head rcu ; void * ptr [ 0 ] ; } 
s#ppp_channel_ops struct ppp_channel_ops { int ( * start_xmit ) ( s#ppp_channel * , s#sk_buff * ) ; int ( * ioctl ) ( s#ppp_channel * , unsigned int , unsigned long ) ; } 
s#ppp_channel struct ppp_channel { void * private ; s#ppp_channel_ops * ops ; int mtu ; int hdrlen ; void * ppp ; int speed ; int latency ; } 
ppp_register_net_channel extern int ppp_register_net_channel ( s#net * , s#ppp_channel * ) 
ppp_register_channel extern int ppp_register_channel ( s#ppp_channel * ) 
ppp_unregister_channel extern void ppp_unregister_channel ( s#ppp_channel * ) 
ppp_channel_index extern int ppp_channel_index ( s#ppp_channel * ) 
ppp_unit_number extern int ppp_unit_number ( s#ppp_channel * ) 
ppp_input extern void ppp_input ( s#ppp_channel * , s#sk_buff * ) 
ppp_input_error extern void ppp_input_error ( s#ppp_channel * , int ) 
ppp_output_wakeup extern void ppp_output_wakeup ( s#ppp_channel * ) 
s#compstat struct compstat { t#__u32 unc_bytes ; t#__u32 unc_packets ; t#__u32 comp_bytes ; t#__u32 comp_packets ; t#__u32 inc_bytes ; t#__u32 inc_packets ; t#__u32 in_count ; t#__u32 bytes_out ; double ratio ; } 
s#compressor struct compressor { int compress_proto ; void * ( * comp_alloc ) ( unsigned char * , int ) ; void ( * comp_free ) ( void * ) ; int ( * comp_init ) ( void * , unsigned char * , int , int , int , int ) ; void ( * comp_reset ) ( void * ) ; int ( * compress ) ( void * , unsigned char * , unsigned char * , int , int ) ; void ( * comp_stat ) ( void * , s#compstat * ) ; void * ( * decomp_alloc ) ( unsigned char * , int ) ; void ( * decomp_free ) ( void * ) ; int ( * decomp_init ) ( void * , unsigned char * , int , int , int , int , int ) ; void ( * decomp_reset ) ( void * ) ; int ( * decompress ) ( void * , unsigned char * , int , unsigned char * , int ) ; void ( * incomp ) ( void * , unsigned char * , int ) ; void ( * decomp_stat ) ( void * , s#compstat * ) ; s#module * owner ; unsigned int comp_extra ; } 
ppp_register_compressor extern int ppp_register_compressor ( s#compressor * ) 
ppp_unregister_compressor extern void ppp_unregister_compressor ( s#compressor * ) 

/* drivers/net/pppox.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##cdev
s##posix_acl
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_state
s##rtable
s##rt6_info
s##dn_route
s##xfrm_policy
s##sec_path
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_statistics
s##fib6_table
s##ip_conntrack_stat
s##net_generic
s#pppox_proto struct pppox_proto { int ( * create ) ( s#net * , s#socket * ) ; int ( * ioctl ) ( s#socket * , unsigned int , unsigned long ) ; s#module * owner ; } 
register_pppox_proto extern int register_pppox_proto ( int , s#pppox_proto * ) 
unregister_pppox_proto extern void unregister_pppox_proto ( int ) 
pppox_unbind_sock extern void pppox_unbind_sock ( s#sock * ) 
pppox_ioctl extern int pppox_ioctl ( s#socket * , unsigned int , unsigned long ) 

/* drivers/net/slhc.o */
t#byte_t typedef t#__u8 byte_t 
s#iphdr struct iphdr { t#__u8 version : 4 , ihl : 4 ; t#__u8 tos ; t#__be16 tot_len ; t#__be16 id ; t#__be16 frag_off ; t#__u8 ttl ; t#__u8 protocol ; t#__sum16 check ; t#__be32 saddr ; t#__be32 daddr ; } 
s#tcphdr struct tcphdr { t#__be16 source ; t#__be16 dest ; t#__be32 seq ; t#__be32 ack_seq ; t#__u16 doff : 4 , res1 : 4 , cwr : 1 , ece : 1 , urg : 1 , ack : 1 , psh : 1 , rst : 1 , syn : 1 , fin : 1 ; t#__be16 window ; t#__sum16 check ; t#__be16 urg_ptr ; } 
s#cstate struct cstate { t#byte_t cs_this ; s#cstate * next ; s#iphdr cs_ip ; s#tcphdr cs_tcp ; unsigned char cs_ipopt [ 64 ] ; unsigned char cs_tcpopt [ 64 ] ; int cs_hsize ; } 
t#int32 typedef t#__u32 int32 
s#slcompress struct slcompress { s#cstate * tstate ; s#cstate * rstate ; t#byte_t tslot_limit ; t#byte_t rslot_limit ; t#byte_t xmit_oldest ; t#byte_t xmit_current ; t#byte_t recv_current ; t#byte_t flags ; t#int32 sls_o_nontcp ; t#int32 sls_o_tcp ; t#int32 sls_o_uncompressed ; t#int32 sls_o_compressed ; t#int32 sls_o_searches ; t#int32 sls_o_misses ; t#int32 sls_i_uncompressed ; t#int32 sls_i_compressed ; t#int32 sls_i_error ; t#int32 sls_i_tossed ; t#int32 sls_i_runt ; t#int32 sls_i_badcheck ; } 
slhc_init s#slcompress * slhc_init ( int , int ) 
slhc_free void slhc_free ( s#slcompress * ) 
slhc_remember int slhc_remember ( s#slcompress * , unsigned char * , int ) 
slhc_compress int slhc_compress ( s#slcompress * , unsigned char * , int , unsigned char * , unsigned char * * , int ) 
slhc_uncompress int slhc_uncompress ( s#slcompress * , unsigned char * , int ) 
slhc_toss int slhc_toss ( s#slcompress * ) 

/* drivers/pps/kapi.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s#pps_source_info struct pps_source_info { char name [ 32 ] ; char path [ 32 ] ; int mode ; void ( * echo ) ( int , int , void * ) ; s#module * owner ; s#device * dev ; } 
pps_register_source extern int pps_register_source ( s#pps_source_info * , int ) 
pps_unregister_source extern void pps_unregister_source ( int ) 
s#pps_ktime struct pps_ktime { t#__s64 sec ; t#__s32 nsec ; t#__u32 flags ; } 
pps_event extern void pps_event ( int , s#pps_ktime * , int , void * ) 

/* drivers/s390/block/dasd.o */
s##ccw_device_private
s#ccw_device_id struct ccw_device_id { t#__u16 match_flags ; t#__u16 cu_type ; t#__u16 dev_type ; t#__u8 cu_model ; t#__u8 dev_model ; t#kernel_ulong_t driver_info ; } 
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##radix_tree_node
s##blk_trace
s##timer_rand_state
s##mtd_info
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s#ccw_driver struct ccw_driver { s#module * owner ; s#ccw_device_id * ids ; int ( * probe ) ( s#ccw_device * ) ; void ( * remove ) ( s#ccw_device * ) ; int ( * set_online ) ( s#ccw_device * ) ; int ( * set_offline ) ( s#ccw_device * ) ; int ( * notify ) ( s#ccw_device * , int ) ; void ( * shutdown ) ( s#ccw_device * ) ; int ( * prepare ) ( s#ccw_device * ) ; void ( * complete ) ( s#ccw_device * ) ; int ( * freeze ) ( s#ccw_device * ) ; int ( * thaw ) ( s#ccw_device * ) ; int ( * restore ) ( s#ccw_device * ) ; s#device_driver driver ; char * name ; } 
s#cmd_scsw struct cmd_scsw { t#__u32 key : 4 ; t#__u32 sctl : 1 ; t#__u32 eswf : 1 ; t#__u32 cc : 2 ; t#__u32 fmt : 1 ; t#__u32 pfch : 1 ; t#__u32 isic : 1 ; t#__u32 alcc : 1 ; t#__u32 ssi : 1 ; t#__u32 zcc : 1 ; t#__u32 ectl : 1 ; t#__u32 pno : 1 ; t#__u32 res : 1 ; t#__u32 fctl : 3 ; t#__u32 actl : 7 ; t#__u32 stctl : 5 ; t#__u32 cpa ; t#__u32 dstat : 8 ; t#__u32 cstat : 8 ; t#__u32 count : 16 ; } 
s#tm_scsw struct tm_scsw { t#u32 key : 4 ; t#u32 : 1 ; t#u32 eswf : 1 ; t#u32 cc : 2 ; t#u32 fmt : 3 ; t#u32 x : 1 ; t#u32 q : 1 ; t#u32 : 1 ; t#u32 ectl : 1 ; t#u32 pno : 1 ; t#u32 : 1 ; t#u32 fctl : 3 ; t#u32 actl : 7 ; t#u32 stctl : 5 ; t#u32 tcw ; t#u32 dstat : 8 ; t#u32 cstat : 8 ; t#u32 fcxs : 8 ; t#u32 schxs : 8 ; } 
u#scsw union scsw { s#cmd_scsw cmd ; s#tm_scsw tm ; } 
s#sublog struct sublog { t#__u32 res0 : 1 ; t#__u32 esf : 7 ; t#__u32 lpum : 8 ; t#__u32 arep : 1 ; t#__u32 fvf : 5 ; t#__u32 sacc : 2 ; t#__u32 termc : 2 ; t#__u32 devsc : 1 ; t#__u32 serr : 1 ; t#__u32 ioerr : 1 ; t#__u32 seqc : 3 ; } 
s#erw struct erw { t#__u32 res0 : 3 ; t#__u32 auth : 1 ; t#__u32 pvrf : 1 ; t#__u32 cpt : 1 ; t#__u32 fsavf : 1 ; t#__u32 cons : 1 ; t#__u32 scavf : 1 ; t#__u32 fsaf : 1 ; t#__u32 scnt : 6 ; t#__u32 res16 : 16 ; } 
s#esw0 struct esw0 { s#sublog sublog ; s#erw erw ; t#__u32 faddr [ 2 ] ; t#__u32 saddr ; } 
s#esw1 struct esw1 { t#__u8 zero0 ; t#__u8 lpum ; t#__u16 zero16 ; s#erw erw ; t#__u32 zeros [ 3 ] ; } 
s#esw2 struct esw2 { t#__u8 zero0 ; t#__u8 lpum ; t#__u16 dcti ; s#erw erw ; t#__u32 zeros [ 3 ] ; } 
s#esw3 struct esw3 { t#__u8 zero0 ; t#__u8 lpum ; t#__u16 res ; s#erw erw ; t#__u32 zeros [ 3 ] ; } 
s#irb struct irb { u#scsw scsw ; union { s#esw0 esw0 ; s#esw1 esw1 ; s#esw2 esw2 ; s#esw3 esw3 ; } esw ; t#__u8 ecw [ 32 ] ; } 
s#ccw_device struct ccw_device { t#spinlock_t * ccwlock ; s#ccw_device_private * private ; s#ccw_device_id id ; s#ccw_driver * drv ; s#device dev ; int online ; void ( * handler ) ( s#ccw_device * , unsigned long , s#irb * ) ; } 
dasd_generic_pm_freeze int dasd_generic_pm_freeze ( s#ccw_device * ) 
dasd_generic_restore_device int dasd_generic_restore_device ( s#ccw_device * ) 
s#tasklet_struct struct tasklet_struct { s#tasklet_struct * next ; unsigned long state ; t#atomic_t count ; void ( * func ) ( unsigned long ) ; unsigned long data ; } 
s#dasd_profile_info_t struct dasd_profile_info_t { unsigned int dasd_io_reqs ; unsigned int dasd_io_sects ; unsigned int dasd_io_secs [ 32 ] ; unsigned int dasd_io_times [ 32 ] ; unsigned int dasd_io_timps [ 32 ] ; unsigned int dasd_io_time1 [ 32 ] ; unsigned int dasd_io_time2 [ 32 ] ; unsigned int dasd_io_time2ps [ 32 ] ; unsigned int dasd_io_time3 [ 32 ] ; unsigned int dasd_io_nr_req [ 32 ] ; } 
s#dasd_block struct dasd_block { s#gendisk * gdp ; s#request_queue * request_queue ; t#spinlock_t request_queue_lock ; s#block_device * bdev ; t#atomic_t open_count ; unsigned long long blocks ; unsigned int bp_block ; unsigned int s2b_shift ; s#dasd_device * base ; s#list_head ccw_queue ; t#spinlock_t queue_lock ; t#atomic_t tasklet_scheduled ; s#tasklet_struct tasklet ; s#timer_list timer ; s#dasd_profile_info_t profile ; } 
s#dasd_ccw_req struct dasd_ccw_req { unsigned int magic ; s#list_head devlist ; s#list_head blocklist ; s#dasd_block * block ; s#dasd_device * memdev ; s#dasd_device * startdev ; void * cpaddr ; unsigned char cpmode ; char status ; short retries ; unsigned long flags ; unsigned long starttime ; int expires ; char lpm ; void * data ; int intrc ; s#irb irb ; s#dasd_ccw_req * refers ; void * function ; unsigned long long buildclk ; unsigned long long startclk ; unsigned long long stopclk ; unsigned long long endclk ; void ( * callback ) ( s#dasd_ccw_req * , void * ) ; void * callback_data ; } 
s#format_data_t struct format_data_t { unsigned int start_unit ; unsigned int stop_unit ; unsigned int blksize ; unsigned int intensity ; } 
t#dasd_erp_fn_t typedef s#dasd_ccw_req * ( * dasd_erp_fn_t ) ( s#dasd_ccw_req * ) 
s#dasd_information2_t struct dasd_information2_t { unsigned int devno ; unsigned int real_devno ; unsigned int schid ; unsigned int cu_type : 16 ; unsigned int cu_model : 8 ; unsigned int dev_type : 16 ; unsigned int dev_model : 8 ; unsigned int open_count ; unsigned int req_queue_len ; unsigned int chanq_len ; char type [ 4 ] ; unsigned int status ; unsigned int label_block ; unsigned int FBA_layout ; unsigned int characteristics_size ; unsigned int confdata_size ; char characteristics [ 64 ] ; char configuration_data [ 256 ] ; unsigned int format ; unsigned int features ; unsigned int reserved0 ; unsigned int reserved1 ; unsigned int reserved2 ; unsigned int reserved3 ; unsigned int reserved4 ; unsigned int reserved5 ; unsigned int reserved6 ; unsigned int reserved7 ; } 
s#dasd_discipline struct dasd_discipline { s#module * owner ; char ebcname [ 8 ] ; char name [ 8 ] ; int max_blocks ; s#list_head list ; int ( * check_device ) ( s#dasd_device * ) ; void ( * uncheck_device ) ( s#dasd_device * ) ; int ( * do_analysis ) ( s#dasd_block * ) ; int ( * ready_to_online ) ( s#dasd_device * ) ; int ( * online_to_ready ) ( s#dasd_device * ) ; s#dasd_ccw_req * ( * build_cp ) ( s#dasd_device * , s#dasd_block * , s#request * ) ; int ( * start_IO ) ( s#dasd_ccw_req * ) ; int ( * term_IO ) ( s#dasd_ccw_req * ) ; void ( * handle_terminated_request ) ( s#dasd_ccw_req * ) ; s#dasd_ccw_req * ( * format_device ) ( s#dasd_device * , s#format_data_t * ) ; int ( * free_cp ) ( s#dasd_ccw_req * , s#request * ) ; t#dasd_erp_fn_t ( * erp_action ) ( s#dasd_ccw_req * ) ; t#dasd_erp_fn_t ( * erp_postaction ) ( s#dasd_ccw_req * ) ; void ( * dump_sense ) ( s#dasd_device * , s#dasd_ccw_req * , s#irb * ) ; void ( * dump_sense_dbf ) ( s#dasd_device * , s#irb * , char * ) ; void ( * handle_unsolicited_interrupt ) ( s#dasd_device * , s#irb * ) ; int ( * fill_geometry ) ( s#dasd_block * , s#hd_geometry * ) ; int ( * fill_info ) ( s#dasd_device * , s#dasd_information2_t * ) ; int ( * ioctl ) ( s#dasd_block * , unsigned int , void * ) ; int ( * freeze ) ( s#dasd_device * ) ; int ( * restore ) ( s#dasd_device * ) ; } 
s#dasd_device struct dasd_device { s#dasd_block * block ; unsigned int devindex ; unsigned long flags ; unsigned short features ; s#dasd_ccw_req * eer_cqr ; s#dasd_discipline * discipline ; s#dasd_discipline * base_discipline ; char * private ; int state , target ; s#mutex state_mutex ; int stopped ; t#atomic_t ref_count ; s#list_head ccw_queue ; t#spinlock_t mem_lock ; void * ccw_mem ; void * erp_mem ; s#list_head ccw_chunks ; s#list_head erp_chunks ; t#atomic_t tasklet_scheduled ; s#tasklet_struct tasklet ; s#work_struct kick_work ; s#work_struct restore_device ; s#timer_list timer ; t#debug_info_t * debug_area ; s#ccw_device * cdev ; s#list_head alias_list ; } 
dasd_generic_read_dev_chars int dasd_generic_read_dev_chars ( s#dasd_device * , int , void * , int ) 
dasd_get_sense char * dasd_get_sense ( s#irb * ) 
dasd_debug_area extern t#debug_info_t * dasd_debug_area 
dasd_diag_discipline_pointer extern s#dasd_discipline * dasd_diag_discipline_pointer 
dasd_add_request_head void dasd_add_request_head ( s#dasd_ccw_req * ) 
dasd_add_request_tail void dasd_add_request_tail ( s#dasd_ccw_req * ) 
dasd_cancel_req int dasd_cancel_req ( s#dasd_ccw_req * ) 
dasd_device_clear_timer void dasd_device_clear_timer ( s#dasd_device * ) 
dasd_block_clear_timer void dasd_block_clear_timer ( s#dasd_block * ) 
dasd_enable_device void dasd_enable_device ( s#dasd_device * ) 
dasd_int_handler void dasd_int_handler ( s#ccw_device * , unsigned long , s#irb * ) 
dasd_kfree_request void dasd_kfree_request ( s#dasd_ccw_req * , s#dasd_device * ) 
dasd_kick_device void dasd_kick_device ( s#dasd_device * ) 
dasd_kmalloc_request s#dasd_ccw_req * dasd_kmalloc_request ( int , int , int , s#dasd_device * ) 
dasd_schedule_device_bh void dasd_schedule_device_bh ( s#dasd_device * ) 
dasd_schedule_block_bh void dasd_schedule_block_bh ( s#dasd_block * ) 
dasd_set_target_state void dasd_set_target_state ( s#dasd_device * , int ) 
dasd_device_set_timer void dasd_device_set_timer ( s#dasd_device * , int ) 
dasd_block_set_timer void dasd_block_set_timer ( s#dasd_block * , int ) 
dasd_sfree_request void dasd_sfree_request ( s#dasd_ccw_req * , s#dasd_device * ) 
dasd_sleep_on int dasd_sleep_on ( s#dasd_ccw_req * ) 
dasd_sleep_on_immediatly int dasd_sleep_on_immediatly ( s#dasd_ccw_req * ) 
dasd_sleep_on_interruptible int dasd_sleep_on_interruptible ( s#dasd_ccw_req * ) 
dasd_smalloc_request s#dasd_ccw_req * dasd_smalloc_request ( int , int , int , s#dasd_device * ) 
dasd_start_IO int dasd_start_IO ( s#dasd_ccw_req * ) 
dasd_term_IO int dasd_term_IO ( s#dasd_ccw_req * ) 
dasd_generic_probe int dasd_generic_probe ( s#ccw_device * , s#dasd_discipline * ) 
dasd_generic_remove void dasd_generic_remove ( s#ccw_device * ) 
dasd_generic_notify int dasd_generic_notify ( s#ccw_device * , int ) 
dasd_generic_set_online int dasd_generic_set_online ( s#ccw_device * , s#dasd_discipline * ) 
dasd_generic_set_offline int dasd_generic_set_offline ( s#ccw_device * ) 
dasd_generic_handle_state_change void dasd_generic_handle_state_change ( s#dasd_device * ) 
dasd_flush_device_queue int dasd_flush_device_queue ( s#dasd_device * ) 
dasd_alloc_block s#dasd_block * dasd_alloc_block ( void ) 
dasd_free_block void dasd_free_block ( s#dasd_block * ) 

/* drivers/s390/block/dasd_devmap.o */
s##array_cache
s##kmem_list3
dasd_page_cache extern s#kmem_cache * dasd_page_cache 
dasd_nopav extern int dasd_nopav 
dasd_nofcx extern int dasd_nofcx 
s##ccw_device_private
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##radix_tree_node
s##blk_trace
s##timer_rand_state
s##mtd_info
s##cdev
s##posix_acl
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s#dasd_uid struct dasd_uid { t#__u8 type ; char vendor [ 4 ] ; char serial [ 15 ] ; t#__u16 ssid ; t#__u8 real_unit_addr ; t#__u8 base_unit_addr ; char vduit [ 33 ] ; } 
dasd_get_uid int dasd_get_uid ( s#ccw_device * , s#dasd_uid * ) 
dasd_set_uid int dasd_set_uid ( s#ccw_device * , s#dasd_uid * ) 

/* drivers/s390/block/dasd_eer.o */
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##blk_trace
s##timer_rand_state
s##ccw_device_private
dasd_eer_write void dasd_eer_write ( s#dasd_device * , s#dasd_ccw_req * , unsigned int ) 

/* drivers/s390/block/dasd_erp.o */
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##blk_trace
s##timer_rand_state
s##ccw_device_private
dasd_log_sense_dbf void dasd_log_sense_dbf ( s#dasd_ccw_req * , s#irb * ) 
dasd_default_erp_action s#dasd_ccw_req * dasd_default_erp_action ( s#dasd_ccw_req * ) 
dasd_default_erp_postaction s#dasd_ccw_req * dasd_default_erp_postaction ( s#dasd_ccw_req * ) 
dasd_alloc_erp_request s#dasd_ccw_req * dasd_alloc_erp_request ( char * , int , int , s#dasd_device * ) 
dasd_free_erp_request void dasd_free_erp_request ( s#dasd_ccw_req * , s#dasd_device * ) 
dasd_log_sense void dasd_log_sense ( s#dasd_ccw_req * , s#irb * ) 

/* drivers/s390/char/keyboard.o */
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##sysfs_dirent
s##proc_dir_entry
t#fn_handler_fn typedef void ( fn_handler_fn ) ( s#kbd_data * ) 
s#kbdiacruc struct kbdiacruc { unsigned int diacr , base , result ; } 
s#kbd_data struct kbd_data { s#tty_struct * tty ; unsigned short * * key_maps ; char * * func_table ; t#fn_handler_fn * * fn_handler ; s#kbdiacruc * accent_table ; unsigned int accent_table_size ; unsigned int diacr ; unsigned short sysrq ; } 
kbd_ioctl int kbd_ioctl ( s#kbd_data * , s#file * , unsigned int , unsigned long ) 
kbd_ascebc void kbd_ascebc ( s#kbd_data * , unsigned char * ) 
kbd_free void kbd_free ( s#kbd_data * ) 
kbd_alloc s#kbd_data * kbd_alloc ( void ) 
kbd_keycode void kbd_keycode ( s#kbd_data * , unsigned int ) 

/* drivers/s390/char/raw3270.o */
s##ccw_device_private
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##file
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##exec_domain
s##compat_timespec
s##pollfd
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##device_private
s##dma_coherent_mem
s##class_private
s##bus_type_private
s##driver_private
s##tvec_base
s#raw3270 struct raw3270 { s#list_head list ; s#ccw_device * cdev ; int minor ; short model , rows , cols ; unsigned long flags ; s#list_head req_queue ; s#list_head view_list ; s#raw3270_view * view ; s#timer_list timer ; unsigned char * ascebc ; s#device * clttydev ; s#device * cltubdev ; s#raw3270_request init_request ; unsigned char init_data [ 256 ] ; } 
s#raw3270_fn struct raw3270_fn { int ( * activate ) ( s#raw3270_view * ) ; void ( * deactivate ) ( s#raw3270_view * ) ; int ( * intv ) ( s#raw3270_view * , s#raw3270_request * , s#irb * ) ; void ( * release ) ( s#raw3270_view * ) ; void ( * free ) ( s#raw3270_view * ) ; } 
s#raw3270_view struct raw3270_view { s#list_head list ; t#spinlock_t lock ; t#atomic_t ref_count ; s#raw3270 * dev ; s#raw3270_fn * fn ; unsigned int model ; unsigned int rows , cols ; unsigned char * ascebc ; } 
s#ccw1 struct ccw1 { t#__u8 cmd_code ; t#__u8 flags ; t#__u16 count ; t#__u32 cda ; } 
s#raw3270_request struct raw3270_request { s#list_head list ; s#raw3270_view * view ; s#ccw1 ccw ; void * buffer ; t#size_t size ; int rescnt ; int rc ; void ( * callback ) ( s#raw3270_request * , void * ) ; void * callback_data ; } 
raw3270_request_alloc s#raw3270_request * raw3270_request_alloc ( t#size_t ) 
raw3270_request_free void raw3270_request_free ( s#raw3270_request * ) 
raw3270_request_reset void raw3270_request_reset ( s#raw3270_request * ) 
raw3270_request_set_cmd void raw3270_request_set_cmd ( s#raw3270_request * , t#u8 ) 
raw3270_request_add_data int raw3270_request_add_data ( s#raw3270_request * , void * , t#size_t ) 
raw3270_request_set_data void raw3270_request_set_data ( s#raw3270_request * , void * , t#size_t ) 
s#idal_buffer struct idal_buffer { t#size_t size ; t#size_t page_order ; void * data [ 0 ] ; } 
raw3270_request_set_idal void raw3270_request_set_idal ( s#raw3270_request * , s#idal_buffer * ) 
raw3270_buffer_address void raw3270_buffer_address ( s#raw3270 * , char * , unsigned short ) 
raw3270_add_view int raw3270_add_view ( s#raw3270_view * , s#raw3270_fn * , int ) 
raw3270_del_view void raw3270_del_view ( s#raw3270_view * ) 
raw3270_find_view s#raw3270_view * raw3270_find_view ( s#raw3270_fn * , int ) 
raw3270_activate_view int raw3270_activate_view ( s#raw3270_view * ) 
raw3270_deactivate_view void raw3270_deactivate_view ( s#raw3270_view * ) 
raw3270_start int raw3270_start ( s#raw3270_view * , s#raw3270_request * ) 
raw3270_start_locked int raw3270_start_locked ( s#raw3270_view * , s#raw3270_request * ) 
raw3270_start_irq int raw3270_start_irq ( s#raw3270_view * , s#raw3270_request * ) 
raw3270_reset int raw3270_reset ( s#raw3270_view * ) 
raw3270_register_notifier int raw3270_register_notifier ( void ( * ) ( int , int ) ) 
raw3270_unregister_notifier void raw3270_unregister_notifier ( void ( * ) ( int , int ) ) 
raw3270_wait_queue extern t#wait_queue_head_t raw3270_wait_queue 

/* drivers/s390/char/sclp.o */
t#sclp_cmdw_t typedef unsigned int sclp_cmdw_t 
s#sclp_req struct sclp_req { s#list_head list ; t#sclp_cmdw_t command ; void * sccb ; char status ; int start_count ; void ( * callback ) ( s#sclp_req * , void * ) ; void * callback_data ; } 
sclp_add_request int sclp_add_request ( s#sclp_req * ) 
sclp_sync_wait void sclp_sync_wait ( void ) 
t#sccb_mask_t typedef t#u32 sccb_mask_t 
s#evbuf_header struct evbuf_header { t#u16 length ; t#u8 type ; t#u8 flags ; t#u16 _reserved ; } 
e#sclp_pm_event enum sclp_pm_event { SCLP_PM_EVENT_FREEZE , SCLP_PM_EVENT_THAW , SCLP_PM_EVENT_RESTORE , } 
s#sclp_register struct sclp_register { s#list_head list ; t#sccb_mask_t receive_mask ; t#sccb_mask_t send_mask ; t#sccb_mask_t sclp_receive_mask ; t#sccb_mask_t sclp_send_mask ; void ( * state_change_fn ) ( s#sclp_register * ) ; void ( * receiver_fn ) ( s#evbuf_header * ) ; void ( * pm_event_fn ) ( s#sclp_register * , e#sclp_pm_event ) ; int pm_event_posted ; } 
sclp_register int sclp_register ( s#sclp_register * ) 
sclp_unregister void sclp_unregister ( s#sclp_register * ) 
s#sccb_header struct sccb_header { t#u16 length ; t#u8 function_code ; t#u8 control_mask [ 3 ] ; t#u16 response_code ; } 
sclp_remove_processed int sclp_remove_processed ( s#sccb_header * ) 
sclp_deactivate int sclp_deactivate ( void ) 
sclp_reactivate int sclp_reactivate ( void ) 

/* drivers/s390/char/sclp_cpi_sys.o */
sclp_cpi_set_data int sclp_cpi_set_data ( const char * , const char * , const char * , t#u64 ) 

/* drivers/s390/char/tape_34xx.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_geometry
s##blk_trace
s##timer_rand_state
s##mtd_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##cdev
s##posix_acl
tape_34xx_dbf extern t#debug_info_t * tape_34xx_dbf 

/* drivers/s390/char/tape_3590.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_geometry
s##blk_trace
s##timer_rand_state
s##mtd_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##cdev
s##posix_acl
tape_3590_dbf extern t#debug_info_t * tape_3590_dbf 

/* drivers/s390/char/tape_class.o */
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##sysfs_dirent
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s#tape_class_device struct tape_class_device { s#cdev * char_device ; s#device * class_device ; char device_name [ 32 ] ; char mode_name [ 32 ] ; } 
register_tape_dev s#tape_class_device * register_tape_dev ( s#device * , t#dev_t , const s#file_operations * , char * , char * ) 
unregister_tape_dev void unregister_tape_dev ( s#device * , s#tape_class_device * ) 

/* drivers/s390/char/tape_core.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_geometry
s##blk_trace
s##timer_rand_state
s##mtd_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##cdev
s##posix_acl
tape_core_dbf extern t#debug_info_t * tape_core_dbf 
s##ccw_device_private
tape_generic_remove extern void tape_generic_remove ( s#ccw_device * ) 
tape_generic_probe extern int tape_generic_probe ( s#ccw_device * ) 
s##tape_class_device
e#tape_request_status enum tape_request_status { TAPE_REQUEST_INIT , TAPE_REQUEST_QUEUED , TAPE_REQUEST_IN_IO , TAPE_REQUEST_DONE , TAPE_REQUEST_CANCEL , TAPE_REQUEST_LONG_BUSY , } 
e#tape_op enum tape_op { TO_BLOCK , TO_BSB , TO_BSF , TO_DSE , TO_FSB , TO_FSF , TO_LBL , TO_NOP , TO_RBA , TO_RBI , TO_RFO , TO_REW , TO_RUN , TO_WRI , TO_WTM , TO_MSEN , TO_LOAD , TO_READ_CONFIG , TO_READ_ATTMSG , TO_DIS , TO_ASSIGN , TO_UNASSIGN , TO_CRYPT_ON , TO_CRYPT_OFF , TO_KEKL_SET , TO_KEKL_QUERY , TO_RDC , TO_SIZE , } 
s#tape_request struct tape_request { s#list_head list ; s#tape_device * device ; s#ccw1 * cpaddr ; void * cpdata ; e#tape_request_status status ; int options ; int retries ; int rescnt ; void ( * callback ) ( s#tape_request * , void * ) ; void * callback_data ; e#tape_op op ; int rc ; } 
t#tape_mtop_fn typedef int ( * tape_mtop_fn ) ( s#tape_device * , int ) 
s#tape_discipline struct tape_discipline { s#module * owner ; int ( * setup_device ) ( s#tape_device * ) ; void ( * cleanup_device ) ( s#tape_device * ) ; int ( * irq ) ( s#tape_device * , s#tape_request * , s#irb * ) ; s#tape_request * ( * read_block ) ( s#tape_device * , t#size_t ) ; s#tape_request * ( * write_block ) ( s#tape_device * , t#size_t ) ; void ( * process_eov ) ( s#tape_device * ) ; s#tape_request * ( * bread ) ( s#tape_device * , s#request * ) ; void ( * check_locate ) ( s#tape_device * , s#tape_request * ) ; void ( * free_bread ) ( s#tape_request * ) ; int ( * ioctl_fn ) ( s#tape_device * , unsigned int , unsigned long ) ; t#tape_mtop_fn * mtop_array ; } 
e#tape_state enum tape_state { TS_UNUSED = 0 , TS_IN_USE , TS_BLKUSE , TS_INIT , TS_NOT_OPER , TS_SIZE } 
e#tape_medium_state enum tape_medium_state { MS_UNKNOWN , MS_LOADED , MS_UNLOADED , MS_SIZE } 
s#tape_char_data struct tape_char_data { s#idal_buffer * idal_buf ; int block_size ; } 
s#tape_blk_data struct tape_blk_data { s#tape_device * device ; s#request_queue * request_queue ; t#spinlock_t request_queue_lock ; s#work_struct requeue_task ; t#atomic_t requeue_scheduled ; long block_position ; int medium_changed ; s#gendisk * disk ; } 
s#tape_device struct tape_device { s#list_head node ; int cdev_id ; s#ccw_device * cdev ; s#tape_class_device * nt ; s#tape_class_device * rt ; s#tape_discipline * discipline ; void * discdata ; long tape_generic_status ; t#wait_queue_head_t state_change_wq ; e#tape_state tape_state ; e#tape_medium_state medium_state ; unsigned char * modeset_byte ; t#atomic_t ref_count ; s#list_head req_queue ; t#wait_queue_head_t wait_queue ; int first_minor ; int required_tapemarks ; unsigned int bof ; s#tape_char_data char_data ; s#tape_blk_data blk_data ; s#delayed_work tape_dnr ; s#timer_list lb_timeout ; } 
tape_generic_online extern int tape_generic_online ( s#tape_device * , s#tape_discipline * ) 
tape_generic_offline extern int tape_generic_offline ( s#ccw_device * ) 
tape_generic_pm_suspend extern int tape_generic_pm_suspend ( s#ccw_device * ) 
tape_put_device extern s#tape_device * tape_put_device ( s#tape_device * ) 
tape_get_device_reference extern s#tape_device * tape_get_device_reference ( s#tape_device * ) 
tape_state_verbose extern const char * tape_state_verbose [ ] 
tape_op_verbose extern const char * tape_op_verbose [ ] 
tape_state_set extern void tape_state_set ( s#tape_device * , e#tape_state ) 
tape_med_state_set extern void tape_med_state_set ( s#tape_device * , e#tape_medium_state ) 
tape_alloc_request extern s#tape_request * tape_alloc_request ( int , int ) 
tape_free_request extern void tape_free_request ( s#tape_request * ) 
tape_dump_sense_dbf extern void tape_dump_sense_dbf ( s#tape_device * , s#tape_request * , s#irb * ) 
tape_do_io extern int tape_do_io ( s#tape_device * , s#tape_request * ) 
tape_do_io_async extern int tape_do_io_async ( s#tape_device * , s#tape_request * ) 
tape_do_io_interruptible extern int tape_do_io_interruptible ( s#tape_device * , s#tape_request * ) 
tape_cancel_io extern int tape_cancel_io ( s#tape_device * , s#tape_request * ) 
tape_mtop extern int tape_mtop ( s#tape_device * , int , int ) 

/* drivers/s390/char/tape_std.o */
s##ccw_device_private
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##timer_rand_state
s##mtd_info
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##tape_class_device
tape_std_assign int tape_std_assign ( s#tape_device * ) 
tape_std_unassign int tape_std_unassign ( s#tape_device * ) 
s#display_struct struct display_struct { char cntrl ; char message1 [ 8 ] ; char message2 [ 8 ] ; } 
tape_std_display int tape_std_display ( s#tape_device * , s#display_struct * ) 
tape_std_read_block_id int tape_std_read_block_id ( s#tape_device * , t#__u64 * ) 
tape_std_mtload int tape_std_mtload ( s#tape_device * , int ) 
tape_std_mtsetblk int tape_std_mtsetblk ( s#tape_device * , int ) 
tape_std_mtreset int tape_std_mtreset ( s#tape_device * , int ) 
tape_std_mtfsf int tape_std_mtfsf ( s#tape_device * , int ) 
tape_std_mtfsr int tape_std_mtfsr ( s#tape_device * , int ) 
tape_std_mtbsr int tape_std_mtbsr ( s#tape_device * , int ) 
tape_std_mtweof int tape_std_mtweof ( s#tape_device * , int ) 
tape_std_mtbsfm int tape_std_mtbsfm ( s#tape_device * , int ) 
tape_std_mtbsf int tape_std_mtbsf ( s#tape_device * , int ) 
tape_std_mtfsfm int tape_std_mtfsfm ( s#tape_device * , int ) 
tape_std_mtrew int tape_std_mtrew ( s#tape_device * , int ) 
tape_std_mtoffl int tape_std_mtoffl ( s#tape_device * , int ) 
tape_std_mtnop int tape_std_mtnop ( s#tape_device * , int ) 
tape_std_mteom int tape_std_mteom ( s#tape_device * , int ) 
tape_std_mtreten int tape_std_mtreten ( s#tape_device * , int ) 
tape_std_mterase int tape_std_mterase ( s#tape_device * , int ) 
tape_std_mtunload int tape_std_mtunload ( s#tape_device * , int ) 
tape_std_mtcompression int tape_std_mtcompression ( s#tape_device * , int ) 
tape_std_read_block s#tape_request * tape_std_read_block ( s#tape_device * , t#size_t ) 
tape_std_read_backward void tape_std_read_backward ( s#tape_device * , s#tape_request * ) 
tape_std_write_block s#tape_request * tape_std_write_block ( s#tape_device * , t#size_t ) 
tape_std_process_eov void tape_std_process_eov ( s#tape_device * ) 

/* drivers/s390/cio/airq.o */
t#adapter_int_handler_t typedef void ( * adapter_int_handler_t ) ( void * , void * ) 
s390_register_adapter_interrupt void * s390_register_adapter_interrupt ( t#adapter_int_handler_t , void * , t#u8 ) 
s390_unregister_adapter_interrupt void s390_unregister_adapter_interrupt ( void * , t#u8 ) 

/* drivers/s390/cio/ccwgroup.o */
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##file
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##exec_domain
s##compat_timespec
s##pollfd
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##ccw_device_private
s##irb
ccwgroup_create_from_string int ccwgroup_create_from_string ( s#device * , unsigned int , s#ccw_driver * , int , const char * ) 
s#ccwgroup_device struct ccwgroup_device { unsigned long creator_id ; enum { CCWGROUP_OFFLINE , CCWGROUP_ONLINE , } state ; t#atomic_t onoff ; s#mutex reg_mutex ; unsigned int count ; s#device dev ; s#ccw_device * cdev [ 0 ] ; } 
s#ccwgroup_driver struct ccwgroup_driver { s#module * owner ; char * name ; int max_slaves ; unsigned long driver_id ; int ( * probe ) ( s#ccwgroup_device * ) ; void ( * remove ) ( s#ccwgroup_device * ) ; int ( * set_online ) ( s#ccwgroup_device * ) ; int ( * set_offline ) ( s#ccwgroup_device * ) ; void ( * shutdown ) ( s#ccwgroup_device * ) ; int ( * prepare ) ( s#ccwgroup_device * ) ; void ( * complete ) ( s#ccwgroup_device * ) ; int ( * freeze ) ( s#ccwgroup_device * ) ; int ( * thaw ) ( s#ccwgroup_device * ) ; int ( * restore ) ( s#ccwgroup_device * ) ; s#device_driver driver ; } 
ccwgroup_driver_register extern int ccwgroup_driver_register ( s#ccwgroup_driver * ) 
ccwgroup_driver_unregister extern void ccwgroup_driver_unregister ( s#ccwgroup_driver * ) 
ccwgroup_probe_ccwdev extern int ccwgroup_probe_ccwdev ( s#ccw_device * ) 
ccwgroup_remove_ccwdev extern void ccwgroup_remove_ccwdev ( s#ccw_device * ) 

/* drivers/s390/cio/chp.o */
s#subchannel_id struct subchannel_id { t#__u32 cssid : 8 ; t#__u32 : 4 ; t#__u32 m : 1 ; t#__u32 ssid : 2 ; t#__u32 one : 1 ; t#__u32 sch_no : 16 ; } 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s#pmcw struct pmcw { t#u32 intparm ; t#u32 qf : 1 ; t#u32 w : 1 ; t#u32 isc : 3 ; t#u32 res5 : 3 ; t#u32 ena : 1 ; t#u32 lm : 2 ; t#u32 mme : 2 ; t#u32 mp : 1 ; t#u32 tf : 1 ; t#u32 dnv : 1 ; t#u32 dev : 16 ; t#u8 lpm ; t#u8 pnom ; t#u8 lpum ; t#u8 pim ; t#u16 mbi ; t#u8 pom ; t#u8 pam ; t#u8 chpid [ 8 ] ; t#u32 unused1 : 8 ; t#u32 st : 3 ; t#u32 unused2 : 18 ; t#u32 mbfc : 1 ; t#u32 xmwme : 1 ; t#u32 csense : 1 ; } 
s#schib struct schib { s#pmcw pmcw ; u#scsw scsw ; t#__u64 mba ; t#__u8 mda [ 4 ] ; } 
s#chp_id struct chp_id { t#u8 reserved1 ; t#u8 cssid ; t#u8 reserved2 ; t#u8 id ; } 
s#chsc_ssd_info struct chsc_ssd_info { t#u8 path_mask ; t#u8 fla_valid_mask ; s#chp_id chpid [ 8 ] ; t#u16 fla [ 8 ] ; } 
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s#css_device_id struct css_device_id { t#__u8 match_flags ; t#__u8 type ; t#__u16 pad2 ; t#__u32 pad3 ; t#kernel_ulong_t driver_data ; } 
s#chp_link struct chp_link { s#chp_id chpid ; t#u32 fla_mask ; t#u16 fla ; } 
s#css_driver struct css_driver { s#module * owner ; s#css_device_id * subchannel_type ; s#device_driver drv ; void ( * irq ) ( s#subchannel * ) ; int ( * chp_event ) ( s#subchannel * , s#chp_link * , int ) ; int ( * sch_event ) ( s#subchannel * , int ) ; int ( * probe ) ( s#subchannel * ) ; int ( * remove ) ( s#subchannel * ) ; void ( * shutdown ) ( s#subchannel * ) ; int ( * prepare ) ( s#subchannel * ) ; void ( * complete ) ( s#subchannel * ) ; int ( * freeze ) ( s#subchannel * ) ; int ( * thaw ) ( s#subchannel * ) ; int ( * restore ) ( s#subchannel * ) ; void ( * settle ) ( void ) ; const char * name ; } 
e#sch_todo enum sch_todo { SCH_TODO_NOTHING , SCH_TODO_UNREG , } 
s#schib_config struct schib_config { t#u64 mba ; t#u32 intparm ; t#u16 mbi ; t#u32 isc : 3 ; t#u32 ena : 1 ; t#u32 mme : 2 ; t#u32 mp : 1 ; t#u32 csense : 1 ; t#u32 mbfc : 1 ; } 
s#subchannel struct subchannel { s#subchannel_id schid ; t#spinlock_t * lock ; s#mutex reg_mutex ; enum { SUBCHANNEL_TYPE_IO = 0 , SUBCHANNEL_TYPE_CHSC = 1 , SUBCHANNEL_TYPE_MSG = 2 , SUBCHANNEL_TYPE_ADM = 3 , } st ; struct { unsigned int suspend : 1 ; unsigned int prefetch : 1 ; unsigned int inter : 1 ; } __attribute__ ( ( packed ) ) options ; t#__u8 vpm ; t#__u8 lpm ; t#__u8 opm ; s#schib schib ; int isc ; s#chsc_ssd_info ssd_info ; s#device dev ; s#css_driver * driver ; void * private ; e#sch_todo todo ; s#work_struct todo_work ; s#schib_config config ; } 
chp_get_sch_opm t#u8 chp_get_sch_opm ( s#subchannel * ) 
chp_ssd_get_mask int chp_ssd_get_mask ( s#chsc_ssd_info * , s#chp_link * ) 

/* drivers/s390/cio/chsc.o */
chsc_error_from_response int chsc_error_from_response ( int ) 
s#chsc_response_struct struct chsc_response_struct { t#__u16 length ; t#__u16 code ; t#__u32 parms ; t#__u8 data [ ( ( 1UL ) << 12 ) - 8 ] ; } 
chsc_determine_channel_path_desc int chsc_determine_channel_path_desc ( s#chp_id , int , int , int , int , s#chsc_response_struct * ) 
s#css_general_char struct css_general_char { t#u64 : 12 ; t#u32 dynio : 1 ; t#u32 : 28 ; t#u32 aif : 1 ; t#u32 : 3 ; t#u32 mcss : 1 ; t#u32 fcs : 1 ; t#u32 : 1 ; t#u32 ext_mb : 1 ; t#u32 : 7 ; t#u32 aif_tdd : 1 ; t#u32 : 1 ; t#u32 qebsm : 1 ; t#u32 : 8 ; t#u32 aif_osa : 1 ; t#u32 : 14 ; t#u32 cib : 1 ; t#u32 : 5 ; t#u32 fcx : 1 ; t#u32 : 7 ; } 
css_general_characteristics extern s#css_general_char css_general_characteristics 
s#css_chsc_char struct css_chsc_char { t#u64 res ; t#u64 : 20 ; t#u32 secm : 1 ; t#u32 : 1 ; t#u32 scmc : 1 ; t#u32 : 20 ; t#u32 scssc : 1 ; t#u32 scsscf : 1 ; t#u32 : 19 ; } 
css_chsc_characteristics extern s#css_chsc_char css_chsc_characteristics 

/* drivers/s390/cio/cio.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
cio_update_schib extern int cio_update_schib ( s#subchannel * ) 
cio_enable_subchannel extern int cio_enable_subchannel ( s#subchannel * , t#u32 ) 
cio_disable_subchannel extern int cio_disable_subchannel ( s#subchannel * ) 

/* drivers/s390/cio/cmf.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##file
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##chp_link
e#io_status enum io_status { IO_DONE , IO_RUNNING , IO_STATUS_ERROR , IO_PATH_ERROR , IO_REJECTED , IO_KILLED } 
s#ccw_request struct ccw_request { s#ccw1 * cp ; unsigned long timeout ; t#u16 maxretries ; t#u8 lpm ; int ( * check ) ( s#ccw_device * , void * ) ; e#io_status ( * filter ) ( s#ccw_device * , void * , s#irb * , e#io_status ) ; void ( * callback ) ( s#ccw_device * , void * , int ) ; void * data ; t#u16 mask ; t#u16 retries ; int drc ; int cancel : 1 ; int done : 1 ; } 
s##qdio_irq
s#ciw struct ciw { t#__u32 et : 2 ; t#__u32 reserved : 2 ; t#__u32 ct : 4 ; t#__u32 cmd : 8 ; t#__u32 count : 16 ; } 
s#senseid struct senseid { t#u8 reserved ; t#u16 cu_type ; t#u8 cu_model ; t#u16 dev_type ; t#u8 dev_model ; t#u8 unused ; s#ciw ciw [ 8 ] ; } 
s#path_state struct path_state { t#__u8 state1 : 2 ; t#__u8 state2 : 2 ; t#__u8 state3 : 1 ; t#__u8 resvd : 3 ; } 
s#extended_cssid struct extended_cssid { t#u8 version ; t#u8 cssid ; } 
s#pgid struct pgid { union { t#__u8 fc ; s#path_state ps ; } __attribute__ ( ( packed ) ) inf ; union { t#__u32 cpu_addr : 16 ; s#extended_cssid ext_cssid ; } __attribute__ ( ( packed ) ) pgid_high ; t#__u32 cpu_id : 24 ; t#__u32 cpu_model : 16 ; t#__u32 tod_high ; } 
e#cdev_todo enum cdev_todo { CDEV_TODO_NOTHING , CDEV_TODO_ENABLE_CMF , CDEV_TODO_REBIND , CDEV_TODO_REGISTER , CDEV_TODO_UNREG , CDEV_TODO_UNREG_EVAL , } 
s##tvec_base
s#ccw_device_private struct ccw_device_private { s#ccw_device * cdev ; s#subchannel * sch ; int state ; t#atomic_t onoff ; s#ccw_dev_id dev_id ; s#subchannel_id schid ; s#ccw_request req ; int iretry ; t#u8 pgid_valid_mask ; t#u8 pgid_todo_mask ; struct { unsigned int fast : 1 ; unsigned int repall : 1 ; unsigned int pgroup : 1 ; unsigned int force : 1 ; unsigned int mpath : 1 ; } __attribute__ ( ( packed ) ) options ; struct { unsigned int esid : 1 ; unsigned int dosense : 1 ; unsigned int doverify : 1 ; unsigned int donotify : 1 ; unsigned int recog_done : 1 ; unsigned int fake_irb : 1 ; unsigned int resuming : 1 ; unsigned int pgroup : 1 ; unsigned int mpath : 1 ; unsigned int initialized : 1 ; } __attribute__ ( ( packed ) ) flags ; unsigned long intparm ; s#qdio_irq * qdio_data ; s#irb irb ; s#senseid senseid ; s#pgid pgid [ 8 ] ; s#ccw1 iccws [ 2 ] ; s#work_struct todo_work ; e#cdev_todo todo ; t#wait_queue_head_t wait_q ; s#timer_list timer ; void * cmb ; s#list_head cmb_list ; t#u64 cmb_start_time ; void * cmb_wait ; } 
enable_cmf extern int enable_cmf ( s#ccw_device * ) 
disable_cmf extern int disable_cmf ( s#ccw_device * ) 
cmf_read extern t#u64 cmf_read ( s#ccw_device * , int ) 
s#cmbdata struct cmbdata { t#__u64 size ; t#__u64 elapsed_time ; t#__u64 ssch_rsch_count ; t#__u64 sample_count ; t#__u64 device_connect_time ; t#__u64 function_pending_time ; t#__u64 device_disconnect_time ; t#__u64 control_unit_queuing_time ; t#__u64 device_active_only_time ; t#__u64 device_busy_time ; t#__u64 initial_command_response_time ; } 
cmf_readall extern int cmf_readall ( s#ccw_device * , s#cmbdata * ) 

/* drivers/s390/cio/css.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
css_sch_device_unregister extern void css_sch_device_unregister ( s#subchannel * ) 
css_sch_is_valid int css_sch_is_valid ( s#schib * ) 
css_schedule_reprobe extern void css_schedule_reprobe ( void ) 
css_driver_register extern int css_driver_register ( s#css_driver * ) 
css_driver_unregister extern void css_driver_unregister ( s#css_driver * ) 
css_bus_type extern s#bus_type css_bus_type 

/* drivers/s390/cio/device.o */
ccw_device_force_console extern int ccw_device_force_console ( void ) 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##qdio_irq
ccw_device_set_online extern int ccw_device_set_online ( s#ccw_device * ) 
ccw_device_set_offline extern int ccw_device_set_offline ( s#ccw_device * ) 
ccw_driver_register extern int ccw_driver_register ( s#ccw_driver * ) 
ccw_driver_unregister extern void ccw_driver_unregister ( s#ccw_driver * ) 
get_ccwdev_by_busid extern s#ccw_device * get_ccwdev_by_busid ( s#ccw_driver * , const char * ) 
ccw_bus_type extern s#bus_type ccw_bus_type 
s##workqueue_struct
ccw_device_work extern s#workqueue_struct * ccw_device_work 
ccw_device_get_subchannel_id extern s#subchannel_id ccw_device_get_subchannel_id ( s#ccw_device * ) 

/* drivers/s390/cio/device_fsm.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##qdio_irq
ccw_device_set_timeout void ccw_device_set_timeout ( s#ccw_device * , int ) 

/* drivers/s390/cio/device_ops.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##qdio_irq
ccw_device_is_pathgroup int ccw_device_is_pathgroup ( s#ccw_device * ) 
ccw_device_is_multipath int ccw_device_is_multipath ( s#ccw_device * ) 
ccw_device_get_id extern void ccw_device_get_id ( s#ccw_device * , s#ccw_dev_id * ) 
s#tcw struct tcw { t#u32 format : 2 ; t#u32 : 6 ; t#u32 flags : 24 ; t#u32 : 8 ; t#u32 tccbl : 6 ; t#u32 r : 1 ; t#u32 w : 1 ; t#u32 : 16 ; t#u64 output ; t#u64 input ; t#u64 tsb ; t#u64 tccb ; t#u32 output_count ; t#u32 input_count ; t#u32 : 32 ; t#u32 : 32 ; t#u32 : 32 ; t#u32 intrg ; } 
ccw_device_tm_start_key int ccw_device_tm_start_key ( s#ccw_device * , s#tcw * , unsigned long , t#u8 , t#u8 ) 
ccw_device_tm_start_timeout_key int ccw_device_tm_start_timeout_key ( s#ccw_device * , s#tcw * , unsigned long , t#u8 , t#u8 , int ) 
ccw_device_tm_start int ccw_device_tm_start ( s#ccw_device * , s#tcw * , unsigned long , t#u8 ) 
ccw_device_tm_start_timeout int ccw_device_tm_start_timeout ( s#ccw_device * , s#tcw * , unsigned long , t#u8 , int ) 
ccw_device_tm_intrg int ccw_device_tm_intrg ( s#ccw_device * ) 
ccw_device_set_options_mask extern int ccw_device_set_options_mask ( s#ccw_device * , unsigned long ) 
ccw_device_set_options extern int ccw_device_set_options ( s#ccw_device * , unsigned long ) 
ccw_device_clear_options extern void ccw_device_clear_options ( s#ccw_device * , unsigned long ) 
ccw_device_clear extern int ccw_device_clear ( s#ccw_device * , unsigned long ) 
ccw_device_halt extern int ccw_device_halt ( s#ccw_device * , unsigned long ) 
ccw_device_resume extern int ccw_device_resume ( s#ccw_device * ) 
ccw_device_start_timeout extern int ccw_device_start_timeout ( s#ccw_device * , s#ccw1 * , unsigned long , t#__u8 , unsigned long , int ) 
ccw_device_start extern int ccw_device_start ( s#ccw_device * , s#ccw1 * , unsigned long , t#__u8 , unsigned long ) 
ccw_device_start_timeout_key extern int ccw_device_start_timeout_key ( s#ccw_device * , s#ccw1 * , unsigned long , t#__u8 , t#__u8 , unsigned long , int ) 
ccw_device_start_key extern int ccw_device_start_key ( s#ccw_device * , s#ccw1 * , unsigned long , t#__u8 , t#__u8 , unsigned long ) 
ccw_device_get_ciw extern s#ciw * ccw_device_get_ciw ( s#ccw_device * , t#__u32 ) 
ccw_device_get_path_mask extern t#__u8 ccw_device_get_path_mask ( s#ccw_device * ) 
_ccw_device_get_subchannel_number extern int _ccw_device_get_subchannel_number ( s#ccw_device * ) 
ccw_device_get_chp_desc extern void * ccw_device_get_chp_desc ( s#ccw_device * , int ) 

/* drivers/s390/cio/fcx.o */
tcw_get_intrg s#tcw * tcw_get_intrg ( s#tcw * ) 
tcw_get_data void * tcw_get_data ( s#tcw * ) 
s#tccb_tcah struct tccb_tcah { t#u32 format : 8 ; t#u32 : 24 ; t#u32 : 24 ; t#u32 tcal : 8 ; t#u32 sac : 16 ; t#u32 : 8 ; t#u32 prio : 8 ; t#u32 : 32 ; } 
s#tccb struct tccb { s#tccb_tcah tcah ; t#u8 tca [ 0 ] ; } 
tcw_get_tccb s#tccb * tcw_get_tccb ( s#tcw * ) 
s#tsa_iostat struct tsa_iostat { t#u32 dev_time ; t#u32 def_time ; t#u32 queue_time ; t#u32 dev_busy_time ; t#u32 dev_act_time ; t#u8 sense [ 32 ] ; } 
s#tsa_ddpc struct tsa_ddpc { t#u32 : 24 ; t#u32 rc : 8 ; t#u8 rcq [ 16 ] ; t#u8 sense [ 32 ] ; } 
s#tsa_intrg struct tsa_intrg { t#u32 format : 8 ; t#u32 flags : 8 ; t#u32 cu_state : 8 ; t#u32 dev_state : 8 ; t#u32 op_state : 8 ; t#u32 : 24 ; t#u8 sd_info [ 12 ] ; t#u32 dl_id ; t#u8 dd_data [ 28 ] ; } 
s#tsb struct tsb { t#u32 length : 8 ; t#u32 flags : 8 ; t#u32 dcw_offset : 16 ; t#u32 count ; t#u32 : 32 ; union { s#tsa_iostat iostat ; s#tsa_ddpc ddpc ; s#tsa_intrg intrg ; } __attribute__ ( ( packed ) ) tsa ; } 
tcw_get_tsb s#tsb * tcw_get_tsb ( s#tcw * ) 
tcw_init void tcw_init ( s#tcw * , int , int ) 
tcw_finalize void tcw_finalize ( s#tcw * , int ) 
tcw_set_intrg void tcw_set_intrg ( s#tcw * , s#tcw * ) 
tcw_set_data void tcw_set_data ( s#tcw * , void * , int ) 
tcw_set_tccb void tcw_set_tccb ( s#tcw * , s#tccb * ) 
tcw_set_tsb void tcw_set_tsb ( s#tcw * , s#tsb * ) 
tccb_init void tccb_init ( s#tccb * , t#size_t , t#u32 ) 
tsb_init void tsb_init ( s#tsb * ) 
s#dcw struct dcw { t#u32 cmd : 8 ; t#u32 flags : 8 ; t#u32 : 8 ; t#u32 cd_count : 8 ; t#u32 count ; t#u8 cd [ 0 ] ; } 
tccb_add_dcw s#dcw * tccb_add_dcw ( s#tccb * , t#size_t , t#u8 , t#u8 , void * , t#u8 , t#u32 ) 
s#tidaw struct tidaw { t#u32 flags : 8 ; t#u32 : 24 ; t#u32 count ; t#u64 addr ; } 
tcw_add_tidaw s#tidaw * tcw_add_tidaw ( s#tcw * , int , t#u8 , void * , t#u32 ) 

/* drivers/s390/cio/isc.o */
isc_register void isc_register ( unsigned int ) 
isc_unregister void isc_unregister ( unsigned int ) 

/* drivers/s390/cio/itcw.o */
s#itcw struct itcw { s#tcw * tcw ; s#tcw * intrg_tcw ; int num_tidaws ; int max_tidaws ; int intrg_num_tidaws ; int intrg_max_tidaws ; } 
itcw_get_tcw s#tcw * itcw_get_tcw ( s#itcw * ) 
itcw_calc_size t#size_t itcw_calc_size ( int , int , int ) 
itcw_init s#itcw * itcw_init ( void * , t#size_t , int , int , int , int ) 
itcw_add_dcw s#dcw * itcw_add_dcw ( s#itcw * , t#u8 , t#u8 , void * , t#u8 , t#u32 ) 
itcw_add_tidaw s#tidaw * itcw_add_tidaw ( s#itcw * , t#u8 , void * , t#u32 ) 
itcw_set_data void itcw_set_data ( s#itcw * , void * , int ) 
itcw_finalize void itcw_finalize ( s#itcw * ) 

/* drivers/s390/cio/qdio_main.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##chp_link
s#qib struct qib { t#u32 qfmt : 8 ; t#u32 pfmt : 8 ; t#u32 rflags : 8 ; t#u32 ac : 8 ; t#u32 : 32 ; t#u64 isliba ; t#u64 osliba ; t#u32 : 32 ; t#u32 : 32 ; t#u8 ebcnam [ 8 ] ; t#u8 res [ 88 ] ; t#u8 parm [ 128 ] ; } 
e#qdio_irq_states enum qdio_irq_states { QDIO_IRQ_STATE_INACTIVE , QDIO_IRQ_STATE_ESTABLISHED , QDIO_IRQ_STATE_ACTIVE , QDIO_IRQ_STATE_STOPPED , QDIO_IRQ_STATE_CLEANUP , QDIO_IRQ_STATE_ERR , NR_QDIO_IRQ_STATES , } 
s#siga_flag struct siga_flag { t#u8 input : 1 ; t#u8 output : 1 ; t#u8 sync : 1 ; t#u8 no_sync_ti : 1 ; t#u8 no_sync_out_ti : 1 ; t#u8 no_sync_out_pci : 1 ; t#u8 : 2 ; } 
s#qdio_ssqd_desc struct qdio_ssqd_desc { t#u8 flags ; t#u8 : 8 ; t#u16 sch ; t#u8 qfmt ; t#u8 parm ; t#u8 qdioac1 ; t#u8 sch_class ; t#u8 pcnt ; t#u8 icnt ; t#u8 : 8 ; t#u8 ocnt ; t#u8 : 8 ; t#u8 mbccnt ; t#u16 qdioac2 ; t#u64 sch_token ; t#u8 mro ; t#u8 mri ; t#u8 : 8 ; t#u8 sbalic ; t#u16 : 16 ; t#u8 : 8 ; t#u8 mmwc ; } 
s#qdesfmt0 struct qdesfmt0 { t#u64 sliba ; t#u64 sla ; t#u64 slsba ; t#u32 : 32 ; t#u32 akey : 4 ; t#u32 bkey : 4 ; t#u32 ckey : 4 ; t#u32 dkey : 4 ; t#u32 : 16 ; } 
s#qdr struct qdr { t#u32 qfmt : 8 ; t#u32 pfmt : 8 ; t#u32 : 8 ; t#u32 ac : 8 ; t#u32 : 8 ; t#u32 iqdcnt : 8 ; t#u32 : 8 ; t#u32 oqdcnt : 8 ; t#u32 : 8 ; t#u32 iqdsz : 8 ; t#u32 : 8 ; t#u32 oqdsz : 8 ; t#u32 res [ 9 ] ; t#u64 qiba ; t#u32 : 32 ; t#u32 qkey : 4 ; t#u32 : 28 ; s#qdesfmt0 qdf0 [ 126 ] ; } 
s#slsb struct slsb { t#u8 val [ 128 ] ; } 
s#qdio_input_q struct qdio_input_q { int polling ; int ack_start ; int ack_count ; t#u64 timestamp ; } 
s#qdio_output_q struct qdio_output_q { int pci_out_enabled ; int use_enh_siga ; s#timer_list timer ; } 
t#qdio_handler_t typedef void qdio_handler_t ( s#ccw_device * , unsigned int , int , int , int , unsigned long ) 
s#sl_element struct sl_element { unsigned long sbal ; } 
s#sl struct sl { s#sl_element element [ 128 ] ; } 
s#qdio_buffer_element struct qdio_buffer_element { t#u32 flags ; t#u32 length ; void * addr ; } 
s#qdio_buffer struct qdio_buffer { s#qdio_buffer_element element [ 16 ] ; } 
s#slibe struct slibe { t#u64 parms ; } 
s#slib struct slib { t#u64 nsliba ; t#u64 sla ; t#u64 slsba ; t#u8 res [ 1000 ] ; s#slibe slibe [ 128 ] ; } 
s#qdio_q struct qdio_q { s#slsb slsb ; union { s#qdio_input_q in ; s#qdio_output_q out ; } u ; int nr ; int mask ; int is_input_q ; s#list_head entry ; t#qdio_handler_t ( * handler ) ; int first_to_check ; int last_move ; int first_to_kick ; t#atomic_t nr_buf_used ; s#qdio_irq * irq_ptr ; s#dentry * debugfs_q ; s#tasklet_struct tasklet ; unsigned int qdio_error ; s#sl * sl ; s#qdio_buffer * sbal [ 128 ] ; s#slib * slib ; } 
s#qdio_irq struct qdio_irq { s#qib qib ; t#u32 * dsci ; s#ccw_device * cdev ; s#dentry * debugfs_dev ; unsigned long int_parm ; s#subchannel_id schid ; unsigned long sch_token ; e#qdio_irq_states state ; s#siga_flag siga_flag ; int nr_input_qs ; int nr_output_qs ; s#ccw1 ccw ; s#ciw equeue ; s#ciw aqueue ; s#qdio_ssqd_desc ssqd_desc ; void ( * orig_handler ) ( s#ccw_device * , unsigned long , s#irb * ) ; s#qdr * qdr ; unsigned long chsc_page ; s#qdio_q * input_qs [ 32 ] ; s#qdio_q * output_qs [ 32 ] ; t#debug_info_t * debug_area ; s#mutex setup_mutex ; } 
qdio_get_ssqd_desc extern int qdio_get_ssqd_desc ( s#ccw_device * , s#qdio_ssqd_desc * ) 
qdio_cleanup extern int qdio_cleanup ( s#ccw_device * , int ) 
qdio_shutdown extern int qdio_shutdown ( s#ccw_device * , int ) 
qdio_free extern int qdio_free ( s#ccw_device * ) 
s#qdio_initialize struct qdio_initialize { s#ccw_device * cdev ; unsigned char q_format ; unsigned char adapter_name [ 8 ] ; unsigned int qib_param_field_format ; unsigned char * qib_param_field ; unsigned long * input_slib_elements ; unsigned long * output_slib_elements ; unsigned int no_input_qs ; unsigned int no_output_qs ; t#qdio_handler_t * input_handler ; t#qdio_handler_t * output_handler ; unsigned long int_parm ; unsigned long flags ; void * * input_sbal_addr_array ; void * * output_sbal_addr_array ; } 
qdio_initialize extern int qdio_initialize ( s#qdio_initialize * ) 
qdio_allocate extern int qdio_allocate ( s#qdio_initialize * ) 
qdio_establish extern int qdio_establish ( s#qdio_initialize * ) 
qdio_activate extern int qdio_activate ( s#ccw_device * ) 
do_QDIO extern int do_QDIO ( s#ccw_device * , unsigned int , int , unsigned int , unsigned int ) 

/* drivers/s390/crypto/ap_bus.o */
ap_domain_index extern int ap_domain_index 
t#ap_qid_t typedef unsigned int ap_qid_t 
ap_send int ap_send ( t#ap_qid_t , unsigned long long , void * , t#size_t ) 
ap_recv int ap_recv ( t#ap_qid_t , unsigned long long * , void * , t#size_t ) 
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##file
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##exec_domain
s##compat_timespec
s##pollfd
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s#ap_device_id struct ap_device_id { t#__u16 match_flags ; t#__u8 dev_type ; t#__u8 pad1 ; t#__u32 pad2 ; t#kernel_ulong_t driver_info ; } 
s#ap_message struct ap_message { s#list_head list ; unsigned long long psmid ; void * message ; t#size_t length ; void * private ; unsigned int special : 1 ; } 
s#ap_driver struct ap_driver { s#device_driver driver ; s#ap_device_id * ids ; int ( * probe ) ( s#ap_device * ) ; void ( * remove ) ( s#ap_device * ) ; void ( * receive ) ( s#ap_device * , s#ap_message * , s#ap_message * ) ; int request_timeout ; } 
s##tvec_base
s#ap_device struct ap_device { s#device device ; s#ap_driver * drv ; t#spinlock_t lock ; s#list_head list ; t#ap_qid_t qid ; int queue_depth ; int device_type ; int unregistered ; s#timer_list timeout ; int reset ; int queue_count ; s#list_head pendingq ; int pendingq_count ; s#list_head requestq ; int requestq_count ; int total_request_count ; s#ap_message * reply ; void * private ; } 
ap_flush_queue void ap_flush_queue ( s#ap_device * ) 
ap_driver_register int ap_driver_register ( s#ap_driver * , s#module * , char * ) 
ap_driver_unregister void ap_driver_unregister ( s#ap_driver * ) 
ap_queue_message void ap_queue_message ( s#ap_device * , s#ap_message * ) 
ap_cancel_message void ap_cancel_message ( s#ap_device * , s#ap_message * ) 

/* drivers/s390/crypto/zcrypt_api.o */
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s#ica_rsa_modexpo struct ica_rsa_modexpo { char * inputdata ; unsigned int inputdatalength ; char * outputdata ; unsigned int outputdatalength ; char * b_key ; char * n_modulus ; } 
s#ica_rsa_modexpo_crt struct ica_rsa_modexpo_crt { char * inputdata ; unsigned int inputdatalength ; char * outputdata ; unsigned int outputdatalength ; char * bp_key ; char * bq_key ; char * np_prime ; char * nq_prime ; char * u_mult_inv ; } 
s#ica_xcRB struct ica_xcRB { unsigned short agent_ID ; unsigned int user_defined ; unsigned short request_ID ; unsigned int request_control_blk_length ; unsigned char padding1 [ 16 - sizeof ( char * ) ] ; char * request_control_blk_addr ; unsigned int request_data_length ; char padding2 [ 16 - sizeof ( char * ) ] ; char * request_data_address ; unsigned int reply_control_blk_length ; char padding3 [ 16 - sizeof ( char * ) ] ; char * reply_control_blk_addr ; unsigned int reply_data_length ; char padding4 [ 16 - sizeof ( char * ) ] ; char * reply_data_addr ; unsigned short priority_window ; unsigned int status ; } 
s#zcrypt_ops struct zcrypt_ops { long ( * rsa_modexpo ) ( s#zcrypt_device * , s#ica_rsa_modexpo * ) ; long ( * rsa_modexpo_crt ) ( s#zcrypt_device * , s#ica_rsa_modexpo_crt * ) ; long ( * send_cprb ) ( s#zcrypt_device * , s#ica_xcRB * ) ; long ( * rng ) ( s#zcrypt_device * , char * ) ; } 
s#zcrypt_device struct zcrypt_device { s#list_head list ; t#spinlock_t lock ; s#kref refcount ; s#ap_device * ap_dev ; s#zcrypt_ops * ops ; int online ; int user_space_type ; char * type_string ; int min_mod_size ; int max_mod_size ; int short_crt ; int speed_rating ; int request_count ; s#ap_message reply ; } 
zcrypt_device_get void zcrypt_device_get ( s#zcrypt_device * ) 
zcrypt_device_put int zcrypt_device_put ( s#zcrypt_device * ) 
zcrypt_device_alloc s#zcrypt_device * zcrypt_device_alloc ( t#size_t ) 
zcrypt_device_free void zcrypt_device_free ( s#zcrypt_device * ) 
zcrypt_device_register int zcrypt_device_register ( s#zcrypt_device * ) 
zcrypt_device_unregister void zcrypt_device_unregister ( s#zcrypt_device * ) 

/* drivers/s390/net/ctcm_mpc.o */
ctc_mpc_alloc_channel extern int ctc_mpc_alloc_channel ( int , void ( * ) ( int , int ) ) 
ctc_mpc_establish_connectivity extern void ctc_mpc_establish_connectivity ( int , void ( * ) ( int , int , int ) ) 
ctc_mpc_dealloc_ch extern void ctc_mpc_dealloc_ch ( int ) 
ctc_mpc_flow_control extern void ctc_mpc_flow_control ( int , int ) 

/* drivers/s390/net/cu3088.o */
cu3088_type extern const char * cu3088_type [ num_channel_types ] 
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##file
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##exec_domain
s##compat_timespec
s##pollfd
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##ccw_device_private
s##irb
register_cu3088_discipline extern int register_cu3088_discipline ( s#ccwgroup_driver * ) 
unregister_cu3088_discipline extern void unregister_cu3088_discipline ( s#ccwgroup_driver * ) 

/* drivers/s390/net/fsm.o */
t#fsm_function_t typedef void ( * fsm_function_t ) ( s#fsm_instance_t * , int , void * ) 
t#fsm typedef struct { t#fsm_function_t * jumpmatrix ; int nr_events ; int nr_states ; const char * * event_names ; const char * * state_names ; } fsm 
s#fsm_instance_t struct fsm_instance_t { t#fsm * f ; t#atomic_t state ; char name [ 16 ] ; void * userdata ; int userint ; t#wait_queue_head_t wait_q ; } 
t#fsm_instance typedef s#fsm_instance_t fsm_instance 
t#fsm_node typedef struct { int cond_state ; int cond_event ; t#fsm_function_t function ; } fsm_node 
init_fsm extern t#fsm_instance * init_fsm ( char * , const char * * , const char * * , int , int , const t#fsm_node * , int , t#gfp_t ) 
kfree_fsm extern void kfree_fsm ( t#fsm_instance * ) 
s##tvec_base
t#fsm_timer typedef struct { t#fsm_instance * fi ; s#timer_list tl ; int expire_event ; void * event_arg ; } fsm_timer 
fsm_settimer extern void fsm_settimer ( t#fsm_instance * , t#fsm_timer * ) 
fsm_deltimer extern void fsm_deltimer ( t#fsm_timer * ) 
fsm_addtimer extern int fsm_addtimer ( t#fsm_timer * , int , int , void * ) 
fsm_modtimer extern void fsm_modtimer ( t#fsm_timer * , int , int , void * ) 
fsm_getstate_str extern const char * fsm_getstate_str ( t#fsm_instance * ) 

/* drivers/s390/net/qeth_core_main.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##backing_dev_info
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s#qeth_dbf_info struct qeth_dbf_info { char name [ 64 ] ; int pages ; int areas ; int len ; int level ; s#debug_view * view ; t#debug_info_t * id ; } 
qeth_dbf extern s#qeth_dbf_info qeth_dbf [ QETH_DBF_INFOS ] 
s#qeth_card_list_struct struct qeth_card_list_struct { s#list_head list ; t#rwlock_t rwlock ; } 
qeth_core_card_list extern s#qeth_card_list_struct qeth_core_card_list 
qeth_core_header_cache extern s#kmem_cache * qeth_core_header_cache 
e#qeth_card_states enum qeth_card_states { CARD_STATE_DOWN , CARD_STATE_HARDSETUP , CARD_STATE_SOFTSETUP , CARD_STATE_UP , CARD_STATE_RECOVER , } 
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##ccw_device_private
e#qeth_channel_states enum qeth_channel_states { CH_STATE_UP , CH_STATE_DOWN , CH_STATE_ACTIVATING , CH_STATE_HALTED , CH_STATE_STOPPED , CH_STATE_RCD , CH_STATE_RCD_DONE , } 
e#qeth_cmd_buffer_state enum qeth_cmd_buffer_state { BUF_STATE_FREE , BUF_STATE_LOCKED , BUF_STATE_PROCESSED , } 
s#qeth_cmd_buffer struct qeth_cmd_buffer { e#qeth_cmd_buffer_state state ; s#qeth_channel * channel ; unsigned char * data ; int rc ; void ( * callback ) ( s#qeth_channel * , s#qeth_cmd_buffer * ) ; } 
s#qeth_channel struct qeth_channel { e#qeth_channel_states state ; s#ccw1 ccw ; t#spinlock_t iob_lock ; t#wait_queue_head_t wait_q ; s#tasklet_struct irq_tasklet ; s#ccw_device * ccwdev ; s#qeth_cmd_buffer iob [ 8 ] ; t#atomic_t irq_pending ; int io_buf_no ; int buf_no ; } 
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##xfrm_policy
s##sec_path
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
e#qeth_card_types enum qeth_card_types { QETH_CARD_TYPE_UNKNOWN = 0 , QETH_CARD_TYPE_OSAE = 10 , QETH_CARD_TYPE_IQD = 1234 , QETH_CARD_TYPE_OSN = 11 , } 
e#qeth_link_types enum qeth_link_types { QETH_LINK_TYPE_FAST_ETH = 0x01 , QETH_LINK_TYPE_HSTR = 0x02 , QETH_LINK_TYPE_GBIT_ETH = 0x03 , QETH_LINK_TYPE_OSN = 0x04 , QETH_LINK_TYPE_10GBIT_ETH = 0x10 , QETH_LINK_TYPE_LANE_ETH100 = 0x81 , QETH_LINK_TYPE_LANE_TR = 0x82 , QETH_LINK_TYPE_LANE_ETH1000 = 0x83 , QETH_LINK_TYPE_LANE = 0x88 , QETH_LINK_TYPE_ATM_NATIVE = 0x90 , } 
s#qeth_card_blkt struct qeth_card_blkt { int time_total ; int inter_packet ; int inter_packet_jumbo ; } 
e#qeth_ipa_promisc_modes enum qeth_ipa_promisc_modes { SET_PROMISC_MODE_OFF = 0 , SET_PROMISC_MODE_ON = 1 , } 
s#qeth_card_info struct qeth_card_info { unsigned short unit_addr2 ; unsigned short cula ; unsigned short chpid ; t#__u16 func_level ; char mcl_level [ 4 + 1 ] ; int guestlan ; int mac_bits ; int portname_required ; int portno ; char portname [ 9 ] ; e#qeth_card_types type ; e#qeth_link_types link_type ; int is_multicast_different ; int initial_mtu ; int max_mtu ; int broadcast_capable ; int unique_id ; s#qeth_card_blkt blkt ; t#__u32 csum_mask ; e#qeth_ipa_promisc_modes promisc_mode ; } 
s#qeth_token struct qeth_token { t#__u32 issuer_rm_w ; t#__u32 issuer_rm_r ; t#__u32 cm_filter_w ; t#__u32 cm_filter_r ; t#__u32 cm_connection_w ; t#__u32 cm_connection_r ; t#__u32 ulp_filter_w ; t#__u32 ulp_filter_r ; t#__u32 ulp_connection_w ; t#__u32 ulp_connection_r ; } 
s#qeth_seqno struct qeth_seqno { t#__u32 trans_hdr ; t#__u32 pdu_hdr ; t#__u32 pdu_hdr_ack ; t#__u16 ipa ; t#__u32 pkt_seqno ; } 
e#qeth_routing_types enum qeth_routing_types { NO_ROUTER = 0 , PRIMARY_ROUTER = 1 , SECONDARY_ROUTER = 2 , MULTICAST_ROUTER = 3 , PRIMARY_CONNECTOR = 4 , SECONDARY_CONNECTOR = 5 , } 
s#qeth_routing_info struct qeth_routing_info { e#qeth_routing_types type ; } 
s#qeth_ipa_info struct qeth_ipa_info { t#__u32 supported_funcs ; t#__u32 enabled_funcs ; } 
e#qeth_checksum_types enum qeth_checksum_types { SW_CHECKSUMMING = 0 , HW_CHECKSUMMING = 1 , NO_CHECKSUMMING = 2 , } 
e#qeth_large_send_types enum qeth_large_send_types { QETH_LARGE_SEND_NO , QETH_LARGE_SEND_TSO , } 
e#qeth_ipa_isolation_modes enum qeth_ipa_isolation_modes { ISOLATION_MODE_NONE = 0x00000000L , ISOLATION_MODE_FWD = 0x00000001L , ISOLATION_MODE_DROP = 0x00000002L , } 
s#qeth_card_options struct qeth_card_options { s#qeth_routing_info route4 ; s#qeth_ipa_info ipa4 ; s#qeth_ipa_info adp ; s#qeth_routing_info route6 ; s#qeth_ipa_info ipa6 ; e#qeth_checksum_types checksum_type ; int broadcast_mode ; int macaddr_mode ; int fake_broadcast ; int add_hhlen ; int layer2 ; e#qeth_large_send_types large_send ; int performance_stats ; int rx_sg_cb ; e#qeth_ipa_isolation_modes isolation ; int sniffer ; } 
s#qeth_ipato struct qeth_ipato { int enabled ; int invert4 ; int invert6 ; s#list_head entries ; } 
s#qeth_buffer_pool_entry struct qeth_buffer_pool_entry { s#list_head list ; s#list_head init_list ; void * elements [ 16 ] ; } 
s#qeth_qdio_buffer struct qeth_qdio_buffer { s#qdio_buffer * buffer ; s#qeth_buffer_pool_entry * pool_entry ; } 
s#qeth_qdio_q struct qeth_qdio_q { s#qdio_buffer qdio_bufs [ 128 ] ; s#qeth_qdio_buffer bufs [ 128 ] ; int next_buf_to_init ; } 
s#qeth_qdio_buffer_pool struct qeth_qdio_buffer_pool { s#list_head entry_list ; int buf_count ; } 
s#qeth_qdio_out_buffer struct qeth_qdio_out_buffer { s#qdio_buffer * buffer ; t#atomic_t state ; int next_element_to_fill ; s#sk_buff_head skb_list ; s#list_head ctx_list ; int is_header [ 16 ] ; } 
s#qeth_qdio_out_q struct qeth_qdio_out_q { s#qdio_buffer qdio_bufs [ 128 ] ; s#qeth_qdio_out_buffer bufs [ 128 ] ; int queue_no ; s#qeth_card * card ; t#atomic_t state ; int do_pack ; int next_buf_to_fill ; int sync_iqdio_error ; t#atomic_t used_buffers ; t#atomic_t set_pci_flags_count ; } 
s#qeth_qdio_info struct qeth_qdio_info { t#atomic_t state ; s#qeth_qdio_q * in_q ; s#qeth_qdio_buffer_pool in_buf_pool ; s#qeth_qdio_buffer_pool init_pool ; int in_buf_size ; int no_out_queues ; s#qeth_qdio_out_q * * out_qs ; int do_prio_queueing ; int default_out_queue ; } 
s#qeth_perf_stats struct qeth_perf_stats { unsigned int bufs_rec ; unsigned int bufs_sent ; unsigned int skbs_sent_pack ; unsigned int bufs_sent_pack ; unsigned int sc_dp_p ; unsigned int sc_p_dp ; t#__u64 inbound_start_time ; unsigned int inbound_cnt ; unsigned int inbound_time ; t#__u64 outbound_start_time ; unsigned int outbound_cnt ; unsigned int outbound_time ; t#__u64 outbound_handler_start_time ; unsigned int outbound_handler_cnt ; unsigned int outbound_handler_time ; t#__u64 inbound_do_qdio_start_time ; unsigned int inbound_do_qdio_cnt ; unsigned int inbound_do_qdio_time ; t#__u64 outbound_do_qdio_start_time ; unsigned int outbound_do_qdio_cnt ; unsigned int outbound_do_qdio_time ; unsigned int large_send_bytes ; unsigned int large_send_cnt ; unsigned int sg_skbs_sent ; unsigned int sg_frags_sent ; unsigned long initial_rx_packets ; unsigned long initial_tx_packets ; unsigned int sg_skbs_rx ; unsigned int sg_frags_rx ; unsigned int sg_alloc_page_rx ; unsigned int tx_csum ; unsigned int tx_lin ; } 
s#qeth_osn_info struct qeth_osn_info { int ( * assist_cb ) ( s#net_device * , void * ) ; int ( * data_cb ) ( s#sk_buff * ) ; } 
s#qeth_discipline struct qeth_discipline { t#qdio_handler_t * input_handler ; t#qdio_handler_t * output_handler ; int ( * recover ) ( void * ) ; s#ccwgroup_driver * ccwgdriver ; } 
s#qeth_card struct qeth_card { s#list_head list ; e#qeth_card_states state ; int lan_online ; t#spinlock_t lock ; s#ccwgroup_device * gdev ; s#qeth_channel read ; s#qeth_channel write ; s#qeth_channel data ; s#net_device * dev ; s#net_device_stats stats ; s#qeth_card_info info ; s#qeth_token token ; s#qeth_seqno seqno ; s#qeth_card_options options ; t#wait_queue_head_t wait_q ; t#spinlock_t vlanlock ; t#spinlock_t mclock ; s#vlan_group * vlangrp ; s#list_head vid_list ; s#list_head mc_list ; s#work_struct kernel_thread_starter ; t#spinlock_t thread_mask_lock ; unsigned long thread_start_mask ; unsigned long thread_allowed_mask ; unsigned long thread_running_mask ; t#spinlock_t ip_lock ; s#list_head ip_list ; s#list_head * ip_tbd_list ; s#qeth_ipato ipato ; s#list_head cmd_waiter_list ; s#qeth_qdio_info qdio ; s#qeth_perf_stats perf_stats ; int use_hard_stop ; s#qeth_osn_info osn_info ; s#qeth_discipline discipline ; t#atomic_t force_alloc_skb ; s#service_level qeth_service_level ; s#qdio_ssqd_desc ssqd ; } 
qeth_set_allowed_threads void qeth_set_allowed_threads ( s#qeth_card * , unsigned long , int ) 
qeth_threads_running int qeth_threads_running ( s#qeth_card * , unsigned long ) 
qeth_wait_for_threads int qeth_wait_for_threads ( s#qeth_card * , unsigned long ) 
qeth_clear_working_pool_list void qeth_clear_working_pool_list ( s#qeth_card * ) 
qeth_realloc_buffer_pool int qeth_realloc_buffer_pool ( s#qeth_card * , int ) 
qeth_clear_ipacmd_list void qeth_clear_ipacmd_list ( s#qeth_card * ) 
qeth_release_buffer void qeth_release_buffer ( s#qeth_channel * , s#qeth_cmd_buffer * ) 
qeth_wait_for_buffer s#qeth_cmd_buffer * qeth_wait_for_buffer ( s#qeth_channel * ) 
qeth_clear_cmd_buffers void qeth_clear_cmd_buffers ( s#qeth_channel * ) 
qeth_clear_thread_start_bit void qeth_clear_thread_start_bit ( s#qeth_card * , unsigned long ) 
qeth_clear_thread_running_bit void qeth_clear_thread_running_bit ( s#qeth_card * , unsigned long ) 
qeth_do_run_thread int qeth_do_run_thread ( s#qeth_card * , unsigned long ) 
qeth_schedule_recovery void qeth_schedule_recovery ( s#qeth_card * ) 
qeth_clear_qdio_buffers void qeth_clear_qdio_buffers ( s#qeth_card * ) 
qeth_qdio_clear_card int qeth_qdio_clear_card ( s#qeth_card * , int ) 
qeth_prepare_control_data void qeth_prepare_control_data ( s#qeth_card * , int , s#qeth_cmd_buffer * ) 
s#qeth_reply struct qeth_reply { s#list_head list ; t#wait_queue_head_t wait_q ; int ( * callback ) ( s#qeth_card * , s#qeth_reply * , unsigned long ) ; t#u32 seqno ; unsigned long offset ; t#atomic_t received ; int rc ; void * param ; s#qeth_card * card ; t#atomic_t refcnt ; } 
qeth_send_control_data int qeth_send_control_data ( s#qeth_card * , int , s#qeth_cmd_buffer * , int ( * ) ( s#qeth_card * , s#qeth_reply * , unsigned long ) , void * ) 
qeth_print_status_message void qeth_print_status_message ( s#qeth_card * ) 
qeth_init_qdio_queues int qeth_init_qdio_queues ( s#qeth_card * ) 
e#qeth_ipa_cmds enum qeth_ipa_cmds { IPA_CMD_STARTLAN = 0x01 , IPA_CMD_STOPLAN = 0x02 , IPA_CMD_SETVMAC = 0x21 , IPA_CMD_DELVMAC = 0x22 , IPA_CMD_SETGMAC = 0x23 , IPA_CMD_DELGMAC = 0x24 , IPA_CMD_SETVLAN = 0x25 , IPA_CMD_DELVLAN = 0x26 , IPA_CMD_SETCCID = 0x41 , IPA_CMD_DELCCID = 0x42 , IPA_CMD_MODCCID = 0x43 , IPA_CMD_SETIP = 0xb1 , IPA_CMD_QIPASSIST = 0xb2 , IPA_CMD_SETASSPARMS = 0xb3 , IPA_CMD_SETIPM = 0xb4 , IPA_CMD_DELIPM = 0xb5 , IPA_CMD_SETRTG = 0xb6 , IPA_CMD_DELIP = 0xb7 , IPA_CMD_SETADAPTERPARMS = 0xb8 , IPA_CMD_SET_DIAG_ASS = 0xb9 , IPA_CMD_CREATE_ADDR = 0xc3 , IPA_CMD_DESTROY_ADDR = 0xc4 , IPA_CMD_REGISTER_LOCAL_ADDR = 0xd1 , IPA_CMD_UNREGISTER_LOCAL_ADDR = 0xd2 , IPA_CMD_UNKNOWN = 0x00 } 
e#qeth_prot_versions enum qeth_prot_versions { QETH_PROT_IPV4 = 0x0004 , QETH_PROT_IPV6 = 0x0006 , } 
qeth_get_ipacmd_buffer s#qeth_cmd_buffer * qeth_get_ipacmd_buffer ( s#qeth_card * , e#qeth_ipa_cmds , e#qeth_prot_versions ) 
qeth_prepare_ipa_cmd void qeth_prepare_ipa_cmd ( s#qeth_card * , s#qeth_cmd_buffer * , char ) 
qeth_send_ipa_cmd int qeth_send_ipa_cmd ( s#qeth_card * , s#qeth_cmd_buffer * , int ( * ) ( s#qeth_card * , s#qeth_reply * , unsigned long ) , void * ) 
qeth_send_startlan int qeth_send_startlan ( s#qeth_card * ) 
qeth_send_stoplan int qeth_send_stoplan ( s#qeth_card * ) 
qeth_default_setadapterparms_cb int qeth_default_setadapterparms_cb ( s#qeth_card * , s#qeth_reply * , unsigned long ) 
qeth_get_adapter_cmd s#qeth_cmd_buffer * qeth_get_adapter_cmd ( s#qeth_card * , t#__u32 , t#__u32 ) 
qeth_query_setadapterparms int qeth_query_setadapterparms ( s#qeth_card * ) 
qeth_check_qdio_errors int qeth_check_qdio_errors ( s#qeth_card * , s#qdio_buffer * , unsigned int , const char * ) 
qeth_queue_input_buffer void qeth_queue_input_buffer ( s#qeth_card * , int ) 
qeth_qdio_output_handler void qeth_qdio_output_handler ( s#ccw_device * , unsigned int , int , int , int , unsigned long ) 
qeth_get_priority_queue int qeth_get_priority_queue ( s#qeth_card * , s#sk_buff * , int , int ) 
qeth_get_elements_no int qeth_get_elements_no ( s#qeth_card * , void * , s#sk_buff * , int ) 
s#qeth_hdr_layer2 struct qeth_hdr_layer2 { t#__u8 id ; t#__u8 flags [ 3 ] ; t#__u8 port_no ; t#__u8 hdr_length ; t#__u16 pkt_length ; t#__u16 seq_no ; t#__u16 vlan_id ; t#__u32 reserved ; t#__u8 reserved2 [ 16 ] ; } 
s#qeth_hdr_layer3 struct qeth_hdr_layer3 { t#__u8 id ; t#__u8 flags ; t#__u16 inbound_checksum ; t#__u32 token ; t#__u16 length ; t#__u8 vlan_prio ; t#__u8 ext_flags ; t#__u16 vlan_id ; t#__u16 frame_offset ; t#__u8 dest_addr [ 16 ] ; } 
s#qeth_hdr_osn struct qeth_hdr_osn { t#__u8 id ; t#__u8 reserved ; t#__u16 seq_no ; t#__u16 reserved2 ; t#__u16 control_flags ; t#__u16 pdu_length ; t#__u8 reserved3 [ 18 ] ; t#__u32 ccid ; } 
s#qeth_hdr struct qeth_hdr { union { s#qeth_hdr_layer2 l2 ; s#qeth_hdr_layer3 l3 ; s#qeth_hdr_osn osn ; } hdr ; } 
qeth_do_send_packet_fast int qeth_do_send_packet_fast ( s#qeth_card * , s#qeth_qdio_out_q * , s#sk_buff * , s#qeth_hdr * , int , int , int ) 
qeth_do_send_packet int qeth_do_send_packet ( s#qeth_card * , s#qeth_qdio_out_q * , s#sk_buff * , s#qeth_hdr * , int ) 
qeth_setadp_promisc_mode void qeth_setadp_promisc_mode ( s#qeth_card * ) 
qeth_change_mtu int qeth_change_mtu ( s#net_device * , int ) 
qeth_get_stats s#net_device_stats * qeth_get_stats ( s#net_device * ) 
qeth_setadpparms_change_macaddr int qeth_setadpparms_change_macaddr ( s#qeth_card * ) 
qeth_set_access_ctrl_online int qeth_set_access_ctrl_online ( s#qeth_card * ) 
qeth_tx_timeout void qeth_tx_timeout ( s#net_device * ) 
qeth_mdio_read int qeth_mdio_read ( s#net_device * , int , int ) 
qeth_snmp_command int qeth_snmp_command ( s#qeth_card * , char * ) 
qeth_core_hardsetup_card int qeth_core_hardsetup_card ( s#qeth_card * ) 
qeth_core_get_next_skb s#sk_buff * qeth_core_get_next_skb ( s#qeth_card * , s#qdio_buffer * , s#qdio_buffer_element * * , int * , s#qeth_hdr * * ) 
e#qeth_dbf_names enum qeth_dbf_names { QETH_DBF_SETUP , QETH_DBF_QERR , QETH_DBF_TRACE , QETH_DBF_MSG , QETH_DBF_SENSE , QETH_DBF_MISC , QETH_DBF_CTRL , QETH_DBF_INFOS } 
qeth_dbf_longtext void qeth_dbf_longtext ( e#qeth_dbf_names , int , char * , ... ) 
qeth_core_get_stats_count int qeth_core_get_stats_count ( s#net_device * ) 
qeth_core_get_ethtool_stats void qeth_core_get_ethtool_stats ( s#net_device * , s#ethtool_stats * , t#u64 * ) 
qeth_core_get_strings void qeth_core_get_strings ( s#net_device * , t#u32 , t#u8 * ) 
qeth_core_get_drvinfo void qeth_core_get_drvinfo ( s#net_device * , s#ethtool_drvinfo * ) 
qeth_core_ethtool_get_settings int qeth_core_ethtool_get_settings ( s#net_device * , s#ethtool_cmd * ) 

/* drivers/s390/net/qeth_core_mpc.o */
IPA_PDU_HEADER extern unsigned char IPA_PDU_HEADER [ ] 

/* drivers/s390/net/qeth_l2_main.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##nameidata
s##vfsmount
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##ccw_device_private
qeth_l2_ccwgroup_driver extern s#ccwgroup_driver qeth_l2_ccwgroup_driver 
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##xfrm_policy
s##sec_path
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
qeth_osn_assist int qeth_osn_assist ( s#net_device * , void * , int ) 
qeth_osn_register int qeth_osn_register ( unsigned char * , s#net_device * * , int ( * ) ( s#net_device * , void * ) , int ( * ) ( s#sk_buff * ) ) 
qeth_osn_deregister void qeth_osn_deregister ( s#net_device * ) 

/* drivers/s390/net/qeth_l3_main.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##nameidata
s##vfsmount
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##ccw_device_private
qeth_l3_ccwgroup_driver extern s#ccwgroup_driver qeth_l3_ccwgroup_driver 

/* drivers/s390/net/smsgiucv.o */
smsg_register_callback int smsg_register_callback ( char * , void ( * ) ( char * , char * ) ) 
smsg_unregister_callback void smsg_unregister_callback ( char * , void ( * ) ( char * , char * ) ) 

/* drivers/scsi/constants.o */
__scsi_print_command extern void __scsi_print_command ( unsigned char * ) 
s##scsi_host_cmd_pool
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##timer_rand_state
s##mtd_info
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s#execute_work struct execute_work { s#work_struct work ; } 
e#scsi_target_state enum scsi_target_state { STARGET_CREATED = 1 , STARGET_RUNNING , STARGET_DEL , } 
s#scsi_target struct scsi_target { s#scsi_device * starget_sdev_user ; s#list_head siblings ; s#list_head devices ; s#device dev ; unsigned int reap_ref ; unsigned int channel ; unsigned int id ; unsigned int create : 1 ; unsigned int single_lun : 1 ; unsigned int pdt_1f_for_no_lun ; unsigned int target_busy ; unsigned int can_queue ; unsigned int target_blocked ; unsigned int max_target_blocked ; char scsi_level ; s#execute_work ew ; e#scsi_target_state state ; void * hostdata ; unsigned long starget_data [ 0 ] ; } 
s##proc_dir_entry
s#scsi_host_template struct scsi_host_template { s#module * module ; const char * name ; int ( * detect ) ( s#scsi_host_template * ) ; int ( * release ) ( s#Scsi_Host * ) ; const char * ( * info ) ( s#Scsi_Host * ) ; int ( * ioctl ) ( s#scsi_device * , int , void * ) ; int ( * compat_ioctl ) ( s#scsi_device * , int , void * ) ; int ( * queuecommand ) ( s#scsi_cmnd * , void ( * ) ( s#scsi_cmnd * ) ) ; int ( * transfer_response ) ( s#scsi_cmnd * , void ( * ) ( s#scsi_cmnd * ) ) ; int ( * eh_abort_handler ) ( s#scsi_cmnd * ) ; int ( * eh_device_reset_handler ) ( s#scsi_cmnd * ) ; int ( * eh_target_reset_handler ) ( s#scsi_cmnd * ) ; int ( * eh_bus_reset_handler ) ( s#scsi_cmnd * ) ; int ( * eh_host_reset_handler ) ( s#scsi_cmnd * ) ; int ( * slave_alloc ) ( s#scsi_device * ) ; int ( * slave_configure ) ( s#scsi_device * ) ; void ( * slave_destroy ) ( s#scsi_device * ) ; int ( * target_alloc ) ( s#scsi_target * ) ; void ( * target_destroy ) ( s#scsi_target * ) ; int ( * scan_finished ) ( s#Scsi_Host * , unsigned long ) ; void ( * scan_start ) ( s#Scsi_Host * ) ; int ( * change_queue_depth ) ( s#scsi_device * , int , int ) ; int ( * change_queue_type ) ( s#scsi_device * , int ) ; int ( * bios_param ) ( s#scsi_device * , s#block_device * , t#sector_t , int [ ] ) ; int ( * proc_info ) ( s#Scsi_Host * , char * , char * * , t#off_t , int , int ) ; e#blk_eh_timer_return ( * eh_timed_out ) ( s#scsi_cmnd * ) ; const char * proc_name ; s#proc_dir_entry * proc_dir ; int can_queue ; int this_id ; unsigned short sg_tablesize ; unsigned short max_sectors ; unsigned long dma_boundary ; short cmd_per_lun ; unsigned char present ; unsigned supported_mode : 2 ; unsigned unchecked_isa_dma : 1 ; unsigned use_clustering : 1 ; unsigned emulated : 1 ; unsigned skip_settle_delay : 1 ; unsigned ordered_tag : 1 ; unsigned int max_host_blocked ; s#device_attribute * * shost_attrs ; s#device_attribute * * sdev_attrs ; s#list_head legacy_hosts ; t#u64 vendor_id ; } 
s##scsi_transport_template
s##workqueue_struct
e#scsi_host_state enum scsi_host_state { SHOST_CREATED = 1 , SHOST_RUNNING , SHOST_CANCEL , SHOST_DEL , SHOST_RECOVERY , SHOST_CANCEL_RECOVERY , SHOST_DEL_RECOVERY , } 
s#Scsi_Host struct Scsi_Host { s#list_head __devices ; s#list_head __targets ; s#scsi_host_cmd_pool * cmd_pool ; t#spinlock_t free_list_lock ; s#list_head free_list ; s#list_head starved_list ; t#spinlock_t default_lock ; t#spinlock_t * host_lock ; s#mutex scan_mutex ; s#list_head eh_cmd_q ; s#task_struct * ehandler ; s#completion * eh_action ; t#wait_queue_head_t host_wait ; s#scsi_host_template * hostt ; s#scsi_transport_template * transportt ; s#blk_queue_tag * bqt ; unsigned int host_busy ; unsigned int host_failed ; unsigned int host_eh_scheduled ; unsigned int host_no ; int resetting ; unsigned long last_reset ; unsigned int max_id ; unsigned int max_lun ; unsigned int max_channel ; unsigned int unique_id ; unsigned short max_cmd_len ; int this_id ; int can_queue ; short cmd_per_lun ; short unsigned int sg_tablesize ; short unsigned int max_sectors ; unsigned long dma_boundary ; unsigned long cmd_serial_number ; unsigned active_mode : 2 ; unsigned unchecked_isa_dma : 1 ; unsigned use_clustering : 1 ; unsigned use_blk_tcq : 1 ; unsigned host_self_blocked : 1 ; unsigned reverse_ordering : 1 ; unsigned ordered_tag : 1 ; unsigned tmf_in_progress : 1 ; unsigned async_scan : 1 ; char work_q_name [ 20 ] ; s#workqueue_struct * work_q ; unsigned int host_blocked ; unsigned int max_host_blocked ; unsigned int prot_capabilities ; unsigned char prot_guard_type ; s#request_queue * uspace_req_q ; unsigned long base ; unsigned long io_port ; unsigned char n_io_port ; unsigned char dma_channel ; unsigned int irq ; e#scsi_host_state shost_state ; s#device shost_gendev , shost_dev ; s#list_head sht_legacy_list ; void * shost_data ; s#device * dma_dev ; unsigned long hostdata [ 0 ] __attribute__ ( ( aligned ( sizeof ( unsigned long ) ) ) ) ; } 
s#scsi_dh_devlist struct scsi_dh_devlist { char * vendor ; char * model ; char tgps ; } 
s#scsi_sense_hdr struct scsi_sense_hdr { t#u8 response_code ; t#u8 sense_key ; t#u8 asc ; t#u8 ascq ; t#u8 byte4 ; t#u8 byte5 ; t#u8 byte6 ; t#u8 additional_length ; } 
t#activate_complete typedef void ( * activate_complete ) ( void * , int ) 
s#scsi_device_handler struct scsi_device_handler { s#list_head list ; s#module * module ; const char * name ; const s#scsi_dh_devlist * devlist ; int ( * check_sense ) ( s#scsi_device * , s#scsi_sense_hdr * ) ; int ( * attach ) ( s#scsi_device * ) ; void ( * detach ) ( s#scsi_device * ) ; int ( * activate ) ( s#scsi_device * , t#activate_complete , void * ) ; int ( * prep_fn ) ( s#scsi_device * , s#request * ) ; int ( * set_params ) ( s#scsi_device * , const char * ) ; } 
s#scsi_dh_data struct scsi_dh_data { s#scsi_device_handler * scsi_dh ; s#scsi_device * sdev ; s#kref kref ; char buf [ 0 ] ; } 
e#scsi_device_state enum scsi_device_state { SDEV_CREATED = 1 , SDEV_RUNNING , SDEV_CANCEL , SDEV_DEL , SDEV_QUIESCE , SDEV_OFFLINE , SDEV_BLOCK , SDEV_CREATED_BLOCK , } 
s#scsi_device struct scsi_device { s#Scsi_Host * host ; s#request_queue * request_queue ; s#list_head siblings ; s#list_head same_target_siblings ; unsigned int device_busy ; t#spinlock_t list_lock ; s#list_head cmd_list ; s#list_head starved_entry ; s#scsi_cmnd * current_cmnd ; unsigned short queue_depth ; unsigned short max_queue_depth ; unsigned short last_queue_full_depth ; unsigned short last_queue_full_count ; unsigned long last_queue_full_time ; unsigned long queue_ramp_up_period ; unsigned long last_queue_ramp_up ; unsigned int id , lun , channel ; unsigned int manufacturer ; unsigned sector_size ; void * hostdata ; char type ; char scsi_level ; char inq_periph_qual ; char tgps ; unsigned char inquiry_len ; unsigned char * inquiry ; const char * vendor ; const char * model ; const char * rev ; unsigned char current_tag ; s#scsi_target * sdev_target ; unsigned int sdev_bflags ; unsigned writeable : 1 ; unsigned removable : 1 ; unsigned changed : 1 ; unsigned busy : 1 ; unsigned lockable : 1 ; unsigned locked : 1 ; unsigned borken : 1 ; unsigned disconnect : 1 ; unsigned soft_reset : 1 ; unsigned sdtr : 1 ; unsigned wdtr : 1 ; unsigned ppr : 1 ; unsigned tagged_supported : 1 ; unsigned simple_tags : 1 ; unsigned ordered_tags : 1 ; unsigned was_reset : 1 ; unsigned expecting_cc_ua : 1 ; unsigned use_10_for_rw : 1 ; unsigned use_10_for_ms : 1 ; unsigned skip_ms_page_8 : 1 ; unsigned skip_ms_page_3f : 1 ; unsigned use_192_bytes_for_3f : 1 ; unsigned no_start_on_add : 1 ; unsigned allow_restart : 1 ; unsigned manage_start_stop : 1 ; unsigned start_stop_pwr_cond : 1 ; unsigned no_uld_attach : 1 ; unsigned select_no_atn : 1 ; unsigned fix_capacity : 1 ; unsigned guess_capacity : 1 ; unsigned retry_hwerror : 1 ; unsigned last_sector_bug : 1 ; unsigned is_visible : 1 ; unsigned long supported_events [ ( ( ( SDEV_EVT_MAXBITS ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; s#list_head event_list ; s#work_struct event_work ; unsigned int device_blocked ; unsigned int max_device_blocked ; t#atomic_t iorequest_cnt ; t#atomic_t iodone_cnt ; t#atomic_t ioerr_cnt ; s#device sdev_gendev , sdev_dev ; s#execute_work ew ; s#scsi_dh_data * scsi_dh_data ; e#scsi_device_state sdev_state ; unsigned long sdev_data [ 0 ] ; } 
s#sg_table struct sg_table { s#scatterlist * sgl ; unsigned int nents ; unsigned int orig_nents ; } 
s#scsi_data_buffer struct scsi_data_buffer { s#sg_table table ; unsigned length ; int resid ; } 
s#scsi_pointer struct scsi_pointer { char * ptr ; int this_residual ; s#scatterlist * buffer ; int buffers_residual ; t#dma_addr_t dma_handle ; volatile int Status ; volatile int Message ; volatile int have_data_in ; volatile int sent_command ; volatile int phase ; } 
s#scsi_cmnd struct scsi_cmnd { s#scsi_device * device ; s#list_head list ; s#list_head eh_entry ; int eh_eflags ; unsigned long serial_number ; unsigned long jiffies_at_alloc ; int retries ; int allowed ; unsigned char prot_op ; unsigned char prot_type ; unsigned short cmd_len ; e#dma_data_direction sc_data_direction ; unsigned char * cmnd ; s#scsi_data_buffer sdb ; s#scsi_data_buffer * prot_sdb ; unsigned underflow ; unsigned transfersize ; s#request * request ; unsigned char * sense_buffer ; void ( * scsi_done ) ( s#scsi_cmnd * ) ; s#scsi_pointer SCp ; unsigned char * host_scribble ; int result ; unsigned char tag ; } 
scsi_print_command extern void scsi_print_command ( s#scsi_cmnd * ) 
scsi_print_status extern void scsi_print_status ( unsigned char ) 
scsi_sense_key_string extern const char * scsi_sense_key_string ( unsigned char ) 
scsi_extd_sense_format extern const char * scsi_extd_sense_format ( unsigned char , unsigned char ) 
scsi_show_extd_sense extern void scsi_show_extd_sense ( unsigned char , unsigned char ) 
scsi_show_sense_hdr extern void scsi_show_sense_hdr ( s#scsi_sense_hdr * ) 
scsi_print_sense_hdr extern void scsi_print_sense_hdr ( const char * , s#scsi_sense_hdr * ) 
scsi_cmd_print_sense_hdr extern void scsi_cmd_print_sense_hdr ( s#scsi_cmnd * , const char * , s#scsi_sense_hdr * ) 
__scsi_print_sense extern void __scsi_print_sense ( const char * , const unsigned char * , int ) 
scsi_print_sense extern void scsi_print_sense ( char * , s#scsi_cmnd * ) 
scsi_show_result extern void scsi_show_result ( int ) 
scsi_print_result extern void scsi_print_result ( s#scsi_cmnd * ) 

/* drivers/scsi/device_handler/scsi_dh.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##timer_rand_state
s##mtd_info
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##Scsi_Host
s##scsi_cmnd
s##scsi_sense_hdr
scsi_register_device_handler extern int scsi_register_device_handler ( s#scsi_device_handler * ) 
scsi_unregister_device_handler extern int scsi_unregister_device_handler ( s#scsi_device_handler * ) 
scsi_dh_activate extern int scsi_dh_activate ( s#request_queue * , t#activate_complete , void * ) 
scsi_dh_set_params extern int scsi_dh_set_params ( s#request_queue * , const char * ) 
scsi_dh_handler_exist extern int scsi_dh_handler_exist ( const char * ) 
scsi_dh_attach extern int scsi_dh_attach ( s#request_queue * , const char * ) 
scsi_dh_detach extern void scsi_dh_detach ( s#request_queue * ) 

/* drivers/scsi/fcoe/libfcoe.o */
e#fip_state enum fip_state { FIP_ST_DISABLED , FIP_ST_LINK_WAIT , FIP_ST_AUTO , FIP_ST_NON_FIP , FIP_ST_ENABLED , } 
s##scsi_host_cmd_pool
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##timer_rand_state
s##mtd_info
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##scsi_sense_hdr
t#uint typedef unsigned int uint 
s#scsi_transport_template struct scsi_transport_template { s#transport_container host_attrs ; s#transport_container target_attrs ; s#transport_container device_attrs ; int ( * user_scan ) ( s#Scsi_Host * , t#uint , t#uint , t#uint ) ; int device_size ; int device_private_offset ; int target_size ; int target_private_offset ; int host_size ; unsigned int create_work_queue : 1 ; void ( * eh_strategy_handler ) ( s#Scsi_Host * ) ; e#blk_eh_timer_return ( * eh_timed_out ) ( s#scsi_cmnd * ) ; int ( * it_nexus_response ) ( s#Scsi_Host * , t#u64 , int ) ; int ( * tsk_mgmt_response ) ( s#Scsi_Host * , t#u64 , t#u64 , int ) ; } 
s##workqueue_struct
e#fc_port_state enum fc_port_state { FC_PORTSTATE_UNKNOWN , FC_PORTSTATE_NOTPRESENT , FC_PORTSTATE_ONLINE , FC_PORTSTATE_OFFLINE , FC_PORTSTATE_BLOCKED , FC_PORTSTATE_BYPASSED , FC_PORTSTATE_DIAGNOSTICS , FC_PORTSTATE_LINKDOWN , FC_PORTSTATE_ERROR , FC_PORTSTATE_LOOPBACK , FC_PORTSTATE_DELETED , } 
s#fc_rport struct fc_rport { t#u32 maxframe_size ; t#u32 supported_classes ; t#u32 dev_loss_tmo ; t#u64 node_name ; t#u64 port_name ; t#u32 port_id ; t#u32 roles ; e#fc_port_state port_state ; t#u32 scsi_target_id ; t#u32 fast_io_fail_tmo ; void * dd_data ; unsigned int channel ; t#u32 number ; t#u8 flags ; s#list_head peers ; s#device dev ; s#delayed_work dev_loss_work ; s#work_struct scan_work ; s#delayed_work fail_io_work ; s#work_struct stgt_delete_work ; s#work_struct rport_delete_work ; s#request_queue * rqst_q ; } 
e#fc_rport_state enum fc_rport_state { RPORT_ST_INIT , RPORT_ST_PLOGI , RPORT_ST_PRLI , RPORT_ST_RTV , RPORT_ST_READY , RPORT_ST_LOGO , RPORT_ST_ADISC , RPORT_ST_DELETE , RPORT_ST_RESTART , } 
s#fc_rport_identifiers struct fc_rport_identifiers { t#u64 node_name ; t#u64 port_name ; t#u32 port_id ; t#u32 roles ; } 
e#fc_rport_event enum fc_rport_event { RPORT_EV_NONE = 0 , RPORT_EV_READY , RPORT_EV_FAILED , RPORT_EV_STOP , RPORT_EV_LOGO } 
s#fc_rport_operations struct fc_rport_operations { void ( * event_callback ) ( s#fc_lport * , s#fc_rport_priv * , e#fc_rport_event ) ; } 
s#fc_rport_priv struct fc_rport_priv { s#fc_lport * local_port ; s#fc_rport * rport ; s#kref kref ; e#fc_rport_state rp_state ; s#fc_rport_identifiers ids ; t#u16 flags ; t#u16 max_seq ; t#u16 disc_id ; t#u16 maxframe_size ; unsigned int retries ; unsigned int e_d_tov ; unsigned int r_a_tov ; s#mutex rp_mutex ; s#delayed_work retry_work ; e#fc_rport_event event ; s#fc_rport_operations * ops ; s#list_head peers ; s#work_struct event_work ; t#u32 supported_classes ; } 
s#fc_gpn_ft_resp struct fc_gpn_ft_resp { t#__u8 fp_flags ; t#__u8 fp_fid [ 3 ] ; t#__be32 fp_resvd ; t#__be64 fp_wwpn ; } 
e#fc_disc_event enum fc_disc_event { DISC_EV_NONE = 0 , DISC_EV_SUCCESS , DISC_EV_FAILED } 
s#fc_disc struct fc_disc { unsigned char retry_count ; unsigned char pending ; unsigned char requested ; unsigned short seq_count ; unsigned char buf_len ; t#u16 disc_id ; s#list_head rports ; s#fc_lport * lport ; s#mutex disc_mutex ; s#fc_gpn_ft_resp partial_buf ; s#delayed_work disc_work ; void ( * disc_callback ) ( s#fc_lport * , e#fc_disc_event ) ; } 
e#fc_vport_state enum fc_vport_state { FC_VPORT_UNKNOWN , FC_VPORT_ACTIVE , FC_VPORT_DISABLED , FC_VPORT_LINKDOWN , FC_VPORT_INITIALIZING , FC_VPORT_NO_FABRIC_SUPP , FC_VPORT_NO_FABRIC_RSCS , FC_VPORT_FABRIC_LOGOUT , FC_VPORT_FABRIC_REJ_WWN , FC_VPORT_FAILED , } 
e#fc_port_type enum fc_port_type { FC_PORTTYPE_UNKNOWN , FC_PORTTYPE_OTHER , FC_PORTTYPE_NOTPRESENT , FC_PORTTYPE_NPORT , FC_PORTTYPE_NLPORT , FC_PORTTYPE_LPORT , FC_PORTTYPE_PTP , FC_PORTTYPE_NPIV , } 
s#fc_vport struct fc_vport { e#fc_vport_state vport_state ; e#fc_vport_state vport_last_state ; t#u64 node_name ; t#u64 port_name ; t#u32 roles ; t#u32 vport_id ; e#fc_port_type vport_type ; char symbolic_name [ 64 ] ; void * dd_data ; s#Scsi_Host * shost ; unsigned int channel ; t#u32 number ; t#u8 flags ; s#list_head peers ; s#device dev ; s#work_struct vport_delete_work ; } 
s##sock
s##neigh_parms
s##neighbour
s##wireless_dev
s##Qdisc
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ip_conntrack_stat
s##net_generic
s##net_bridge_port
s##macvlan_port
s##garp_port
s##sec_path
s#fc_frame struct fc_frame { s#sk_buff skb ; } 
s#fc_seq struct fc_seq { t#u8 id ; t#u16 ssb_stat ; t#u16 cnt ; t#u32 rec_data ; } 
s#fc_els_lesb struct fc_els_lesb { t#__be32 lesb_link_fail ; t#__be32 lesb_sync_loss ; t#__be32 lesb_sig_loss ; t#__be32 lesb_prim_err ; t#__be32 lesb_inv_word ; t#__be32 lesb_inv_crc ; } 
e#fc_els_cmd enum fc_els_cmd { ELS_LS_RJT = 0x01 , ELS_LS_ACC = 0x02 , ELS_PLOGI = 0x03 , ELS_FLOGI = 0x04 , ELS_LOGO = 0x05 , ELS_ABTX = 0x06 , ELS_RCS = 0x07 , ELS_RES = 0x08 , ELS_RSS = 0x09 , ELS_RSI = 0x0a , ELS_ESTS = 0x0b , ELS_ESTC = 0x0c , ELS_ADVC = 0x0d , ELS_RTV = 0x0e , ELS_RLS = 0x0f , ELS_ECHO = 0x10 , ELS_TEST = 0x11 , ELS_RRQ = 0x12 , ELS_REC = 0x13 , ELS_SRR = 0x14 , ELS_PRLI = 0x20 , ELS_PRLO = 0x21 , ELS_SCN = 0x22 , ELS_TPLS = 0x23 , ELS_TPRLO = 0x24 , ELS_LCLM = 0x25 , ELS_GAID = 0x30 , ELS_FACT = 0x31 , ELS_FDACDT = 0x32 , ELS_NACT = 0x33 , ELS_NDACT = 0x34 , ELS_QOSR = 0x40 , ELS_RVCS = 0x41 , ELS_PDISC = 0x50 , ELS_FDISC = 0x51 , ELS_ADISC = 0x52 , ELS_RNC = 0x53 , ELS_FARP_REQ = 0x54 , ELS_FARP_REPL = 0x55 , ELS_RPS = 0x56 , ELS_RPL = 0x57 , ELS_RPBC = 0x58 , ELS_FAN = 0x60 , ELS_RSCN = 0x61 , ELS_SCR = 0x62 , ELS_RNFT = 0x63 , ELS_CSR = 0x68 , ELS_CSU = 0x69 , ELS_LINIT = 0x70 , ELS_LSTS = 0x72 , ELS_RNID = 0x78 , ELS_RLIR = 0x79 , ELS_LIRR = 0x7a , ELS_SRL = 0x7b , ELS_SBRP = 0x7c , ELS_RPSC = 0x7d , ELS_QSA = 0x7e , ELS_EVFP = 0x7f , ELS_LKA = 0x80 , ELS_AUTH_ELS = 0x90 , } 
e#fc_els_rjt_reason enum fc_els_rjt_reason { ELS_RJT_NONE = 0 , ELS_RJT_INVAL = 0x01 , ELS_RJT_LOGIC = 0x03 , ELS_RJT_BUSY = 0x05 , ELS_RJT_PROT = 0x07 , ELS_RJT_UNAB = 0x09 , ELS_RJT_UNSUP = 0x0b , ELS_RJT_INPROG = 0x0e , ELS_RJT_VENDOR = 0xff , } 
e#fc_els_rjt_explan enum fc_els_rjt_explan { ELS_EXPL_NONE = 0x00 , ELS_EXPL_SPP_OPT_ERR = 0x01 , ELS_EXPL_SPP_ICTL_ERR = 0x03 , ELS_EXPL_AH = 0x11 , ELS_EXPL_AH_REQ = 0x13 , ELS_EXPL_SID = 0x15 , ELS_EXPL_OXID_RXID = 0x17 , ELS_EXPL_INPROG = 0x19 , ELS_EXPL_PLOGI_REQD = 0x1e , ELS_EXPL_INSUF_RES = 0x29 , ELS_EXPL_UNAB_DATA = 0x2a , ELS_EXPL_UNSUPR = 0x2c , ELS_EXPL_INV_LEN = 0x2d , } 
s#fc_seq_els_data struct fc_seq_els_data { s#fc_frame * fp ; e#fc_els_rjt_reason reason ; e#fc_els_rjt_explan explan ; } 
s#fcp_cmnd struct fcp_cmnd { t#__u8 fc_lun [ 8 ] ; t#__u8 fc_cmdref ; t#__u8 fc_pri_ta ; t#__u8 fc_tm_flags ; t#__u8 fc_flags ; t#__u8 fc_cdb [ 16 ] ; t#__be32 fc_dl ; } 
s#fc_fcp_pkt struct fc_fcp_pkt { s#fc_lport * lp ; t#u16 state ; t#u16 tgt_flags ; t#atomic_t ref_cnt ; t#spinlock_t scsi_pkt_lock ; s#scsi_cmnd * cmd ; s#list_head list ; s#timer_list timer ; s#completion tm_done ; int wait_for_comp ; unsigned long start_time ; unsigned long end_time ; unsigned long last_pkt_time ; t#u32 data_len ; s#fcp_cmnd cdb_cmd ; t#size_t xfer_len ; t#u16 xfer_ddp ; t#u32 xfer_contig_end ; t#u16 max_payload ; t#u32 io_status ; t#u8 cdb_status ; t#u8 status_code ; t#u8 scsi_comp_flags ; t#u32 req_flags ; t#u32 scsi_resid ; s#fc_rport * rport ; s#fc_seq * seq_ptr ; t#u8 recov_retry ; s#fc_seq * recov_seq ; } 
s#libfc_function_template struct libfc_function_template { int ( * frame_send ) ( s#fc_lport * , s#fc_frame * ) ; s#fc_seq * ( * elsct_send ) ( s#fc_lport * , t#u32 , s#fc_frame * , unsigned int , void ( * ) ( s#fc_seq * , s#fc_frame * , void * ) , void * , t#u32 ) ; s#fc_seq * ( * exch_seq_send ) ( s#fc_lport * , s#fc_frame * , void ( * ) ( s#fc_seq * , s#fc_frame * , void * ) , void ( * ) ( s#fc_seq * , void * ) , void * , unsigned int ) ; int ( * ddp_setup ) ( s#fc_lport * , t#u16 , s#scatterlist * , unsigned int ) ; int ( * ddp_done ) ( s#fc_lport * , t#u16 ) ; void ( * get_lesb ) ( s#fc_lport * , s#fc_els_lesb * ) ; int ( * seq_send ) ( s#fc_lport * , s#fc_seq * , s#fc_frame * ) ; void ( * seq_els_rsp_send ) ( s#fc_seq * , e#fc_els_cmd , s#fc_seq_els_data * ) ; int ( * seq_exch_abort ) ( const s#fc_seq * , unsigned int ) ; void ( * exch_done ) ( s#fc_seq * ) ; s#fc_seq * ( * seq_start_next ) ( s#fc_seq * ) ; void ( * exch_mgr_reset ) ( s#fc_lport * , t#u32 , t#u32 ) ; void ( * rport_flush_queue ) ( void ) ; void ( * lport_recv ) ( s#fc_lport * , s#fc_seq * , s#fc_frame * ) ; int ( * lport_reset ) ( s#fc_lport * ) ; void ( * lport_set_port_id ) ( s#fc_lport * , t#u32 , s#fc_frame * ) ; s#fc_rport_priv * ( * rport_create ) ( s#fc_lport * , t#u32 ) ; int ( * rport_login ) ( s#fc_rport_priv * ) ; int ( * rport_logoff ) ( s#fc_rport_priv * ) ; void ( * rport_recv_req ) ( s#fc_seq * , s#fc_frame * , s#fc_lport * ) ; s#fc_rport_priv * ( * rport_lookup ) ( const s#fc_lport * , t#u32 ) ; void ( * rport_destroy ) ( s#kref * ) ; int ( * fcp_cmd_send ) ( s#fc_lport * , s#fc_fcp_pkt * , void ( * ) ( s#fc_seq * , s#fc_frame * , void * ) ) ; void ( * fcp_cleanup ) ( s#fc_lport * ) ; void ( * fcp_abort_io ) ( s#fc_lport * ) ; void ( * disc_recv_req ) ( s#fc_seq * , s#fc_frame * , s#fc_lport * ) ; void ( * disc_start ) ( void ( * ) ( s#fc_lport * , e#fc_disc_event ) , s#fc_lport * ) ; void ( * disc_stop ) ( s#fc_lport * ) ; void ( * disc_stop_final ) ( s#fc_lport * ) ; } 
e#fc_lport_state enum fc_lport_state { LPORT_ST_DISABLED = 0 , LPORT_ST_FLOGI , LPORT_ST_DNS , LPORT_ST_RNN_ID , LPORT_ST_RSNN_NN , LPORT_ST_RSPN_ID , LPORT_ST_RFT_ID , LPORT_ST_RFF_ID , LPORT_ST_SCR , LPORT_ST_READY , LPORT_ST_LOGO , LPORT_ST_RESET } 
s#fc_host_statistics struct fc_host_statistics { t#u64 seconds_since_last_reset ; t#u64 tx_frames ; t#u64 tx_words ; t#u64 rx_frames ; t#u64 rx_words ; t#u64 lip_count ; t#u64 nos_count ; t#u64 error_frames ; t#u64 dumped_frames ; t#u64 link_failure_count ; t#u64 loss_of_sync_count ; t#u64 loss_of_signal_count ; t#u64 prim_seq_protocol_err_count ; t#u64 invalid_tx_word_count ; t#u64 invalid_crc_count ; t#u64 fcp_input_requests ; t#u64 fcp_output_requests ; t#u64 fcp_control_requests ; t#u64 fcp_input_megabytes ; t#u64 fcp_output_megabytes ; } 
s#fcoe_dev_stats struct fcoe_dev_stats { t#u64 SecondsSinceLastReset ; t#u64 TxFrames ; t#u64 TxWords ; t#u64 RxFrames ; t#u64 RxWords ; t#u64 ErrorFrames ; t#u64 DumpedFrames ; t#u64 LinkFailureCount ; t#u64 LossOfSignalCount ; t#u64 InvalidTxWordCount ; t#u64 InvalidCRCCount ; t#u64 InputRequests ; t#u64 OutputRequests ; t#u64 ControlRequests ; t#u64 InputMegabytes ; t#u64 OutputMegabytes ; t#u64 VLinkFailureCount ; t#u64 MissDiscAdvCount ; } 
s#fc_els_rnid_gen struct fc_els_rnid_gen { t#__u8 rnid_vend_id [ 16 ] ; t#__be32 rnid_atype ; t#__be32 rnid_phys_port ; t#__be32 rnid_att_nodes ; t#__u8 rnid_node_mgmt ; t#__u8 rnid_ip_ver ; t#__be16 rnid_prot_port ; t#__be32 rnid_ip_addr [ 4 ] ; t#__u8 rnid_resvd [ 2 ] ; t#__be16 rnid_vend_spec ; } 
s#fc_ns_fts struct fc_ns_fts { t#__be32 ff_type_map [ 256 / 32 ] ; } 
s#fc_lport struct fc_lport { s#Scsi_Host * host ; s#list_head ema_list ; s#fc_rport_priv * dns_rdata ; s#fc_rport_priv * ptp_rdata ; void * scsi_priv ; s#fc_disc disc ; s#list_head vports ; s#fc_vport * vport ; s#libfc_function_template tt ; t#u8 link_up ; t#u8 qfull ; e#fc_lport_state state ; unsigned long boot_time ; s#fc_host_statistics host_stats ; s#fcoe_dev_stats * dev_stats ; t#u8 retry_count ; t#u64 wwpn ; t#u64 wwnn ; unsigned int service_params ; unsigned int e_d_tov ; unsigned int r_a_tov ; s#fc_els_rnid_gen rnid_gen ; t#u32 sg_supp : 1 ; t#u32 seq_offload : 1 ; t#u32 crc_offload : 1 ; t#u32 lro_enabled : 1 ; t#u32 does_npiv : 1 ; t#u32 npiv_enabled : 1 ; t#u32 mfs ; t#u8 max_retry_count ; t#u8 max_rport_retry_count ; t#u16 link_speed ; t#u16 link_supported_speeds ; t#u16 lro_xid ; unsigned int lso_max ; s#fc_ns_fts fcts ; s#mutex lp_mutex ; s#list_head list ; s#delayed_work retry_work ; } 
s#fcoe_fcf struct fcoe_fcf { s#list_head list ; unsigned long time ; t#u64 switch_name ; t#u64 fabric_name ; t#u32 fc_map ; t#u16 vfid ; t#u8 fcf_mac [ 6 ] ; t#u8 pri ; t#u16 flags ; t#u32 fka_period ; t#u8 fd_flags : 1 ; } 
s#fcoe_ctlr struct fcoe_ctlr { e#fip_state state ; e#fip_state mode ; s#fc_lport * lp ; s#fcoe_fcf * sel_fcf ; s#list_head fcfs ; t#u16 fcf_count ; unsigned long sol_time ; unsigned long sel_time ; unsigned long port_ka_time ; unsigned long ctlr_ka_time ; s#timer_list timer ; s#work_struct link_work ; s#work_struct recv_work ; s#sk_buff_head fip_recv_list ; t#u16 user_mfs ; t#u16 flogi_oxid ; t#u8 flogi_count ; t#u8 link ; t#u8 last_link ; t#u8 reset_req ; t#u8 map_dest ; t#u8 spma ; t#u8 send_ctlr_ka ; t#u8 send_port_ka ; t#u8 dest_addr [ 6 ] ; t#u8 ctl_src_addr [ 6 ] ; void ( * send ) ( s#fcoe_ctlr * , s#sk_buff * ) ; void ( * update_mac ) ( s#fc_lport * , t#u8 * ) ; t#u8 * ( * get_src_addr ) ( s#fc_lport * ) ; t#spinlock_t lock ; } 
fcoe_ctlr_init void fcoe_ctlr_init ( s#fcoe_ctlr * ) 
fcoe_ctlr_destroy void fcoe_ctlr_destroy ( s#fcoe_ctlr * ) 
fcoe_ctlr_link_up void fcoe_ctlr_link_up ( s#fcoe_ctlr * ) 
fcoe_ctlr_link_down int fcoe_ctlr_link_down ( s#fcoe_ctlr * ) 
fcoe_ctlr_els_send int fcoe_ctlr_els_send ( s#fcoe_ctlr * , s#fc_lport * , s#sk_buff * ) 
fcoe_ctlr_recv void fcoe_ctlr_recv ( s#fcoe_ctlr * , s#sk_buff * ) 
fcoe_ctlr_recv_flogi int fcoe_ctlr_recv_flogi ( s#fcoe_ctlr * , s#fc_lport * , s#fc_frame * ) 
fcoe_wwn_from_mac t#u64 fcoe_wwn_from_mac ( unsigned char [ ] , unsigned int , unsigned int ) 
fcoe_libfc_config int fcoe_libfc_config ( s#fc_lport * , s#libfc_function_template * ) 

/* drivers/scsi/hosts.o */
s##scsi_host_cmd_pool
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##timer_rand_state
s##mtd_info
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##scsi_cmnd
s##scsi_sense_hdr
s##proc_dir_entry
s##workqueue_struct
scsi_host_set_state extern int scsi_host_set_state ( s#Scsi_Host * , e#scsi_host_state ) 
scsi_remove_host extern void scsi_remove_host ( s#Scsi_Host * ) 
scsi_add_host_with_dma extern int scsi_add_host_with_dma ( s#Scsi_Host * , s#device * , s#device * ) 
scsi_host_alloc extern s#Scsi_Host * scsi_host_alloc ( s#scsi_host_template * , int ) 
scsi_register extern s#Scsi_Host * scsi_register ( s#scsi_host_template * , int ) 
scsi_unregister extern void scsi_unregister ( s#Scsi_Host * ) 
scsi_host_lookup extern s#Scsi_Host * scsi_host_lookup ( unsigned short ) 
scsi_host_get extern s#Scsi_Host * scsi_host_get ( s#Scsi_Host * ) 
scsi_host_put extern void scsi_host_put ( s#Scsi_Host * ) 
scsi_is_host_device int scsi_is_host_device ( const s#device * ) 
scsi_queue_work extern int scsi_queue_work ( s#Scsi_Host * , s#work_struct * ) 
scsi_flush_work extern void scsi_flush_work ( s#Scsi_Host * ) 

/* drivers/scsi/libfc/fc_disc.o */
s##scsi_host_cmd_pool
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##timer_rand_state
s##mtd_info
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##scsi_sense_hdr
s##proc_dir_entry
s##workqueue_struct
s##sock
s##net_device
s##sec_path
fc_disc_init int fc_disc_init ( s#fc_lport * ) 

/* drivers/scsi/libfc/fc_elsct.o */
s##scsi_host_cmd_pool
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##timer_rand_state
s##mtd_info
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##scsi_sense_hdr
s##proc_dir_entry
s##workqueue_struct
s##sock
s##net_device
s##sec_path
fc_elsct_send s#fc_seq * fc_elsct_send ( s#fc_lport * , t#u32 , s#fc_frame * , unsigned int , void ( * ) ( s#fc_seq * , s#fc_frame * , void * ) , void * , t#u32 ) 
fc_elsct_init int fc_elsct_init ( s#fc_lport * ) 

/* drivers/scsi/libfc/fc_exch.o */
fc_cpu_mask extern t#u16 fc_cpu_mask 
s##scsi_host_cmd_pool
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##timer_rand_state
s##mtd_info
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##scsi_sense_hdr
s##proc_dir_entry
s##workqueue_struct
s##sock
s##net_device
s##sec_path
fc_exch_mgr_reset void fc_exch_mgr_reset ( s#fc_lport * , t#u32 , t#u32 ) 
e#fc_class enum fc_class { FC_CLASS_NONE = 0 , FC_CLASS_2 = FC_SOF_I2 , FC_CLASS_3 = FC_SOF_I3 , FC_CLASS_4 = FC_SOF_I4 , FC_CLASS_F = FC_SOF_F , } 
s#fc_exch_pool struct fc_exch_pool { t#u16 next_index ; t#u16 total_exches ; t#spinlock_t lock ; s#list_head ex_list ; } 
s#fc_exch_mgr struct fc_exch_mgr { e#fc_class class ; s#kref kref ; t#u16 min_xid ; t#u16 max_xid ; t#mempool_t * ep_pool ; t#u16 pool_max_index ; s#fc_exch_pool * pool ; struct { t#atomic_t no_free_exch ; t#atomic_t no_free_exch_xid ; t#atomic_t xid_not_found ; t#atomic_t xid_busy ; t#atomic_t seq_not_found ; t#atomic_t non_bls_resp ; } stats ; } 
s#fc_exch_mgr_anchor struct fc_exch_mgr_anchor { s#list_head ema_list ; s#fc_exch_mgr * mp ; t#bool ( * match ) ( s#fc_frame * ) ; } 
fc_exch_mgr_add s#fc_exch_mgr_anchor * fc_exch_mgr_add ( s#fc_lport * , s#fc_exch_mgr * , t#bool ( * ) ( s#fc_frame * ) ) 
fc_exch_mgr_del void fc_exch_mgr_del ( s#fc_exch_mgr_anchor * ) 
fc_exch_mgr_alloc s#fc_exch_mgr * fc_exch_mgr_alloc ( s#fc_lport * , e#fc_class , t#u16 , t#u16 , t#bool ( * ) ( s#fc_frame * ) ) 
fc_exch_mgr_free void fc_exch_mgr_free ( s#fc_lport * ) 
fc_exch_recv void fc_exch_recv ( s#fc_lport * , s#fc_frame * ) 
fc_exch_init int fc_exch_init ( s#fc_lport * ) 

/* drivers/scsi/libfc/fc_fcp.o */
s##scsi_host_cmd_pool
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##timer_rand_state
s##mtd_info
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##proc_dir_entry
s##workqueue_struct
s##scsi_sense_hdr
fc_queuecommand int fc_queuecommand ( s#scsi_cmnd * , void ( * ) ( s#scsi_cmnd * ) ) 
fc_eh_abort int fc_eh_abort ( s#scsi_cmnd * ) 
fc_eh_device_reset int fc_eh_device_reset ( s#scsi_cmnd * ) 
fc_eh_host_reset int fc_eh_host_reset ( s#scsi_cmnd * ) 
fc_slave_alloc int fc_slave_alloc ( s#scsi_device * ) 
fc_change_queue_depth int fc_change_queue_depth ( s#scsi_device * , int , int ) 
fc_change_queue_type int fc_change_queue_type ( s#scsi_device * , int ) 
s##sock
s##net_device
s##sec_path
fc_fcp_destroy void fc_fcp_destroy ( s#fc_lport * ) 
fc_fcp_init int fc_fcp_init ( s#fc_lport * ) 

/* drivers/scsi/libfc/fc_frame.o */
s##sock
s##net_device
s##sec_path
fc_frame_crc_check t#u32 fc_frame_crc_check ( s#fc_frame * ) 
_fc_frame_alloc s#fc_frame * _fc_frame_alloc ( t#size_t ) 
s##fc_lport
fc_frame_alloc_fill s#fc_frame * fc_frame_alloc_fill ( s#fc_lport * , t#size_t ) 

/* drivers/scsi/libfc/fc_lport.o */
s##scsi_host_cmd_pool
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##timer_rand_state
s##mtd_info
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##scsi_sense_hdr
s##proc_dir_entry
s##workqueue_struct
fc_get_host_port_type void fc_get_host_port_type ( s#Scsi_Host * ) 
fc_get_host_port_state void fc_get_host_port_state ( s#Scsi_Host * ) 
fc_get_host_speed void fc_get_host_speed ( s#Scsi_Host * ) 
fc_get_host_stats s#fc_host_statistics * fc_get_host_stats ( s#Scsi_Host * ) 
s##sock
s##net_device
s##sec_path
fc_fabric_login int fc_fabric_login ( s#fc_lport * ) 
fc_linkup void fc_linkup ( s#fc_lport * ) 
fc_linkdown void fc_linkdown ( s#fc_lport * ) 
fc_fabric_logoff int fc_fabric_logoff ( s#fc_lport * ) 
fc_lport_destroy int fc_lport_destroy ( s#fc_lport * ) 
fc_set_mfs int fc_set_mfs ( s#fc_lport * , t#u32 ) 
fc_lport_reset int fc_lport_reset ( s#fc_lport * ) 
fc_lport_logo_resp void fc_lport_logo_resp ( s#fc_seq * , s#fc_frame * , void * ) 
fc_lport_flogi_resp void fc_lport_flogi_resp ( s#fc_seq * , s#fc_frame * , void * ) 
fc_lport_config int fc_lport_config ( s#fc_lport * ) 
fc_lport_init int fc_lport_init ( s#fc_lport * ) 
t#uint8_t typedef t#__u8 uint8_t 
s#fc_bsg_host_add_rport struct fc_bsg_host_add_rport { t#uint8_t reserved ; t#uint8_t port_id [ 3 ] ; } 
s#fc_bsg_host_del_rport struct fc_bsg_host_del_rport { t#uint8_t reserved ; t#uint8_t port_id [ 3 ] ; } 
s#fc_bsg_host_els struct fc_bsg_host_els { t#uint8_t command_code ; t#uint8_t port_id [ 3 ] ; } 
s#fc_bsg_host_ct struct fc_bsg_host_ct { t#uint8_t reserved ; t#uint8_t port_id [ 3 ] ; t#uint32_t preamble_word0 ; t#uint32_t preamble_word1 ; t#uint32_t preamble_word2 ; } 
s#fc_bsg_host_vendor struct fc_bsg_host_vendor { t#uint64_t vendor_id ; t#uint32_t vendor_cmd [ 0 ] ; } 
s#fc_bsg_rport_els struct fc_bsg_rport_els { t#uint8_t els_code ; } 
s#fc_bsg_rport_ct struct fc_bsg_rport_ct { t#uint32_t preamble_word0 ; t#uint32_t preamble_word1 ; t#uint32_t preamble_word2 ; } 
s#fc_bsg_request struct fc_bsg_request { t#uint32_t msgcode ; union { s#fc_bsg_host_add_rport h_addrport ; s#fc_bsg_host_del_rport h_delrport ; s#fc_bsg_host_els h_els ; s#fc_bsg_host_ct h_ct ; s#fc_bsg_host_vendor h_vendor ; s#fc_bsg_rport_els r_els ; s#fc_bsg_rport_ct r_ct ; } rqst_data ; } 
s#fc_bsg_host_vendor_reply struct fc_bsg_host_vendor_reply { t#uint32_t vendor_rsp [ 0 ] ; } 
s#fc_bsg_ctels_reply struct fc_bsg_ctels_reply { t#uint32_t status ; struct { t#uint8_t action ; t#uint8_t reason_code ; t#uint8_t reason_explanation ; t#uint8_t vendor_unique ; } rjt_data ; } 
s#fc_bsg_reply struct fc_bsg_reply { t#uint32_t result ; t#uint32_t reply_payload_rcv_len ; union { s#fc_bsg_host_vendor_reply vendor_reply ; s#fc_bsg_ctels_reply ctels_reply ; } reply_data ; } 
s#fc_bsg_buffer struct fc_bsg_buffer { unsigned int payload_len ; int sg_cnt ; s#scatterlist * sg_list ; } 
s#fc_bsg_job struct fc_bsg_job { s#Scsi_Host * shost ; s#fc_rport * rport ; s#device * dev ; s#request * req ; t#spinlock_t job_lock ; unsigned int state_flags ; unsigned int ref_cnt ; void ( * job_done ) ( s#fc_bsg_job * ) ; s#fc_bsg_request * request ; s#fc_bsg_reply * reply ; unsigned int request_len ; unsigned int reply_len ; s#fc_bsg_buffer request_payload ; s#fc_bsg_buffer reply_payload ; void * dd_data ; } 
fc_lport_bsg_request int fc_lport_bsg_request ( s#fc_bsg_job * ) 

/* drivers/scsi/libfc/fc_npiv.o */
s##scsi_host_cmd_pool
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##timer_rand_state
s##mtd_info
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##scsi_sense_hdr
s##proc_dir_entry
s##workqueue_struct
s##sock
s##net_device
s##sec_path
libfc_vport_create s#fc_lport * libfc_vport_create ( s#fc_vport * , int ) 
fc_vport_setlink void fc_vport_setlink ( s#fc_lport * ) 

/* drivers/scsi/libfc/fc_rport.o */
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##timer_rand_state
s##mtd_info
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
fc_set_rport_loss_tmo void fc_set_rport_loss_tmo ( s#fc_rport * , t#u32 ) 
s##scsi_host_cmd_pool
s##scsi_sense_hdr
s##proc_dir_entry
s##workqueue_struct
s##sock
s##net_device
s##sec_path
fc_rport_init int fc_rport_init ( s#fc_lport * ) 
fc_rport_terminate_io void fc_rport_terminate_io ( s#fc_rport * ) 

/* drivers/scsi/libiscsi.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##nameidata
s##vfsmount
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##timer_rand_state
s##mtd_info
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s#iscsi_cls_session struct iscsi_cls_session { s#list_head sess_list ; s#iscsi_transport * transport ; t#spinlock_t lock ; s#work_struct block_work ; s#work_struct unblock_work ; s#work_struct scan_work ; s#work_struct unbind_work ; int recovery_tmo ; s#delayed_work recovery_work ; unsigned int target_id ; int state ; int sid ; void * dd_data ; s#device dev ; } 
s#iscsi_endpoint struct iscsi_endpoint { void * dd_data ; s#device dev ; t#uint64_t id ; } 
t#uint16_t typedef t#__u16 uint16_t 
e#iscsi_param enum iscsi_param { ISCSI_PARAM_MAX_RECV_DLENGTH , ISCSI_PARAM_MAX_XMIT_DLENGTH , ISCSI_PARAM_HDRDGST_EN , ISCSI_PARAM_DATADGST_EN , ISCSI_PARAM_INITIAL_R2T_EN , ISCSI_PARAM_MAX_R2T , ISCSI_PARAM_IMM_DATA_EN , ISCSI_PARAM_FIRST_BURST , ISCSI_PARAM_MAX_BURST , ISCSI_PARAM_PDU_INORDER_EN , ISCSI_PARAM_DATASEQ_INORDER_EN , ISCSI_PARAM_ERL , ISCSI_PARAM_IFMARKER_EN , ISCSI_PARAM_OFMARKER_EN , ISCSI_PARAM_EXP_STATSN , ISCSI_PARAM_TARGET_NAME , ISCSI_PARAM_TPGT , ISCSI_PARAM_PERSISTENT_ADDRESS , ISCSI_PARAM_PERSISTENT_PORT , ISCSI_PARAM_SESS_RECOVERY_TMO , ISCSI_PARAM_CONN_PORT , ISCSI_PARAM_CONN_ADDRESS , ISCSI_PARAM_USERNAME , ISCSI_PARAM_USERNAME_IN , ISCSI_PARAM_PASSWORD , ISCSI_PARAM_PASSWORD_IN , ISCSI_PARAM_FAST_ABORT , ISCSI_PARAM_ABORT_TMO , ISCSI_PARAM_LU_RESET_TMO , ISCSI_PARAM_HOST_RESET_TMO , ISCSI_PARAM_PING_TMO , ISCSI_PARAM_RECV_TMO , ISCSI_PARAM_IFACE_NAME , ISCSI_PARAM_ISID , ISCSI_PARAM_INITIATOR_NAME , ISCSI_PARAM_TGT_RESET_TMO , ISCSI_PARAM_MAX , } 
s##scsi_host_cmd_pool
s##workqueue_struct
e#iscsi_host_param enum iscsi_host_param { ISCSI_HOST_PARAM_HWADDRESS , ISCSI_HOST_PARAM_INITIATOR_NAME , ISCSI_HOST_PARAM_NETDEV_NAME , ISCSI_HOST_PARAM_IPADDRESS , ISCSI_HOST_PARAM_MAX , } 
t#itt_t typedef t#uint32_t itt_t 
s#iscsi_hdr struct iscsi_hdr { t#uint8_t opcode ; t#uint8_t flags ; t#uint8_t rsvd2 [ 2 ] ; t#uint8_t hlength ; t#uint8_t dlength [ 3 ] ; t#uint8_t lun [ 8 ] ; t#itt_t itt ; t#__be32 ttt ; t#__be32 statsn ; t#__be32 exp_statsn ; t#__be32 max_statsn ; t#uint8_t other [ 12 ] ; } 
s#iscsi_stats_custom struct iscsi_stats_custom { char desc [ 64 ] ; t#uint64_t value ; } 
s#iscsi_stats struct iscsi_stats { t#uint64_t txdata_octets ; t#uint64_t rxdata_octets ; t#uint32_t noptx_pdus ; t#uint32_t scsicmd_pdus ; t#uint32_t tmfcmd_pdus ; t#uint32_t login_pdus ; t#uint32_t text_pdus ; t#uint32_t dataout_pdus ; t#uint32_t logout_pdus ; t#uint32_t snack_pdus ; t#uint32_t noprx_pdus ; t#uint32_t scsirsp_pdus ; t#uint32_t tmfrsp_pdus ; t#uint32_t textrsp_pdus ; t#uint32_t datain_pdus ; t#uint32_t logoutrsp_pdus ; t#uint32_t r2t_pdus ; t#uint32_t async_pdus ; t#uint32_t rjt_pdus ; t#uint32_t digest_err ; t#uint32_t timeout_err ; t#uint32_t custom_length ; s#iscsi_stats_custom custom [ 0 ] __attribute__ ( ( aligned ( sizeof ( uint64_t ) ) ) ) ; } 
s#iscsi_r2t_info struct iscsi_r2t_info { t#__be32 ttt ; t#__be32 exp_statsn ; t#uint32_t data_length ; t#uint32_t data_offset ; int data_count ; int datasn ; int sent ; } 
s#iscsi_task struct iscsi_task { s#iscsi_hdr * hdr ; unsigned short hdr_max ; unsigned short hdr_len ; t#itt_t hdr_itt ; t#__be32 cmdsn ; t#uint8_t lun [ 8 ] ; int itt ; unsigned imm_count ; s#iscsi_r2t_info unsol_r2t ; char * data ; unsigned data_count ; s#scsi_cmnd * sc ; s#iscsi_conn * conn ; unsigned long last_xfer ; unsigned long last_timeout ; t#bool have_checked_conn ; int state ; t#atomic_t refcount ; s#list_head running ; void * dd_data ; } 
e#iscsi_tgt_dscvr enum iscsi_tgt_dscvr { ISCSI_TGT_DSCVR_SEND_TARGETS = 1 , ISCSI_TGT_DSCVR_ISNS = 2 , ISCSI_TGT_DSCVR_SLP = 3 , } 
s#in_addr struct in_addr { t#__be32 s_addr ; } 
s#iscsi_path struct iscsi_path { t#uint64_t handle ; t#uint8_t mac_addr [ 6 ] ; t#uint8_t mac_addr_old [ 6 ] ; t#uint32_t ip_addr_len ; union { s#in_addr v4_addr ; s#in6_addr v6_addr ; } src ; union { s#in_addr v4_addr ; s#in6_addr v6_addr ; } dst ; t#uint16_t vlan_id ; t#uint16_t pmtu ; } 
s#iscsi_transport struct iscsi_transport { s#module * owner ; char * name ; unsigned int caps ; t#uint64_t param_mask ; t#uint64_t host_param_mask ; s#iscsi_cls_session * ( * create_session ) ( s#iscsi_endpoint * , t#uint16_t , t#uint16_t , t#uint32_t ) ; void ( * destroy_session ) ( s#iscsi_cls_session * ) ; s#iscsi_cls_conn * ( * create_conn ) ( s#iscsi_cls_session * , t#uint32_t ) ; int ( * bind_conn ) ( s#iscsi_cls_session * , s#iscsi_cls_conn * , t#uint64_t , int ) ; int ( * start_conn ) ( s#iscsi_cls_conn * ) ; void ( * stop_conn ) ( s#iscsi_cls_conn * , int ) ; void ( * destroy_conn ) ( s#iscsi_cls_conn * ) ; int ( * set_param ) ( s#iscsi_cls_conn * , e#iscsi_param , char * , int ) ; int ( * get_conn_param ) ( s#iscsi_cls_conn * , e#iscsi_param , char * ) ; int ( * get_session_param ) ( s#iscsi_cls_session * , e#iscsi_param , char * ) ; int ( * get_host_param ) ( s#Scsi_Host * , e#iscsi_host_param , char * ) ; int ( * set_host_param ) ( s#Scsi_Host * , e#iscsi_host_param , char * , int ) ; int ( * send_pdu ) ( s#iscsi_cls_conn * , s#iscsi_hdr * , char * , t#uint32_t ) ; void ( * get_stats ) ( s#iscsi_cls_conn * , s#iscsi_stats * ) ; int ( * init_task ) ( s#iscsi_task * ) ; int ( * xmit_task ) ( s#iscsi_task * ) ; void ( * cleanup_task ) ( s#iscsi_task * ) ; int ( * alloc_pdu ) ( s#iscsi_task * , t#uint8_t ) ; int ( * xmit_pdu ) ( s#iscsi_task * ) ; int ( * init_pdu ) ( s#iscsi_task * , unsigned int , unsigned int ) ; void ( * parse_pdu_itt ) ( s#iscsi_conn * , t#itt_t , int * , int * ) ; void ( * session_recovery_timedout ) ( s#iscsi_cls_session * ) ; s#iscsi_endpoint * ( * ep_connect ) ( s#Scsi_Host * , s#sockaddr * , int ) ; int ( * ep_poll ) ( s#iscsi_endpoint * , int ) ; void ( * ep_disconnect ) ( s#iscsi_endpoint * ) ; int ( * tgt_dscvr ) ( s#Scsi_Host * , e#iscsi_tgt_dscvr , t#uint32_t , s#sockaddr * ) ; int ( * set_path ) ( s#Scsi_Host * , s#iscsi_path * ) ; } 
s#iscsi_cls_conn struct iscsi_cls_conn { s#list_head conn_list ; void * dd_data ; s#iscsi_transport * transport ; t#uint32_t cid ; int active ; s#device dev ; } 
s#kfifo struct kfifo { unsigned char * buffer ; unsigned int size ; unsigned int in ; unsigned int out ; t#spinlock_t * lock ; } 
s#iscsi_pool struct iscsi_pool { s#kfifo * queue ; void * * pool ; int max ; } 
s#iscsi_session struct iscsi_session { s#iscsi_cls_session * cls_session ; s#mutex eh_mutex ; t#uint32_t cmdsn ; t#uint32_t exp_cmdsn ; t#uint32_t max_cmdsn ; t#uint32_t queued_cmdsn ; int abort_timeout ; int lu_reset_timeout ; int tgt_reset_timeout ; int initial_r2t_en ; unsigned max_r2t ; int imm_data_en ; unsigned first_burst ; unsigned max_burst ; int time2wait ; int time2retain ; int pdu_inorder_en ; int dataseq_inorder_en ; int erl ; int fast_abort ; int tpgt ; char * username ; char * username_in ; char * password ; char * password_in ; char * targetname ; char * ifacename ; char * initiatorname ; s#iscsi_transport * tt ; s#Scsi_Host * host ; s#iscsi_conn * leadconn ; t#spinlock_t lock ; int state ; int age ; int scsi_cmds_max ; int cmds_max ; s#iscsi_task * * cmds ; s#iscsi_pool cmdpool ; void * dd_data ; } 
s#iscsi_tm struct iscsi_tm { t#uint8_t opcode ; t#uint8_t flags ; t#uint8_t rsvd1 [ 2 ] ; t#uint8_t hlength ; t#uint8_t dlength [ 3 ] ; t#uint8_t lun [ 8 ] ; t#itt_t itt ; t#itt_t rtt ; t#__be32 cmdsn ; t#__be32 exp_statsn ; t#__be32 refcmdsn ; t#__be32 exp_datasn ; t#uint8_t rsvd2 [ 8 ] ; } 
s#iscsi_conn struct iscsi_conn { s#iscsi_cls_conn * cls_conn ; void * dd_data ; s#iscsi_session * session ; int stop_stage ; s#timer_list transport_timer ; unsigned long last_recv ; unsigned long last_ping ; int ping_timeout ; int recv_timeout ; s#iscsi_task * ping_task ; t#uint32_t exp_statsn ; int id ; int c_stage ; char * data ; s#iscsi_task * login_task ; s#iscsi_task * task ; s#list_head mgmtqueue ; s#list_head cmdqueue ; s#list_head requeue ; s#work_struct xmitwork ; unsigned long suspend_tx ; unsigned long suspend_rx ; t#wait_queue_head_t ehwait ; s#iscsi_tm tmhdr ; s#timer_list tmf_timer ; int tmf_state ; unsigned max_recv_dlength ; unsigned max_xmit_dlength ; int hdrdgst_en ; int datadgst_en ; int ifmarker_en ; int ofmarker_en ; int persistent_port ; char * persistent_address ; int portal_port ; char portal_address [ 64 ] ; t#uint64_t txdata_octets ; t#uint64_t rxdata_octets ; t#uint32_t scsicmd_pdus_cnt ; t#uint32_t dataout_pdus_cnt ; t#uint32_t scsirsp_pdus_cnt ; t#uint32_t datain_pdus_cnt ; t#uint32_t r2t_pdus_cnt ; t#uint32_t tmfcmd_pdus_cnt ; t#int32_t tmfrsp_pdus_cnt ; t#uint32_t eh_abort_cnt ; t#uint32_t fmr_unalign_cnt ; } 
iscsi_conn_queue_work extern void iscsi_conn_queue_work ( s#iscsi_conn * ) 
s#iscsi_nopin struct iscsi_nopin { t#uint8_t opcode ; t#uint8_t flags ; t#__be16 rsvd2 ; t#uint8_t rsvd3 ; t#uint8_t dlength [ 3 ] ; t#uint8_t lun [ 8 ] ; t#itt_t itt ; t#__be32 ttt ; t#__be32 statsn ; t#__be32 exp_cmdsn ; t#__be32 max_cmdsn ; t#uint8_t rsvd4 [ 12 ] ; } 
iscsi_update_cmdsn extern void iscsi_update_cmdsn ( s#iscsi_session * , s#iscsi_nopin * ) 
s#iscsi_data struct iscsi_data { t#uint8_t opcode ; t#uint8_t flags ; t#uint8_t rsvd2 [ 2 ] ; t#uint8_t rsvd3 ; t#uint8_t dlength [ 3 ] ; t#uint8_t lun [ 8 ] ; t#itt_t itt ; t#__be32 ttt ; t#__be32 rsvd4 ; t#__be32 exp_statsn ; t#__be32 rsvd5 ; t#__be32 datasn ; t#__be32 offset ; t#__be32 rsvd6 ; } 
iscsi_prep_data_out_pdu extern void iscsi_prep_data_out_pdu ( s#iscsi_task * , s#iscsi_r2t_info * , s#iscsi_data * ) 
__iscsi_get_task extern void __iscsi_get_task ( s#iscsi_task * ) 
iscsi_put_task extern void iscsi_put_task ( s#iscsi_task * ) 
iscsi_complete_scsi_task extern void iscsi_complete_scsi_task ( s#iscsi_task * , t#uint32_t , t#uint32_t ) 
iscsi_conn_send_pdu extern int iscsi_conn_send_pdu ( s#iscsi_cls_conn * , s#iscsi_hdr * , char * , t#uint32_t ) 
iscsi_itt_to_task extern s#iscsi_task * iscsi_itt_to_task ( s#iscsi_conn * , t#itt_t ) 
__iscsi_complete_pdu extern int __iscsi_complete_pdu ( s#iscsi_conn * , s#iscsi_hdr * , char * , int ) 
iscsi_complete_pdu extern int iscsi_complete_pdu ( s#iscsi_conn * , s#iscsi_hdr * , char * , int ) 
iscsi_verify_itt extern int iscsi_verify_itt ( s#iscsi_conn * , t#itt_t ) 
iscsi_itt_to_ctask extern s#iscsi_task * iscsi_itt_to_ctask ( s#iscsi_conn * , t#itt_t ) 
e#iscsi_err enum iscsi_err { ISCSI_OK = 0 , ISCSI_ERR_DATASN = 1000 + 1 , ISCSI_ERR_DATA_OFFSET = 1000 + 2 , ISCSI_ERR_MAX_CMDSN = 1000 + 3 , ISCSI_ERR_EXP_CMDSN = 1000 + 4 , ISCSI_ERR_BAD_OPCODE = 1000 + 5 , ISCSI_ERR_DATALEN = 1000 + 6 , ISCSI_ERR_AHSLEN = 1000 + 7 , ISCSI_ERR_PROTO = 1000 + 8 , ISCSI_ERR_LUN = 1000 + 9 , ISCSI_ERR_BAD_ITT = 1000 + 10 , ISCSI_ERR_CONN_FAILED = 1000 + 11 , ISCSI_ERR_R2TSN = 1000 + 12 , ISCSI_ERR_SESSION_FAILED = 1000 + 13 , ISCSI_ERR_HDR_DGST = 1000 + 14 , ISCSI_ERR_DATA_DGST = 1000 + 15 , ISCSI_ERR_PARAM_NOT_FOUND = 1000 + 16 , ISCSI_ERR_NO_SCSI_CMD = 1000 + 17 , ISCSI_ERR_INVALID_HOST = 1000 + 18 , ISCSI_ERR_XMIT_FAILED = 1000 + 19 , ISCSI_ERR_TCP_CONN_CLOSE = 1000 + 20 , } 
iscsi_session_failure extern void iscsi_session_failure ( s#iscsi_session * , e#iscsi_err ) 
iscsi_conn_failure extern void iscsi_conn_failure ( s#iscsi_conn * , e#iscsi_err ) 
iscsi_requeue_task extern void iscsi_requeue_task ( s#iscsi_task * ) 
iscsi_queuecommand extern int iscsi_queuecommand ( s#scsi_cmnd * , void ( * ) ( s#scsi_cmnd * ) ) 
iscsi_change_queue_depth extern int iscsi_change_queue_depth ( s#scsi_device * , int , int ) 
iscsi_target_alloc extern int iscsi_target_alloc ( s#scsi_target * ) 
iscsi_suspend_queue extern void iscsi_suspend_queue ( s#iscsi_conn * ) 
iscsi_suspend_tx extern void iscsi_suspend_tx ( s#iscsi_conn * ) 
iscsi_eh_abort extern int iscsi_eh_abort ( s#scsi_cmnd * ) 
iscsi_eh_device_reset extern int iscsi_eh_device_reset ( s#scsi_cmnd * ) 
iscsi_session_recovery_timedout extern void iscsi_session_recovery_timedout ( s#iscsi_cls_session * ) 
iscsi_eh_session_reset extern int iscsi_eh_session_reset ( s#scsi_cmnd * ) 
iscsi_eh_target_reset extern int iscsi_eh_target_reset ( s#scsi_cmnd * ) 
iscsi_eh_recover_target extern int iscsi_eh_recover_target ( s#scsi_cmnd * ) 
iscsi_pool_init extern int iscsi_pool_init ( s#iscsi_pool * , int , void * * * , int ) 
iscsi_pool_free extern void iscsi_pool_free ( s#iscsi_pool * ) 
iscsi_host_add extern int iscsi_host_add ( s#Scsi_Host * , s#device * ) 
iscsi_host_alloc extern s#Scsi_Host * iscsi_host_alloc ( s#scsi_host_template * , int , t#bool ) 
iscsi_host_remove extern void iscsi_host_remove ( s#Scsi_Host * ) 
iscsi_host_free extern void iscsi_host_free ( s#Scsi_Host * ) 
iscsi_session_setup extern s#iscsi_cls_session * iscsi_session_setup ( s#iscsi_transport * , s#Scsi_Host * , t#uint16_t , int , int , t#uint32_t , unsigned int ) 
iscsi_session_teardown extern void iscsi_session_teardown ( s#iscsi_cls_session * ) 
iscsi_conn_setup extern s#iscsi_cls_conn * iscsi_conn_setup ( s#iscsi_cls_session * , int , t#uint32_t ) 
iscsi_conn_teardown extern void iscsi_conn_teardown ( s#iscsi_cls_conn * ) 
iscsi_conn_start extern int iscsi_conn_start ( s#iscsi_cls_conn * ) 
iscsi_conn_stop extern void iscsi_conn_stop ( s#iscsi_cls_conn * , int ) 
iscsi_conn_bind extern int iscsi_conn_bind ( s#iscsi_cls_session * , s#iscsi_cls_conn * , int ) 
iscsi_set_param extern int iscsi_set_param ( s#iscsi_cls_conn * , e#iscsi_param , char * , int ) 
iscsi_session_get_param extern int iscsi_session_get_param ( s#iscsi_cls_session * , e#iscsi_param , char * ) 
iscsi_conn_get_param extern int iscsi_conn_get_param ( s#iscsi_cls_conn * , e#iscsi_param , char * ) 
iscsi_host_get_param extern int iscsi_host_get_param ( s#Scsi_Host * , e#iscsi_host_param , char * ) 
iscsi_host_set_param extern int iscsi_host_set_param ( s#Scsi_Host * , e#iscsi_host_param , char * , int ) 

/* drivers/scsi/libiscsi_tcp.o */
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s##crypto_type
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##nameidata
s##vfsmount
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##timer_rand_state
s##mtd_info
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##scsi_host_cmd_pool
s##scsi_sense_hdr
s##scsi_transport_template
s##workqueue_struct
s#iscsi_tcp_recv struct iscsi_tcp_recv { s#iscsi_hdr * hdr ; s#iscsi_segment segment ; t#uint32_t hdr_buf [ 64 ] ; int datalen ; } 
s#iscsi_tcp_conn struct iscsi_tcp_conn { s#iscsi_conn * iscsi_conn ; void * dd_data ; int stop_stage ; s#iscsi_tcp_recv in ; s#hash_desc * rx_hash ; } 
t#iscsi_segment_done_fn_t typedef int iscsi_segment_done_fn_t ( s#iscsi_tcp_conn * , s#iscsi_segment * ) 
s#iscsi_segment struct iscsi_segment { unsigned char * data ; unsigned int size ; unsigned int copied ; unsigned int total_size ; unsigned int total_copied ; s#hash_desc * hash ; unsigned char padbuf [ 4 ] ; unsigned char recv_digest [ ISCSI_DIGEST_SIZE ] ; unsigned char digest [ ISCSI_DIGEST_SIZE ] ; unsigned int digest_len ; s#scatterlist * sg ; void * sg_mapped ; unsigned int sg_offset ; t#iscsi_segment_done_fn_t * done ; } 
iscsi_tcp_segment_unmap extern void iscsi_tcp_segment_unmap ( s#iscsi_segment * ) 
iscsi_tcp_segment_done extern int iscsi_tcp_segment_done ( s#iscsi_tcp_conn * , s#iscsi_segment * , int , unsigned ) 
iscsi_tcp_dgst_header extern void iscsi_tcp_dgst_header ( s#hash_desc * , const void * , t#size_t , unsigned char [ ISCSI_DIGEST_SIZE ] ) 
iscsi_segment_init_linear extern void iscsi_segment_init_linear ( s#iscsi_segment * , void * , t#size_t , t#iscsi_segment_done_fn_t * , s#hash_desc * ) 
iscsi_segment_seek_sg extern int iscsi_segment_seek_sg ( s#iscsi_segment * , s#scatterlist * , unsigned int , unsigned int , t#size_t , t#iscsi_segment_done_fn_t * , s#hash_desc * ) 
iscsi_tcp_hdr_recv_prep extern void iscsi_tcp_hdr_recv_prep ( s#iscsi_tcp_conn * ) 
iscsi_tcp_cleanup_task extern void iscsi_tcp_cleanup_task ( s#iscsi_task * ) 
iscsi_tcp_recv_segment_is_hdr extern int iscsi_tcp_recv_segment_is_hdr ( s#iscsi_tcp_conn * ) 
s#inet_ehash_bucket struct inet_ehash_bucket { s#hlist_nulls_head chain ; s#hlist_nulls_head twchain ; } 
s#inet_bind_hashbucket struct inet_bind_hashbucket { t#spinlock_t lock ; s#hlist_head chain ; } 
s#inet_listen_hashbucket struct inet_listen_hashbucket { t#spinlock_t lock ; s#hlist_nulls_head head ; } 
s#inet_hashinfo struct inet_hashinfo { s#inet_ehash_bucket * ehash ; t#spinlock_t * ehash_locks ; unsigned int ehash_size ; unsigned int ehash_locks_mask ; s#inet_bind_hashbucket * bhash ; unsigned int bhash_size ; s#kmem_cache * bind_bucket_cachep ; s#inet_listen_hashbucket listening_hash [ 32 ] __attribute__ ( ( __aligned__ ( 256 ) ) ) ; t#atomic_t bsockets ; } 
s##udp_table
s##raw_hashinfo
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s#flowi struct flowi { int oif ; int iif ; t#__u32 mark ; union { struct { t#__be32 daddr ; t#__be32 saddr ; t#__u8 tos ; t#__u8 scope ; } ip4_u ; struct { s#in6_addr daddr ; s#in6_addr saddr ; t#__be32 flowlabel ; } ip6_u ; struct { t#__le16 daddr ; t#__le16 saddr ; t#__u8 scope ; } dn_u ; } nl_u ; t#__u8 proto ; t#__u8 flags ; union { struct { t#__be16 sport ; t#__be16 dport ; } ports ; struct { t#__u8 type ; t#__u8 code ; } icmpt ; struct { t#__le16 sport ; t#__le16 dport ; } dnports ; t#__be32 spi ; struct { t#__u8 type ; } mht ; } uli_u ; t#__u32 secid ; } 
s##in_device
s#inet_peer struct inet_peer { s#inet_peer * avl_left , * avl_right ; t#__be32 v4daddr ; t#__u16 avl_height ; t#__u16 ip_id_count ; s#list_head unused ; t#__u32 dtime ; t#atomic_t refcnt ; t#atomic_t rid ; t#__u32 tcp_ts ; unsigned long tcp_ts_stamp ; } 
s#rtable struct rtable { union { s#dst_entry dst ; } u ; s#flowi fl ; s#in_device * idev ; int rt_genid ; unsigned rt_flags ; t#__u16 rt_type ; t#__be32 rt_dst ; t#__be32 rt_src ; int rt_iif ; t#__be32 rt_gateway ; t#__be32 rt_spec_dst ; s#inet_peer * peer ; } 
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##xfrm_policy
s##sec_path
iscsi_tcp_recv_skb extern int iscsi_tcp_recv_skb ( s#iscsi_conn * , s#sk_buff * , unsigned int , t#bool , int * ) 
iscsi_tcp_task_init extern int iscsi_tcp_task_init ( s#iscsi_task * ) 
iscsi_tcp_task_xmit extern int iscsi_tcp_task_xmit ( s#iscsi_task * ) 
iscsi_tcp_conn_setup extern s#iscsi_cls_conn * iscsi_tcp_conn_setup ( s#iscsi_cls_session * , int , t#uint32_t ) 
iscsi_tcp_conn_teardown extern void iscsi_tcp_conn_teardown ( s#iscsi_cls_conn * ) 
iscsi_tcp_r2tpool_alloc extern int iscsi_tcp_r2tpool_alloc ( s#iscsi_session * ) 
iscsi_tcp_r2tpool_free extern void iscsi_tcp_r2tpool_free ( s#iscsi_session * ) 
iscsi_tcp_conn_get_stats extern void iscsi_tcp_conn_get_stats ( s#iscsi_cls_conn * , s#iscsi_stats * ) 

/* drivers/scsi/libsas/sas_init.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##timer_rand_state
s##mtd_info
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##class_private
s##scsi_host_cmd_pool
s##scsi_sense_hdr
s##proc_dir_entry
s##workqueue_struct
s#asd_sas_event struct asd_sas_event { s#work_struct work ; s#asd_sas_phy * phy ; } 
e#sas_device_type enum sas_device_type { SAS_PHY_UNUSED = 0 , SAS_END_DEVICE = 1 , SAS_EDGE_EXPANDER_DEVICE = 2 , SAS_FANOUT_EXPANDER_DEVICE = 3 , } 
e#sas_protocol enum sas_protocol { SAS_PROTOCOL_SATA = 0x01 , SAS_PROTOCOL_SMP = 0x02 , SAS_PROTOCOL_STP = 0x04 , SAS_PROTOCOL_SSP = 0x08 , SAS_PROTOCOL_ALL = 0x0E , } 
s#sas_identify struct sas_identify { e#sas_device_type device_type ; e#sas_protocol initiator_port_protocols ; e#sas_protocol target_port_protocols ; t#u64 sas_address ; t#u8 phy_identifier ; } 
e#sas_linkrate enum sas_linkrate { SAS_LINK_RATE_UNKNOWN = 0 , SAS_PHY_DISABLED = 1 , SAS_PHY_RESET_PROBLEM = 2 , SAS_SATA_SPINUP_HOLD = 3 , SAS_SATA_PORT_SELECTOR = 4 , SAS_PHY_RESET_IN_PROGRESS = 5 , SAS_LINK_RATE_1_5_GBPS = 8 , SAS_LINK_RATE_G1 = SAS_LINK_RATE_1_5_GBPS , SAS_LINK_RATE_3_0_GBPS = 9 , SAS_LINK_RATE_G2 = SAS_LINK_RATE_3_0_GBPS , SAS_LINK_RATE_6_0_GBPS = 10 , SAS_LINK_RATE_FAILED = 0x10 , SAS_PHY_VIRTUAL = 0x11 , } 
s#sas_phy struct sas_phy { s#device dev ; int number ; int enabled ; s#sas_identify identify ; e#sas_linkrate negotiated_linkrate ; e#sas_linkrate minimum_linkrate_hw ; e#sas_linkrate minimum_linkrate ; e#sas_linkrate maximum_linkrate_hw ; e#sas_linkrate maximum_linkrate ; t#u32 invalid_dword_count ; t#u32 running_disparity_error_count ; t#u32 loss_of_dword_sync_count ; t#u32 phy_reset_problem_count ; s#list_head port_siblings ; s#work_struct reset_work ; } 
e#sas_class enum sas_class { SAS , EXPANDER } 
e#sas_phy_type enum sas_phy_type { PHY_TYPE_PHYSICAL , PHY_TYPE_VIRTUAL } 
e#sas_phy_role enum sas_phy_role { PHY_ROLE_NONE = 0 , PHY_ROLE_TARGET = 0x40 , PHY_ROLE_INITIATOR = 0x80 , } 
e#sas_oob_mode enum sas_oob_mode { OOB_NOT_CONNECTED , SATA_OOB_MODE , SAS_OOB_MODE } 
s#sas_discovery_event struct sas_discovery_event { s#work_struct work ; s#asd_sas_port * port ; } 
s#sas_discovery struct sas_discovery { t#spinlock_t disc_event_lock ; s#sas_discovery_event disc_work [ DISC_NUM_EVENTS ] ; unsigned long pending ; t#u8 fanout_sas_addr [ 8 ] ; t#u8 eeds_a [ 8 ] ; t#u8 eeds_b [ 8 ] ; int max_level ; } 
e#sas_dev_type enum sas_dev_type { NO_DEVICE = 0 , SAS_END_DEV = 1 , EDGE_DEV = 2 , FANOUT_DEV = 3 , SAS_HA = 4 , SATA_DEV = 5 , SATA_PM = 7 , SATA_PM_PORT = 8 , } 
s#sas_rphy struct sas_rphy { s#device dev ; s#sas_identify identify ; s#list_head list ; s#request_queue * q ; t#u32 scsi_target_id ; } 
e#ex_phy_state enum ex_phy_state { PHY_EMPTY , PHY_VACANT , PHY_NOT_PRESENT , PHY_DEVICE_DISCOVERED } 
e#routing_attribute enum routing_attribute { DIRECT_ROUTING , SUBTRACTIVE_ROUTING , TABLE_ROUTING , } 
s#sas_port struct sas_port { s#device dev ; int port_identifier ; int num_phys ; unsigned int is_backlink : 1 ; s#sas_rphy * rphy ; s#mutex phy_list_mutex ; s#list_head phy_list ; } 
s#ex_phy struct ex_phy { int phy_id ; e#ex_phy_state phy_state ; e#sas_dev_type attached_dev_type ; e#sas_linkrate linkrate ; t#u8 attached_sata_host : 1 ; t#u8 attached_sata_dev : 1 ; t#u8 attached_sata_ps : 1 ; e#sas_protocol attached_tproto ; e#sas_protocol attached_iproto ; t#u8 attached_sas_addr [ 8 ] ; t#u8 attached_phy_id ; t#u8 phy_change_count ; e#routing_attribute routing_attr ; t#u8 virtual : 1 ; int last_da_index ; s#sas_phy * phy ; s#sas_port * port ; } 
s#expander_device struct expander_device { s#list_head children ; t#u16 ex_change_count ; t#u16 max_route_indexes ; t#u8 num_phys ; t#u8 configuring : 1 ; t#u8 conf_route_table : 1 ; t#u8 enclosure_logical_id [ 8 ] ; s#ex_phy * ex_phy ; s#sas_port * parent_port ; } 
e#ata_command_set enum ata_command_set { ATA_COMMAND_SET = 0 , ATAPI_COMMAND_SET = 1 , } 
s#report_general_resp struct report_general_resp { t#__be16 change_count ; t#__be16 route_indexes ; t#u8 _r_a ; t#u8 num_phys ; t#u8 _r_b : 6 ; t#u8 configuring : 1 ; t#u8 conf_route_table : 1 ; t#u8 _r_c ; t#u8 enclosure_logical_id [ 8 ] ; t#u8 _r_d [ 12 ] ; } 
s#discover_resp struct discover_resp { t#u8 _r_a [ 5 ] ; t#u8 phy_id ; t#__be16 _r_b ; t#u8 _r_d : 1 ; t#u8 attached_dev_type : 3 ; t#u8 _r_c : 4 ; t#u8 _r_e : 4 ; t#u8 linkrate : 4 ; t#u8 _r_f : 4 ; t#u8 iproto : 3 ; t#u8 attached_sata_host : 1 ; t#u8 attached_sata_ps : 1 ; t#u8 _r_g : 3 ; t#u8 tproto : 3 ; t#u8 attached_sata_dev : 1 ; t#u8 sas_addr [ 8 ] ; t#u8 attached_sas_addr [ 8 ] ; t#u8 attached_phy_id ; t#u8 _r_h [ 7 ] ; t#u8 pmin_linkrate : 4 ; t#u8 hmin_linkrate : 4 ; t#u8 pmax_linkrate : 4 ; t#u8 hmax_linkrate : 4 ; t#u8 change_count ; t#u8 virtual : 1 ; t#u8 _r_i : 3 ; t#u8 pptv : 4 ; t#u8 _r_j : 4 ; t#u8 routing_attr : 4 ; t#u8 conn_type ; t#u8 conn_el_index ; t#u8 conn_phy_link ; t#u8 _r_k [ 8 ] ; } 
s#dev_to_host_fis struct dev_to_host_fis { t#u8 fis_type ; t#u8 flags ; t#u8 status ; t#u8 error ; t#u8 lbal ; union { t#u8 lbam ; t#u8 byte_count_low ; } ; union { t#u8 lbah ; t#u8 byte_count_high ; } ; t#u8 device ; t#u8 lbal_exp ; t#u8 lbam_exp ; t#u8 lbah_exp ; t#u8 _r_a ; union { t#u8 sector_count ; t#u8 interrupt_reason ; } ; t#u8 sector_count_exp ; t#u8 _r_b ; t#u8 _r_c ; t#u32 _r_d ; } 
s#report_phy_sata_resp struct report_phy_sata_resp { t#u8 _r_a [ 5 ] ; t#u8 phy_id ; t#u8 _r_b ; t#u8 _r_c : 6 ; t#u8 affil_supp : 1 ; t#u8 affil_valid : 1 ; t#u32 _r_d ; t#u8 stp_sas_addr [ 8 ] ; s#dev_to_host_fis fis ; t#u32 _r_e ; t#u8 affil_stp_ini_addr [ 8 ] ; t#__be32 crc ; } 
s#smp_resp struct smp_resp { t#u8 frame_type ; t#u8 function ; t#u8 result ; t#u8 reserved ; union { s#report_general_resp rg ; s#discover_resp disc ; s#report_phy_sata_resp rps ; } ; } 
s#ata_eh_info struct ata_eh_info { s#ata_device * dev ; t#u32 serror ; unsigned int err_mask ; unsigned int action ; unsigned int dev_action [ ATA_MAX_DEVICES ] ; unsigned int flags ; unsigned int probe_mask ; char desc [ ATA_EH_DESC_LEN ] ; int desc_len ; } 
s#ata_eh_context struct ata_eh_context { s#ata_eh_info i ; int tries [ ATA_MAX_DEVICES ] ; int cmd_timeout_idx [ ATA_MAX_DEVICES ] [ ATA_EH_CMD_TIMEOUT_TABLE_SIZE ] ; unsigned int classes [ ATA_MAX_DEVICES ] ; unsigned int did_probe_mask ; unsigned int unloaded_mask ; unsigned int saved_ncq_enabled ; t#u8 saved_xfer_mode [ ATA_MAX_DEVICES ] ; unsigned long last_reset ; } 
s#ata_link struct ata_link { s#ata_port * ap ; int pmp ; unsigned int active_tag ; t#u32 sactive ; unsigned int flags ; t#u32 saved_scontrol ; unsigned int hw_sata_spd_limit ; unsigned int sata_spd_limit ; unsigned int sata_spd ; s#ata_eh_info eh_info ; s#ata_eh_context eh_context ; s#ata_device device [ ATA_MAX_DEVICES ] ; } 
s#ata_ering_entry struct ata_ering_entry { unsigned int eflags ; unsigned int err_mask ; t#u64 timestamp ; } 
s#ata_ering struct ata_ering { int cursor ; s#ata_ering_entry ring [ ATA_ERING_SIZE ] ; } 
s#ata_device struct ata_device { s#ata_link * link ; unsigned int devno ; unsigned int horkage ; unsigned long flags ; s#scsi_device * sdev ; t#u64 n_sectors ; t#u64 n_native_sectors ; unsigned int class ; unsigned long unpark_deadline ; t#u8 pio_mode ; t#u8 dma_mode ; t#u8 xfer_mode ; unsigned int xfer_shift ; unsigned int multi_count ; unsigned int max_sectors ; unsigned int cdb_len ; unsigned long pio_mask ; unsigned long mwdma_mask ; unsigned long udma_mask ; t#u16 cylinders ; t#u16 heads ; t#u16 sectors ; union { t#u16 id [ ATA_ID_WORDS ] ; t#u32 gscr [ SATA_PMP_GSCR_DWORDS ] ; } ; int spdn_cnt ; s#ata_ering ering ; } 
s#ata_taskfile struct ata_taskfile { unsigned long flags ; t#u8 protocol ; t#u8 ctl ; t#u8 hob_feature ; t#u8 hob_nsect ; t#u8 hob_lbal ; t#u8 hob_lbam ; t#u8 hob_lbah ; t#u8 feature ; t#u8 nsect ; t#u8 lbal ; t#u8 lbam ; t#u8 lbah ; t#u8 device ; t#u8 command ; } 
t#ata_qc_cb_t typedef void ( * ata_qc_cb_t ) ( s#ata_queued_cmd * ) 
s#ata_queued_cmd struct ata_queued_cmd { s#ata_port * ap ; s#ata_device * dev ; s#scsi_cmnd * scsicmd ; void ( * scsidone ) ( s#scsi_cmnd * ) ; s#ata_taskfile tf ; t#u8 cdb [ ATAPI_CDB_LEN ] ; unsigned long flags ; unsigned int tag ; unsigned int n_elem ; unsigned int orig_n_elem ; int dma_dir ; unsigned int sect_size ; unsigned int nbytes ; unsigned int extrabytes ; unsigned int curbytes ; s#scatterlist * cursg ; unsigned int cursg_ofs ; s#scatterlist sgent ; s#scatterlist * sg ; unsigned int err_mask ; s#ata_taskfile result_tf ; t#ata_qc_cb_t complete_fn ; void * private_data ; void * lldd_task ; } 
t#ata_prereset_fn_t typedef int ( * ata_prereset_fn_t ) ( s#ata_link * , unsigned long ) 
t#ata_reset_fn_t typedef int ( * ata_reset_fn_t ) ( s#ata_link * , unsigned int * , unsigned long ) 
t#ata_postreset_fn_t typedef void ( * ata_postreset_fn_t ) ( s#ata_link * , unsigned int * ) 
e#link_pm enum link_pm { NOT_AVAILABLE , MIN_POWER , MAX_PERFORMANCE , MEDIUM_POWER , } 
s#ata_host struct ata_host { t#spinlock_t lock ; s#device * dev ; void * const * iomap ; unsigned int n_ports ; void * private_data ; s#ata_port_operations * ops ; unsigned long flags ; s#ata_port * simplex_claimed ; s#ata_port * ports [ 0 ] ; } 
e#sw_activity enum sw_activity { OFF , BLINK_ON , BLINK_OFF , } 
s#ata_port_operations struct ata_port_operations { int ( * qc_defer ) ( s#ata_queued_cmd * ) ; int ( * check_atapi_dma ) ( s#ata_queued_cmd * ) ; void ( * qc_prep ) ( s#ata_queued_cmd * ) ; unsigned int ( * qc_issue ) ( s#ata_queued_cmd * ) ; t#bool ( * qc_fill_rtf ) ( s#ata_queued_cmd * ) ; int ( * cable_detect ) ( s#ata_port * ) ; unsigned long ( * mode_filter ) ( s#ata_device * , unsigned long ) ; void ( * set_piomode ) ( s#ata_port * , s#ata_device * ) ; void ( * set_dmamode ) ( s#ata_port * , s#ata_device * ) ; int ( * set_mode ) ( s#ata_link * , s#ata_device * * ) ; unsigned int ( * read_id ) ( s#ata_device * , s#ata_taskfile * , t#u16 * ) ; void ( * dev_config ) ( s#ata_device * ) ; void ( * freeze ) ( s#ata_port * ) ; void ( * thaw ) ( s#ata_port * ) ; t#ata_prereset_fn_t prereset ; t#ata_reset_fn_t softreset ; t#ata_reset_fn_t hardreset ; t#ata_postreset_fn_t postreset ; t#ata_prereset_fn_t pmp_prereset ; t#ata_reset_fn_t pmp_softreset ; t#ata_reset_fn_t pmp_hardreset ; t#ata_postreset_fn_t pmp_postreset ; void ( * error_handler ) ( s#ata_port * ) ; void ( * lost_interrupt ) ( s#ata_port * ) ; void ( * post_internal_cmd ) ( s#ata_queued_cmd * ) ; int ( * scr_read ) ( s#ata_link * , unsigned int , t#u32 * ) ; int ( * scr_write ) ( s#ata_link * , unsigned int , t#u32 ) ; void ( * pmp_attach ) ( s#ata_port * ) ; void ( * pmp_detach ) ( s#ata_port * ) ; int ( * enable_pm ) ( s#ata_port * , e#link_pm ) ; void ( * disable_pm ) ( s#ata_port * ) ; int ( * port_suspend ) ( s#ata_port * , t#pm_message_t ) ; int ( * port_resume ) ( s#ata_port * ) ; int ( * port_start ) ( s#ata_port * ) ; void ( * port_stop ) ( s#ata_port * ) ; void ( * host_stop ) ( s#ata_host * ) ; t#ssize_t ( * em_show ) ( s#ata_port * , char * ) ; t#ssize_t ( * em_store ) ( s#ata_port * , const char * , t#size_t ) ; t#ssize_t ( * sw_activity_show ) ( s#ata_device * , char * ) ; t#ssize_t ( * sw_activity_store ) ( s#ata_device * , e#sw_activity ) ; void ( * phy_reset ) ( s#ata_port * ) ; void ( * eng_timeout ) ( s#ata_port * ) ; const s#ata_port_operations * inherits ; } 
t#__le32 typedef t#__u32 __le32 
s#ata_prd struct ata_prd { t#__le32 addr ; t#__le32 flags_len ; } 
s#ata_port_stats struct ata_port_stats { unsigned long unhandled_irq ; unsigned long idle_irq ; unsigned long rw_reqbuf ; } 
s#ata_port struct ata_port { s#Scsi_Host * scsi_host ; s#ata_port_operations * ops ; t#spinlock_t * lock ; unsigned long flags ; unsigned int pflags ; unsigned int print_id ; unsigned int port_no ; s#ata_prd * prd ; t#dma_addr_t prd_dma ; t#u8 ctl ; t#u8 last_ctl ; unsigned int pio_mask ; unsigned int mwdma_mask ; unsigned int udma_mask ; unsigned int cbl ; s#ata_queued_cmd qcmd [ ATA_MAX_QUEUE ] ; unsigned long qc_allocated ; unsigned int qc_active ; int nr_active_links ; s#ata_link link ; s#ata_link * slave_link ; int nr_pmp_links ; s#ata_link * pmp_link ; s#ata_link * excl_link ; s#ata_port_stats stats ; s#ata_host * host ; s#device * dev ; void * port_task_data ; s#delayed_work port_task ; s#delayed_work hotplug_task ; s#work_struct scsi_rescan_task ; unsigned int hsm_task_state ; t#u32 msg_enable ; s#list_head eh_done_q ; t#wait_queue_head_t eh_wait_q ; int eh_tries ; s#completion park_req_pending ; t#pm_message_t pm_mesg ; int * pm_result ; e#link_pm pm_policy ; s#timer_list fastdrain_timer ; unsigned long fastdrain_cnt ; int em_message_type ; void * private_data ; t#u8 sector_buf [ ATA_SECT_SIZE ] __attribute__ ( ( __aligned__ ( 256 ) ) ) ; } 
s#sata_device struct sata_device { e#ata_command_set command_set ; s#smp_resp rps_resp ; t#__le16 * identify_device ; t#__le16 * identify_packet_device ; t#u8 port_no ; s#list_head children ; s#ata_port * ap ; s#ata_host ata_host ; s#ata_taskfile tf ; t#u32 sstatus ; t#u32 serror ; t#u32 scontrol ; } 
s#domain_device struct domain_device { e#sas_dev_type dev_type ; e#sas_linkrate linkrate ; e#sas_linkrate min_linkrate ; e#sas_linkrate max_linkrate ; int pathways ; s#domain_device * parent ; s#list_head siblings ; s#asd_sas_port * port ; s#list_head dev_list_node ; e#sas_protocol iproto ; e#sas_protocol tproto ; s#sas_rphy * rphy ; t#u8 sas_addr [ 8 ] ; t#u8 hashed_sas_addr [ 3 ] ; t#u8 frame_rcvd [ 32 ] ; union { s#expander_device ex_dev ; s#sata_device sata_dev ; } ; void * lldd_dev ; } 
s#sas_ha_event struct sas_ha_event { s#work_struct work ; s#sas_ha_struct * ha ; } 
e#sas_ha_state enum sas_ha_state { SAS_HA_REGISTERED , SAS_HA_UNREGISTERED } 
s#scsi_core struct scsi_core { s#Scsi_Host * shost ; t#spinlock_t task_queue_lock ; s#list_head task_queue ; int task_queue_size ; s#task_struct * queue_thread ; } 
e#ha_event enum ha_event { HAE_RESET = 0U , HA_NUM_EVENTS = 1 , } 
e#port_event enum port_event { PORTE_BYTES_DMAED = 0U , PORTE_BROADCAST_RCVD = 1 , PORTE_LINK_RESET_ERR = 2 , PORTE_TIMER_EVENT = 3 , PORTE_HARD_RESET = 4 , PORT_NUM_EVENTS = 5 , } 
e#phy_event enum phy_event { PHYE_LOSS_OF_SIGNAL = 0U , PHYE_OOB_DONE = 1 , PHYE_OOB_ERROR = 2 , PHYE_SPINUP_HOLD = 3 , PHY_NUM_EVENTS = 4 , } 
s#sas_ha_struct struct sas_ha_struct { t#spinlock_t event_lock ; s#sas_ha_event ha_events [ HA_NUM_EVENTS ] ; unsigned long pending ; e#sas_ha_state state ; t#spinlock_t state_lock ; s#scsi_core core ; char * sas_ha_name ; s#device * dev ; s#module * lldd_module ; t#u8 * sas_addr ; t#u8 hashed_sas_addr [ 3 ] ; t#spinlock_t phy_port_lock ; s#asd_sas_phy * * sas_phy ; s#asd_sas_port * * sas_port ; int num_phys ; int lldd_max_execute_num ; int lldd_queue_size ; void ( * notify_ha_event ) ( s#sas_ha_struct * , e#ha_event ) ; void ( * notify_port_event ) ( s#asd_sas_phy * , e#port_event ) ; void ( * notify_phy_event ) ( s#asd_sas_phy * , e#phy_event ) ; void * lldd_ha ; s#list_head eh_done_q ; } 
s#asd_sas_port struct asd_sas_port { s#completion port_gone_completion ; s#sas_discovery disc ; s#domain_device * port_dev ; t#spinlock_t dev_list_lock ; s#list_head dev_list ; e#sas_linkrate linkrate ; s#sas_phy * phy ; s#work_struct work ; int id ; e#sas_class class ; t#u8 sas_addr [ 8 ] ; t#u8 attached_sas_addr [ 8 ] ; e#sas_protocol iproto ; e#sas_protocol tproto ; e#sas_oob_mode oob_mode ; t#spinlock_t phy_list_lock ; s#list_head phy_list ; int num_phys ; t#u32 phy_mask ; s#sas_ha_struct * ha ; s#sas_port * port ; void * lldd_port ; } 
s#asd_sas_phy struct asd_sas_phy { s#asd_sas_event port_events [ PORT_NUM_EVENTS ] ; s#asd_sas_event phy_events [ PHY_NUM_EVENTS ] ; unsigned long port_events_pending ; unsigned long phy_events_pending ; int error ; s#sas_phy * phy ; int enabled ; int id ; e#sas_class class ; e#sas_protocol iproto ; e#sas_protocol tproto ; e#sas_phy_type type ; e#sas_phy_role role ; e#sas_oob_mode oob_mode ; e#sas_linkrate linkrate ; t#u8 * sas_addr ; t#u8 attached_sas_addr [ 8 ] ; t#spinlock_t frame_rcvd_lock ; t#u8 * frame_rcvd ; int frame_rcvd_size ; t#spinlock_t sas_prim_lock ; t#u32 sas_prim ; s#list_head port_phy_el ; s#asd_sas_port * port ; s#sas_ha_struct * ha ; void * lldd_phy ; } 
s#host_to_dev_fis struct host_to_dev_fis { t#u8 fis_type ; t#u8 flags ; t#u8 command ; t#u8 features ; t#u8 lbal ; union { t#u8 lbam ; t#u8 byte_count_low ; } ; union { t#u8 lbah ; t#u8 byte_count_high ; } ; t#u8 device ; t#u8 lbal_exp ; t#u8 lbam_exp ; t#u8 lbah_exp ; t#u8 features_exp ; union { t#u8 sector_count ; t#u8 interrupt_reason ; } ; t#u8 sector_count_exp ; t#u8 _r_a ; t#u8 control ; t#u32 _r_b ; } 
s#sas_ata_task struct sas_ata_task { s#host_to_dev_fis fis ; t#u8 atapi_packet [ 16 ] ; t#u8 retry_count ; t#u8 dma_xfer : 1 ; t#u8 use_ncq : 1 ; t#u8 set_affil_pol : 1 ; t#u8 stp_affil_pol : 1 ; t#u8 device_control_reg_update : 1 ; } 
s#sas_smp_task struct sas_smp_task { s#scatterlist smp_req ; s#scatterlist smp_resp ; } 
e#task_attribute enum task_attribute { TASK_ATTR_SIMPLE = 0 , TASK_ATTR_HOQ = 1 , TASK_ATTR_ORDERED = 2 , TASK_ATTR_ACA = 4 , } 
s#sas_ssp_task struct sas_ssp_task { t#u8 retry_count ; t#u8 LUN [ 8 ] ; t#u8 enable_first_burst : 1 ; e#task_attribute task_attr ; t#u8 task_prio ; t#u8 cdb [ 16 ] ; } 
e#service_response enum service_response { SAS_TASK_COMPLETE , SAS_TASK_UNDELIVERED = - 1 , } 
e#exec_status enum exec_status { SAM_GOOD = 0 , SAM_CHECK_COND = 2 , SAM_COND_MET = 4 , SAM_BUSY = 8 , SAM_INTERMEDIATE = 0x10 , SAM_IM_COND_MET = 0x12 , SAM_RESV_CONFLICT = 0x14 , SAM_TASK_SET_FULL = 0x28 , SAM_ACA_ACTIVE = 0x30 , SAM_TASK_ABORTED = 0x40 , SAS_DEV_NO_RESPONSE = 0x80 , SAS_DATA_UNDERRUN , SAS_DATA_OVERRUN , SAS_INTERRUPTED , SAS_QUEUE_FULL , SAS_DEVICE_UNKNOWN , SAS_SG_ERR , SAS_OPEN_REJECT , SAS_OPEN_TO , SAS_PROTO_RESPONSE , SAS_PHY_DOWN , SAS_NAK_R_ERR , SAS_PENDING , SAS_ABORTED_TASK , } 
e#sas_open_rej_reason enum sas_open_rej_reason { SAS_OREJ_UNKNOWN = 0 , SAS_OREJ_BAD_DEST = 1 , SAS_OREJ_CONN_RATE = 2 , SAS_OREJ_EPROTO = 3 , SAS_OREJ_RESV_AB0 = 4 , SAS_OREJ_RESV_AB1 = 5 , SAS_OREJ_RESV_AB2 = 6 , SAS_OREJ_RESV_AB3 = 7 , SAS_OREJ_WRONG_DEST = 8 , SAS_OREJ_STP_NORES = 9 , SAS_OREJ_NO_DEST = 10 , SAS_OREJ_PATH_BLOCKED = 11 , SAS_OREJ_RSVD_CONT0 = 12 , SAS_OREJ_RSVD_CONT1 = 13 , SAS_OREJ_RSVD_INIT0 = 14 , SAS_OREJ_RSVD_INIT1 = 15 , SAS_OREJ_RSVD_STOP0 = 16 , SAS_OREJ_RSVD_STOP1 = 17 , SAS_OREJ_RSVD_RETRY = 18 , } 
s#task_status_struct struct task_status_struct { e#service_response resp ; e#exec_status stat ; int buf_valid_size ; t#u8 buf [ 96 ] ; t#u32 residual ; e#sas_open_rej_reason open_rej_reason ; } 
s#sas_task struct sas_task { s#domain_device * dev ; s#list_head list ; t#spinlock_t task_state_lock ; unsigned task_state_flags ; e#sas_protocol task_proto ; s#timer_list timer ; s#completion completion ; union { s#sas_ata_task ata_task ; s#sas_smp_task smp_task ; s#sas_ssp_task ssp_task ; } ; s#scatterlist * scatter ; int num_scatter ; t#u32 total_xfer_len ; t#u8 data_dir : 2 ; s#task_status_struct task_status ; void ( * task_done ) ( s#sas_task * ) ; void * lldd_task ; void * uldd_task ; s#work_struct abort_work ; } 
e#phy_func enum phy_func { PHY_FUNC_NOP , PHY_FUNC_LINK_RESET , PHY_FUNC_HARD_RESET , PHY_FUNC_DISABLE , PHY_FUNC_CLEAR_ERROR_LOG = 5 , PHY_FUNC_CLEAR_AFFIL , PHY_FUNC_TX_SATA_PS_SIGNAL , PHY_FUNC_RELEASE_SPINUP_HOLD = 0x10 , PHY_FUNC_SET_LINK_RATE , } 
s#sas_domain_function_template struct sas_domain_function_template { void ( * lldd_port_formed ) ( s#asd_sas_phy * ) ; void ( * lldd_port_deformed ) ( s#asd_sas_phy * ) ; int ( * lldd_dev_found ) ( s#domain_device * ) ; void ( * lldd_dev_gone ) ( s#domain_device * ) ; int ( * lldd_execute_task ) ( s#sas_task * , int , t#gfp_t ) ; int ( * lldd_abort_task ) ( s#sas_task * ) ; int ( * lldd_abort_task_set ) ( s#domain_device * , t#u8 * ) ; int ( * lldd_clear_aca ) ( s#domain_device * , t#u8 * ) ; int ( * lldd_clear_task_set ) ( s#domain_device * , t#u8 * ) ; int ( * lldd_I_T_nexus_reset ) ( s#domain_device * ) ; int ( * lldd_lu_reset ) ( s#domain_device * , t#u8 * ) ; int ( * lldd_query_task ) ( s#sas_task * ) ; int ( * lldd_clear_nexus_port ) ( s#asd_sas_port * ) ; int ( * lldd_clear_nexus_ha ) ( s#sas_ha_struct * ) ; int ( * lldd_control_phy ) ( s#asd_sas_phy * , e#phy_func , void * ) ; } 
sas_domain_attach_transport extern s#scsi_transport_template * sas_domain_attach_transport ( s#sas_domain_function_template * ) 
sas_domain_release_transport extern void sas_domain_release_transport ( s#scsi_transport_template * ) 
sas_register_ha extern int sas_register_ha ( s#sas_ha_struct * ) 
sas_unregister_ha extern int sas_unregister_ha ( s#sas_ha_struct * ) 

/* drivers/scsi/libsas/sas_scsi_host.o */
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##timer_rand_state
s##mtd_info
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##scsi_host_cmd_pool
s##proc_dir_entry
s##workqueue_struct
sas_find_local_phy s#sas_phy * sas_find_local_phy ( s#domain_device * ) 
sas_request_addr int sas_request_addr ( s#Scsi_Host * , t#u8 * ) 
sas_queuecommand extern int sas_queuecommand ( s#scsi_cmnd * , void ( * ) ( s#scsi_cmnd * ) ) 
sas_target_alloc extern int sas_target_alloc ( s#scsi_target * ) 
sas_slave_configure extern int sas_slave_configure ( s#scsi_device * ) 
sas_slave_destroy extern void sas_slave_destroy ( s#scsi_device * ) 
sas_change_queue_depth extern int sas_change_queue_depth ( s#scsi_device * , int , int ) 
sas_change_queue_type extern int sas_change_queue_type ( s#scsi_device * , int ) 
sas_bios_param extern int sas_bios_param ( s#scsi_device * , s#block_device * , t#sector_t , int * ) 
__sas_task_abort int __sas_task_abort ( s#sas_task * ) 
sas_task_abort void sas_task_abort ( s#sas_task * ) 
sas_phy_reset int sas_phy_reset ( s#sas_phy * , int ) 
sas_phy_enable int sas_phy_enable ( s#sas_phy * , int ) 
sas_eh_device_reset_handler int sas_eh_device_reset_handler ( s#scsi_cmnd * ) 
sas_eh_bus_reset_handler int sas_eh_bus_reset_handler ( s#scsi_cmnd * ) 
sas_slave_alloc extern int sas_slave_alloc ( s#scsi_device * ) 
sas_target_destroy extern void sas_target_destroy ( s#scsi_target * ) 
sas_ioctl extern int sas_ioctl ( s#scsi_device * , int , void * ) 

/* drivers/scsi/libsas/sas_task.o */
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##timer_rand_state
s##mtd_info
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##scsi_host_cmd_pool
s##scsi_sense_hdr
s##proc_dir_entry
s##scsi_transport_template
s##workqueue_struct
s#ssp_response_iu struct ssp_response_iu { t#u8 _r_a [ 10 ] ; t#u8 _r_b : 6 ; t#u8 datapres : 2 ; t#u8 status ; t#u32 _r_c ; t#__be32 sense_data_len ; t#__be32 response_data_len ; t#u8 resp_data [ 0 ] ; t#u8 sense_data [ 0 ] ; } 
sas_ssp_task_response extern void sas_ssp_task_response ( s#device * , s#sas_task * , s#ssp_response_iu * ) 

/* drivers/scsi/osd/osd_initiator.o */
s##Scsi_Host
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##mtd_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##hd_geometry
s##timer_rand_state
s##blk_trace
s##scsi_cmnd
s##scsi_sense_hdr
e#osd_std_version enum osd_std_version { OSD_VER_NONE = 0 , OSD_VER1 = 1 , OSD_VER2 = 2 , } 
s#osd_dev struct osd_dev { s#scsi_device * scsi_device ; s#file * file ; unsigned def_timeout ; e#osd_std_version version ; } 
osd_auto_detect_ver int osd_auto_detect_ver ( s#osd_dev * , void * ) 
osd_dev_init void osd_dev_init ( s#osd_dev * , s#scsi_device * ) 
osd_dev_fini void osd_dev_fini ( s#osd_dev * ) 
s#scsi_varlen_cdb_hdr struct scsi_varlen_cdb_hdr { t#u8 opcode ; t#u8 control ; t#u8 misc [ 5 ] ; t#u8 additional_cdb_length ; t#__be16 service_action ; } 
s#__osdv1_cdb_addr_len struct __osdv1_cdb_addr_len { t#__be32 list_identifier ; t#__be64 length ; t#__be64 start_address ; } 
s#__osdv2_cdb_addr_len struct __osdv2_cdb_addr_len { t#__be64 length ; t#__be64 start_address ; union { t#__be32 list_identifier ; t#__be32 cdb_continuation_length ; } ; } 
t#osd_cdb_offset typedef t#__be32 osd_cdb_offset 
s#osd_attributes_page_mode struct osd_attributes_page_mode { t#__be32 get_attr_page ; t#__be32 get_attr_alloc_length ; t#osd_cdb_offset get_attr_offset ; t#__be32 set_attr_page ; t#__be32 set_attr_id ; t#__be32 set_attr_length ; t#osd_cdb_offset set_attr_offset ; } 
s#osd_attributes_list_mode struct osd_attributes_list_mode { t#__be32 get_attr_desc_bytes ; t#osd_cdb_offset get_attr_desc_offset ; t#__be32 get_attr_alloc_length ; t#osd_cdb_offset get_attr_offset ; t#__be32 set_attr_bytes ; t#osd_cdb_offset set_attr_offset ; t#__be32 not_used ; } 
s#osd_attributes_cdb_mode struct osd_attributes_cdb_mode { t#__be32 set_attr_page ; t#__be32 set_attr_id ; t#__be16 set_attr_len ; t#u8 set_attr_val [ 18 ] ; } 
s#osd_cdb_head struct osd_cdb_head { s#scsi_varlen_cdb_hdr varlen_cdb ; t#u8 options ; t#u8 command_specific_options ; t#u8 timestamp_control ; t#u8 reserved1 [ 3 ] ; t#__be64 partition ; t#__be64 object ; union { s#__osdv1_cdb_addr_len __attribute__ ( ( packed ) ) v1 ; s#__osdv2_cdb_addr_len __attribute__ ( ( packed ) ) v2 ; } ; union { s#osd_attributes_page_mode __attribute__ ( ( packed ) ) attrs_page ; s#osd_attributes_list_mode __attribute__ ( ( packed ) ) attrs_list ; s#osd_attributes_cdb_mode __attribute__ ( ( packed ) ) attrs_cdb ; t#u8 get_set_attributes_parameters [ 28 ] ; } ; } 
s#osdv1_security_parameters struct osdv1_security_parameters { t#u8 integrity_check_value [ OSDv1_CRYPTO_KEYID_SIZE ] ; t#u8 request_nonce [ OSD_CRYPTO_NONCE_SIZE ] ; t#osd_cdb_offset data_in_integrity_check_offset ; t#osd_cdb_offset data_out_integrity_check_offset ; } 
s#osdv1_cdb struct osdv1_cdb { s#osd_cdb_head h ; t#u8 caps [ OSDv1_CAP_LEN ] ; s#osdv1_security_parameters sec_params ; } 
s#osdv2_security_parameters struct osdv2_security_parameters { t#u8 integrity_check_value [ OSDv2_CRYPTO_KEYID_SIZE ] ; t#u8 request_nonce [ OSD_CRYPTO_NONCE_SIZE ] ; t#osd_cdb_offset data_in_integrity_check_offset ; t#osd_cdb_offset data_out_integrity_check_offset ; } 
s#osdv2_cdb struct osdv2_cdb { s#osd_cdb_head h ; t#u8 caps [ OSD_CAP_LEN ] ; s#osdv2_security_parameters sec_params ; } 
s#osd_cdb struct osd_cdb { union { s#osdv1_cdb v1 ; s#osdv2_cdb v2 ; t#u8 buff [ OSD_TOTAL_CDB_LEN ] ; } ; } 
s#osd_data_out_integrity_info struct osd_data_out_integrity_info { t#__be64 data_bytes ; t#__be64 set_attributes_bytes ; t#__be64 get_attributes_bytes ; t#__u8 integrity_check_value [ OSD_CRYPTO_KEYID_SIZE ] ; } 
s#osd_data_in_integrity_info struct osd_data_in_integrity_info { t#__be64 data_bytes ; t#__be64 retrieved_attributes_bytes ; t#__u8 integrity_check_value [ OSD_CRYPTO_KEYID_SIZE ] ; } 
s#_osd_req_data_segment struct _osd_req_data_segment { void * buff ; unsigned alloc_size ; unsigned total_bytes ; } 
s#_osd_io_info struct _osd_io_info { s#bio * bio ; t#u64 total_bytes ; s#request * req ; s#_osd_req_data_segment * last_seg ; t#u8 * pad_buff ; } 
e#osd_attributes_mode enum osd_attributes_mode { OSD_CDB_SET_ONE_ATTR = 0x10 , OSD_CDB_GET_ATTR_PAGE_SET_ONE = 0x20 , OSD_CDB_GET_SET_ATTR_LISTS = 0x30 , OSD_CDB_GET_SET_ATTR_MASK = 0x30 , } 
t#osd_req_done_fn typedef void ( osd_req_done_fn ) ( s#osd_request * , void * ) 
s#osd_request struct osd_request { s#osd_cdb cdb ; s#osd_data_out_integrity_info out_data_integ ; s#osd_data_in_integrity_info in_data_integ ; s#osd_dev * osd_dev ; s#request * request ; s#_osd_req_data_segment set_attr , enc_get_attr , get_attr ; s#_osd_io_info out , in ; t#gfp_t alloc_flags ; unsigned timeout ; unsigned retries ; t#u8 sense [ OSD_MAX_SENSE_LEN ] ; e#osd_attributes_mode attributes_mode ; t#osd_req_done_fn * async_done ; void * async_private ; int async_error ; } 
osd_start_request s#osd_request * osd_start_request ( s#osd_dev * , t#gfp_t ) 
osd_end_request void osd_end_request ( s#osd_request * ) 
osd_execute_request int osd_execute_request ( s#osd_request * ) 
osd_execute_request_async int osd_execute_request_async ( s#osd_request * , t#osd_req_done_fn * , void * ) 
osd_req_format void osd_req_format ( s#osd_request * , t#u64 ) 
t#osd_id typedef t#u64 osd_id 
s#osd_obj_id_list struct osd_obj_id_list { t#__be64 list_bytes ; t#__be64 continuation_id ; t#__be32 list_identifier ; t#u8 pad [ 3 ] ; t#u8 root_lstchg ; t#__be64 object_ids [ 0 ] ; } 
osd_req_list_dev_partitions int osd_req_list_dev_partitions ( s#osd_request * , t#osd_id , s#osd_obj_id_list * , unsigned ) 
e#osd_options_flush_scope_values enum osd_options_flush_scope_values { OSD_CDB_FLUSH_ALL = 0 , OSD_CDB_FLUSH_ATTR_ONLY = 1 , OSD_CDB_FLUSH_ALL_RECURSIVE = 2 , OSD_CDB_FLUSH_ALL_RANGE = 2 , } 
osd_req_flush_obsd void osd_req_flush_obsd ( s#osd_request * , e#osd_options_flush_scope_values ) 
osd_req_create_partition void osd_req_create_partition ( s#osd_request * , t#osd_id ) 
osd_req_remove_partition void osd_req_remove_partition ( s#osd_request * , t#osd_id ) 
osd_req_list_partition_collections int osd_req_list_partition_collections ( s#osd_request * , t#osd_id , t#osd_id , s#osd_obj_id_list * , unsigned ) 
osd_req_list_partition_objects int osd_req_list_partition_objects ( s#osd_request * , t#osd_id , t#osd_id , s#osd_obj_id_list * , unsigned ) 
osd_req_flush_partition void osd_req_flush_partition ( s#osd_request * , t#osd_id , e#osd_options_flush_scope_values ) 
s#osd_obj_id struct osd_obj_id { t#osd_id partition ; t#osd_id id ; } 
osd_req_list_collection_objects int osd_req_list_collection_objects ( s#osd_request * , const s#osd_obj_id * , t#osd_id , s#osd_obj_id_list * , unsigned ) 
osd_req_flush_collection void osd_req_flush_collection ( s#osd_request * , const s#osd_obj_id * , e#osd_options_flush_scope_values ) 
osd_req_create_object void osd_req_create_object ( s#osd_request * , s#osd_obj_id * ) 
osd_req_remove_object void osd_req_remove_object ( s#osd_request * , s#osd_obj_id * ) 
osd_req_write void osd_req_write ( s#osd_request * , const s#osd_obj_id * , t#u64 , s#bio * , t#u64 ) 
osd_req_write_kern int osd_req_write_kern ( s#osd_request * , const s#osd_obj_id * , t#u64 , void * , t#u64 ) 
osd_req_flush_object void osd_req_flush_object ( s#osd_request * , const s#osd_obj_id * , e#osd_options_flush_scope_values , t#u64 , t#u64 ) 
osd_req_read void osd_req_read ( s#osd_request * , const s#osd_obj_id * , t#u64 , s#bio * , t#u64 ) 
osd_req_read_kern int osd_req_read_kern ( s#osd_request * , const s#osd_obj_id * , t#u64 , void * , t#u64 ) 
osd_req_get_attributes void osd_req_get_attributes ( s#osd_request * , const s#osd_obj_id * ) 
osd_req_set_attributes void osd_req_set_attributes ( s#osd_request * , const s#osd_obj_id * ) 
s#osd_attr struct osd_attr { t#u32 attr_page ; t#u32 attr_id ; t#u16 len ; void * val_ptr ; } 
osd_req_add_set_attr_list int osd_req_add_set_attr_list ( s#osd_request * , const s#osd_attr * , unsigned ) 
osd_req_add_get_attr_list int osd_req_add_get_attr_list ( s#osd_request * , const s#osd_attr * , unsigned ) 
osd_req_decode_get_attr_list int osd_req_decode_get_attr_list ( s#osd_request * , s#osd_attr * , int * , void * * ) 
osd_req_add_get_attr_page int osd_req_add_get_attr_page ( s#osd_request * , t#u32 , void * , unsigned , const s#osd_attr * ) 
osd_finalize_request int osd_finalize_request ( s#osd_request * , t#u8 , const void * , const t#u8 * ) 
s#osd_sense_info struct osd_sense_info { int key ; int additional_code ; union { t#u16 sense_info ; t#u16 cdb_field_offset ; } ; union { t#u64 command_info ; } ; t#u32 not_initiated_command_functions ; t#u32 completed_command_functions ; s#osd_obj_id obj ; s#osd_attr attr ; } 
osd_req_decode_sense_full int osd_req_decode_sense_full ( s#osd_request * , s#osd_sense_info * , t#bool , s#osd_obj_id * , int , s#osd_attr * , int ) 
osd_sec_init_nosec_doall_caps void osd_sec_init_nosec_doall_caps ( void * , const s#osd_obj_id * , t#bool , const t#bool ) 

/* drivers/scsi/osd/osd_uld.o */
s##Scsi_Host
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##mtd_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##posix_acl
s##hd_geometry
s##timer_rand_state
s##blk_trace
s##scsi_cmnd
s##scsi_sense_hdr
t#do_test_fn typedef int ( do_test_fn ) ( s#osd_dev * , unsigned , unsigned long ) 
osduld_register_test int osduld_register_test ( unsigned , t#do_test_fn * ) 
osduld_unregister_test void osduld_unregister_test ( unsigned ) 
osduld_path_lookup s#osd_dev * osduld_path_lookup ( const char * ) 
osduld_put_device void osduld_put_device ( s#osd_dev * ) 

/* drivers/scsi/raid_class.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##timer_rand_state
s##mtd_info
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##class_private
s#raid_template struct raid_template { s#transport_container raid_attrs ; } 
raid_component_add int raid_component_add ( s#raid_template * , s#device * , s#device * ) 
s#raid_function_template struct raid_function_template { void * cookie ; int ( * is_raid ) ( s#device * ) ; void ( * get_resync ) ( s#device * ) ; void ( * get_state ) ( s#device * ) ; } 
raid_class_attach s#raid_template * raid_class_attach ( s#raid_function_template * ) 
raid_class_release void raid_class_release ( s#raid_template * ) 

/* drivers/scsi/scsi.o */
scsi_logging_level extern unsigned int scsi_logging_level 
scsi_device_type extern const char * scsi_device_type ( unsigned ) 
s##array_cache
s##kmem_list3
s#scsi_host_cmd_pool struct scsi_host_cmd_pool { s#kmem_cache * cmd_slab ; s#kmem_cache * sense_slab ; unsigned int users ; char * cmd_name ; char * sense_name ; unsigned int slab_flags ; t#gfp_t gfp_mask ; } 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##timer_rand_state
s##mtd_info
s##cdev
s##posix_acl
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##proc_dir_entry
s##scsi_transport_template
s##workqueue_struct
__scsi_get_command extern s#scsi_cmnd * __scsi_get_command ( s#Scsi_Host * , t#gfp_t ) 
scsi_get_command extern s#scsi_cmnd * scsi_get_command ( s#scsi_device * , t#gfp_t ) 
__scsi_put_command extern void __scsi_put_command ( s#Scsi_Host * , s#scsi_cmnd * , s#device * ) 
scsi_put_command extern void scsi_put_command ( s#scsi_cmnd * ) 
scsi_allocate_command s#scsi_cmnd * scsi_allocate_command ( t#gfp_t ) 
scsi_free_command void scsi_free_command ( t#gfp_t , s#scsi_cmnd * ) 
scsi_finish_command extern void scsi_finish_command ( s#scsi_cmnd * ) 
scsi_adjust_queue_depth extern void scsi_adjust_queue_depth ( s#scsi_device * , int , int ) 
scsi_track_queue_full extern int scsi_track_queue_full ( s#scsi_device * , int ) 
scsi_get_vpd_page extern int scsi_get_vpd_page ( s#scsi_device * , t#u8 , unsigned char * , int ) 
scsi_device_get extern int scsi_device_get ( s#scsi_device * ) 
scsi_device_put extern void scsi_device_put ( s#scsi_device * ) 
__scsi_iterate_devices extern s#scsi_device * __scsi_iterate_devices ( s#Scsi_Host * , s#scsi_device * ) 
starget_for_each_device extern void starget_for_each_device ( s#scsi_target * , void * , void ( * ) ( s#scsi_device * , void * ) ) 
__starget_for_each_device extern void __starget_for_each_device ( s#scsi_target * , void * , void ( * ) ( s#scsi_device * , void * ) ) 
__scsi_device_lookup_by_target extern s#scsi_device * __scsi_device_lookup_by_target ( s#scsi_target * , t#uint ) 
scsi_device_lookup_by_target extern s#scsi_device * scsi_device_lookup_by_target ( s#scsi_target * , t#uint ) 
__scsi_device_lookup extern s#scsi_device * __scsi_device_lookup ( s#Scsi_Host * , t#uint , t#uint , t#uint ) 
scsi_device_lookup extern s#scsi_device * scsi_device_lookup ( s#Scsi_Host * , t#uint , t#uint , t#uint ) 

/* drivers/scsi/scsi_devinfo.o */
scsi_dev_info_list_add_keyed extern int scsi_dev_info_list_add_keyed ( int , char * , char * , char * , int , int ) 
s##Scsi_Host
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##nameidata
s##vfsmount
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##mtd_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##hd_geometry
s##timer_rand_state
s##blk_trace
s##scsi_cmnd
s##scsi_sense_hdr
scsi_get_device_flags_keyed extern int scsi_get_device_flags_keyed ( s#scsi_device * , const unsigned char * , const unsigned char * , int ) 
scsi_dev_info_add_list extern int scsi_dev_info_add_list ( int , const char * ) 
scsi_dev_info_remove_list extern int scsi_dev_info_remove_list ( int ) 

/* drivers/scsi/scsi_error.o */
s##scsi_host_cmd_pool
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##timer_rand_state
s##mtd_info
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##proc_dir_entry
s##workqueue_struct
scsi_schedule_eh void scsi_schedule_eh ( s#Scsi_Host * ) 
scsi_block_when_processing_errors extern int scsi_block_when_processing_errors ( s#scsi_device * ) 
s#scsi_eh_save struct scsi_eh_save { int result ; e#dma_data_direction data_direction ; unsigned underflow ; unsigned char cmd_len ; unsigned char prot_op ; unsigned char * cmnd ; s#scsi_data_buffer sdb ; s#request * next_rq ; unsigned char eh_cmnd [ 16 ] ; s#scatterlist sense_sgl ; } 
scsi_eh_prep_cmnd extern void scsi_eh_prep_cmnd ( s#scsi_cmnd * , s#scsi_eh_save * , unsigned char * , int , unsigned ) 
scsi_eh_restore_cmnd extern void scsi_eh_restore_cmnd ( s#scsi_cmnd * , s#scsi_eh_save * ) 
scsi_eh_finish_cmd extern void scsi_eh_finish_cmd ( s#scsi_cmnd * , s#list_head * ) 
scsi_eh_get_sense int scsi_eh_get_sense ( s#list_head * , s#list_head * ) 
scsi_eh_ready_devs void scsi_eh_ready_devs ( s#Scsi_Host * , s#list_head * , s#list_head * ) 
scsi_eh_flush_done_q extern void scsi_eh_flush_done_q ( s#list_head * ) 
scsi_report_bus_reset extern void scsi_report_bus_reset ( s#Scsi_Host * , int ) 
scsi_report_device_reset extern void scsi_report_device_reset ( s#Scsi_Host * , int , int ) 
scsi_reset_provider extern int scsi_reset_provider ( s#scsi_device * , int ) 
scsi_normalize_sense extern int scsi_normalize_sense ( const t#u8 * , int , s#scsi_sense_hdr * ) 
scsi_command_normalize_sense extern int scsi_command_normalize_sense ( s#scsi_cmnd * , s#scsi_sense_hdr * ) 
scsi_sense_desc_find extern const t#u8 * scsi_sense_desc_find ( const t#u8 * , int , int ) 
scsi_get_sense_info_fld extern int scsi_get_sense_info_fld ( const t#u8 * , int , t#u64 * ) 
scsi_build_sense_buffer extern void scsi_build_sense_buffer ( int , t#u8 * , t#u8 , t#u8 , t#u8 ) 

/* drivers/scsi/scsi_ioctl.o */
s##scsi_host_cmd_pool
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##timer_rand_state
s##mtd_info
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##proc_dir_entry
s##scsi_transport_template
s##workqueue_struct
scsi_set_medium_removal extern int scsi_set_medium_removal ( s#scsi_device * , char ) 
scsi_ioctl extern int scsi_ioctl ( s#scsi_device * , int , void * ) 
scsi_nonblockable_ioctl extern int scsi_nonblockable_ioctl ( s#scsi_device * , int , void * , int ) 

/* drivers/scsi/scsi_lib.o */
s##scsi_host_cmd_pool
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##timer_rand_state
s##mtd_info
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##proc_dir_entry
s##scsi_transport_template
s##workqueue_struct
scsi_execute extern int scsi_execute ( s#scsi_device * , const unsigned char * , int , void * , unsigned , unsigned char * , int , int , int , int * ) 
scsi_execute_req extern int scsi_execute_req ( s#scsi_device * , const unsigned char * , int , void * , unsigned , s#scsi_sense_hdr * , int , int , int * ) 
scsi_release_buffers extern void scsi_release_buffers ( s#scsi_cmnd * ) 
scsi_init_io extern int scsi_init_io ( s#scsi_cmnd * , t#gfp_t ) 
scsi_setup_blk_pc_cmnd int scsi_setup_blk_pc_cmnd ( s#scsi_device * , s#request * ) 
scsi_setup_fs_cmnd int scsi_setup_fs_cmnd ( s#scsi_device * , s#request * ) 
scsi_prep_state_check int scsi_prep_state_check ( s#scsi_device * , s#request * ) 
scsi_prep_return int scsi_prep_return ( s#request_queue * , s#request * , int ) 
scsi_prep_fn int scsi_prep_fn ( s#request_queue * , s#request * ) 
scsi_device_from_queue extern s#scsi_device * scsi_device_from_queue ( s#request_queue * ) 
scsi_calculate_bounce_limit extern t#u64 scsi_calculate_bounce_limit ( s#Scsi_Host * ) 
__scsi_alloc_queue extern s#request_queue * __scsi_alloc_queue ( s#Scsi_Host * , void ( * ) ( s#request_queue * ) ) 
scsi_block_requests extern void scsi_block_requests ( s#Scsi_Host * ) 
scsi_unblock_requests extern void scsi_unblock_requests ( s#Scsi_Host * ) 
s#scsi_mode_data struct scsi_mode_data { t#__u32 length ; t#__u16 block_descriptor_length ; t#__u8 medium_type ; t#__u8 device_specific ; t#__u8 header_length ; t#__u8 longlba : 1 ; } 
scsi_mode_select extern int scsi_mode_select ( s#scsi_device * , int , int , int , unsigned char * , int , int , int , s#scsi_mode_data * , s#scsi_sense_hdr * ) 
scsi_mode_sense extern int scsi_mode_sense ( s#scsi_device * , int , int , unsigned char * , int , int , int , s#scsi_mode_data * , s#scsi_sense_hdr * ) 
scsi_test_unit_ready extern int scsi_test_unit_ready ( s#scsi_device * , int , int , s#scsi_sense_hdr * ) 
scsi_device_set_state extern int scsi_device_set_state ( s#scsi_device * , e#scsi_device_state ) 
e#scsi_device_event enum scsi_device_event { SDEV_EVT_MEDIA_CHANGE = 1 , SDEV_EVT_LAST = SDEV_EVT_MEDIA_CHANGE , SDEV_EVT_MAXBITS = SDEV_EVT_LAST + 1 } 
s#scsi_event struct scsi_event { e#scsi_device_event evt_type ; s#list_head node ; } 
sdev_evt_send extern void sdev_evt_send ( s#scsi_device * , s#scsi_event * ) 
sdev_evt_alloc extern s#scsi_event * sdev_evt_alloc ( e#scsi_device_event , t#gfp_t ) 
sdev_evt_send_simple extern void sdev_evt_send_simple ( s#scsi_device * , e#scsi_device_event , t#gfp_t ) 
scsi_device_quiesce extern int scsi_device_quiesce ( s#scsi_device * ) 
scsi_device_resume extern void scsi_device_resume ( s#scsi_device * ) 
scsi_target_quiesce extern void scsi_target_quiesce ( s#scsi_target * ) 
scsi_target_resume extern void scsi_target_resume ( s#scsi_target * ) 
scsi_internal_device_block extern int scsi_internal_device_block ( s#scsi_device * ) 
scsi_internal_device_unblock extern int scsi_internal_device_unblock ( s#scsi_device * ) 
scsi_target_block extern void scsi_target_block ( s#device * ) 
scsi_target_unblock extern void scsi_target_unblock ( s#device * ) 
scsi_kmap_atomic_sg extern void * scsi_kmap_atomic_sg ( s#scatterlist * , int , t#size_t * , t#size_t * ) 
scsi_kunmap_atomic_sg extern void scsi_kunmap_atomic_sg ( void * ) 

/* drivers/scsi/scsi_netlink.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
scsi_nl_sock extern s#sock * scsi_nl_sock 
scsi_nl_add_transport int scsi_nl_add_transport ( t#u8 , int ( * ) ( s#sk_buff * ) , void ( * ) ( s#notifier_block * , unsigned long , void * ) ) 
scsi_nl_remove_transport void scsi_nl_remove_transport ( t#u8 ) 
s##scsi_host_cmd_pool
s##scsi_transport_template
s##blk_queue_tag
s##workqueue_struct
s##request_queue
s##scsi_device
s##scsi_cmnd
s##scsi_target
e##blk_eh_timer_return
scsi_nl_add_driver int scsi_nl_add_driver ( t#u64 , s#scsi_host_template * , int ( * ) ( s#Scsi_Host * , void * , t#u32 , t#u32 ) , void ( * ) ( s#notifier_block * , unsigned long , void * ) ) 
scsi_nl_remove_driver void scsi_nl_remove_driver ( t#u64 ) 
s#scsi_nl_hdr struct scsi_nl_hdr { t#uint8_t version ; t#uint8_t transport ; t#uint16_t magic ; t#uint16_t msgtype ; t#uint16_t msglen ; } 
scsi_nl_send_transport_msg void scsi_nl_send_transport_msg ( t#u32 , s#scsi_nl_hdr * ) 
scsi_nl_send_vendor_msg int scsi_nl_send_vendor_msg ( t#u32 , unsigned short , t#u64 , char * , t#u32 ) 

/* drivers/scsi/scsi_scan.o */
scsi_complete_async_scans int scsi_complete_async_scans ( void ) 
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##timer_rand_state
s##mtd_info
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
scsi_is_target_device extern int scsi_is_target_device ( const s#device * ) 
s#scsi_lun struct scsi_lun { t#__u8 scsi_lun [ 8 ] ; } 
scsilun_to_int extern int scsilun_to_int ( s#scsi_lun * ) 
int_to_scsilun extern void int_to_scsilun ( unsigned int , s#scsi_lun * ) 
s##scsi_host_cmd_pool
s##proc_dir_entry
s##workqueue_struct
__scsi_add_device extern s#scsi_device * __scsi_add_device ( s#Scsi_Host * , t#uint , t#uint , t#uint , void * ) 
scsi_add_device extern int scsi_add_device ( s#Scsi_Host * , t#uint , t#uint , t#uint ) 
scsi_rescan_device extern void scsi_rescan_device ( s#device * ) 
scsi_scan_target extern void scsi_scan_target ( s#device * , unsigned int , unsigned int , unsigned int , int ) 
scsi_scan_host extern void scsi_scan_host ( s#Scsi_Host * ) 
scsi_get_host_dev extern s#scsi_device * scsi_get_host_dev ( s#Scsi_Host * ) 
scsi_free_host_dev extern void scsi_free_host_dev ( s#scsi_device * ) 

/* drivers/scsi/scsi_sysfs.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##dma_coherent_mem
s##class_private
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##timer_rand_state
s##mtd_info
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##bus_type_private
scsi_bus_type extern s#bus_type scsi_bus_type 
s##scsi_host_cmd_pool
s##proc_dir_entry
s##workqueue_struct
s##scsi_sense_hdr
scsi_remove_device extern void scsi_remove_device ( s#scsi_device * ) 
scsi_remove_target extern void scsi_remove_target ( s#device * ) 
scsi_register_driver extern int scsi_register_driver ( s#device_driver * ) 
scsi_register_interface extern int scsi_register_interface ( s#class_interface * ) 
scsi_is_sdev_device extern int scsi_is_sdev_device ( const s#device * ) 

/* drivers/scsi/scsi_tgt_lib.o */
s##scsi_host_cmd_pool
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##timer_rand_state
s##mtd_info
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##proc_dir_entry
s##workqueue_struct
s##scsi_sense_hdr
scsi_host_get_command extern s#scsi_cmnd * scsi_host_get_command ( s#Scsi_Host * , e#dma_data_direction , t#gfp_t ) 
scsi_host_put_command extern void scsi_host_put_command ( s#Scsi_Host * , s#scsi_cmnd * ) 
scsi_tgt_alloc_queue extern int scsi_tgt_alloc_queue ( s#Scsi_Host * ) 
scsi_tgt_free_queue extern void scsi_tgt_free_queue ( s#Scsi_Host * ) 
scsi_tgt_cmd_to_host extern s#Scsi_Host * scsi_tgt_cmd_to_host ( s#scsi_cmnd * ) 
scsi_tgt_queue_command extern int scsi_tgt_queue_command ( s#scsi_cmnd * , t#u64 , s#scsi_lun * , t#u64 ) 
scsi_tgt_tsk_mgmt_request extern int scsi_tgt_tsk_mgmt_request ( s#Scsi_Host * , t#u64 , int , t#u64 , s#scsi_lun * , void * ) 
scsi_tgt_it_nexus_create extern int scsi_tgt_it_nexus_create ( s#Scsi_Host * , t#u64 , char * ) 
scsi_tgt_it_nexus_destroy extern int scsi_tgt_it_nexus_destroy ( s#Scsi_Host * , t#u64 ) 

/* drivers/scsi/scsi_transport_fc.o */
fc_get_event_number t#u32 fc_get_event_number ( void ) 
s##scsi_host_cmd_pool
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##timer_rand_state
s##mtd_info
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##scsi_sense_hdr
s##proc_dir_entry
s##workqueue_struct
e#fc_host_event_code enum fc_host_event_code { FCH_EVT_LIP = 0x1 , FCH_EVT_LINKUP = 0x2 , FCH_EVT_LINKDOWN = 0x3 , FCH_EVT_LIPRESET = 0x4 , FCH_EVT_RSCN = 0x5 , FCH_EVT_ADAPTER_CHANGE = 0x103 , FCH_EVT_PORT_UNKNOWN = 0x200 , FCH_EVT_PORT_OFFLINE = 0x201 , FCH_EVT_PORT_ONLINE = 0x202 , FCH_EVT_PORT_FABRIC = 0x204 , FCH_EVT_LINK_UNKNOWN = 0x500 , FCH_EVT_VENDOR_UNIQUE = 0xffff , } 
fc_host_post_event void fc_host_post_event ( s#Scsi_Host * , t#u32 , e#fc_host_event_code , t#u32 ) 
fc_host_post_vendor_event void fc_host_post_vendor_event ( s#Scsi_Host * , t#u32 , t#u32 , char * , t#u64 ) 
scsi_is_fc_rport int scsi_is_fc_rport ( const s#device * ) 
scsi_is_fc_vport int scsi_is_fc_vport ( const s#device * ) 
s#fc_function_template struct fc_function_template { void ( * get_rport_dev_loss_tmo ) ( s#fc_rport * ) ; void ( * set_rport_dev_loss_tmo ) ( s#fc_rport * , t#u32 ) ; void ( * get_starget_node_name ) ( s#scsi_target * ) ; void ( * get_starget_port_name ) ( s#scsi_target * ) ; void ( * get_starget_port_id ) ( s#scsi_target * ) ; void ( * get_host_port_id ) ( s#Scsi_Host * ) ; void ( * get_host_port_type ) ( s#Scsi_Host * ) ; void ( * get_host_port_state ) ( s#Scsi_Host * ) ; void ( * get_host_active_fc4s ) ( s#Scsi_Host * ) ; void ( * get_host_speed ) ( s#Scsi_Host * ) ; void ( * get_host_fabric_name ) ( s#Scsi_Host * ) ; void ( * get_host_symbolic_name ) ( s#Scsi_Host * ) ; void ( * set_host_system_hostname ) ( s#Scsi_Host * ) ; s#fc_host_statistics * ( * get_fc_host_stats ) ( s#Scsi_Host * ) ; void ( * reset_fc_host_stats ) ( s#Scsi_Host * ) ; int ( * issue_fc_host_lip ) ( s#Scsi_Host * ) ; void ( * dev_loss_tmo_callbk ) ( s#fc_rport * ) ; void ( * terminate_rport_io ) ( s#fc_rport * ) ; void ( * set_vport_symbolic_name ) ( s#fc_vport * ) ; int ( * vport_create ) ( s#fc_vport * , t#bool ) ; int ( * vport_disable ) ( s#fc_vport * , t#bool ) ; int ( * vport_delete ) ( s#fc_vport * ) ; int ( * tsk_mgmt_response ) ( s#Scsi_Host * , t#u64 , t#u64 , int ) ; int ( * it_nexus_response ) ( s#Scsi_Host * , t#u64 , int ) ; int ( * bsg_request ) ( s#fc_bsg_job * ) ; int ( * bsg_timeout ) ( s#fc_bsg_job * ) ; t#u32 dd_fcrport_size ; t#u32 dd_fcvport_size ; t#u32 dd_bsg_size ; unsigned long show_rport_maxframe_size : 1 ; unsigned long show_rport_supported_classes : 1 ; unsigned long show_rport_dev_loss_tmo : 1 ; unsigned long show_starget_node_name : 1 ; unsigned long show_starget_port_name : 1 ; unsigned long show_starget_port_id : 1 ; unsigned long show_host_node_name : 1 ; unsigned long show_host_port_name : 1 ; unsigned long show_host_permanent_port_name : 1 ; unsigned long show_host_supported_classes : 1 ; unsigned long show_host_supported_fc4s : 1 ; unsigned long show_host_supported_speeds : 1 ; unsigned long show_host_maxframe_size : 1 ; unsigned long show_host_serial_number : 1 ; unsigned long show_host_port_id : 1 ; unsigned long show_host_port_type : 1 ; unsigned long show_host_port_state : 1 ; unsigned long show_host_active_fc4s : 1 ; unsigned long show_host_speed : 1 ; unsigned long show_host_fabric_name : 1 ; unsigned long show_host_symbolic_name : 1 ; unsigned long show_host_system_hostname : 1 ; unsigned long disable_target_scan : 1 ; } 
fc_attach_transport s#scsi_transport_template * fc_attach_transport ( s#fc_function_template * ) 
fc_release_transport void fc_release_transport ( s#scsi_transport_template * ) 
fc_remove_host void fc_remove_host ( s#Scsi_Host * ) 
fc_remote_port_add s#fc_rport * fc_remote_port_add ( s#Scsi_Host * , int , s#fc_rport_identifiers * ) 
fc_remote_port_delete void fc_remote_port_delete ( s#fc_rport * ) 
fc_remote_port_rolechg void fc_remote_port_rolechg ( s#fc_rport * , t#u32 ) 
fc_block_scsi_eh int fc_block_scsi_eh ( s#scsi_cmnd * ) 
s#fc_vport_identifiers struct fc_vport_identifiers { t#u64 node_name ; t#u64 port_name ; t#u32 roles ; t#bool disable ; e#fc_port_type vport_type ; char symbolic_name [ 64 ] ; } 
fc_vport_create s#fc_vport * fc_vport_create ( s#Scsi_Host * , int , s#fc_vport_identifiers * ) 
fc_vport_terminate int fc_vport_terminate ( s#fc_vport * ) 

/* drivers/scsi/scsi_transport_iscsi.o */
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##nameidata
s##vfsmount
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##timer_rand_state
s##mtd_info
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
iscsi_create_endpoint extern s#iscsi_endpoint * iscsi_create_endpoint ( int ) 
iscsi_destroy_endpoint extern void iscsi_destroy_endpoint ( s#iscsi_endpoint * ) 
iscsi_lookup_endpoint extern s#iscsi_endpoint * iscsi_lookup_endpoint ( t#u64 ) 
s##scsi_host_cmd_pool
s##scsi_cmnd
s##scsi_sense_hdr
s##workqueue_struct
s##iscsi_task
s##iscsi_conn
iscsi_session_chkready extern int iscsi_session_chkready ( s#iscsi_cls_session * ) 
iscsi_host_for_each_session extern void iscsi_host_for_each_session ( s#Scsi_Host * , void ( * ) ( s#iscsi_cls_session * ) ) 
iscsi_scan_finished extern int iscsi_scan_finished ( s#Scsi_Host * , unsigned long ) 
iscsi_unblock_session extern void iscsi_unblock_session ( s#iscsi_cls_session * ) 
iscsi_block_session extern void iscsi_block_session ( s#iscsi_cls_session * ) 
iscsi_alloc_session extern s#iscsi_cls_session * iscsi_alloc_session ( s#Scsi_Host * , s#iscsi_transport * , int ) 
iscsi_add_session extern int iscsi_add_session ( s#iscsi_cls_session * , unsigned int ) 
iscsi_create_session extern s#iscsi_cls_session * iscsi_create_session ( s#Scsi_Host * , s#iscsi_transport * , int , unsigned int ) 
iscsi_remove_session extern void iscsi_remove_session ( s#iscsi_cls_session * ) 
iscsi_free_session extern void iscsi_free_session ( s#iscsi_cls_session * ) 
iscsi_destroy_session extern int iscsi_destroy_session ( s#iscsi_cls_session * ) 
iscsi_create_conn extern s#iscsi_cls_conn * iscsi_create_conn ( s#iscsi_cls_session * , int , t#uint32_t ) 
iscsi_destroy_conn extern int iscsi_destroy_conn ( s#iscsi_cls_conn * ) 
iscsi_recv_pdu extern int iscsi_recv_pdu ( s#iscsi_cls_conn * , s#iscsi_hdr * , char * , t#uint32_t ) 
iscsi_offload_mesg extern int iscsi_offload_mesg ( s#Scsi_Host * , s#iscsi_transport * , t#uint32_t , char * , t#uint16_t ) 
iscsi_conn_error_event extern void iscsi_conn_error_event ( s#iscsi_cls_conn * , e#iscsi_err ) 
e#iscsi_uevent_e enum iscsi_uevent_e { ISCSI_UEVENT_UNKNOWN = 0 , ISCSI_UEVENT_CREATE_SESSION = 10 + 1 , ISCSI_UEVENT_DESTROY_SESSION = 10 + 2 , ISCSI_UEVENT_CREATE_CONN = 10 + 3 , ISCSI_UEVENT_DESTROY_CONN = 10 + 4 , ISCSI_UEVENT_BIND_CONN = 10 + 5 , ISCSI_UEVENT_SET_PARAM = 10 + 6 , ISCSI_UEVENT_START_CONN = 10 + 7 , ISCSI_UEVENT_STOP_CONN = 10 + 8 , ISCSI_UEVENT_SEND_PDU = 10 + 9 , ISCSI_UEVENT_GET_STATS = 10 + 10 , ISCSI_UEVENT_GET_PARAM = 10 + 11 , ISCSI_UEVENT_TRANSPORT_EP_CONNECT = 10 + 12 , ISCSI_UEVENT_TRANSPORT_EP_POLL = 10 + 13 , ISCSI_UEVENT_TRANSPORT_EP_DISCONNECT = 10 + 14 , ISCSI_UEVENT_TGT_DSCVR = 10 + 15 , ISCSI_UEVENT_SET_HOST_PARAM = 10 + 16 , ISCSI_UEVENT_UNBIND_SESSION = 10 + 17 , ISCSI_UEVENT_CREATE_BOUND_SESSION = 10 + 18 , ISCSI_UEVENT_TRANSPORT_EP_CONNECT_THROUGH_HOST = 10 + 19 , ISCSI_UEVENT_PATH_UPDATE = 10 + 20 , ISCSI_KEVENT_RECV_PDU = 100 + 1 , ISCSI_KEVENT_CONN_ERROR = 100 + 2 , ISCSI_KEVENT_IF_ERROR = 100 + 3 , ISCSI_KEVENT_DESTROY_SESSION = 100 + 4 , ISCSI_KEVENT_UNBIND_SESSION = 100 + 5 , ISCSI_KEVENT_CREATE_SESSION = 100 + 6 , ISCSI_KEVENT_PATH_REQ = 100 + 7 , ISCSI_KEVENT_IF_DOWN = 100 + 8 , } 
iscsi_session_event extern int iscsi_session_event ( s#iscsi_cls_session * , e#iscsi_uevent_e ) 
iscsi_register_transport extern s#scsi_transport_template * iscsi_register_transport ( s#iscsi_transport * ) 
iscsi_unregister_transport extern int iscsi_unregister_transport ( s#iscsi_transport * ) 

/* drivers/scsi/scsi_transport_sas.o */
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##timer_rand_state
s##mtd_info
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
sas_remove_children void sas_remove_children ( s#device * ) 
s##scsi_host_cmd_pool
s##scsi_cmnd
s##scsi_sense_hdr
s##proc_dir_entry
s##workqueue_struct
sas_remove_host extern void sas_remove_host ( s#Scsi_Host * ) 
sas_tlr_supported unsigned int sas_tlr_supported ( s#scsi_device * ) 
sas_disable_tlr void sas_disable_tlr ( s#scsi_device * ) 
sas_enable_tlr void sas_enable_tlr ( s#scsi_device * ) 
sas_is_tlr_enabled unsigned int sas_is_tlr_enabled ( s#scsi_device * ) 
sas_phy_alloc extern s#sas_phy * sas_phy_alloc ( s#device * , int ) 
sas_phy_add extern int sas_phy_add ( s#sas_phy * ) 
sas_phy_free extern void sas_phy_free ( s#sas_phy * ) 
sas_phy_delete extern void sas_phy_delete ( s#sas_phy * ) 
scsi_is_sas_phy extern int scsi_is_sas_phy ( const s#device * ) 
sas_port_alloc s#sas_port * sas_port_alloc ( s#device * , int ) 
sas_port_alloc_num s#sas_port * sas_port_alloc_num ( s#device * ) 
sas_port_add int sas_port_add ( s#sas_port * ) 
sas_port_free void sas_port_free ( s#sas_port * ) 
sas_port_delete void sas_port_delete ( s#sas_port * ) 
scsi_is_sas_port int scsi_is_sas_port ( const s#device * ) 
sas_port_add_phy void sas_port_add_phy ( s#sas_port * , s#sas_phy * ) 
sas_port_delete_phy void sas_port_delete_phy ( s#sas_port * , s#sas_phy * ) 
sas_port_mark_backlink void sas_port_mark_backlink ( s#sas_port * ) 
sas_read_port_mode_page int sas_read_port_mode_page ( s#scsi_device * ) 
sas_end_device_alloc extern s#sas_rphy * sas_end_device_alloc ( s#sas_port * ) 
sas_expander_alloc extern s#sas_rphy * sas_expander_alloc ( s#sas_port * , e#sas_device_type ) 
sas_rphy_add extern int sas_rphy_add ( s#sas_rphy * ) 
sas_rphy_free void sas_rphy_free ( s#sas_rphy * ) 
sas_rphy_delete extern void sas_rphy_delete ( s#sas_rphy * ) 
sas_rphy_remove extern void sas_rphy_remove ( s#sas_rphy * ) 
scsi_is_sas_rphy extern int scsi_is_sas_rphy ( const s#device * ) 
s#sas_phy_linkrates struct sas_phy_linkrates { e#sas_linkrate maximum_linkrate ; e#sas_linkrate minimum_linkrate ; } 
s#sas_function_template struct sas_function_template { int ( * get_linkerrors ) ( s#sas_phy * ) ; int ( * get_enclosure_identifier ) ( s#sas_rphy * , t#u64 * ) ; int ( * get_bay_identifier ) ( s#sas_rphy * ) ; int ( * phy_reset ) ( s#sas_phy * , int ) ; int ( * phy_enable ) ( s#sas_phy * , int ) ; int ( * set_phy_speed ) ( s#sas_phy * , s#sas_phy_linkrates * ) ; int ( * smp_handler ) ( s#Scsi_Host * , s#sas_rphy * , s#request * ) ; } 
sas_attach_transport extern s#scsi_transport_template * sas_attach_transport ( s#sas_function_template * ) 
sas_release_transport extern void sas_release_transport ( s#scsi_transport_template * ) 

/* drivers/scsi/scsi_transport_spi.o */
s##scsi_host_cmd_pool
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##timer_rand_state
s##mtd_info
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##proc_dir_entry
s##workqueue_struct
spi_dv_device void spi_dv_device ( s#scsi_device * ) 
spi_schedule_dv_device void spi_schedule_dv_device ( s#scsi_device * ) 
spi_display_xfer_agreement void spi_display_xfer_agreement ( s#scsi_target * ) 
spi_populate_width_msg int spi_populate_width_msg ( unsigned char * , int ) 
spi_populate_sync_msg int spi_populate_sync_msg ( unsigned char * , int , int ) 
spi_populate_ppr_msg int spi_populate_ppr_msg ( unsigned char * , int , int , int , int ) 
spi_print_msg int spi_print_msg ( const unsigned char * ) 
e#spi_signal_type enum spi_signal_type { SPI_SIGNAL_UNKNOWN = 1 , SPI_SIGNAL_SE , SPI_SIGNAL_LVD , SPI_SIGNAL_HVD , } 
s#spi_function_template struct spi_function_template { void ( * get_period ) ( s#scsi_target * ) ; void ( * set_period ) ( s#scsi_target * , int ) ; void ( * get_offset ) ( s#scsi_target * ) ; void ( * set_offset ) ( s#scsi_target * , int ) ; void ( * get_width ) ( s#scsi_target * ) ; void ( * set_width ) ( s#scsi_target * , int ) ; void ( * get_iu ) ( s#scsi_target * ) ; void ( * set_iu ) ( s#scsi_target * , int ) ; void ( * get_dt ) ( s#scsi_target * ) ; void ( * set_dt ) ( s#scsi_target * , int ) ; void ( * get_qas ) ( s#scsi_target * ) ; void ( * set_qas ) ( s#scsi_target * , int ) ; void ( * get_wr_flow ) ( s#scsi_target * ) ; void ( * set_wr_flow ) ( s#scsi_target * , int ) ; void ( * get_rd_strm ) ( s#scsi_target * ) ; void ( * set_rd_strm ) ( s#scsi_target * , int ) ; void ( * get_rti ) ( s#scsi_target * ) ; void ( * set_rti ) ( s#scsi_target * , int ) ; void ( * get_pcomp_en ) ( s#scsi_target * ) ; void ( * set_pcomp_en ) ( s#scsi_target * , int ) ; void ( * get_hold_mcs ) ( s#scsi_target * ) ; void ( * set_hold_mcs ) ( s#scsi_target * , int ) ; void ( * get_signalling ) ( s#Scsi_Host * ) ; void ( * set_signalling ) ( s#Scsi_Host * , e#spi_signal_type ) ; int ( * deny_binding ) ( s#scsi_target * ) ; unsigned long show_period : 1 ; unsigned long show_offset : 1 ; unsigned long show_width : 1 ; unsigned long show_iu : 1 ; unsigned long show_dt : 1 ; unsigned long show_qas : 1 ; unsigned long show_wr_flow : 1 ; unsigned long show_rd_strm : 1 ; unsigned long show_rti : 1 ; unsigned long show_pcomp_en : 1 ; unsigned long show_hold_mcs : 1 ; } 
spi_attach_transport s#scsi_transport_template * spi_attach_transport ( s#spi_function_template * ) 
spi_release_transport void spi_release_transport ( s#scsi_transport_template * ) 

/* drivers/scsi/scsi_transport_srp.o */
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##timer_rand_state
s##mtd_info
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s#srp_rport struct srp_rport { s#device dev ; t#u8 port_id [ 16 ] ; t#u8 roles ; } 
s##scsi_host_cmd_pool
s##scsi_cmnd
s##scsi_sense_hdr
s##proc_dir_entry
s##workqueue_struct
s#srp_rport_identifiers struct srp_rport_identifiers { t#u8 port_id [ 16 ] ; t#u8 roles ; } 
srp_rport_add extern s#srp_rport * srp_rport_add ( s#Scsi_Host * , s#srp_rport_identifiers * ) 
srp_rport_del extern void srp_rport_del ( s#srp_rport * ) 
srp_remove_host extern void srp_remove_host ( s#Scsi_Host * ) 
s#srp_function_template struct srp_function_template { int ( * tsk_mgmt_response ) ( s#Scsi_Host * , t#u64 , t#u64 , int ) ; int ( * it_nexus_response ) ( s#Scsi_Host * , t#u64 , int ) ; } 
srp_attach_transport extern s#scsi_transport_template * srp_attach_transport ( s#srp_function_template * ) 
srp_release_transport extern void srp_release_transport ( s#scsi_transport_template * ) 

/* drivers/scsi/scsicam.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##mtd_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##hd_geometry
s##blk_trace
s##timer_rand_state
scsi_bios_ptable extern unsigned char * scsi_bios_ptable ( s#block_device * ) 
scsicam_bios_param extern int scsicam_bios_param ( s#block_device * , t#sector_t , int * ) 
scsi_partsize extern int scsi_partsize ( unsigned char * , unsigned long , unsigned int * , unsigned int * , unsigned int * ) 

/* drivers/staging/echo/echo.o */
t#int16_t typedef t#__s16 int16_t 
s#fir16_state_t struct fir16_state_t { int taps ; int curr_pos ; const t#int16_t * coeffs ; t#int16_t * history ; } 
s#oslec_state struct oslec_state { t#int16_t tx , rx ; t#int16_t clean ; t#int16_t clean_nlp ; int nonupdate_dwell ; int curr_pos ; int taps ; int log2taps ; int adaption_mode ; int cond_met ; t#int32_t Pstates ; t#int16_t adapt ; t#int32_t factor ; t#int16_t shift ; int Ltxacc , Lrxacc , Lcleanacc , Lclean_bgacc ; int Ltx , Lrx ; int Lclean ; int Lclean_bg ; int Lbgn , Lbgn_acc , Lbgn_upper , Lbgn_upper_acc ; s#fir16_state_t fir_state ; s#fir16_state_t fir_state_bg ; t#int16_t * fir_taps16 [ 2 ] ; int tx_1 , tx_2 , rx_1 , rx_2 ; t#int32_t xvtx [ 5 ] , yvtx [ 5 ] ; t#int32_t xvrx [ 5 ] , yvrx [ 5 ] ; int cng_level ; int cng_rndnum ; int cng_filter ; t#int16_t * snapshot ; } 
oslec_create s#oslec_state * oslec_create ( int , int ) 
oslec_free void oslec_free ( s#oslec_state * ) 
oslec_adaption_mode void oslec_adaption_mode ( s#oslec_state * , int ) 
oslec_flush void oslec_flush ( s#oslec_state * ) 
oslec_snapshot void oslec_snapshot ( s#oslec_state * ) 
oslec_update t#int16_t oslec_update ( s#oslec_state * , t#int16_t , t#int16_t ) 
oslec_hpf_tx t#int16_t oslec_hpf_tx ( s#oslec_state * , t#int16_t ) 

/* drivers/staging/rar/rar_driver.o */
s#RAR_address_struct struct RAR_address_struct { t#u32 low ; t#u32 high ; } 
get_rar_address int get_rar_address ( int , s#RAR_address_struct * ) 

/* drivers/video/fb_notify.o */
fb_register_client extern int fb_register_client ( s#notifier_block * ) 
fb_unregister_client extern int fb_unregister_client ( s#notifier_block * ) 
fb_notifier_call_chain extern int fb_notifier_call_chain ( unsigned long , void * ) 

/* drivers/virtio/virtio.o */
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##file
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##exec_domain
s##compat_timespec
s##pollfd
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s#virtio_device_id struct virtio_device_id { t#__u32 device ; t#__u32 vendor ; } 
s#virtqueue_ops struct virtqueue_ops { int ( * add_buf ) ( s#virtqueue * , s#scatterlist [ ] , unsigned int , unsigned int , void * ) ; void ( * kick ) ( s#virtqueue * ) ; void * ( * get_buf ) ( s#virtqueue * , unsigned int * ) ; void ( * disable_cb ) ( s#virtqueue * ) ; t#bool ( * enable_cb ) ( s#virtqueue * ) ; } 
s#virtqueue struct virtqueue { s#list_head list ; void ( * callback ) ( s#virtqueue * ) ; const char * name ; s#virtio_device * vdev ; s#virtqueue_ops * vq_ops ; void * priv ; } 
t#vq_callback_t typedef void vq_callback_t ( s#virtqueue * ) 
s#virtio_config_ops struct virtio_config_ops { void ( * get ) ( s#virtio_device * , unsigned , void * , unsigned ) ; void ( * set ) ( s#virtio_device * , unsigned , const void * , unsigned ) ; t#u8 ( * get_status ) ( s#virtio_device * ) ; void ( * set_status ) ( s#virtio_device * , t#u8 ) ; void ( * reset ) ( s#virtio_device * ) ; int ( * find_vqs ) ( s#virtio_device * , unsigned , s#virtqueue * [ ] , t#vq_callback_t * [ ] , const char * [ ] ) ; void ( * del_vqs ) ( s#virtio_device * ) ; t#u32 ( * get_features ) ( s#virtio_device * ) ; void ( * finalize_features ) ( s#virtio_device * ) ; } 
s#virtio_device struct virtio_device { int index ; s#device dev ; s#virtio_device_id id ; s#virtio_config_ops * config ; s#list_head vqs ; unsigned long features [ 1 ] ; void * priv ; } 
virtio_check_driver_offered_feature void virtio_check_driver_offered_feature ( const s#virtio_device * , unsigned int ) 
s#virtio_driver struct virtio_driver { s#device_driver driver ; const s#virtio_device_id * id_table ; const unsigned int * feature_table ; unsigned int feature_table_size ; int ( * probe ) ( s#virtio_device * ) ; void ( * remove ) ( s#virtio_device * ) ; void ( * config_changed ) ( s#virtio_device * ) ; } 
register_virtio_driver int register_virtio_driver ( s#virtio_driver * ) 
unregister_virtio_driver void unregister_virtio_driver ( s#virtio_driver * ) 
register_virtio_device int register_virtio_device ( s#virtio_device * ) 
unregister_virtio_device void unregister_virtio_device ( s#virtio_device * ) 

/* drivers/virtio/virtio_ring.o */
e#irqreturn enum irqreturn { IRQ_NONE , IRQ_HANDLED , IRQ_WAKE_THREAD , } 
t#irqreturn_t typedef e#irqreturn irqreturn_t 
vring_interrupt t#irqreturn_t vring_interrupt ( int , void * ) 
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##file
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##exec_domain
s##compat_timespec
s##pollfd
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
vring_new_virtqueue s#virtqueue * vring_new_virtqueue ( unsigned int , unsigned int , s#virtio_device * , void * , void ( * ) ( s#virtqueue * ) , void ( * ) ( s#virtqueue * ) , const char * ) 
vring_del_virtqueue void vring_del_virtqueue ( s#virtqueue * ) 
vring_transport_features void vring_transport_features ( s#virtio_device * ) 

/* fs/aio.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
wait_on_sync_kiocb extern t#ssize_t wait_on_sync_kiocb ( s#kiocb * ) 
aio_put_req extern int aio_put_req ( s#kiocb * ) 
kick_iocb extern void kick_iocb ( s#kiocb * ) 
aio_complete extern int aio_complete ( s#kiocb * , long , long ) 

/* fs/anon_inodes.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
s##backing_dev_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##mnt_namespace
anon_inode_getfile s#file * anon_inode_getfile ( const char * , const s#file_operations * , void * , int ) 
anon_inode_getfd int anon_inode_getfd ( const char * , const s#file_operations * , void * , int ) 

/* fs/attr.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
inode_change_ok extern int inode_change_ok ( const s#inode * , s#iattr * ) 
inode_newsize_ok extern int inode_newsize_ok ( const s#inode * , t#loff_t ) 
inode_setattr extern int inode_setattr ( s#inode * , s#iattr * ) 
notify_change extern int notify_change ( s#dentry * , s#iattr * ) 

/* fs/bad_inode.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##cdev
s##posix_acl
make_bad_inode extern void make_bad_inode ( s#inode * ) 
is_bad_inode extern int is_bad_inode ( s#inode * ) 
iget_failed extern void iget_failed ( s#inode * ) 

/* fs/bio.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##mtd_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##cdev
s##posix_acl
s##hd_geometry
s##timer_rand_state
bio_free extern void bio_free ( s#bio * , s#bio_set * ) 
bio_init extern void bio_init ( s#bio * ) 
bio_alloc_bioset extern s#bio * bio_alloc_bioset ( t#gfp_t , int , s#bio_set * ) 
bio_alloc extern s#bio * bio_alloc ( t#gfp_t , int ) 
bio_kmalloc extern s#bio * bio_kmalloc ( t#gfp_t , int ) 
zero_fill_bio void zero_fill_bio ( s#bio * ) 
bio_put extern void bio_put ( s#bio * ) 
bio_phys_segments extern int bio_phys_segments ( s#request_queue * , s#bio * ) 
__bio_clone extern void __bio_clone ( s#bio * , s#bio * ) 
bio_clone extern s#bio * bio_clone ( s#bio * , t#gfp_t ) 
bio_get_nr_vecs extern int bio_get_nr_vecs ( s#block_device * ) 
bio_add_pc_page extern int bio_add_pc_page ( s#request_queue * , s#bio * , s#page * , unsigned int , unsigned int ) 
bio_add_page extern int bio_add_page ( s#bio * , s#page * , unsigned int , unsigned int ) 
bio_uncopy_user extern int bio_uncopy_user ( s#bio * ) 
bio_copy_user extern s#bio * bio_copy_user ( s#request_queue * , s#rq_map_data * , unsigned long , unsigned int , int , t#gfp_t ) 
bio_map_user extern s#bio * bio_map_user ( s#request_queue * , s#block_device * , unsigned long , unsigned int , int , t#gfp_t ) 
bio_unmap_user extern void bio_unmap_user ( s#bio * ) 
bio_map_kern extern s#bio * bio_map_kern ( s#request_queue * , void * , unsigned int , t#gfp_t ) 
bio_copy_kern extern s#bio * bio_copy_kern ( s#request_queue * , void * , unsigned int , t#gfp_t , int ) 
bio_endio extern void bio_endio ( s#bio * , int ) 
s#bio_pair struct bio_pair { s#bio bio1 , bio2 ; s#bio_vec bv1 , bv2 ; s#bio_integrity_payload bip1 , bip2 ; s#bio_vec iv1 , iv2 ; t#atomic_t cnt ; int error ; } 
bio_pair_release extern void bio_pair_release ( s#bio_pair * ) 
bio_split extern s#bio_pair * bio_split ( s#bio * , int ) 
bio_sector_offset extern t#sector_t bio_sector_offset ( s#bio * , unsigned short , unsigned int ) 
bioset_free extern void bioset_free ( s#bio_set * ) 
bioset_create extern s#bio_set * bioset_create ( unsigned int , unsigned int ) 

/* fs/bio-integrity.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##mtd_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##hd_geometry
s##blk_trace
s##timer_rand_state
bio_integrity_alloc_bioset extern s#bio_integrity_payload * bio_integrity_alloc_bioset ( s#bio * , t#gfp_t , unsigned int , s#bio_set * ) 
bio_integrity_alloc extern s#bio_integrity_payload * bio_integrity_alloc ( s#bio * , t#gfp_t , unsigned int ) 
bio_integrity_free extern void bio_integrity_free ( s#bio * , s#bio_set * ) 
bio_integrity_add_page extern int bio_integrity_add_page ( s#bio * , s#page * , unsigned int , unsigned int ) 
bio_integrity_enabled extern int bio_integrity_enabled ( s#bio * ) 
bio_integrity_tag_size unsigned int bio_integrity_tag_size ( s#bio * ) 
bio_integrity_set_tag extern int bio_integrity_set_tag ( s#bio * , void * , unsigned int ) 
bio_integrity_get_tag extern int bio_integrity_get_tag ( s#bio * , void * , unsigned int ) 
bio_integrity_prep extern int bio_integrity_prep ( s#bio * ) 
bio_integrity_endio extern void bio_integrity_endio ( s#bio * , int ) 
bio_integrity_advance extern void bio_integrity_advance ( s#bio * , unsigned int ) 
bio_integrity_trim extern void bio_integrity_trim ( s#bio * , unsigned int , unsigned int ) 
bio_integrity_split extern void bio_integrity_split ( s#bio * , s#bio_pair * , int ) 
bio_integrity_clone extern int bio_integrity_clone ( s#bio * , s#bio * , t#gfp_t , s#bio_set * ) 
bioset_integrity_create extern int bioset_integrity_create ( s#bio_set * , int ) 
bioset_integrity_free extern void bioset_integrity_free ( s#bio_set * ) 

/* fs/block_dev.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##mtd_info
s##mnt_namespace
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##hd_geometry
s##blk_trace
s##timer_rand_state
I_BDEV extern s#block_device * I_BDEV ( s#inode * ) 
set_blocksize extern int set_blocksize ( s#block_device * , int ) 
sb_set_blocksize extern int sb_set_blocksize ( s#super_block * , int ) 
sb_min_blocksize extern int sb_min_blocksize ( s#super_block * , int ) 
sync_blockdev extern int sync_blockdev ( s#block_device * ) 
fsync_bdev extern int fsync_bdev ( s#block_device * ) 
freeze_bdev extern s#super_block * freeze_bdev ( s#block_device * ) 
thaw_bdev extern int thaw_bdev ( s#block_device * , s#super_block * ) 
bdget extern s#block_device * bdget ( t#dev_t ) 
bdput extern void bdput ( s#block_device * ) 
bd_claim extern int bd_claim ( s#block_device * , void * ) 
bd_release extern void bd_release ( s#block_device * ) 
bd_claim_by_disk extern int bd_claim_by_disk ( s#block_device * , void * , s#gendisk * ) 
bd_release_from_disk extern void bd_release_from_disk ( s#block_device * , s#gendisk * ) 
open_by_devnum extern s#block_device * open_by_devnum ( t#dev_t , t#fmode_t ) 
check_disk_size_change extern void check_disk_size_change ( s#gendisk * , s#block_device * ) 
revalidate_disk extern int revalidate_disk ( s#gendisk * ) 
check_disk_change extern int check_disk_change ( s#block_device * ) 
bd_set_size extern void bd_set_size ( s#block_device * , t#loff_t ) 
blkdev_get extern int blkdev_get ( s#block_device * , t#fmode_t ) 
blkdev_put extern int blkdev_put ( s#block_device * , t#fmode_t ) 
blkdev_aio_write extern t#ssize_t blkdev_aio_write ( s#kiocb * , const s#iovec * , unsigned long , t#loff_t ) 
ioctl_by_bdev extern int ioctl_by_bdev ( s#block_device * , unsigned , unsigned long ) 
lookup_bdev extern s#block_device * lookup_bdev ( const char * ) 
open_bdev_exclusive extern s#block_device * open_bdev_exclusive ( const char * , t#fmode_t , void * ) 
close_bdev_exclusive extern void close_bdev_exclusive ( s#block_device * , t#fmode_t ) 
__invalidate_device extern int __invalidate_device ( s#block_device * ) 

/* fs/buffer.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##kstatfs
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##hd_geometry
s##radix_tree_node
s##tvec_base
s##blk_trace
s##timer_rand_state
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
t#bh_end_io_t typedef void ( bh_end_io_t ) ( s#buffer_head * , int ) 
s#buffer_head struct buffer_head { unsigned long b_state ; s#buffer_head * b_this_page ; s#page * b_page ; t#sector_t b_blocknr ; t#size_t b_size ; char * b_data ; s#block_device * b_bdev ; t#bh_end_io_t * b_end_io ; void * b_private ; s#list_head b_assoc_buffers ; s#address_space * b_assoc_map ; t#atomic_t b_count ; } 
init_buffer void init_buffer ( s#buffer_head * , t#bh_end_io_t * , void * ) 
__lock_buffer void __lock_buffer ( s#buffer_head * ) 
unlock_buffer void unlock_buffer ( s#buffer_head * ) 
__wait_on_buffer void __wait_on_buffer ( s#buffer_head * ) 
end_buffer_read_sync void end_buffer_read_sync ( s#buffer_head * , int ) 
end_buffer_write_sync void end_buffer_write_sync ( s#buffer_head * , int ) 
invalidate_bdev extern void invalidate_bdev ( s#block_device * ) 
end_buffer_async_write void end_buffer_async_write ( s#buffer_head * , int ) 
mark_buffer_async_write void mark_buffer_async_write ( s#buffer_head * ) 
sync_mapping_buffers int sync_mapping_buffers ( s#address_space * ) 
mark_buffer_dirty_inode void mark_buffer_dirty_inode ( s#buffer_head * , s#inode * ) 
__set_page_dirty_buffers extern int __set_page_dirty_buffers ( s#page * ) 
invalidate_inode_buffers void invalidate_inode_buffers ( s#inode * ) 
alloc_page_buffers s#buffer_head * alloc_page_buffers ( s#page * , unsigned long , int ) 
mark_buffer_dirty void mark_buffer_dirty ( s#buffer_head * ) 
__brelse void __brelse ( s#buffer_head * ) 
__bforget void __bforget ( s#buffer_head * ) 
__find_get_block s#buffer_head * __find_get_block ( s#block_device * , t#sector_t , unsigned ) 
__getblk s#buffer_head * __getblk ( s#block_device * , t#sector_t , unsigned ) 
__breadahead void __breadahead ( s#block_device * , t#sector_t , unsigned int ) 
__bread s#buffer_head * __bread ( s#block_device * , t#sector_t , unsigned ) 
invalidate_bh_lrus void invalidate_bh_lrus ( void ) 
set_bh_page void set_bh_page ( s#buffer_head * , s#page * , unsigned long ) 
block_invalidatepage void block_invalidatepage ( s#page * , unsigned long ) 
create_empty_buffers void create_empty_buffers ( s#page * , unsigned long , unsigned long ) 
unmap_underlying_metadata void unmap_underlying_metadata ( s#block_device * , t#sector_t ) 
page_zero_new_buffers void page_zero_new_buffers ( s#page * , unsigned , unsigned ) 
t#get_block_t typedef int ( get_block_t ) ( s#inode * , t#sector_t , s#buffer_head * , int ) 
block_write_begin int block_write_begin ( s#file * , s#address_space * , t#loff_t , unsigned , unsigned , s#page * * , void * * , t#get_block_t * ) 
block_write_end int block_write_end ( s#file * , s#address_space * , t#loff_t , unsigned , unsigned , s#page * , void * ) 
generic_write_end int generic_write_end ( s#file * , s#address_space * , t#loff_t , unsigned , unsigned , s#page * , void * ) 
block_is_partially_uptodate int block_is_partially_uptodate ( s#page * , t#read_descriptor_t * , unsigned long ) 
block_read_full_page int block_read_full_page ( s#page * , t#get_block_t * ) 
generic_cont_expand_simple int generic_cont_expand_simple ( s#inode * , t#loff_t ) 
cont_write_begin int cont_write_begin ( s#file * , s#address_space * , t#loff_t , unsigned , unsigned , s#page * * , void * * , t#get_block_t * , t#loff_t * ) 
block_prepare_write int block_prepare_write ( s#page * , unsigned , unsigned , t#get_block_t * ) 
block_commit_write int block_commit_write ( s#page * , unsigned , unsigned ) 
block_page_mkwrite int block_page_mkwrite ( s#vm_area_struct * , s#vm_fault * , t#get_block_t ) 
nobh_write_begin int nobh_write_begin ( s#file * , s#address_space * , t#loff_t , unsigned , unsigned , s#page * * , void * * , t#get_block_t * ) 
nobh_write_end int nobh_write_end ( s#file * , s#address_space * , t#loff_t , unsigned , unsigned , s#page * , void * ) 
nobh_writepage int nobh_writepage ( s#page * , t#get_block_t * , s#writeback_control * ) 
nobh_truncate_page int nobh_truncate_page ( s#address_space * , t#loff_t , t#get_block_t * ) 
block_truncate_page int block_truncate_page ( s#address_space * , t#loff_t , t#get_block_t * ) 
block_write_full_page_endio int block_write_full_page_endio ( s#page * , t#get_block_t * , s#writeback_control * , t#bh_end_io_t * ) 
block_write_full_page int block_write_full_page ( s#page * , t#get_block_t * , s#writeback_control * ) 
generic_block_bmap t#sector_t generic_block_bmap ( s#address_space * , t#sector_t , t#get_block_t * ) 
submit_bh int submit_bh ( int , s#buffer_head * ) 
ll_rw_block void ll_rw_block ( int , int , s#buffer_head * [ ] ) 
sync_dirty_buffer int sync_dirty_buffer ( s#buffer_head * ) 
try_to_free_buffers int try_to_free_buffers ( s#page * ) 
block_sync_page void block_sync_page ( s#page * ) 
alloc_buffer_head s#buffer_head * alloc_buffer_head ( t#gfp_t ) 
free_buffer_head void free_buffer_head ( s#buffer_head * ) 
bh_uptodate_or_lock int bh_uptodate_or_lock ( s#buffer_head * ) 
bh_submit_read int bh_submit_read ( s#buffer_head * ) 

/* fs/char_dev.o */
register_chrdev_region extern int register_chrdev_region ( t#dev_t , unsigned , const char * ) 
unregister_chrdev_region extern void unregister_chrdev_region ( t#dev_t , unsigned ) 
alloc_chrdev_region extern int alloc_chrdev_region ( t#dev_t * , unsigned , unsigned , const char * ) 
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##device
s##mtd_info
s##posix_acl
s##radix_tree_node
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##sysfs_dirent
cdev_init void cdev_init ( s#cdev * , const s#file_operations * ) 
cdev_alloc s#cdev * cdev_alloc ( void ) 
cdev_del void cdev_del ( s#cdev * ) 
cdev_add int cdev_add ( s#cdev * , t#dev_t , unsigned ) 
cdev_index int cdev_index ( s#inode * ) 
__register_chrdev extern int __register_chrdev ( unsigned int , unsigned int , unsigned int , const char * , const s#file_operations * ) 
__unregister_chrdev extern void __unregister_chrdev ( unsigned int , unsigned int , unsigned int , const char * ) 
directly_mappable_cdev_bdi extern s#backing_dev_info directly_mappable_cdev_bdi 

/* fs/configfs/dir.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##mnt_namespace
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s#configfs_attribute struct configfs_attribute { const char * ca_name ; s#module * ca_owner ; t#mode_t ca_mode ; } 
s#configfs_item_operations struct configfs_item_operations { void ( * release ) ( s#config_item * ) ; t#ssize_t ( * show_attribute ) ( s#config_item * , s#configfs_attribute * , char * ) ; t#ssize_t ( * store_attribute ) ( s#config_item * , s#configfs_attribute * , const char * , t#size_t ) ; int ( * allow_link ) ( s#config_item * , s#config_item * ) ; int ( * drop_link ) ( s#config_item * , s#config_item * ) ; } 
s#configfs_group_operations struct configfs_group_operations { s#config_item * ( * make_item ) ( s#config_group * , const char * ) ; s#config_group * ( * make_group ) ( s#config_group * , const char * ) ; int ( * commit_item ) ( s#config_item * ) ; void ( * disconnect_notify ) ( s#config_group * , s#config_item * ) ; void ( * drop_item ) ( s#config_group * , s#config_item * ) ; } 
s#config_item_type struct config_item_type { s#module * ct_owner ; s#configfs_item_operations * ct_item_ops ; s#configfs_group_operations * ct_group_ops ; s#configfs_attribute * * ct_attrs ; } 
s#config_item struct config_item { char * ci_name ; char ci_namebuf [ 20 ] ; s#kref ci_kref ; s#list_head ci_entry ; s#config_item * ci_parent ; s#config_group * ci_group ; s#config_item_type * ci_type ; s#dentry * ci_dentry ; } 
s#config_group struct config_group { s#config_item cg_item ; s#list_head cg_children ; s#configfs_subsystem * cg_subsys ; s#config_group * * default_groups ; } 
s#configfs_subsystem struct configfs_subsystem { s#config_group su_group ; s#mutex su_mutex ; } 
configfs_depend_item int configfs_depend_item ( s#configfs_subsystem * , s#config_item * ) 
configfs_undepend_item void configfs_undepend_item ( s#configfs_subsystem * , s#config_item * ) 
configfs_register_subsystem int configfs_register_subsystem ( s#configfs_subsystem * ) 
configfs_unregister_subsystem void configfs_unregister_subsystem ( s#configfs_subsystem * ) 

/* fs/configfs/item.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##file
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##dentry
config_item_set_name extern int config_item_set_name ( s#config_item * , const char * , ... ) 
config_item_init_type_name extern void config_item_init_type_name ( s#config_item * , const char * , s#config_item_type * ) 
config_group_init_type_name extern void config_group_init_type_name ( s#config_group * , const char * , s#config_item_type * ) 
config_item_init extern void config_item_init ( s#config_item * ) 
config_group_init extern void config_group_init ( s#config_group * ) 
config_item_get extern s#config_item * config_item_get ( s#config_item * ) 
config_item_put extern void config_item_put ( s#config_item * ) 
config_group_find_item extern s#config_item * config_group_find_item ( s#config_group * , const char * ) 

/* fs/dcache.o */
sysctl_vfs_cache_pressure extern int sysctl_vfs_cache_pressure 
dcache_lock extern t#spinlock_t dcache_lock 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##mnt_namespace
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##bts_context
s#fs_struct struct fs_struct { int users ; t#rwlock_t lock ; int umask ; int in_exec ; s#path root , pwd ; } 
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##cdev
s##posix_acl
d_instantiate_unique extern s#dentry * d_instantiate_unique ( s#dentry * , s#inode * ) 
d_obtain_alias extern s#dentry * d_obtain_alias ( s#inode * ) 
d_genocide extern void d_genocide ( s#dentry * ) 
d_alloc extern s#dentry * d_alloc ( s#dentry * , const s#qstr * ) 
d_alloc_root extern s#dentry * d_alloc_root ( s#inode * ) 
d_delete extern void d_delete ( s#dentry * ) 
d_find_alias extern s#dentry * d_find_alias ( s#inode * ) 
d_instantiate extern void d_instantiate ( s#dentry * , s#inode * ) 
d_invalidate extern int d_invalidate ( s#dentry * ) 
d_lookup extern s#dentry * d_lookup ( s#dentry * , s#qstr * ) 
d_move extern void d_move ( s#dentry * , s#dentry * ) 
d_materialise_unique extern s#dentry * d_materialise_unique ( s#dentry * , s#inode * ) 
d_path extern char * d_path ( const s#path * , char * , int ) 
d_prune_aliases extern void d_prune_aliases ( s#inode * ) 
d_rehash extern void d_rehash ( s#dentry * ) 
d_splice_alias extern s#dentry * d_splice_alias ( s#inode * , s#dentry * ) 
d_add_ci extern s#dentry * d_add_ci ( s#dentry * , s#inode * , s#qstr * ) 
d_validate extern int d_validate ( s#dentry * , s#dentry * ) 
dget_locked extern s#dentry * dget_locked ( s#dentry * ) 
dput extern void dput ( s#dentry * ) 
t#__kernel_ino_t typedef unsigned int __kernel_ino_t 
t#ino_t typedef t#__kernel_ino_t ino_t 
find_inode_number extern t#ino_t find_inode_number ( s#dentry * , s#qstr * ) 
have_submounts extern int have_submounts ( s#dentry * ) 
names_cachep extern s#kmem_cache * names_cachep 
shrink_dcache_parent extern void shrink_dcache_parent ( s#dentry * ) 
shrink_dcache_sb extern void shrink_dcache_sb ( s#super_block * ) 

/* fs/dcookies.o */
s#dcookie_user struct dcookie_user { s#list_head next ; } 
dcookie_register s#dcookie_user * dcookie_register ( void ) 
dcookie_unregister void dcookie_unregister ( s#dcookie_user * ) 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##backing_dev_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##mnt_namespace
get_dcookie int get_dcookie ( s#path * , unsigned long * ) 

/* fs/debugfs/file.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##backing_dev_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
debugfs_create_u8 s#dentry * debugfs_create_u8 ( const char * , t#mode_t , s#dentry * , t#u8 * ) 
debugfs_create_u16 s#dentry * debugfs_create_u16 ( const char * , t#mode_t , s#dentry * , t#u16 * ) 
debugfs_create_u32 s#dentry * debugfs_create_u32 ( const char * , t#mode_t , s#dentry * , t#u32 * ) 
debugfs_create_u64 s#dentry * debugfs_create_u64 ( const char * , t#mode_t , s#dentry * , t#u64 * ) 
debugfs_create_x8 s#dentry * debugfs_create_x8 ( const char * , t#mode_t , s#dentry * , t#u8 * ) 
debugfs_create_x16 s#dentry * debugfs_create_x16 ( const char * , t#mode_t , s#dentry * , t#u16 * ) 
debugfs_create_x32 s#dentry * debugfs_create_x32 ( const char * , t#mode_t , s#dentry * , t#u32 * ) 
debugfs_create_size_t s#dentry * debugfs_create_size_t ( const char * , t#mode_t , s#dentry * , t#size_t * ) 
debugfs_create_bool s#dentry * debugfs_create_bool ( const char * , t#mode_t , s#dentry * , t#u32 * ) 
s#debugfs_blob_wrapper struct debugfs_blob_wrapper { void * data ; unsigned long size ; } 
debugfs_create_blob s#dentry * debugfs_create_blob ( const char * , t#mode_t , s#dentry * , s#debugfs_blob_wrapper * ) 

/* fs/debugfs/inode.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##mnt_namespace
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
debugfs_create_file s#dentry * debugfs_create_file ( const char * , t#mode_t , s#dentry * , void * , const s#file_operations * ) 
debugfs_create_dir s#dentry * debugfs_create_dir ( const char * , s#dentry * ) 
debugfs_create_symlink s#dentry * debugfs_create_symlink ( const char * , s#dentry * , const char * ) 
debugfs_remove void debugfs_remove ( s#dentry * ) 
debugfs_remove_recursive void debugfs_remove_recursive ( s#dentry * ) 
debugfs_rename s#dentry * debugfs_rename ( s#dentry * , s#dentry * , s#dentry * , const char * ) 
debugfs_initialized t#bool debugfs_initialized ( void ) 

/* fs/direct-io.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_geometry
s##tvec_base
s##blk_trace
s##timer_rand_state
s##mtd_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
s##eventfd_ctx
t#dio_iodone_t typedef void ( dio_iodone_t ) ( s#kiocb * , t#loff_t , t#ssize_t , void * ) 
__blockdev_direct_IO t#ssize_t __blockdev_direct_IO ( int , s#kiocb * , s#inode * , s#block_device * , const s#iovec * , t#loff_t , unsigned long , t#get_block_t , t#dio_iodone_t , int ) 

/* fs/dlm/main.o */
t#dlm_lockspace_t typedef void dlm_lockspace_t 
dlm_new_lockspace int dlm_new_lockspace ( const char * , int , t#dlm_lockspace_t * * , t#uint32_t , int ) 
dlm_release_lockspace int dlm_release_lockspace ( t#dlm_lockspace_t * , int ) 
s#dlm_lksb struct dlm_lksb { int sb_status ; t#__u32 sb_lkid ; char sb_flags ; char * sb_lvbptr ; } 
dlm_lock int dlm_lock ( t#dlm_lockspace_t * , int , s#dlm_lksb * , t#uint32_t , void * , unsigned int , t#uint32_t , void ( * ) ( void * ) , void * , void ( * ) ( void * , int ) ) 
dlm_unlock int dlm_unlock ( t#dlm_lockspace_t * , t#uint32_t , t#uint32_t , s#dlm_lksb * , void * ) 

/* fs/dlm/plock.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
s##backing_dev_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
dlm_posix_lock int dlm_posix_lock ( t#dlm_lockspace_t * , t#u64 , s#file * , int , s#file_lock * ) 
dlm_posix_unlock int dlm_posix_unlock ( t#dlm_lockspace_t * , t#u64 , s#file * , s#file_lock * ) 
dlm_posix_get int dlm_posix_get ( t#dlm_lockspace_t * , t#u64 , s#file * , s#file_lock * ) 

/* fs/dmapi/dmapi_sysent.o */
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##hd_struct
s##gendisk
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##mtd_info
t#dm_right_t typedef enum { DM_RIGHT_NULL , DM_RIGHT_SHARED , DM_RIGHT_EXCL } dm_right_t 
dm_send_mount_event int dm_send_mount_event ( s#super_block * , t#dm_right_t , s#inode * , t#dm_right_t , s#inode * , t#dm_right_t , char * , char * ) 
t#dm_eventtype_t typedef enum { DM_EVENT_INVALID = - 1 , DM_EVENT_CANCEL = 0 , DM_EVENT_MOUNT = 1 , DM_EVENT_PREUNMOUNT = 2 , DM_EVENT_UNMOUNT = 3 , DM_EVENT_DEBUT = 4 , DM_EVENT_CREATE = 5 , DM_EVENT_CLOSE = 6 , DM_EVENT_POSTCREATE = 7 , DM_EVENT_REMOVE = 8 , DM_EVENT_POSTREMOVE = 9 , DM_EVENT_RENAME = 10 , DM_EVENT_POSTRENAME = 11 , DM_EVENT_LINK = 12 , DM_EVENT_POSTLINK = 13 , DM_EVENT_SYMLINK = 14 , DM_EVENT_POSTSYMLINK = 15 , DM_EVENT_READ = 16 , DM_EVENT_WRITE = 17 , DM_EVENT_TRUNCATE = 18 , DM_EVENT_ATTRIBUTE = 19 , DM_EVENT_DESTROY = 20 , DM_EVENT_NOSPACE = 21 , DM_EVENT_USER = 22 , DM_EVENT_MAX = 23 } dm_eventtype_t 
dm_send_namesp_event int dm_send_namesp_event ( t#dm_eventtype_t , s#super_block * , s#inode * , t#dm_right_t , s#inode * , t#dm_right_t , const char * , const char * , t#mode_t , int , int ) 
dm_send_unmount_event void dm_send_unmount_event ( s#super_block * , s#inode * , t#dm_right_t , t#mode_t , int , int ) 
t#dm_off_t typedef t#__s64 dm_off_t 
dm_send_data_event int dm_send_data_event ( t#dm_eventtype_t , s#inode * , t#dm_right_t , t#dm_off_t , t#size_t , int ) 
dm_send_destroy_event int dm_send_destroy_event ( s#inode * , t#dm_right_t ) 
t#dm_fsid_t typedef t#__u64 dm_fsid_t 
s#dm_fid struct dm_fid { t#__u16 dm_fid_len ; t#__u16 dm_fid_pad ; t#__u32 dm_fid_gen ; t#__u64 dm_fid_ino ; } 
t#dm_fid_t typedef s#dm_fid dm_fid_t 
s#dm_handle struct dm_handle { union { t#__s64 align ; t#dm_fsid_t _ha_fsid ; } ha_u ; t#dm_fid_t ha_fid ; } 
t#dm_handle_t typedef s#dm_handle dm_handle_t 
dm_ip_to_handle int dm_ip_to_handle ( s#inode * , t#dm_handle_t * ) 
s#filesystem_dmapi_operations struct filesystem_dmapi_operations { int ( * get_fsys_vector ) ( s#super_block * , void * ) ; int ( * fh_to_inode ) ( s#super_block * , s#inode * * , t#dm_fid_t * ) ; int ( * inode_to_fh ) ( s#inode * , t#dm_fid_t * , t#dm_fsid_t * ) ; void ( * get_fsid ) ( s#super_block * , t#dm_fsid_t * ) ; int ( * flushing ) ( s#inode * ) ; } 
dmapi_register void dmapi_register ( s#file_system_type * , s#filesystem_dmapi_operations * ) 
dmapi_unregister void dmapi_unregister ( s#file_system_type * ) 
dmapi_registered int dmapi_registered ( s#file_system_type * , s#filesystem_dmapi_operations * * ) 
dm_release_threads int dm_release_threads ( s#super_block * , s#inode * , int ) 

/* fs/eventfd.o */
s#eventfd_ctx struct eventfd_ctx { s#kref kref ; t#wait_queue_head_t wqh ; t#__u64 count ; unsigned int flags ; } 
eventfd_signal int eventfd_signal ( s#eventfd_ctx * , int ) 
eventfd_ctx_get s#eventfd_ctx * eventfd_ctx_get ( s#eventfd_ctx * ) 
eventfd_ctx_put void eventfd_ctx_put ( s#eventfd_ctx * ) 
eventfd_ctx_remove_wait_queue int eventfd_ctx_remove_wait_queue ( s#eventfd_ctx * , t#wait_queue_t * , t#__u64 * ) 
eventfd_ctx_read t#ssize_t eventfd_ctx_read ( s#eventfd_ctx * , int , t#__u64 * ) 
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##backing_dev_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
eventfd_fget s#file * eventfd_fget ( int ) 
eventfd_ctx_fdget s#eventfd_ctx * eventfd_ctx_fdget ( int ) 
eventfd_ctx_fileget s#eventfd_ctx * eventfd_ctx_fileget ( s#file * ) 

/* fs/exec.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##mnt_namespace
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##array_cache
s##kmem_list3
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##ipc_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
e#utrace_resume_action enum utrace_resume_action { UTRACE_STOP , UTRACE_INTERRUPT , UTRACE_REPORT , UTRACE_SINGLESTEP , UTRACE_BLOCKSTEP , UTRACE_RESUME , UTRACE_DETACH } 
s#utrace_engine_ops struct utrace_engine_ops { t#u32 ( * report_quiesce ) ( e#utrace_resume_action , s#utrace_engine * , s#task_struct * , unsigned long ) ; t#u32 ( * report_signal ) ( t#u32 , s#utrace_engine * , s#task_struct * , s#pt_regs * , t#siginfo_t * , const s#k_sigaction * , s#k_sigaction * ) ; t#u32 ( * report_clone ) ( e#utrace_resume_action , s#utrace_engine * , s#task_struct * , unsigned long , s#task_struct * ) ; t#u32 ( * report_jctl ) ( e#utrace_resume_action , s#utrace_engine * , s#task_struct * , int , int ) ; t#u32 ( * report_exec ) ( e#utrace_resume_action , s#utrace_engine * , s#task_struct * , const s#linux_binfmt * , const s#linux_binprm * , s#pt_regs * ) ; t#u32 ( * report_syscall_entry ) ( t#u32 , s#utrace_engine * , s#task_struct * , s#pt_regs * ) ; t#u32 ( * report_syscall_exit ) ( e#utrace_resume_action , s#utrace_engine * , s#task_struct * , s#pt_regs * ) ; t#u32 ( * report_exit ) ( e#utrace_resume_action , s#utrace_engine * , s#task_struct * , long , long * ) ; t#u32 ( * report_death ) ( s#utrace_engine * , s#task_struct * , t#bool , int ) ; void ( * report_reap ) ( s#utrace_engine * , s#task_struct * ) ; void ( * release ) ( void * ) ; } 
s#utrace_engine struct utrace_engine { s#kref kref ; void ( * release ) ( void * ) ; s#list_head entry ; const s#utrace_engine_ops * ops ; void * data ; unsigned long flags ; } 
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##ftrace_ret_stack
s##mem_cgroup
s##map_segment
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
__register_binfmt extern int __register_binfmt ( s#linux_binfmt * , int ) 
unregister_binfmt extern void unregister_binfmt ( s#linux_binfmt * ) 
copy_strings_kernel extern int copy_strings_kernel ( int , char * * , s#linux_binprm * ) 
setup_arg_pages extern int setup_arg_pages ( s#linux_binprm * , unsigned long , int ) 
open_exec extern s#file * open_exec ( const char * ) 
kernel_read extern int kernel_read ( s#file * , t#loff_t , char * , unsigned long ) 
flush_old_exec extern int flush_old_exec ( s#linux_binprm * ) 
setup_new_exec extern void setup_new_exec ( s#linux_binprm * ) 
install_exec_creds extern void install_exec_creds ( s#linux_binprm * ) 
prepare_binprm extern int prepare_binprm ( s#linux_binprm * ) 
remove_arg_zero extern int remove_arg_zero ( s#linux_binprm * ) 
search_binary_handler extern int search_binary_handler ( s#linux_binprm * , s#pt_regs * ) 
set_binfmt extern void set_binfmt ( s#linux_binfmt * ) 

/* fs/exportfs/expfs.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s#fid struct fid { union { struct { t#u32 ino ; t#u32 gen ; t#u32 parent_ino ; t#u32 parent_gen ; } i32 ; struct { t#u32 block ; t#u16 partref ; t#u16 parent_partref ; t#u32 generation ; t#u32 parent_block ; t#u32 parent_generation ; } udf ; t#__u32 raw [ 0 ] ; } ; } 
s#export_operations struct export_operations { int ( * encode_fh ) ( s#dentry * , t#__u32 * , int * , int ) ; s#dentry * ( * fh_to_dentry ) ( s#super_block * , s#fid * , int , int ) ; s#dentry * ( * fh_to_parent ) ( s#super_block * , s#fid * , int , int ) ; int ( * get_name ) ( s#dentry * , char * , s#dentry * ) ; s#dentry * ( * get_parent ) ( s#dentry * ) ; } 
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##mnt_namespace
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
exportfs_encode_fh extern int exportfs_encode_fh ( s#dentry * , s#fid * , int * , int ) 
exportfs_decode_fh extern s#dentry * exportfs_decode_fh ( s#vfsmount * , s#fid * , int , int , int ( * ) ( void * , s#dentry * ) , void * ) 

/* fs/fat/dir.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##pollfd
s##cdev
s##posix_acl
s#msdos_dir_entry struct msdos_dir_entry { t#__u8 name [ 11 ] ; t#__u8 attr ; t#__u8 lcase ; t#__u8 ctime_cs ; t#__le16 ctime ; t#__le16 cdate ; t#__le16 adate ; t#__le16 starthi ; t#__le16 time , date , start ; t#__le32 size ; } 
s#fat_slot_info struct fat_slot_info { t#loff_t i_pos ; t#loff_t slot_off ; int nr_slots ; s#msdos_dir_entry * de ; s#buffer_head * bh ; } 
fat_search_long extern int fat_search_long ( s#inode * , const unsigned char * , int , s#fat_slot_info * ) 
fat_get_dotdot_entry extern int fat_get_dotdot_entry ( s#inode * , s#buffer_head * * , s#msdos_dir_entry * * , t#loff_t * ) 
fat_dir_empty extern int fat_dir_empty ( s#inode * ) 
fat_scan extern int fat_scan ( s#inode * , const unsigned char * , s#fat_slot_info * ) 
fat_remove_entries extern int fat_remove_entries ( s#inode * , s#fat_slot_info * ) 
fat_alloc_new_dir extern int fat_alloc_new_dir ( s#inode * , s#timespec * ) 
fat_add_entries extern int fat_add_entries ( s#inode * , void * , int , s#fat_slot_info * ) 

/* fs/fat/fatent.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_geometry
s##blk_trace
s##timer_rand_state
s##mtd_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
fat_free_clusters extern int fat_free_clusters ( s#inode * , int ) 

/* fs/fat/file.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_geometry
s##blk_trace
s##timer_rand_state
s##mtd_info
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##cdev
s##posix_acl
s##mnt_namespace
fat_getattr extern int fat_getattr ( s#vfsmount * , s#dentry * , s#kstat * ) 
fat_setattr extern int fat_setattr ( s#dentry * , s#iattr * ) 

/* fs/fat/inode.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##backing_dev_info
s##nameidata
s##mnt_namespace
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
fat_attach extern void fat_attach ( s#inode * , t#loff_t ) 
fat_detach extern void fat_detach ( s#inode * ) 
fat_build_inode extern s#inode * fat_build_inode ( s#super_block * , s#msdos_dir_entry * , t#loff_t ) 
fat_sync_inode extern int fat_sync_inode ( s#inode * ) 
fat_fill_super extern int fat_fill_super ( s#super_block * , void * , int , const s#inode_operations * , int ) 
fat_flush_inodes extern int fat_flush_inodes ( s#super_block * , s#inode * , s#inode * ) 

/* fs/fat/misc.o */
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##hd_struct
s##gendisk
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##mtd_info
fat_fs_error extern void fat_fs_error ( s#super_block * , const char * , ... ) 
s#fat_mount_options struct fat_mount_options { t#uid_t fs_uid ; t#gid_t fs_gid ; unsigned short fs_fmask ; unsigned short fs_dmask ; unsigned short codepage ; char * iocharset ; unsigned short shortname ; unsigned char name_check ; unsigned char errors ; unsigned short allow_utime ; unsigned quiet : 1 , showexec : 1 , sys_immutable : 1 , dotsOK : 1 , isvfat : 1 , utf8 : 1 , unicode_xlate : 1 , numtail : 1 , flush : 1 , nocase : 1 , usefree : 1 , tz_utc : 1 , rodir : 1 ; } 
t#wchar_t typedef t#u16 wchar_t 
s#nls_table struct nls_table { const char * charset ; const char * alias ; int ( * uni2char ) ( t#wchar_t , unsigned char * , int ) ; int ( * char2uni ) ( const unsigned char * , int , t#wchar_t * ) ; const unsigned char * charset2lower ; const unsigned char * charset2upper ; s#module * owner ; s#nls_table * next ; } 
s##fatent_operations
s#msdos_sb_info struct msdos_sb_info { unsigned short sec_per_clus ; unsigned short cluster_bits ; unsigned int cluster_size ; unsigned char fats , fat_bits ; unsigned short fat_start ; unsigned long fat_length ; unsigned long dir_start ; unsigned short dir_entries ; unsigned long data_start ; unsigned long max_cluster ; unsigned long root_cluster ; unsigned long fsinfo_sector ; s#mutex fat_lock ; unsigned int prev_free ; unsigned int free_clusters ; unsigned int free_clus_valid ; s#fat_mount_options options ; s#nls_table * nls_disk ; s#nls_table * nls_io ; const void * dir_ops ; int dir_per_block ; int dir_per_block_bits ; int fatent_shift ; s#fatent_operations * fatent_ops ; s#inode * fat_inode ; t#spinlock_t inode_hash_lock ; s#hlist_head inode_hashtable [ ( 1UL << 8 ) ] ; } 
fat_time_unix2fat extern void fat_time_unix2fat ( s#msdos_sb_info * , s#timespec * , t#__le16 * , t#__le16 * , t#u8 * ) 

/* fs/fcntl.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##bsd_acct_struct
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
__f_setown extern int __f_setown ( s#file * , s#pid * , e#pid_type , int ) 
f_setown extern int f_setown ( s#file * , unsigned long , int ) 
fasync_helper extern int fasync_helper ( int , s#file * , int , s#fasync_struct * * ) 
__kill_fasync extern void __kill_fasync ( s#fasync_struct * , int , int ) 
kill_fasync extern void kill_fasync ( s#fasync_struct * * , int , int ) 

/* fs/file.o */
get_unused_fd extern int get_unused_fd ( void ) 

/* fs/file_table.o */
get_max_files extern int get_max_files ( void ) 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##posix_acl
s##mnt_namespace
get_empty_filp extern s#file * get_empty_filp ( void ) 
alloc_file extern s#file * alloc_file ( s#vfsmount * , s#dentry * , t#fmode_t , const s#file_operations * ) 
init_file extern int init_file ( s#file * , s#vfsmount * , s#dentry * , t#fmode_t , const s#file_operations * ) 
fput extern void fput ( s#file * ) 
drop_file_write_access extern void drop_file_write_access ( s#file * ) 
fget extern s#file * fget ( unsigned int ) 

/* fs/filesystems.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##backing_dev_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##hd_struct
s##gendisk
s##cdev
s##posix_acl
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
register_filesystem extern int register_filesystem ( s#file_system_type * ) 
unregister_filesystem extern int unregister_filesystem ( s#file_system_type * ) 
get_fs_type extern s#file_system_type * get_fs_type ( const char * ) 

/* fs/fs-writeback.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_geometry
s##blk_trace
s##timer_rand_state
s##mtd_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
__mark_inode_dirty extern void __mark_inode_dirty ( s#inode * , int ) 
writeback_inodes_sb void writeback_inodes_sb ( s#super_block * ) 
sync_inodes_sb void sync_inodes_sb ( s#super_block * ) 
write_inode_now extern int write_inode_now ( s#inode * , int ) 
sync_inode int sync_inode ( s#inode * , s#writeback_control * ) 
generic_osync_inode int generic_osync_inode ( s#inode * , s#address_space * , int ) 

/* fs/fs_struct.o */
unshare_fs_struct extern int unshare_fs_struct ( void ) 
current_umask extern int current_umask ( void ) 

/* fs/fscache/cache.o */
fscache_cache_cleared_wq extern t#wait_queue_head_t fscache_cache_cleared_wq 
e#fscache_object_state enum fscache_object_state { FSCACHE_OBJECT_INIT , FSCACHE_OBJECT_LOOKING_UP , FSCACHE_OBJECT_CREATING , FSCACHE_OBJECT_AVAILABLE , FSCACHE_OBJECT_ACTIVE , FSCACHE_OBJECT_UPDATING , FSCACHE_OBJECT_DYING , FSCACHE_OBJECT_LC_DYING , FSCACHE_OBJECT_ABORT_INIT , FSCACHE_OBJECT_RELEASING , FSCACHE_OBJECT_RECYCLING , FSCACHE_OBJECT_WITHDRAWING , FSCACHE_OBJECT_DEAD , FSCACHE_OBJECT__NSTATES } 
s#fscache_cache_tag struct fscache_cache_tag { s#list_head link ; s#fscache_cache * cache ; unsigned long flags ; t#atomic_t usage ; char name [ 0 ] ; } 
e#fscache_checkaux enum fscache_checkaux { FSCACHE_CHECKAUX_OKAY , FSCACHE_CHECKAUX_NEEDS_UPDATE , FSCACHE_CHECKAUX_OBSOLETE , } 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##array_cache
s##kmem_list3
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s#pagevec struct pagevec { unsigned long nr ; unsigned long cold ; s#page * pages [ 14 ] ; } 
s#fscache_cookie_def struct fscache_cookie_def { char name [ 16 ] ; t#uint8_t type ; s#fscache_cache_tag * ( * select_cache ) ( const void * , const void * ) ; t#uint16_t ( * get_key ) ( const void * , void * , t#uint16_t ) ; void ( * get_attr ) ( const void * , t#uint64_t * ) ; t#uint16_t ( * get_aux ) ( const void * , void * , t#uint16_t ) ; e#fscache_checkaux ( * check_aux ) ( void * , const void * , t#uint16_t ) ; void ( * get_context ) ( void * , void * ) ; void ( * put_context ) ( void * , void * ) ; void ( * mark_pages_cached ) ( void * , s#address_space * , s#pagevec * ) ; void ( * now_uncached ) ( void * ) ; } 
s#fscache_cookie struct fscache_cookie { t#atomic_t usage ; t#atomic_t n_children ; t#spinlock_t lock ; t#spinlock_t stores_lock ; s#hlist_head backing_objects ; const s#fscache_cookie_def * def ; s#fscache_cookie * parent ; void * netfs_data ; s#radix_tree_root stores ; unsigned long flags ; } 
s#slow_work_ops struct slow_work_ops { s#module * owner ; int ( * get_ref ) ( s#slow_work * ) ; void ( * put_ref ) ( s#slow_work * ) ; void ( * execute ) ( s#slow_work * ) ; void ( * desc ) ( s#slow_work * , s#seq_file * ) ; } 
s#slow_work struct slow_work { s#module * owner ; unsigned long flags ; const s#slow_work_ops * ops ; s#list_head link ; s#timespec mark ; } 
s#fscache_object struct fscache_object { e#fscache_object_state state ; int debug_id ; int n_children ; int n_ops ; int n_obj_ops ; int n_in_progress ; int n_exclusive ; t#atomic_t n_reads ; t#spinlock_t lock ; unsigned long lookup_jif ; unsigned long event_mask ; unsigned long events ; unsigned long flags ; s#list_head cache_link ; s#hlist_node cookie_link ; s#fscache_cache * cache ; s#fscache_cookie * cookie ; s#fscache_object * parent ; s#slow_work work ; s#list_head dependents ; s#list_head dep_link ; s#list_head pending_ops ; s#rb_node objlist_link ; unsigned long store_limit ; t#loff_t store_limit_l ; } 
t#fscache_operation_processor_t typedef void ( * fscache_operation_processor_t ) ( s#fscache_operation * ) 
t#fscache_operation_release_t typedef void ( * fscache_operation_release_t ) ( s#fscache_operation * ) 
s#fscache_operation struct fscache_operation { union { s#work_struct fast_work ; s#slow_work slow_work ; } ; s#list_head pend_link ; s#fscache_object * object ; unsigned long flags ; t#atomic_t usage ; unsigned debug_id ; t#fscache_operation_processor_t processor ; t#fscache_operation_release_t release ; } 
t#fscache_rw_complete_t typedef void ( * fscache_rw_complete_t ) ( s#page * , void * , int ) 
s#fscache_retrieval struct fscache_retrieval { s#fscache_operation op ; s#address_space * mapping ; t#fscache_rw_complete_t end_io_func ; void * context ; s#list_head to_do ; unsigned long start_time ; } 
t#fscache_page_retrieval_func_t typedef int ( * fscache_page_retrieval_func_t ) ( s#fscache_retrieval * , s#page * , t#gfp_t ) 
t#fscache_pages_retrieval_func_t typedef int ( * fscache_pages_retrieval_func_t ) ( s#fscache_retrieval * , s#list_head * , unsigned * , t#gfp_t ) 
s#fscache_storage struct fscache_storage { s#fscache_operation op ; unsigned long store_limit ; } 
s#fscache_cache_ops struct fscache_cache_ops { const char * name ; s#fscache_object * ( * alloc_object ) ( s#fscache_cache * , s#fscache_cookie * ) ; int ( * lookup_object ) ( s#fscache_object * ) ; void ( * lookup_complete ) ( s#fscache_object * ) ; s#fscache_object * ( * grab_object ) ( s#fscache_object * ) ; int ( * pin_object ) ( s#fscache_object * ) ; void ( * unpin_object ) ( s#fscache_object * ) ; void ( * update_object ) ( s#fscache_object * ) ; void ( * drop_object ) ( s#fscache_object * ) ; void ( * put_object ) ( s#fscache_object * ) ; void ( * sync_cache ) ( s#fscache_cache * ) ; int ( * attr_changed ) ( s#fscache_object * ) ; int ( * reserve_space ) ( s#fscache_object * , t#loff_t ) ; t#fscache_page_retrieval_func_t read_or_alloc_page ; t#fscache_pages_retrieval_func_t read_or_alloc_pages ; t#fscache_page_retrieval_func_t allocate_page ; t#fscache_pages_retrieval_func_t allocate_pages ; int ( * write_page ) ( s#fscache_storage * , s#page * ) ; void ( * uncache_page ) ( s#fscache_object * , s#page * ) ; void ( * dissociate_pages ) ( s#fscache_cache * ) ; } 
s#fscache_cache struct fscache_cache { const s#fscache_cache_ops * ops ; s#fscache_cache_tag * tag ; s#kobject * kobj ; s#list_head link ; t#size_t max_index_size ; char identifier [ 36 ] ; s#work_struct op_gc ; s#list_head object_list ; s#list_head op_gc_list ; t#spinlock_t object_list_lock ; t#spinlock_t op_gc_list_lock ; t#atomic_t object_count ; s#fscache_object * fsdef ; unsigned long flags ; } 
fscache_init_cache extern void fscache_init_cache ( s#fscache_cache * , const s#fscache_cache_ops * , const char * , ... ) 
fscache_add_cache extern int fscache_add_cache ( s#fscache_cache * , s#fscache_object * , const char * ) 
fscache_io_error extern void fscache_io_error ( s#fscache_cache * ) 
fscache_withdraw_cache extern void fscache_withdraw_cache ( s#fscache_cache * ) 

/* fs/fscache/cookie.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
__fscache_acquire_cookie extern s#fscache_cookie * __fscache_acquire_cookie ( s#fscache_cookie * , const s#fscache_cookie_def * , void * ) 
__fscache_update_cookie extern void __fscache_update_cookie ( s#fscache_cookie * ) 
__fscache_relinquish_cookie extern void __fscache_relinquish_cookie ( s#fscache_cookie * , int ) 

/* fs/fscache/fsdef.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
fscache_fsdef_index extern s#fscache_cookie fscache_fsdef_index 

/* fs/fscache/main.o */
fscache_wait_bit extern int fscache_wait_bit ( void * ) 
fscache_wait_bit_interruptible extern int fscache_wait_bit_interruptible ( void * ) 

/* fs/fscache/netfs.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s#fscache_netfs struct fscache_netfs { t#uint32_t version ; const char * name ; s#fscache_cookie * primary_index ; s#list_head link ; } 
__fscache_register_netfs extern int __fscache_register_netfs ( s#fscache_netfs * ) 
__fscache_unregister_netfs extern void __fscache_unregister_netfs ( s#fscache_netfs * ) 

/* fs/fscache/object.o */
fscache_object_states extern const char * fscache_object_states [ ] 
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
fscache_object_slow_work_ops extern const s#slow_work_ops fscache_object_slow_work_ops 
fscache_object_lookup_negative extern void fscache_object_lookup_negative ( s#fscache_object * ) 
fscache_obtained_object extern void fscache_obtained_object ( s#fscache_object * ) 
fscache_check_aux extern e#fscache_checkaux fscache_check_aux ( s#fscache_object * , const void * , t#uint16_t ) 

/* fs/fscache/object-list.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##array_cache
s##kmem_list3
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
fscache_object_destroy extern void fscache_object_destroy ( s#fscache_object * ) 

/* fs/fscache/operation.o */
fscache_op_debug_id extern t#atomic_t fscache_op_debug_id 
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
fscache_enqueue_operation extern void fscache_enqueue_operation ( s#fscache_operation * ) 
fscache_put_operation extern void fscache_put_operation ( s#fscache_operation * ) 

/* fs/fscache/page.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
__fscache_check_page_write extern t#bool __fscache_check_page_write ( s#fscache_cookie * , s#page * ) 
__fscache_wait_on_page_write extern void __fscache_wait_on_page_write ( s#fscache_cookie * , s#page * ) 
__fscache_maybe_release_page extern t#bool __fscache_maybe_release_page ( s#fscache_cookie * , s#page * , t#gfp_t ) 
__fscache_attr_changed extern int __fscache_attr_changed ( s#fscache_cookie * ) 
__fscache_read_or_alloc_page extern int __fscache_read_or_alloc_page ( s#fscache_cookie * , s#page * , t#fscache_rw_complete_t , void * , t#gfp_t ) 
__fscache_read_or_alloc_pages extern int __fscache_read_or_alloc_pages ( s#fscache_cookie * , s#address_space * , s#list_head * , unsigned * , t#fscache_rw_complete_t , void * , t#gfp_t ) 
__fscache_alloc_page extern int __fscache_alloc_page ( s#fscache_cookie * , s#page * , t#gfp_t ) 
__fscache_write_page extern int __fscache_write_page ( s#fscache_cookie * , s#page * , t#gfp_t ) 
__fscache_uncache_page extern void __fscache_uncache_page ( s#fscache_cookie * , s#page * ) 
fscache_mark_pages_cached extern void fscache_mark_pages_cached ( s#fscache_retrieval * , s#pagevec * ) 

/* fs/fuse/dev.o */
e#fuse_req_state enum fuse_req_state { FUSE_REQ_INIT = 0 , FUSE_REQ_PENDING , FUSE_REQ_READING , FUSE_REQ_SENT , FUSE_REQ_WRITING , FUSE_REQ_FINISHED } 
s#fuse_in_header struct fuse_in_header { t#__u32 len ; t#__u32 opcode ; t#__u64 unique ; t#__u64 nodeid ; t#__u32 uid ; t#__u32 gid ; t#__u32 pid ; t#__u32 padding ; } 
s#fuse_in_arg struct fuse_in_arg { unsigned size ; const void * value ; } 
s#fuse_in struct fuse_in { s#fuse_in_header h ; unsigned argpages : 1 ; unsigned numargs ; s#fuse_in_arg args [ 3 ] ; } 
s#fuse_out_header struct fuse_out_header { t#__u32 len ; t#__s32 error ; t#__u64 unique ; } 
s#fuse_arg struct fuse_arg { unsigned size ; void * value ; } 
s#fuse_out struct fuse_out { s#fuse_out_header h ; unsigned argvar : 1 ; unsigned argpages : 1 ; unsigned page_zeroing : 1 ; unsigned numargs ; s#fuse_arg args [ 3 ] ; } 
s#fuse_forget_in struct fuse_forget_in { t#__u64 nlookup ; } 
s#fuse_release_in struct fuse_release_in { t#__u64 fh ; t#__u32 flags ; t#__u32 release_flags ; t#__u64 lock_owner ; } 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##device
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##cdev
s##posix_acl
s##mnt_namespace
s#fuse_init_in struct fuse_init_in { t#__u32 major ; t#__u32 minor ; t#__u32 max_readahead ; t#__u32 flags ; } 
s#fuse_init_out struct fuse_init_out { t#__u32 major ; t#__u32 minor ; t#__u32 max_readahead ; t#__u32 flags ; t#__u16 max_background ; t#__u16 congestion_threshold ; t#__u32 max_write ; } 
s#cuse_init_in struct cuse_init_in { t#__u32 major ; t#__u32 minor ; t#__u32 unused ; t#__u32 flags ; } 
s#cuse_init_out struct cuse_init_out { t#__u32 major ; t#__u32 minor ; t#__u32 unused ; t#__u32 flags ; t#__u32 max_read ; t#__u32 max_write ; t#__u32 dev_major ; t#__u32 dev_minor ; t#__u32 spare [ 10 ] ; } 
s#fuse_read_in struct fuse_read_in { t#__u64 fh ; t#__u64 offset ; t#__u32 size ; t#__u32 read_flags ; t#__u64 lock_owner ; t#__u32 flags ; t#__u32 padding ; } 
s#fuse_write_in struct fuse_write_in { t#__u64 fh ; t#__u64 offset ; t#__u32 size ; t#__u32 write_flags ; t#__u64 lock_owner ; t#__u32 flags ; t#__u32 padding ; } 
s#fuse_write_out struct fuse_write_out { t#__u32 size ; t#__u32 padding ; } 
s#fuse_file_lock struct fuse_file_lock { t#__u64 start ; t#__u64 end ; t#__u32 type ; t#__u32 pid ; } 
s#fuse_lk_in struct fuse_lk_in { t#__u64 fh ; t#__u64 owner ; s#fuse_file_lock lk ; t#__u32 lk_flags ; t#__u32 padding ; } 
s#fuse_conn struct fuse_conn { t#spinlock_t lock ; s#mutex inst_mutex ; t#atomic_t count ; t#uid_t user_id ; t#gid_t group_id ; unsigned flags ; unsigned max_read ; unsigned max_write ; t#wait_queue_head_t waitq ; s#list_head pending ; s#list_head processing ; s#list_head io ; t#u64 khctr ; s#rb_root polled_files ; unsigned max_background ; unsigned congestion_threshold ; unsigned num_background ; unsigned active_background ; s#list_head bg_queue ; s#list_head interrupts ; int blocked ; t#wait_queue_head_t blocked_waitq ; t#wait_queue_head_t reserved_req_waitq ; t#u64 reqctr ; unsigned connected ; unsigned conn_error : 1 ; unsigned conn_init : 1 ; unsigned async_read : 1 ; unsigned atomic_o_trunc : 1 ; unsigned export_support : 1 ; unsigned bdi_initialized : 1 ; unsigned no_fsync : 1 ; unsigned no_fsyncdir : 1 ; unsigned no_flush : 1 ; unsigned no_setxattr : 1 ; unsigned no_getxattr : 1 ; unsigned no_listxattr : 1 ; unsigned no_removexattr : 1 ; unsigned no_lock : 1 ; unsigned no_access : 1 ; unsigned no_create : 1 ; unsigned no_interrupt : 1 ; unsigned no_bmap : 1 ; unsigned no_poll : 1 ; unsigned big_writes : 1 ; unsigned dont_mask : 1 ; t#atomic_t num_waiting ; unsigned minor ; s#backing_dev_info bdi ; s#list_head entry ; t#dev_t dev ; s#dentry * ctl_dentry [ 5 ] ; int ctl_ndents ; s#fasync_struct * fasync ; t#u32 scramble_key [ 4 ] ; s#fuse_req * destroy_req ; t#u64 attr_version ; void ( * release ) ( s#fuse_conn * ) ; s#super_block * sb ; s#rw_semaphore killsb ; } 
s#fuse_file struct fuse_file { s#fuse_conn * fc ; s#fuse_req * reserved_req ; t#u64 kh ; t#u64 fh ; t#u64 nodeid ; t#atomic_t count ; t#u32 open_flags ; s#list_head write_entry ; s#rb_node polled_node ; t#wait_queue_head_t poll_wait ; } 
s#fuse_req struct fuse_req { s#list_head list ; s#list_head intr_entry ; t#atomic_t count ; t#u64 intr_unique ; unsigned isreply : 1 ; unsigned force : 1 ; unsigned aborted : 1 ; unsigned background : 1 ; unsigned interrupted : 1 ; unsigned locked : 1 ; unsigned waiting : 1 ; e#fuse_req_state state ; s#fuse_in in ; s#fuse_out out ; t#wait_queue_head_t waitq ; union { s#fuse_forget_in forget_in ; struct { s#fuse_release_in in ; s#path path ; } release ; s#fuse_init_in init_in ; s#fuse_init_out init_out ; s#cuse_init_in cuse_init_in ; s#cuse_init_out cuse_init_out ; struct { s#fuse_read_in in ; t#u64 attr_ver ; } read ; struct { s#fuse_write_in in ; s#fuse_write_out out ; } write ; s#fuse_lk_in lk_in ; } misc ; s#page * pages [ 32 ] ; unsigned num_pages ; unsigned page_offset ; s#fuse_file * ff ; s#inode * inode ; s#list_head writepages_entry ; void ( * end ) ( s#fuse_conn * , s#fuse_req * ) ; s#file * stolen_file ; } 
fuse_request_alloc s#fuse_req * fuse_request_alloc ( void ) 
fuse_get_req s#fuse_req * fuse_get_req ( s#fuse_conn * ) 
fuse_put_request void fuse_put_request ( s#fuse_conn * , s#fuse_req * ) 
fuse_request_send void fuse_request_send ( s#fuse_conn * , s#fuse_req * ) 
fuse_request_send_background void fuse_request_send_background ( s#fuse_conn * , s#fuse_req * ) 
fuse_abort_conn void fuse_abort_conn ( s#fuse_conn * ) 
fuse_dev_release int fuse_dev_release ( s#inode * , s#file * ) 
fuse_dev_operations extern const s#file_operations fuse_dev_operations 

/* fs/fuse/file.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##mnt_namespace
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##device
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
fuse_do_open int fuse_do_open ( s#fuse_conn * , t#u64 , s#file * , t#bool ) 
fuse_sync_release void fuse_sync_release ( s#fuse_file * , int ) 
fuse_direct_io t#ssize_t fuse_direct_io ( s#file * , const char * , t#size_t , t#loff_t * , int ) 
fuse_do_ioctl long fuse_do_ioctl ( s#file * , unsigned int , unsigned long , unsigned int ) 
t#poll_table typedef s#poll_table_struct poll_table 
fuse_file_poll unsigned fuse_file_poll ( s#file * , t#poll_table * ) 

/* fs/fuse/inode.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##mnt_namespace
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##xattr_handler
s##hd_struct
s##gendisk
s##device
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
fuse_conn_kill void fuse_conn_kill ( s#fuse_conn * ) 
fuse_conn_init void fuse_conn_init ( s#fuse_conn * ) 
fuse_conn_put void fuse_conn_put ( s#fuse_conn * ) 
fuse_conn_get s#fuse_conn * fuse_conn_get ( s#fuse_conn * ) 

/* fs/inode.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##device
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##hd_struct
s##gendisk
s##mnt_namespace
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##mtd_info
inode_init_always extern int inode_init_always ( s#super_block * , s#inode * ) 
__destroy_inode extern void __destroy_inode ( s#inode * ) 
inode_init_once extern void inode_init_once ( s#inode * ) 
clear_inode extern void clear_inode ( s#inode * ) 
invalidate_inodes extern int invalidate_inodes ( s#super_block * ) 
inode_add_to_lists extern void inode_add_to_lists ( s#super_block * , s#inode * ) 
new_inode extern s#inode * new_inode ( s#super_block * ) 
unlock_new_inode extern void unlock_new_inode ( s#inode * ) 
iunique extern t#ino_t iunique ( s#super_block * , t#ino_t ) 
igrab extern s#inode * igrab ( s#inode * ) 
ilookup5_nowait extern s#inode * ilookup5_nowait ( s#super_block * , unsigned long , int ( * ) ( s#inode * , void * ) , void * ) 
ilookup5 extern s#inode * ilookup5 ( s#super_block * , unsigned long , int ( * ) ( s#inode * , void * ) , void * ) 
ilookup extern s#inode * ilookup ( s#super_block * , unsigned long ) 
iget5_locked extern s#inode * iget5_locked ( s#super_block * , unsigned long , int ( * ) ( s#inode * , void * ) , int ( * ) ( s#inode * , void * ) , void * ) 
iget_locked extern s#inode * iget_locked ( s#super_block * , unsigned long ) 
insert_inode_locked extern int insert_inode_locked ( s#inode * ) 
insert_inode_locked4 extern int insert_inode_locked4 ( s#inode * , unsigned long , int ( * ) ( s#inode * , void * ) , void * ) 
__insert_inode_hash extern void __insert_inode_hash ( s#inode * , unsigned long ) 
remove_inode_hash extern void remove_inode_hash ( s#inode * ) 
generic_delete_inode extern void generic_delete_inode ( s#inode * ) 
generic_detach_inode extern int generic_detach_inode ( s#inode * ) 
generic_drop_inode extern void generic_drop_inode ( s#inode * ) 
iput extern void iput ( s#inode * ) 
bmap extern t#sector_t bmap ( s#inode * , t#sector_t ) 
touch_atime extern void touch_atime ( s#vfsmount * , s#dentry * ) 
file_update_time extern void file_update_time ( s#file * ) 
inode_needs_sync extern int inode_needs_sync ( s#inode * ) 
inode_wait int inode_wait ( void * ) 
init_special_inode extern void init_special_inode ( s#inode * , t#umode_t , t#dev_t ) 

/* fs/ioctl.o */
fiemap_fill_next_extent int fiemap_fill_next_extent ( s#fiemap_extent_info * , t#u64 , t#u64 , t#u64 , t#u32 ) 
fiemap_check_flags int fiemap_check_flags ( s#fiemap_extent_info * , t#u32 ) 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##backing_dev_info
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##nameidata
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
__generic_block_fiemap extern int __generic_block_fiemap ( s#inode * , s#fiemap_extent_info * , t#u64 , t#u64 , t#get_block_t * ) 
generic_block_fiemap extern int generic_block_fiemap ( s#inode * , s#fiemap_extent_info * , t#u64 , t#u64 , t#get_block_t * ) 

/* fs/ioprio.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##array_cache
s##kmem_list3
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##timer_rand_state
s##mtd_info
s##cdev
s##posix_acl
s##bts_context
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
set_task_ioprio extern int set_task_ioprio ( s#task_struct * , int ) 

/* fs/jbd/journal.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s#journal_header_s struct journal_header_s { t#__be32 h_magic ; t#__be32 h_blocktype ; t#__be32 h_sequence ; } 
t#journal_header_t typedef s#journal_header_s journal_header_t 
s#journal_superblock_s struct journal_superblock_s { t#journal_header_t s_header ; t#__be32 s_blocksize ; t#__be32 s_maxlen ; t#__be32 s_first ; t#__be32 s_sequence ; t#__be32 s_start ; t#__be32 s_errno ; t#__be32 s_feature_compat ; t#__be32 s_feature_incompat ; t#__be32 s_feature_ro_compat ; t#__u8 s_uuid [ 16 ] ; t#__be32 s_nr_users ; t#__be32 s_dynsuper ; t#__be32 s_max_transaction ; t#__be32 s_max_trans_data ; t#__u32 s_padding [ 44 ] ; t#__u8 s_users [ 16 * 48 ] ; } 
t#journal_superblock_t typedef s#journal_superblock_s journal_superblock_t 
t#tid_t typedef unsigned int tid_t 
s##jbd_revoke_table_s
s#journal_s struct journal_s { unsigned long j_flags ; int j_errno ; s#buffer_head * j_sb_buffer ; t#journal_superblock_t * j_superblock ; int j_format_version ; t#spinlock_t j_state_lock ; int j_barrier_count ; s#mutex j_barrier ; t#transaction_t * j_running_transaction ; t#transaction_t * j_committing_transaction ; t#transaction_t * j_checkpoint_transactions ; t#wait_queue_head_t j_wait_transaction_locked ; t#wait_queue_head_t j_wait_logspace ; t#wait_queue_head_t j_wait_done_commit ; t#wait_queue_head_t j_wait_checkpoint ; t#wait_queue_head_t j_wait_commit ; t#wait_queue_head_t j_wait_updates ; s#mutex j_checkpoint_mutex ; unsigned int j_head ; unsigned int j_tail ; unsigned int j_free ; unsigned int j_first ; unsigned int j_last ; s#block_device * j_dev ; int j_blocksize ; unsigned int j_blk_offset ; s#block_device * j_fs_dev ; unsigned int j_maxlen ; t#spinlock_t j_list_lock ; s#inode * j_inode ; t#tid_t j_tail_sequence ; t#tid_t j_transaction_sequence ; t#tid_t j_commit_sequence ; t#tid_t j_commit_request ; t#__u8 j_uuid [ 16 ] ; s#task_struct * j_task ; int j_max_transaction_buffers ; unsigned long j_commit_interval ; s#timer_list j_commit_timer ; t#spinlock_t j_revoke_lock ; s#jbd_revoke_table_s * j_revoke ; s#jbd_revoke_table_s * j_revoke_table [ 2 ] ; s#buffer_head * * j_wbuf ; int j_wbufsize ; t#pid_t j_last_sync_writer ; t#u64 j_average_commit_time ; void * j_private ; } 
t#journal_t typedef s#journal_s journal_t 
s##jbd2_buffer_trigger_type
s#journal_head struct journal_head { s#buffer_head * b_bh ; int b_jcount ; unsigned b_jlist ; unsigned b_modified ; char * b_frozen_data ; char * b_committed_data ; t#transaction_t * b_transaction ; t#transaction_t * b_next_transaction ; s#journal_head * b_tnext , * b_tprev ; t#transaction_t * b_cp_transaction ; s#journal_head * b_cpnext , * b_cpprev ; s#jbd2_buffer_trigger_type * b_triggers ; s#jbd2_buffer_trigger_type * b_frozen_triggers ; } 
s#transaction_s struct transaction_s { t#journal_t * t_journal ; t#tid_t t_tid ; enum { T_RUNNING , T_LOCKED , T_RUNDOWN , T_FLUSH , T_COMMIT , T_FINISHED } t_state ; unsigned int t_log_start ; int t_nr_buffers ; s#journal_head * t_reserved_list ; s#journal_head * t_locked_list ; s#journal_head * t_buffers ; s#journal_head * t_sync_datalist ; s#journal_head * t_forget ; s#journal_head * t_checkpoint_list ; s#journal_head * t_checkpoint_io_list ; s#journal_head * t_iobuf_list ; s#journal_head * t_shadow_list ; s#journal_head * t_log_list ; t#spinlock_t t_handle_lock ; int t_updates ; int t_outstanding_credits ; t#transaction_t * t_cpnext , * t_cpprev ; unsigned long t_expires ; t#ktime_t t_start_time ; int t_handle_count ; unsigned int t_synchronous_commit : 1 ; } 
t#transaction_t typedef s#transaction_s transaction_t 
s#handle_s struct handle_s { t#transaction_t * h_transaction ; int h_buffer_credits ; int h_ref ; int h_err ; unsigned int h_sync : 1 ; unsigned int h_jdata : 1 ; unsigned int h_aborted : 1 ; } 
t#handle_t typedef s#handle_s handle_t 
journal_start extern t#handle_t * journal_start ( t#journal_t * , int ) 
journal_restart extern int journal_restart ( t#handle_t * , int ) 
journal_extend extern int journal_extend ( t#handle_t * , int ) 
journal_stop extern int journal_stop ( t#handle_t * ) 
journal_lock_updates extern void journal_lock_updates ( t#journal_t * ) 
journal_unlock_updates extern void journal_unlock_updates ( t#journal_t * ) 
journal_get_write_access extern int journal_get_write_access ( t#handle_t * , s#buffer_head * ) 
journal_get_create_access extern int journal_get_create_access ( t#handle_t * , s#buffer_head * ) 
journal_get_undo_access extern int journal_get_undo_access ( t#handle_t * , s#buffer_head * ) 
journal_dirty_data extern int journal_dirty_data ( t#handle_t * , s#buffer_head * ) 
journal_dirty_metadata extern int journal_dirty_metadata ( t#handle_t * , s#buffer_head * ) 
journal_release_buffer extern void journal_release_buffer ( t#handle_t * , s#buffer_head * ) 
journal_forget extern int journal_forget ( t#handle_t * , s#buffer_head * ) 
journal_flush extern int journal_flush ( t#journal_t * ) 
journal_revoke extern int journal_revoke ( t#handle_t * , unsigned int , s#buffer_head * ) 
journal_init_dev extern t#journal_t * journal_init_dev ( s#block_device * , s#block_device * , int , int , int ) 
journal_init_inode extern t#journal_t * journal_init_inode ( s#inode * ) 
journal_update_format extern int journal_update_format ( t#journal_t * ) 
journal_check_used_features extern int journal_check_used_features ( t#journal_t * , unsigned long , unsigned long , unsigned long ) 
journal_check_available_features extern int journal_check_available_features ( t#journal_t * , unsigned long , unsigned long , unsigned long ) 
journal_set_features extern int journal_set_features ( t#journal_t * , unsigned long , unsigned long , unsigned long ) 
journal_create extern int journal_create ( t#journal_t * ) 
journal_load extern int journal_load ( t#journal_t * ) 
journal_destroy extern int journal_destroy ( t#journal_t * ) 
journal_abort extern void journal_abort ( t#journal_t * , int ) 
journal_errno extern int journal_errno ( t#journal_t * ) 
journal_ack_err extern void journal_ack_err ( t#journal_t * ) 
journal_clear_err extern int journal_clear_err ( t#journal_t * ) 
log_wait_commit int log_wait_commit ( t#journal_t * , t#tid_t ) 
log_start_commit int log_start_commit ( t#journal_t * , t#tid_t ) 
journal_start_commit int journal_start_commit ( t#journal_t * , t#tid_t * ) 
journal_force_commit_nested int journal_force_commit_nested ( t#journal_t * ) 
journal_wipe extern int journal_wipe ( t#journal_t * , int ) 
journal_blocks_per_page extern int journal_blocks_per_page ( s#inode * ) 
journal_invalidatepage extern void journal_invalidatepage ( t#journal_t * , s#page * , unsigned long ) 
journal_try_to_free_buffers extern int journal_try_to_free_buffers ( t#journal_t * , s#page * , t#gfp_t ) 
journal_force_commit extern int journal_force_commit ( t#journal_t * ) 
journal_enable_debug extern t#u8 journal_enable_debug 

/* fs/jbd2/journal.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##jbd2_revoke_table_s
s#transaction_run_stats_s struct transaction_run_stats_s { unsigned long rs_wait ; unsigned long rs_running ; unsigned long rs_locked ; unsigned long rs_flushing ; unsigned long rs_logging ; t#__u32 rs_handle_count ; t#__u32 rs_blocks ; t#__u32 rs_blocks_logged ; } 
s#transaction_stats_s struct transaction_stats_s { unsigned long ts_tid ; s#transaction_run_stats_s run ; } 
s#journal_s struct journal_s { unsigned long j_flags ; int j_errno ; s#buffer_head * j_sb_buffer ; t#journal_superblock_t * j_superblock ; int j_format_version ; t#spinlock_t j_state_lock ; int j_barrier_count ; s#mutex j_barrier ; t#transaction_t * j_running_transaction ; t#transaction_t * j_committing_transaction ; t#transaction_t * j_checkpoint_transactions ; t#wait_queue_head_t j_wait_transaction_locked ; t#wait_queue_head_t j_wait_logspace ; t#wait_queue_head_t j_wait_done_commit ; t#wait_queue_head_t j_wait_checkpoint ; t#wait_queue_head_t j_wait_commit ; t#wait_queue_head_t j_wait_updates ; s#mutex j_checkpoint_mutex ; s#buffer_head * j_chkpt_bhs [ 64 ] ; unsigned long j_head ; unsigned long j_tail ; unsigned long j_free ; unsigned long j_first ; unsigned long j_last ; s#block_device * j_dev ; int j_blocksize ; unsigned long long j_blk_offset ; char j_devname [ 32 + 24 ] ; s#block_device * j_fs_dev ; unsigned int j_maxlen ; t#spinlock_t j_list_lock ; s#inode * j_inode ; t#tid_t j_tail_sequence ; t#tid_t j_transaction_sequence ; t#tid_t j_commit_sequence ; t#tid_t j_commit_request ; t#__u8 j_uuid [ 16 ] ; s#task_struct * j_task ; int j_max_transaction_buffers ; unsigned long j_commit_interval ; s#timer_list j_commit_timer ; t#spinlock_t j_revoke_lock ; s#jbd2_revoke_table_s * j_revoke ; s#jbd2_revoke_table_s * j_revoke_table [ 2 ] ; s#buffer_head * * j_wbuf ; int j_wbufsize ; t#pid_t j_last_sync_writer ; t#u64 j_average_commit_time ; t#u32 j_min_batch_time ; t#u32 j_max_batch_time ; void ( * j_commit_callback ) ( t#journal_t * , t#transaction_t * ) ; t#spinlock_t j_history_lock ; s#proc_dir_entry * j_proc_entry ; s#transaction_stats_s j_stats ; unsigned int j_failed_commit ; void * j_private ; } 
s#jbd2_buffer_trigger_type struct jbd2_buffer_trigger_type { void ( * t_commit ) ( s#jbd2_buffer_trigger_type * , s#buffer_head * , void * , t#size_t ) ; void ( * t_abort ) ( s#jbd2_buffer_trigger_type * , s#buffer_head * ) ; } 
s#transaction_chp_stats_s struct transaction_chp_stats_s { unsigned long cs_chp_time ; t#__u32 cs_forced_to_close ; t#__u32 cs_written ; t#__u32 cs_dropped ; } 
s#transaction_s struct transaction_s { t#journal_t * t_journal ; t#tid_t t_tid ; enum { T_RUNNING , T_LOCKED , T_RUNDOWN , T_FLUSH , T_COMMIT , T_FINISHED } t_state ; unsigned long t_log_start ; int t_nr_buffers ; s#journal_head * t_reserved_list ; s#journal_head * t_buffers ; s#journal_head * t_forget ; s#journal_head * t_checkpoint_list ; s#journal_head * t_checkpoint_io_list ; s#journal_head * t_iobuf_list ; s#journal_head * t_shadow_list ; s#journal_head * t_log_list ; s#list_head t_inode_list ; t#spinlock_t t_handle_lock ; unsigned long t_max_wait ; unsigned long t_start ; s#transaction_chp_stats_s t_chp_stats ; int t_updates ; int t_outstanding_credits ; t#transaction_t * t_cpnext , * t_cpprev ; unsigned long t_expires ; t#ktime_t t_start_time ; int t_handle_count ; unsigned int t_synchronous_commit : 1 ; s#list_head t_private_list ; } 
jbd2_journal_start extern t#handle_t * jbd2_journal_start ( t#journal_t * , int ) 
jbd2_journal_restart extern int jbd2_journal_restart ( t#handle_t * , int ) 
jbd2_journal_extend extern int jbd2_journal_extend ( t#handle_t * , int ) 
jbd2_journal_stop extern int jbd2_journal_stop ( t#handle_t * ) 
jbd2_journal_lock_updates extern void jbd2_journal_lock_updates ( t#journal_t * ) 
jbd2_journal_unlock_updates extern void jbd2_journal_unlock_updates ( t#journal_t * ) 
jbd2_journal_get_write_access extern int jbd2_journal_get_write_access ( t#handle_t * , s#buffer_head * ) 
jbd2_journal_get_create_access extern int jbd2_journal_get_create_access ( t#handle_t * , s#buffer_head * ) 
jbd2_journal_get_undo_access extern int jbd2_journal_get_undo_access ( t#handle_t * , s#buffer_head * ) 
jbd2_journal_set_triggers void jbd2_journal_set_triggers ( s#buffer_head * , s#jbd2_buffer_trigger_type * ) 
jbd2_journal_dirty_metadata extern int jbd2_journal_dirty_metadata ( t#handle_t * , s#buffer_head * ) 
jbd2_journal_release_buffer extern void jbd2_journal_release_buffer ( t#handle_t * , s#buffer_head * ) 
jbd2_journal_forget extern int jbd2_journal_forget ( t#handle_t * , s#buffer_head * ) 
jbd2_journal_flush extern int jbd2_journal_flush ( t#journal_t * ) 
jbd2_journal_revoke extern int jbd2_journal_revoke ( t#handle_t * , unsigned long long , s#buffer_head * ) 
jbd2_journal_init_dev extern t#journal_t * jbd2_journal_init_dev ( s#block_device * , s#block_device * , unsigned long long , int , int ) 
jbd2_journal_init_inode extern t#journal_t * jbd2_journal_init_inode ( s#inode * ) 
jbd2_journal_update_format extern int jbd2_journal_update_format ( t#journal_t * ) 
jbd2_journal_check_used_features extern int jbd2_journal_check_used_features ( t#journal_t * , unsigned long , unsigned long , unsigned long ) 
jbd2_journal_check_available_features extern int jbd2_journal_check_available_features ( t#journal_t * , unsigned long , unsigned long , unsigned long ) 
jbd2_journal_set_features extern int jbd2_journal_set_features ( t#journal_t * , unsigned long , unsigned long , unsigned long ) 
jbd2_journal_load extern int jbd2_journal_load ( t#journal_t * ) 
jbd2_journal_destroy extern int jbd2_journal_destroy ( t#journal_t * ) 
jbd2_journal_abort extern void jbd2_journal_abort ( t#journal_t * , int ) 
jbd2_journal_errno extern int jbd2_journal_errno ( t#journal_t * ) 
jbd2_journal_ack_err extern void jbd2_journal_ack_err ( t#journal_t * ) 
jbd2_journal_clear_err extern int jbd2_journal_clear_err ( t#journal_t * ) 
jbd2_log_wait_commit int jbd2_log_wait_commit ( t#journal_t * , t#tid_t ) 
jbd2_log_start_commit int jbd2_log_start_commit ( t#journal_t * , t#tid_t ) 
jbd2_journal_start_commit int jbd2_journal_start_commit ( t#journal_t * , t#tid_t * ) 
jbd2_journal_force_commit_nested int jbd2_journal_force_commit_nested ( t#journal_t * ) 
jbd2_journal_wipe extern int jbd2_journal_wipe ( t#journal_t * , int ) 
jbd2_journal_blocks_per_page extern int jbd2_journal_blocks_per_page ( s#inode * ) 
jbd2_journal_invalidatepage extern void jbd2_journal_invalidatepage ( t#journal_t * , s#page * , unsigned long ) 
jbd2_journal_try_to_free_buffers extern int jbd2_journal_try_to_free_buffers ( t#journal_t * , s#page * , t#gfp_t ) 
jbd2_journal_force_commit extern int jbd2_journal_force_commit ( t#journal_t * ) 
s#jbd2_inode struct jbd2_inode { t#transaction_t * i_transaction ; t#transaction_t * i_next_transaction ; s#list_head i_list ; s#inode * i_vfs_inode ; unsigned int i_flags ; } 
jbd2_journal_file_inode extern int jbd2_journal_file_inode ( t#handle_t * , s#jbd2_inode * ) 
jbd2_journal_init_jbd_inode extern void jbd2_journal_init_jbd_inode ( s#jbd2_inode * , s#inode * ) 
jbd2_journal_release_jbd_inode extern void jbd2_journal_release_jbd_inode ( t#journal_t * , s#jbd2_inode * ) 
jbd2_journal_begin_ordered_truncate extern int jbd2_journal_begin_ordered_truncate ( t#journal_t * , s#jbd2_inode * , t#loff_t ) 
jbd2_journal_clear_features extern void jbd2_journal_clear_features ( t#journal_t * , unsigned long , unsigned long , unsigned long ) 
jbd2_journal_enable_debug extern t#u8 jbd2_journal_enable_debug 
jbd2_dev_to_name extern const char * jbd2_dev_to_name ( t#dev_t ) 

/* fs/libfs.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##backing_dev_info
s##mnt_namespace
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##cdev
s##posix_acl
generic_fh_to_dentry extern s#dentry * generic_fh_to_dentry ( s#super_block * , s#fid * , int , int , s#inode * ( * ) ( s#super_block * , t#u64 , t#u32 ) ) 
generic_fh_to_parent extern s#dentry * generic_fh_to_parent ( s#super_block * , s#fid * , int , int , s#inode * ( * ) ( s#super_block * , t#u64 , t#u32 ) ) 
simple_fsync extern int simple_fsync ( s#file * , s#dentry * , int ) 
dcache_dir_close extern int dcache_dir_close ( s#inode * , s#file * ) 
dcache_dir_lseek extern t#loff_t dcache_dir_lseek ( s#file * , t#loff_t , int ) 
dcache_dir_open extern int dcache_dir_open ( s#inode * , s#file * ) 
dcache_readdir extern int dcache_readdir ( s#file * , void * , t#filldir_t ) 
generic_read_dir extern t#ssize_t generic_read_dir ( s#file * , char * , t#size_t , t#loff_t * ) 
get_sb_pseudo extern int get_sb_pseudo ( s#file_system_type * , char * , const s#super_operations * , unsigned long , s#vfsmount * ) 
simple_write_begin extern int simple_write_begin ( s#file * , s#address_space * , t#loff_t , unsigned , unsigned , s#page * * , void * * ) 
simple_write_end extern int simple_write_end ( s#file * , s#address_space * , t#loff_t , unsigned , unsigned , s#page * , void * ) 
simple_dir_inode_operations extern const s#inode_operations simple_dir_inode_operations 
simple_dir_operations extern const s#file_operations simple_dir_operations 
simple_empty extern int simple_empty ( s#dentry * ) 
d_alloc_name s#dentry * d_alloc_name ( s#dentry * , const char * ) 
s#tree_descr struct tree_descr { char * name ; const s#file_operations * ops ; int mode ; } 
simple_fill_super extern int simple_fill_super ( s#super_block * , int , s#tree_descr * ) 
simple_getattr extern int simple_getattr ( s#vfsmount * , s#dentry * , s#kstat * ) 
simple_link extern int simple_link ( s#dentry * , s#inode * , s#dentry * ) 
simple_lookup extern s#dentry * simple_lookup ( s#inode * , s#dentry * , s#nameidata * ) 
simple_pin_fs extern int simple_pin_fs ( s#file_system_type * , s#vfsmount * * , int * ) 
simple_readpage extern int simple_readpage ( s#file * , s#page * ) 
simple_release_fs extern void simple_release_fs ( s#vfsmount * * , int * ) 
simple_rename extern int simple_rename ( s#inode * , s#dentry * , s#inode * , s#dentry * ) 
simple_rmdir extern int simple_rmdir ( s#inode * , s#dentry * ) 
simple_statfs extern int simple_statfs ( s#dentry * , s#kstatfs * ) 
simple_sync_file extern int simple_sync_file ( s#file * , s#dentry * , int ) 
simple_unlink extern int simple_unlink ( s#inode * , s#dentry * ) 
simple_read_from_buffer extern t#ssize_t simple_read_from_buffer ( void * , t#size_t , t#loff_t * , const void * , t#size_t ) 
memory_read_from_buffer extern t#ssize_t memory_read_from_buffer ( void * , t#size_t , t#loff_t * , const void * , t#size_t ) 
simple_transaction_set void simple_transaction_set ( s#file * , t#size_t ) 
simple_transaction_get char * simple_transaction_get ( s#file * , const char * , t#size_t ) 
simple_transaction_read t#ssize_t simple_transaction_read ( s#file * , char * , t#size_t , t#loff_t * ) 
simple_transaction_release int simple_transaction_release ( s#inode * , s#file * ) 
simple_attr_open int simple_attr_open ( s#inode * , s#file * , int ( * ) ( void * , t#u64 * ) , int ( * ) ( void * , t#u64 ) , const char * ) 
simple_attr_release int simple_attr_release ( s#inode * , s#file * ) 
simple_attr_read t#ssize_t simple_attr_read ( s#file * , char * , t#size_t , t#loff_t * ) 
simple_attr_write t#ssize_t simple_attr_write ( s#file * , const char * , t#size_t , t#loff_t * ) 

/* fs/lockd/clntlock.o */
s#__kernel_sockaddr_storage struct __kernel_sockaddr_storage { unsigned short ss_family ; char __data [ 128 - sizeof ( unsigned short ) ] ; } 
s#kvec struct kvec { void * iov_base ; t#size_t iov_len ; } 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s#nlm_lockowner struct nlm_lockowner { s#list_head list ; t#atomic_t count ; s#nlm_host * host ; t#fl_owner_t owner ; t#uint32_t pid ; } 
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##fs_struct
s##ipc_namespace
s##mnt_namespace
s##array_cache
s##kmem_list3
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_state
s##rtable
s##rt6_info
s##dn_route
s##xfrm_policy
s##sec_path
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##rt6_statistics
s##fib6_table
s##ip_conntrack_stat
s##net_generic
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##cdev
s##radix_tree_node
s#xdr_buf struct xdr_buf { s#kvec head [ 1 ] , tail [ 1 ] ; s#page * * pages ; unsigned int page_base , page_len , flags ; unsigned int buflen , len ; } 
s#rpc_rqst struct rpc_rqst { s#rpc_xprt * rq_xprt ; s#xdr_buf rq_snd_buf ; s#xdr_buf rq_rcv_buf ; s#rpc_task * rq_task ; t#__be32 rq_xid ; int rq_cong ; int rq_reply_bytes_recvd ; t#u32 rq_seqno ; int rq_enc_pages_num ; s#page * * rq_enc_pages ; void ( * rq_release_snd_buf ) ( s#rpc_rqst * ) ; s#list_head rq_list ; t#__u32 * rq_buffer ; t#size_t rq_callsize , rq_rcvsize ; s#xdr_buf rq_private_buf ; unsigned long rq_majortimeo ; unsigned long rq_timeout ; unsigned int rq_retries ; unsigned int rq_connect_cookie ; t#u32 rq_bytes_sent ; unsigned long rq_xtime ; int rq_ntrans ; } 
t#kxdrproc_t typedef int ( * kxdrproc_t ) ( void * , t#__be32 * , void * ) 
s#rpc_procinfo struct rpc_procinfo { t#u32 p_proc ; t#kxdrproc_t p_encode ; t#kxdrproc_t p_decode ; unsigned int p_arglen ; unsigned int p_replen ; unsigned int p_count ; unsigned int p_timer ; t#u32 p_statidx ; char * p_name ; } 
t#rpc_authflavor_t typedef t#u32 rpc_authflavor_t 
s#auth_cred struct auth_cred { t#uid_t uid ; t#gid_t gid ; s#group_info * group_info ; unsigned char machine_cred : 1 ; } 
s#rpc_authops struct rpc_authops { s#module * owner ; t#rpc_authflavor_t au_flavor ; char * au_name ; s#rpc_auth * ( * create ) ( s#rpc_clnt * , t#rpc_authflavor_t ) ; void ( * destroy ) ( s#rpc_auth * ) ; s#rpc_cred * ( * lookup_cred ) ( s#rpc_auth * , s#auth_cred * , int ) ; s#rpc_cred * ( * crcreate ) ( s#rpc_auth * , s#auth_cred * , int ) ; } 
s#rpc_cred_cache struct rpc_cred_cache { s#hlist_head hashtable [ ( 1 << 4 ) ] ; t#spinlock_t lock ; } 
s#rpc_auth struct rpc_auth { unsigned int au_cslack ; unsigned int au_rslack ; unsigned int au_verfsize ; unsigned int au_flags ; const s#rpc_authops * au_ops ; t#rpc_authflavor_t au_flavor ; t#atomic_t au_count ; s#rpc_cred_cache * au_credcache ; } 
s#rpc_credops struct rpc_credops { const char * cr_name ; int ( * cr_init ) ( s#rpc_auth * , s#rpc_cred * ) ; void ( * crdestroy ) ( s#rpc_cred * ) ; int ( * crmatch ) ( s#auth_cred * , s#rpc_cred * , int ) ; void ( * crbind ) ( s#rpc_task * , s#rpc_cred * , int ) ; t#__be32 * ( * crmarshal ) ( s#rpc_task * , t#__be32 * ) ; int ( * crrefresh ) ( s#rpc_task * ) ; t#__be32 * ( * crvalidate ) ( s#rpc_task * , t#__be32 * ) ; int ( * crwrap_req ) ( s#rpc_task * , t#kxdrproc_t , void * , t#__be32 * , void * ) ; int ( * crunwrap_resp ) ( s#rpc_task * , t#kxdrproc_t , void * , t#__be32 * , void * ) ; } 
s#rpc_cred struct rpc_cred { s#hlist_node cr_hash ; s#list_head cr_lru ; s#rcu_head cr_rcu ; s#rpc_auth * cr_auth ; const s#rpc_credops * cr_ops ; unsigned long cr_magic ; unsigned long cr_expire ; unsigned long cr_flags ; t#atomic_t cr_count ; t#uid_t cr_uid ; } 
s#rpc_message struct rpc_message { s#rpc_procinfo * rpc_proc ; void * rpc_argp ; void * rpc_resp ; s#rpc_cred * rpc_cred ; } 
s#rpc_call_ops struct rpc_call_ops { void ( * rpc_call_prepare ) ( s#rpc_task * , void * ) ; void ( * rpc_call_done ) ( s#rpc_task * , void * ) ; void ( * rpc_release ) ( void * ) ; } 
s##workqueue_struct
s#rpc_timer struct rpc_timer { s#timer_list timer ; s#list_head list ; unsigned long expires ; } 
s#rpc_wait_queue struct rpc_wait_queue { t#spinlock_t lock ; s#list_head tasks [ ( 1 + ( 1 ) - ( - 1 ) ) ] ; t#pid_t owner ; unsigned char maxpriority ; unsigned char priority ; unsigned char count ; unsigned char nr ; unsigned short qlen ; s#rpc_timer timer_list ; const char * name ; } 
s#rpc_wait struct rpc_wait { s#list_head list ; s#list_head links ; s#list_head timer_list ; unsigned long expires ; } 
s#rpc_task struct rpc_task { unsigned long tk_magic ; t#atomic_t tk_count ; s#list_head tk_task ; s#rpc_clnt * tk_client ; s#rpc_rqst * tk_rqstp ; int tk_status ; s#rpc_message tk_msg ; t#__u8 tk_garb_retry ; t#__u8 tk_cred_retry ; void ( * tk_callback ) ( s#rpc_task * ) ; void ( * tk_action ) ( s#rpc_task * ) ; const s#rpc_call_ops * tk_ops ; void * tk_calldata ; unsigned long tk_timeout ; unsigned short tk_flags ; unsigned long tk_runstate ; s#workqueue_struct * tk_workqueue ; s#rpc_wait_queue * tk_waitqueue ; union { s#work_struct tk_work ; s#rpc_wait tk_wait ; } u ; unsigned short tk_timeouts ; t#size_t tk_bytes_sent ; unsigned long tk_start ; long tk_rtt ; t#pid_t tk_owner ; unsigned char tk_priority : 2 ; unsigned short tk_pid ; } 
s#rpc_xprt_ops struct rpc_xprt_ops { void ( * set_buffer_size ) ( s#rpc_xprt * , t#size_t , t#size_t ) ; int ( * reserve_xprt ) ( s#rpc_task * ) ; void ( * release_xprt ) ( s#rpc_xprt * , s#rpc_task * ) ; void ( * rpcbind ) ( s#rpc_task * ) ; void ( * set_port ) ( s#rpc_xprt * , unsigned short ) ; void ( * connect ) ( s#rpc_task * ) ; void * ( * buf_alloc ) ( s#rpc_task * , t#size_t ) ; void ( * buf_free ) ( void * ) ; int ( * send_request ) ( s#rpc_task * ) ; void ( * set_retrans_timeout ) ( s#rpc_task * ) ; void ( * timer ) ( s#rpc_task * ) ; void ( * release_request ) ( s#rpc_task * ) ; void ( * close ) ( s#rpc_xprt * ) ; void ( * destroy ) ( s#rpc_xprt * ) ; void ( * print_stats ) ( s#rpc_xprt * , s#seq_file * ) ; } 
s#rpc_timeout struct rpc_timeout { unsigned long to_initval , to_maxval , to_increment ; unsigned int to_retries ; unsigned char to_exponential ; } 
s##svc_xprt
s#rpc_xprt struct rpc_xprt { s#kref kref ; s#rpc_xprt_ops * ops ; const s#rpc_timeout * timeout ; s#__kernel_sockaddr_storage addr ; t#size_t addrlen ; int prot ; unsigned long cong ; unsigned long cwnd ; t#size_t max_payload ; unsigned int tsh_size ; s#rpc_wait_queue binding ; s#rpc_wait_queue sending ; s#rpc_wait_queue resend ; s#rpc_wait_queue pending ; s#rpc_wait_queue backlog ; s#list_head free ; s#rpc_rqst * slot ; unsigned int max_reqs ; unsigned long state ; unsigned char shutdown : 1 , resvport : 1 , swapper : 1 ; unsigned int bind_index ; unsigned long connect_timeout , bind_timeout , reestablish_timeout ; unsigned int connect_cookie ; s#work_struct task_cleanup ; s#timer_list timer ; unsigned long last_used , idle_timeout ; t#spinlock_t transport_lock ; t#spinlock_t reserve_lock ; t#u32 xid ; s#rpc_task * snd_task ; s#svc_xprt * bc_xprt ; s#list_head recv ; struct { unsigned long bind_count , connect_count , connect_start , connect_time , sends , recvs , bad_xids ; unsigned long long req_u , bklog_u ; } stat ; const char * address_strings [ RPC_DISPLAY_MAX ] ; } 
s#rpc_version struct rpc_version { t#u32 number ; unsigned int nrprocs ; s#rpc_procinfo * procs ; } 
s#rpc_program struct rpc_program { char * name ; t#u32 number ; unsigned int nrvers ; s#rpc_version * * version ; s#rpc_stat * stats ; char * pipe_dir_name ; } 
s#rpc_stat struct rpc_stat { s#rpc_program * program ; unsigned int netcnt , netudpcnt , nettcpcnt , nettcpconn , netreconn ; unsigned int rpccnt , rpcretrans , rpcauthrefresh , rpcgarbage ; } 
s##rpc_iostats
s#rpc_rtt struct rpc_rtt { unsigned long timeo ; unsigned long srtt [ 5 ] ; unsigned long sdrtt [ 5 ] ; int ntimeouts [ 5 ] ; } 
s#rpc_clnt struct rpc_clnt { s#kref cl_kref ; s#list_head cl_clients ; s#list_head cl_tasks ; t#spinlock_t cl_lock ; s#rpc_xprt * cl_xprt ; s#rpc_procinfo * cl_procinfo ; t#u32 cl_prog , cl_vers , cl_maxproc ; char * cl_server ; char * cl_protname ; s#rpc_auth * cl_auth ; s#rpc_stat * cl_stats ; s#rpc_iostats * cl_metrics ; unsigned int cl_softrtry : 1 , cl_discrtry : 1 , cl_autobind : 1 , cl_chatty : 1 ; s#rpc_rtt * cl_rtt ; const s#rpc_timeout * cl_timeout ; int cl_nodelen ; char cl_nodename [ 32 ] ; s#path cl_path ; s#rpc_clnt * cl_parent ; s#rpc_rtt cl_rtt_default ; s#rpc_timeout cl_timeout_default ; s#rpc_program * cl_program ; char cl_inline_name [ 32 ] ; char * cl_principal ; } 
s#nsm_private struct nsm_private { unsigned char data [ 16 ] ; } 
s#nsm_handle struct nsm_handle { s#list_head sm_link ; t#atomic_t sm_count ; char * sm_mon_name ; char * sm_name ; s#__kernel_sockaddr_storage sm_addr ; t#size_t sm_addrlen ; unsigned int sm_monitored : 1 , sm_sticky : 1 ; s#nsm_private sm_priv ; char sm_addrbuf [ ( ( 8 * 4 + 7 ) + ( 1 + 10 ) + 1 ) ] ; } 
s#nlm_host struct nlm_host { s#hlist_node h_hash ; s#__kernel_sockaddr_storage h_addr ; t#size_t h_addrlen ; s#__kernel_sockaddr_storage h_srcaddr ; s#rpc_clnt * h_rpcclnt ; char * h_name ; t#u32 h_version ; unsigned short h_proto ; unsigned short h_reclaiming : 1 , h_server : 1 , h_noresvport : 1 , h_inuse : 1 ; t#wait_queue_head_t h_gracewait ; s#rw_semaphore h_rwsem ; t#u32 h_state ; t#u32 h_nsmstate ; t#u32 h_pidcount ; t#atomic_t h_count ; s#mutex h_mutex ; unsigned long h_nextrebind ; unsigned long h_expires ; s#list_head h_lockowners ; t#spinlock_t h_lock ; s#list_head h_granted ; s#list_head h_reclaim ; s#nsm_handle * h_nsmhandle ; char * h_addrbuf ; } 
s#nlmclnt_initdata struct nlmclnt_initdata { const char * hostname ; const s#sockaddr * address ; t#size_t addrlen ; unsigned short protocol ; t#u32 nfs_version ; int noresvport ; } 
nlmclnt_init extern s#nlm_host * nlmclnt_init ( const s#nlmclnt_initdata * ) 
nlmclnt_done extern void nlmclnt_done ( s#nlm_host * ) 

/* fs/lockd/clntproc.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##fs_struct
s##ipc_namespace
s##mnt_namespace
s##array_cache
s##kmem_list3
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_state
s##rtable
s##rt6_info
s##dn_route
s##xfrm_policy
s##sec_path
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##rt6_statistics
s##fib6_table
s##ip_conntrack_stat
s##net_generic
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##cdev
s##radix_tree_node
s##workqueue_struct
s##svc_xprt
s##rpc_iostats
nlmclnt_proc extern int nlmclnt_proc ( s#nlm_host * , int , s#file_lock * ) 

/* fs/lockd/grace.o */
s#lock_manager struct lock_manager { s#list_head list ; } 
locks_start_grace void locks_start_grace ( s#lock_manager * ) 
locks_end_grace void locks_end_grace ( s#lock_manager * ) 
locks_in_grace int locks_in_grace ( void ) 

/* fs/lockd/svc.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##nameidata
s##vfsmount
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##workqueue_struct
s##rpc_iostats
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##ipc_namespace
s##mnt_namespace
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_state
s##rtable
s##rt6_info
s##dn_route
s##xfrm_policy
s##sec_path
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##rt6_statistics
s##fib6_table
s##ip_conntrack_stat
s##net_generic
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
t#svc_procfunc typedef t#__be32 ( * svc_procfunc ) ( s#svc_rqst * , void * , void * ) 
s#svc_procedure struct svc_procedure { t#svc_procfunc pc_func ; t#kxdrproc_t pc_decode ; t#kxdrproc_t pc_encode ; t#kxdrproc_t pc_release ; unsigned int pc_argsize ; unsigned int pc_ressize ; unsigned int pc_count ; unsigned int pc_cachetype ; unsigned int pc_xdrressize ; } 
s#svc_version struct svc_version { t#u32 vs_vers ; t#u32 vs_nproc ; s#svc_procedure * vs_proc ; t#u32 vs_xdrsize ; unsigned int vs_hidden : 1 ; int ( * vs_dispatch ) ( s#svc_rqst * , t#__be32 * ) ; } 
s#svc_stat struct svc_stat { s#svc_program * program ; unsigned int netcnt , netudpcnt , nettcpcnt , nettcpconn ; unsigned int rpccnt , rpcbadfmt , rpcbadauth , rpcbadclnt ; } 
s#svc_program struct svc_program { s#svc_program * pg_next ; t#u32 pg_prog ; unsigned int pg_lovers ; unsigned int pg_hivers ; unsigned int pg_nvers ; s#svc_version * * pg_vers ; char * pg_name ; char * pg_class ; s#svc_stat * pg_stats ; int ( * pg_authenticate ) ( s#svc_rqst * ) ; } 
s#svc_pool_stats struct svc_pool_stats { unsigned long packets ; unsigned long sockets_queued ; unsigned long threads_woken ; unsigned long overloads_avoided ; unsigned long threads_timedout ; } 
s#svc_pool struct svc_pool { unsigned int sp_id ; t#spinlock_t sp_lock ; s#list_head sp_threads ; s#list_head sp_sockets ; unsigned int sp_nrthreads ; s#list_head sp_all_threads ; int sp_nwaking ; s#svc_pool_stats sp_stats ; } 
t#svc_thread_fn typedef int ( * svc_thread_fn ) ( void * ) 
s#svc_serv struct svc_serv { s#svc_program * sv_program ; s#svc_stat * sv_stats ; t#spinlock_t sv_lock ; unsigned int sv_nrthreads ; unsigned int sv_maxconn ; unsigned int sv_max_payload ; unsigned int sv_max_mesg ; unsigned int sv_xdrsize ; s#list_head sv_permsocks ; s#list_head sv_tempsocks ; int sv_tmpcnt ; s#timer_list sv_temptimer ; char * sv_name ; unsigned int sv_nrpools ; s#svc_pool * sv_pools ; void ( * sv_shutdown ) ( s#svc_serv * ) ; s#module * sv_module ; t#svc_thread_fn sv_function ; } 
s#svc_xprt_ops struct svc_xprt_ops { s#svc_xprt * ( * xpo_create ) ( s#svc_serv * , s#sockaddr * , int , int ) ; s#svc_xprt * ( * xpo_accept ) ( s#svc_xprt * ) ; int ( * xpo_has_wspace ) ( s#svc_xprt * ) ; int ( * xpo_recvfrom ) ( s#svc_rqst * ) ; void ( * xpo_prep_reply_hdr ) ( s#svc_rqst * ) ; int ( * xpo_sendto ) ( s#svc_rqst * ) ; void ( * xpo_release_rqst ) ( s#svc_rqst * ) ; void ( * xpo_detach ) ( s#svc_xprt * ) ; void ( * xpo_free ) ( s#svc_xprt * ) ; } 
s#svc_xprt_class struct svc_xprt_class { const char * xcl_name ; s#module * xcl_owner ; s#svc_xprt_ops * xcl_ops ; s#list_head xcl_list ; t#u32 xcl_max_payload ; } 
s#svc_xprt struct svc_xprt { s#svc_xprt_class * xpt_class ; s#svc_xprt_ops * xpt_ops ; s#kref xpt_ref ; s#list_head xpt_list ; s#list_head xpt_ready ; unsigned long xpt_flags ; s#svc_pool * xpt_pool ; s#svc_serv * xpt_server ; t#atomic_t xpt_reserved ; s#mutex xpt_mutex ; t#spinlock_t xpt_lock ; void * xpt_auth_cache ; s#list_head xpt_deferred ; s#__kernel_sockaddr_storage xpt_local ; t#size_t xpt_locallen ; s#__kernel_sockaddr_storage xpt_remote ; t#size_t xpt_remotelen ; s#rpc_wait_queue xpt_bc_pending ; } 
s#auth_domain struct auth_domain { s#kref ref ; s#hlist_node hash ; char * name ; s#auth_ops * flavour ; } 
s#auth_ops struct auth_ops { char * name ; s#module * owner ; int flavour ; int ( * accept ) ( s#svc_rqst * , t#__be32 * ) ; int ( * release ) ( s#svc_rqst * ) ; void ( * domain_release ) ( s#auth_domain * ) ; int ( * set_client ) ( s#svc_rqst * ) ; } 
s#svc_cred struct svc_cred { t#uid_t cr_uid ; t#gid_t cr_gid ; s#group_info * cr_group_info ; } 
u#svc_addr_u union svc_addr_u { s#in_addr addr ; s#in6_addr addr6 ; } 
s#cache_head struct cache_head { s#cache_head * next ; t#time_t expiry_time ; t#time_t last_refresh ; s#kref ref ; unsigned long flags ; } 
s#cache_deferred_req struct cache_deferred_req { s#list_head hash ; s#list_head recent ; s#cache_head * item ; void * owner ; void ( * revisit ) ( s#cache_deferred_req * , int ) ; } 
s#svc_deferred_req struct svc_deferred_req { t#u32 prot ; s#svc_xprt * xprt ; s#__kernel_sockaddr_storage addr ; t#size_t addrlen ; u#svc_addr_u daddr ; s#cache_deferred_req handle ; t#size_t xprt_hlen ; int argslen ; t#__be32 args [ 0 ] ; } 
s#cache_req struct cache_req { s#cache_deferred_req * ( * defer ) ( s#cache_req * ) ; } 
s##svc_cacherep
s#nfs_fhbase_old struct nfs_fhbase_old { t#__u32 fb_dcookie ; t#__u32 fb_ino ; t#__u32 fb_dirino ; t#__u32 fb_dev ; t#__u32 fb_xdev ; t#__u32 fb_xino ; t#__u32 fb_generation ; } 
s#nfs_fhbase_new struct nfs_fhbase_new { t#__u8 fb_version ; t#__u8 fb_auth_type ; t#__u8 fb_fsid_type ; t#__u8 fb_fileid_type ; t#__u32 fb_auth [ 1 ] ; } 
s#knfsd_fh struct knfsd_fh { unsigned int fh_size ; union { s#nfs_fhbase_old fh_old ; t#__u32 fh_pad [ 128 / 4 ] ; s#nfs_fhbase_new fh_new ; } fh_base ; } 
s#svc_rqst struct svc_rqst { s#list_head rq_list ; s#list_head rq_all ; s#svc_xprt * rq_xprt ; s#__kernel_sockaddr_storage rq_addr ; t#size_t rq_addrlen ; s#svc_serv * rq_server ; s#svc_pool * rq_pool ; s#svc_procedure * rq_procinfo ; s#auth_ops * rq_authop ; t#u32 rq_flavor ; s#svc_cred rq_cred ; void * rq_xprt_ctxt ; s#svc_deferred_req * rq_deferred ; int rq_usedeferral ; t#size_t rq_xprt_hlen ; s#xdr_buf rq_arg ; s#xdr_buf rq_res ; s#page * rq_pages [ ( ( ( 1 * 1024 * 1024u ) + ( ( 1UL ) << 12 ) - 1 ) / ( ( 1UL ) << 12 ) + 2 + 1 ) ] ; s#page * * rq_respages ; int rq_resused ; s#kvec rq_vec [ ( ( ( 1 * 1024 * 1024u ) + ( ( 1UL ) << 12 ) - 1 ) / ( ( 1UL ) << 12 ) + 2 + 1 ) ] ; t#__be32 rq_xid ; t#u32 rq_prog ; t#u32 rq_vers ; t#u32 rq_proc ; t#u32 rq_prot ; unsigned short rq_secure : 1 ; u#svc_addr_u rq_daddr ; void * rq_argp ; void * rq_resp ; void * rq_auth_data ; int rq_reserved ; s#cache_req rq_chandle ; s#auth_domain * rq_client ; s#auth_domain * rq_gssclient ; s#svc_cacherep * rq_cacherep ; s#knfsd_fh * rq_reffh ; int rq_splice_ok ; t#wait_queue_head_t rq_wait ; s#task_struct * rq_task ; int rq_waking ; } 
s#nfs_fh struct nfs_fh { unsigned short size ; unsigned char data [ 128 ] ; } 
s#nlmsvc_binding struct nlmsvc_binding { t#__be32 ( * fopen ) ( s#svc_rqst * , s#nfs_fh * , s#file * * ) ; void ( * fclose ) ( s#file * ) ; } 
nlmsvc_ops extern s#nlmsvc_binding * nlmsvc_ops 
lockd_up extern int lockd_up ( void ) 
lockd_down extern void lockd_down ( void ) 

/* fs/lockd/svcsubs.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##workqueue_struct
s##svc_xprt
s##rpc_iostats
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##backing_dev_info
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##ipc_namespace
s##mnt_namespace
s##nameidata
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_state
s##rtable
s##rt6_info
s##dn_route
s##xfrm_policy
s##sec_path
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##rt6_statistics
s##fib6_table
s##ip_conntrack_stat
s##net_generic
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##hd_struct
s##gendisk
s##cdev
s##posix_acl
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
nlmsvc_unlock_all_by_sb int nlmsvc_unlock_all_by_sb ( s#super_block * ) 
nlmsvc_unlock_all_by_ip int nlmsvc_unlock_all_by_ip ( s#sockaddr * ) 

/* fs/locks.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##bsd_acct_struct
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##poll_table_struct
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##nlm_lockowner
s##nfs4_lock_state
locks_release_private extern void locks_release_private ( s#file_lock * ) 
locks_init_lock extern void locks_init_lock ( s#file_lock * ) 
__locks_copy_lock extern void __locks_copy_lock ( s#file_lock * , const s#file_lock * ) 
locks_copy_lock extern void locks_copy_lock ( s#file_lock * , s#file_lock * ) 
posix_test_lock extern void posix_test_lock ( s#file * , s#file_lock * ) 
posix_lock_file extern int posix_lock_file ( s#file * , s#file_lock * , s#file_lock * ) 
posix_lock_file_wait extern int posix_lock_file_wait ( s#file * , s#file_lock * ) 
locks_mandatory_area extern int locks_mandatory_area ( int , s#inode * , s#file * , t#loff_t , t#size_t ) 
lease_modify extern int lease_modify ( s#file_lock * * , int ) 
__break_lease extern int __break_lease ( s#inode * , unsigned int ) 
lease_get_mtime extern void lease_get_mtime ( s#inode * , s#timespec * ) 
generic_setlease extern int generic_setlease ( s#file * , long , s#file_lock * * ) 
vfs_setlease extern int vfs_setlease ( s#file * , long , s#file_lock * * ) 
flock_lock_file_wait extern int flock_lock_file_wait ( s#file * , s#file_lock * ) 
vfs_test_lock extern int vfs_test_lock ( s#file * , s#file_lock * ) 
vfs_lock_file extern int vfs_lock_file ( s#file * , unsigned int , s#file_lock * , s#file_lock * ) 
locks_remove_posix extern void locks_remove_posix ( s#file * , t#fl_owner_t ) 
posix_unblock_lock extern int posix_unblock_lock ( s#file * , s#file_lock * ) 
vfs_cancel_lock extern int vfs_cancel_lock ( s#file * , s#file_lock * ) 
lock_may_read extern int lock_may_read ( s#inode * , t#loff_t , unsigned long ) 
lock_may_write extern int lock_may_write ( s#inode * , t#loff_t , unsigned long ) 

/* fs/mbcache.o */
s##mb_cache
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##hd_struct
s##gendisk
s#mb_cache_entry struct mb_cache_entry { s#list_head e_lru_list ; s#mb_cache * e_cache ; unsigned short e_used ; unsigned short e_queued ; s#block_device * e_bdev ; t#sector_t e_block ; s#list_head e_block_list ; struct { s#list_head o_list ; unsigned int o_key ; } e_indexes [ 0 ] ; } 
s#mb_cache_op struct mb_cache_op { int ( * free ) ( s#mb_cache_entry * , t#gfp_t ) ; } 
mb_cache_create s#mb_cache * mb_cache_create ( const char * , s#mb_cache_op * , t#size_t , int , int ) 
mb_cache_shrink void mb_cache_shrink ( s#block_device * ) 
mb_cache_destroy void mb_cache_destroy ( s#mb_cache * ) 
mb_cache_entry_alloc s#mb_cache_entry * mb_cache_entry_alloc ( s#mb_cache * , t#gfp_t ) 
mb_cache_entry_insert int mb_cache_entry_insert ( s#mb_cache_entry * , s#block_device * , t#sector_t , unsigned int [ ] ) 
mb_cache_entry_release void mb_cache_entry_release ( s#mb_cache_entry * ) 
mb_cache_entry_free void mb_cache_entry_free ( s#mb_cache_entry * ) 
mb_cache_entry_get s#mb_cache_entry * mb_cache_entry_get ( s#mb_cache * , s#block_device * , t#sector_t ) 
mb_cache_entry_find_first s#mb_cache_entry * mb_cache_entry_find_first ( s#mb_cache * , int , s#block_device * , unsigned int ) 
mb_cache_entry_find_next s#mb_cache_entry * mb_cache_entry_find_next ( s#mb_cache_entry * , int , s#block_device * , unsigned int ) 

/* fs/mpage.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##array_cache
s##kmem_list3
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##hd_geometry
s##radix_tree_node
s##tvec_base
s##blk_trace
s##timer_rand_state
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
mpage_readpages int mpage_readpages ( s#address_space * , s#list_head * , unsigned , t#get_block_t ) 
mpage_readpage int mpage_readpage ( s#page * , t#get_block_t ) 
mpage_writepages int mpage_writepages ( s#address_space * , s#writeback_control * , t#get_block_t ) 
mpage_writepage int mpage_writepage ( s#page * , t#get_block_t * , s#writeback_control * ) 

/* fs/namei.o */
putname extern void putname ( const char * ) 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##backing_dev_info
s##array_cache
s##kmem_list3
s##bts_context
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##map_segment
s##compat_timespec
s##pollfd
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##mnt_namespace
path_get extern void path_get ( s#path * ) 
path_put extern void path_put ( s#path * ) 
release_open_intent extern void release_open_intent ( s#nameidata * ) 
filp_open extern s#file * filp_open ( const char * , int , int ) 
lookup_create extern s#dentry * lookup_create ( s#nameidata * , int ) 
user_path_at extern int user_path_at ( int , const char * , unsigned , s#path * ) 
follow_down extern int follow_down ( s#path * ) 
follow_up extern int follow_up ( s#path * ) 
get_write_access extern int get_write_access ( s#inode * ) 
getname extern char * getname ( const char * ) 
lock_rename extern s#dentry * lock_rename ( s#dentry * , s#dentry * ) 
lookup_one_len extern s#dentry * lookup_one_len ( const char * , s#dentry * , int ) 
page_follow_link_light extern void * page_follow_link_light ( s#dentry * , s#nameidata * ) 
page_put_link extern void page_put_link ( s#dentry * , s#nameidata * , void * ) 
page_readlink extern int page_readlink ( s#dentry * , char * , int ) 
__page_symlink extern int __page_symlink ( s#inode * , const char * , int , int ) 
page_symlink extern int page_symlink ( s#inode * , const char * , int ) 
page_symlink_inode_operations extern const s#inode_operations page_symlink_inode_operations 
path_lookup extern int path_lookup ( const char * , unsigned , s#nameidata * ) 
kern_path extern int kern_path ( const char * , unsigned , s#path * ) 
vfs_path_lookup extern int vfs_path_lookup ( s#dentry * , s#vfsmount * , const char * , unsigned int , s#nameidata * ) 
inode_permission extern int inode_permission ( s#inode * , int ) 
file_permission extern int file_permission ( s#file * , int ) 
unlock_rename extern void unlock_rename ( s#dentry * , s#dentry * ) 
vfs_create extern int vfs_create ( s#inode * , s#dentry * , int , s#nameidata * ) 
vfs_follow_link extern int vfs_follow_link ( s#nameidata * , const char * ) 
vfs_link extern int vfs_link ( s#dentry * , s#inode * , s#dentry * ) 
vfs_mkdir extern int vfs_mkdir ( s#inode * , s#dentry * , int ) 
vfs_mknod extern int vfs_mknod ( s#inode * , s#dentry * , int , t#dev_t ) 
generic_permission extern int generic_permission ( s#inode * , int , int ( * ) ( s#inode * , int ) ) 
vfs_readlink extern int vfs_readlink ( s#dentry * , char * , int , const char * ) 
vfs_rename extern int vfs_rename ( s#inode * , s#dentry * , s#inode * , s#dentry * ) 
vfs_rmdir extern int vfs_rmdir ( s#inode * , s#dentry * ) 
vfs_symlink extern int vfs_symlink ( s#inode * , s#dentry * , const char * ) 
vfs_unlink extern int vfs_unlink ( s#inode * , s#dentry * ) 
dentry_unhash extern void dentry_unhash ( s#dentry * ) 
generic_readlink extern int generic_readlink ( s#dentry * , char * , int ) 

/* fs/namespace.o */
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##bts_context
s##uts_namespace
s##ipc_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##sysfs_dirent
fs_kobj extern s#kobject * fs_kobj 
__mnt_is_readonly extern int __mnt_is_readonly ( s#vfsmount * ) 
mnt_want_write extern int mnt_want_write ( s#vfsmount * ) 
mnt_clone_write extern int mnt_clone_write ( s#vfsmount * ) 
mnt_want_write_file extern int mnt_want_write_file ( s#file * ) 
mnt_drop_write extern void mnt_drop_write ( s#vfsmount * ) 
simple_set_mnt extern void simple_set_mnt ( s#vfsmount * , s#super_block * ) 
mntput_no_expire extern void mntput_no_expire ( s#vfsmount * ) 
mnt_pin extern void mnt_pin ( s#vfsmount * ) 
mnt_unpin extern void mnt_unpin ( s#vfsmount * ) 
generic_show_options extern int generic_show_options ( s#seq_file * , s#vfsmount * ) 
save_mount_options extern void save_mount_options ( s#super_block * , char * ) 
replace_mount_options extern void replace_mount_options ( s#super_block * , char * ) 
may_umount_tree extern int may_umount_tree ( s#vfsmount * ) 
may_umount extern int may_umount ( s#vfsmount * ) 
do_add_mount extern int do_add_mount ( s#vfsmount * , s#path * , int , s#list_head * ) 
mark_mounts_for_expiry extern void mark_mounts_for_expiry ( s#list_head * ) 
create_mnt_ns extern s#mnt_namespace * create_mnt_ns ( s#vfsmount * ) 
put_mnt_ns extern void put_mnt_ns ( s#mnt_namespace * ) 

/* fs/nfs4acl_base.o */
nfs4ace_owner_who extern const char nfs4ace_owner_who [ ] 
nfs4ace_group_who extern const char nfs4ace_group_who [ ] 
nfs4ace_everyone_who extern const char nfs4ace_everyone_who [ ] 
s#nfs4ace struct nfs4ace { unsigned short e_type ; unsigned short e_flags ; unsigned int e_mask ; union { unsigned int e_id ; const char * e_who ; } u ; } 
s#nfs4acl struct nfs4acl { t#atomic_t a_refcount ; unsigned int a_owner_mask ; unsigned int a_group_mask ; unsigned int a_other_mask ; unsigned short a_count ; unsigned short a_flags ; s#nfs4ace a_entries [ 0 ] ; } 
nfs4acl_alloc extern s#nfs4acl * nfs4acl_alloc ( int ) 
nfs4acl_masks_to_mode extern int nfs4acl_masks_to_mode ( const s#nfs4acl * ) 
nfs4acl_chmod extern s#nfs4acl * nfs4acl_chmod ( s#nfs4acl * , t#mode_t ) 
nfs4acl_want_to_mask extern unsigned int nfs4acl_want_to_mask ( int ) 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
nfs4acl_permission extern int nfs4acl_permission ( s#inode * , const s#nfs4acl * , unsigned int ) 
nfs4acl_generic_permission extern int nfs4acl_generic_permission ( s#inode * , unsigned int ) 
nfs4ace_set_who extern int nfs4ace_set_who ( s#nfs4ace * , const char * ) 
nfs4acl_inherit extern s#nfs4acl * nfs4acl_inherit ( const s#nfs4acl * , t#mode_t ) 

/* fs/nfs4acl_compat.o */
nfs4acl_apply_masks extern int nfs4acl_apply_masks ( s#nfs4acl * * ) 

/* fs/nfs4acl_xattr.o */
nfs4acl_from_xattr extern s#nfs4acl * nfs4acl_from_xattr ( const void * , t#size_t ) 
nfs4acl_xattr_size extern t#size_t nfs4acl_xattr_size ( const s#nfs4acl * ) 
nfs4acl_to_xattr extern void nfs4acl_to_xattr ( const s#nfs4acl * , void * ) 

/* fs/nfs_common/nfsacl.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
nfsacl_encode extern unsigned int nfsacl_encode ( s#xdr_buf * , unsigned int , s#inode * , s#posix_acl * , int , int ) 
nfsacl_decode extern unsigned int nfsacl_decode ( s#xdr_buf * , unsigned int , unsigned int * , s#posix_acl * * ) 

/* fs/nfsd/nfs4acl.o */
s#nfs4_ace struct nfs4_ace { t#uint32_t type ; t#uint32_t flag ; t#uint32_t access_mask ; int whotype ; t#uid_t who ; } 
s#nfs4_acl struct nfs4_acl { t#uint32_t naces ; s#nfs4_ace aces [ 0 ] ; } 
nfs4_acl_posix_to_nfsv4 s#nfs4_acl * nfs4_acl_posix_to_nfsv4 ( s#posix_acl * , s#posix_acl * , unsigned int ) 
nfs4_acl_nfsv4_to_posix int nfs4_acl_nfsv4_to_posix ( s#nfs4_acl * , s#posix_acl * * , s#posix_acl * * , unsigned int ) 
nfs4_acl_new s#nfs4_acl * nfs4_acl_new ( int ) 
nfs4_acl_get_whotype int nfs4_acl_get_whotype ( char * , t#u32 ) 
nfs4_acl_write_who int nfs4_acl_write_who ( int , char * ) 

/* fs/nls/nls_base.o */
t#unicode_t typedef t#u32 unicode_t 
utf8_to_utf32 extern int utf8_to_utf32 ( const t#u8 * , int , t#unicode_t * ) 
utf32_to_utf8 extern int utf32_to_utf8 ( t#unicode_t , t#u8 * , int ) 
utf8s_to_utf16s extern int utf8s_to_utf16s ( const t#u8 * , int , t#wchar_t * ) 
e#utf16_endian enum utf16_endian { UTF16_HOST_ENDIAN , UTF16_LITTLE_ENDIAN , UTF16_BIG_ENDIAN } 
utf16s_to_utf8s extern int utf16s_to_utf8s ( const t#wchar_t * , int , e#utf16_endian , t#u8 * , int ) 
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##file
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##exec_domain
s##compat_timespec
s##pollfd
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
register_nls extern int register_nls ( s#nls_table * ) 
unregister_nls extern int unregister_nls ( s#nls_table * ) 
unload_nls extern void unload_nls ( s#nls_table * ) 
load_nls extern s#nls_table * load_nls ( char * ) 
load_nls_default extern s#nls_table * load_nls_default ( void ) 

/* fs/notify/fsnotify.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
__fsnotify_inode_delete extern void __fsnotify_inode_delete ( s#inode * ) 
__fsnotify_parent extern void __fsnotify_parent ( s#dentry * , t#__u32 ) 
fsnotify extern void fsnotify ( s#inode * , t#__u32 , void * , int , const char * , t#u32 ) 

/* fs/notify/inotify/inotify.o */
s#idr_layer struct idr_layer { unsigned long bitmap ; s#idr_layer * ary [ 1 << 6 ] ; int count ; int layer ; s#rcu_head rcu_head ; } 
s#idr struct idr { s#idr_layer * top ; s#idr_layer * id_free ; int layers ; int id_free_cnt ; t#spinlock_t lock ; } 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s#inotify_operations struct inotify_operations { void ( * handle_event ) ( s#inotify_watch * , t#u32 , t#u32 , t#u32 , const char * , s#inode * ) ; void ( * destroy_watch ) ( s#inotify_watch * ) ; } 
s#inotify_handle struct inotify_handle { s#idr idr ; s#mutex mutex ; s#list_head watches ; t#atomic_t count ; t#u32 last_wd ; const s#inotify_operations * in_ops ; } 
s#inotify_watch struct inotify_watch { s#list_head h_list ; s#list_head i_list ; t#atomic_t count ; s#inotify_handle * ih ; s#inode * inode ; t#__s32 wd ; t#__u32 mask ; } 
get_inotify_watch extern void get_inotify_watch ( s#inotify_watch * ) 
put_inotify_watch extern void put_inotify_watch ( s#inotify_watch * ) 
inotify_remove_watch_locked extern void inotify_remove_watch_locked ( s#inotify_handle * , s#inotify_watch * ) 
inotify_inode_queue_event extern void inotify_inode_queue_event ( s#inode * , t#__u32 , t#__u32 , const char * , s#inode * ) 
inotify_dentry_parent_queue_event extern void inotify_dentry_parent_queue_event ( s#dentry * , t#__u32 , t#__u32 , const char * ) 
inotify_get_cookie extern t#u32 inotify_get_cookie ( void ) 
inotify_unmount_inodes extern void inotify_unmount_inodes ( s#list_head * ) 
inotify_inode_is_dead extern void inotify_inode_is_dead ( s#inode * ) 
inotify_init extern s#inotify_handle * inotify_init ( const s#inotify_operations * ) 
inotify_init_watch extern void inotify_init_watch ( s#inotify_watch * ) 
inotify_destroy extern void inotify_destroy ( s#inotify_handle * ) 
inotify_find_watch extern t#__s32 inotify_find_watch ( s#inotify_handle * , s#inode * , s#inotify_watch * * ) 
inotify_find_update_watch extern t#__s32 inotify_find_update_watch ( s#inotify_handle * , s#inode * , t#u32 ) 
inotify_add_watch extern t#__s32 inotify_add_watch ( s#inotify_handle * , s#inotify_watch * , s#inode * , t#__u32 ) 
inotify_rm_wd extern int inotify_rm_wd ( s#inotify_handle * , t#__u32 ) 
inotify_rm_watch extern int inotify_rm_watch ( s#inotify_handle * , s#inotify_watch * ) 

/* fs/notify/notification.o */
fsnotify_get_cookie extern t#u32 fsnotify_get_cookie ( void ) 

/* fs/ocfs2/cluster/heartbeat.o */
o2hb_fill_node_map void o2hb_fill_node_map ( unsigned long * , unsigned ) 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##timer_rand_state
s##mtd_info
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s#o2nm_node struct o2nm_node { t#spinlock_t nd_lock ; s#config_item nd_item ; char nd_name [ 64 + 1 ] ; t#__u8 nd_num ; t#__be32 nd_ipv4_address ; t#__be16 nd_ipv4_port ; s#rb_node nd_ip_node ; int nd_local ; unsigned long nd_set_attributes ; } 
t#o2hb_cb_func typedef void ( o2hb_cb_func ) ( s#o2nm_node * , int , void * ) 
e#o2hb_callback_type enum o2hb_callback_type { O2HB_NODE_DOWN_CB = 0 , O2HB_NODE_UP_CB , O2HB_NUM_CB } 
s#o2hb_callback_func struct o2hb_callback_func { t#u32 hc_magic ; s#list_head hc_item ; t#o2hb_cb_func * hc_func ; void * hc_data ; int hc_priority ; e#o2hb_callback_type hc_type ; } 
o2hb_setup_callback void o2hb_setup_callback ( s#o2hb_callback_func * , e#o2hb_callback_type , t#o2hb_cb_func * , void * , int ) 
o2hb_register_callback int o2hb_register_callback ( const char * , s#o2hb_callback_func * ) 
o2hb_unregister_callback void o2hb_unregister_callback ( const char * , s#o2hb_callback_func * ) 
o2hb_check_node_heartbeating int o2hb_check_node_heartbeating ( t#u8 ) 
o2hb_check_node_heartbeating_from_callback int o2hb_check_node_heartbeating_from_callback ( t#u8 ) 
o2hb_check_local_node_heartbeating int o2hb_check_local_node_heartbeating ( void ) 
o2hb_stop_all_regions void o2hb_stop_all_regions ( void ) 

/* fs/ocfs2/cluster/masklog.o */
s#mlog_bits struct mlog_bits { unsigned long words [ 64 / 64 ] ; } 
mlog_and_bits extern s#mlog_bits mlog_and_bits 
mlog_not_bits extern s#mlog_bits mlog_not_bits 

/* fs/ocfs2/cluster/nodemanager.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
o2nm_get_node_by_num s#o2nm_node * o2nm_get_node_by_num ( t#u8 ) 
o2nm_configured_node_map int o2nm_configured_node_map ( unsigned long * , unsigned ) 
o2nm_get_node_by_ip s#o2nm_node * o2nm_get_node_by_ip ( t#__be32 ) 
o2nm_node_put void o2nm_node_put ( s#o2nm_node * ) 
o2nm_node_get void o2nm_node_get ( s#o2nm_node * ) 
o2nm_this_node t#u8 o2nm_this_node ( void ) 

/* fs/ocfs2/cluster/tcp.o */
s#o2net_msg struct o2net_msg { t#__be16 magic ; t#__be16 data_len ; t#__be16 msg_type ; t#__be16 pad1 ; t#__be32 sys_status ; t#__be32 status ; t#__be32 key ; t#__be32 msg_num ; t#__u8 buf [ 0 ] ; } 
t#o2net_msg_handler_func typedef int ( o2net_msg_handler_func ) ( s#o2net_msg * , t#u32 , void * , void * * ) 
t#o2net_post_msg_handler_func typedef void ( o2net_post_msg_handler_func ) ( int , void * , void * ) 
o2net_register_handler int o2net_register_handler ( t#u32 , t#u32 , t#u32 , t#o2net_msg_handler_func * , void * , t#o2net_post_msg_handler_func * , s#list_head * ) 
o2net_unregister_handler_list void o2net_unregister_handler_list ( s#list_head * ) 
o2net_send_message_vec int o2net_send_message_vec ( t#u32 , t#u32 , s#kvec * , t#size_t , t#u8 , int * ) 
o2net_send_message int o2net_send_message ( t#u32 , t#u32 , void * , t#u32 , t#u8 , int * ) 

/* fs/ocfs2/dlm/dlmdebug.o */
t#s8 typedef signed char s8 
s#dlm_migratable_lock struct dlm_migratable_lock { t#__be64 cookie ; t#__be16 pad1 ; t#u8 list ; t#u8 flags ; t#s8 type ; t#s8 convert_type ; t#s8 highest_blocked ; t#u8 node ; } 
s#dlm_recovery_ctxt struct dlm_recovery_ctxt { s#list_head resources ; s#list_head received ; s#list_head node_data ; t#u8 new_master ; t#u8 dead_node ; t#u16 state ; unsigned long node_map [ ( ( ( 255 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; t#wait_queue_head_t event ; } 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##backing_dev_info
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s#dlm_debug_ctxt struct dlm_debug_ctxt { s#kref debug_refcnt ; s#dentry * debug_state_dentry ; s#dentry * debug_lockres_dentry ; s#dentry * debug_mle_dentry ; s#dentry * debug_purgelist_dentry ; } 
e#dlm_ctxt_state enum dlm_ctxt_state { DLM_CTXT_NEW = 0 , DLM_CTXT_JOINED , DLM_CTXT_IN_SHUTDOWN , DLM_CTXT_LEAVING , } 
s##workqueue_struct
s#dlm_protocol_version struct dlm_protocol_version { t#u8 pv_major ; t#u8 pv_minor ; } 
s#dlm_ctxt struct dlm_ctxt { s#list_head list ; s#hlist_head * * lockres_hash ; s#list_head dirty_list ; s#list_head purge_list ; s#list_head pending_asts ; s#list_head pending_basts ; s#list_head tracking_list ; unsigned int purge_count ; t#spinlock_t spinlock ; t#spinlock_t ast_lock ; t#spinlock_t track_lock ; char * name ; t#u8 node_num ; t#u32 key ; t#u8 joining_node ; t#wait_queue_head_t dlm_join_events ; unsigned long live_nodes_map [ ( ( ( 255 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long domain_map [ ( ( ( 255 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long recovery_map [ ( ( ( 255 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; s#dlm_recovery_ctxt reco ; t#spinlock_t master_lock ; s#hlist_head * * master_hash ; s#list_head mle_hb_events ; t#atomic_t mle_tot_count [ DLM_MLE_NUM_TYPES ] ; t#atomic_t mle_cur_count [ DLM_MLE_NUM_TYPES ] ; t#atomic_t res_tot_count ; t#atomic_t res_cur_count ; s#dlm_debug_ctxt * dlm_debug_ctxt ; s#dentry * dlm_debugfs_subroot ; s#kref dlm_refs ; e#dlm_ctxt_state dlm_state ; unsigned int num_joins ; s#o2hb_callback_func dlm_hb_up ; s#o2hb_callback_func dlm_hb_down ; s#task_struct * dlm_thread_task ; s#task_struct * dlm_reco_thread_task ; s#workqueue_struct * dlm_worker ; t#wait_queue_head_t dlm_thread_wq ; t#wait_queue_head_t dlm_reco_thread_wq ; t#wait_queue_head_t ast_wq ; t#wait_queue_head_t migration_wq ; s#work_struct dispatched_work ; s#list_head work_list ; t#spinlock_t work_lock ; s#list_head dlm_domain_handlers ; s#list_head dlm_eviction_callbacks ; s#dlm_protocol_version fs_locking_proto ; s#dlm_protocol_version dlm_locking_proto ; } 
s#dlm_lock_resource struct dlm_lock_resource { s#hlist_node hash_node ; s#qstr lockname ; s#kref refs ; s#list_head granted ; s#list_head converting ; s#list_head blocked ; s#list_head purge ; s#list_head dirty ; s#list_head recovering ; s#list_head tracking ; unsigned long last_used ; s#dlm_ctxt * dlm ; unsigned migration_pending : 1 ; t#atomic_t asts_reserved ; t#spinlock_t spinlock ; t#wait_queue_head_t wq ; t#u8 owner ; t#u16 state ; char lvb [ 64 ] ; unsigned int inflight_locks ; unsigned long refmap [ ( ( ( 255 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; } 
t#dlm_astlockfunc_t typedef void ( dlm_astlockfunc_t ) ( void * ) 
t#dlm_bastlockfunc_t typedef void ( dlm_bastlockfunc_t ) ( void * , int ) 
e#dlm_status enum dlm_status { DLM_NORMAL = 0 , DLM_GRANTED , DLM_DENIED , DLM_DENIED_NOLOCKS , DLM_WORKING , DLM_BLOCKED , DLM_BLOCKED_ORPHAN , DLM_DENIED_GRACE_PERIOD , DLM_SYSERR , DLM_NOSUPPORT , DLM_CANCELGRANT , DLM_IVLOCKID , DLM_SYNC , DLM_BADTYPE , DLM_BADRESOURCE , DLM_MAXHANDLES , DLM_NOCLINFO , DLM_NOLOCKMGR , DLM_NOPURGED , DLM_BADARGS , DLM_VOID , DLM_NOTQUEUED , DLM_IVBUFLEN , DLM_CVTUNGRANT , DLM_BADPARAM , DLM_VALNOTVALID , DLM_REJECTED , DLM_ABORT , DLM_CANCEL , DLM_IVRESHANDLE , DLM_DEADLOCK , DLM_DENIED_NOASTS , DLM_FORWARD , DLM_TIMEOUT , DLM_IVGROUPID , DLM_VERS_CONFLICT , DLM_BAD_DEVICE_PATH , DLM_NO_DEVICE_PERMISSION , DLM_NO_CONTROL_DEVICE , DLM_RECOVERING , DLM_MIGRATING , DLM_MAXSTATS , } 
s#dlm_lockstatus struct dlm_lockstatus { e#dlm_status status ; t#u32 flags ; s#dlm_lock * lockid ; char lvb [ 64 ] ; } 
s#dlm_lock struct dlm_lock { s#dlm_migratable_lock ml ; s#list_head list ; s#list_head ast_list ; s#list_head bast_list ; s#dlm_lock_resource * lockres ; t#spinlock_t spinlock ; s#kref lock_refs ; t#dlm_astlockfunc_t * ast ; t#dlm_bastlockfunc_t * bast ; void * astdata ; s#dlm_lockstatus * lksb ; unsigned ast_pending : 1 , bast_pending : 1 , convert_pending : 1 , lock_pending : 1 , cancel_pending : 1 , unlock_pending : 1 , lksb_kernel_allocated : 1 ; } 
dlm_print_one_lock void dlm_print_one_lock ( s#dlm_lock * ) 
dlm_errmsg const char * dlm_errmsg ( e#dlm_status ) 
dlm_errname const char * dlm_errname ( e#dlm_status ) 

/* fs/ocfs2/dlm/dlmdomain.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##backing_dev_info
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##workqueue_struct
dlm_unregister_domain void dlm_unregister_domain ( s#dlm_ctxt * ) 
dlm_register_domain s#dlm_ctxt * dlm_register_domain ( const char * , t#u32 , s#dlm_protocol_version * ) 
t#dlm_eviction_func typedef void ( dlm_eviction_func ) ( int , void * ) 
s#dlm_eviction_cb struct dlm_eviction_cb { s#list_head ec_item ; t#dlm_eviction_func * ec_func ; void * ec_data ; } 
dlm_setup_eviction_cb void dlm_setup_eviction_cb ( s#dlm_eviction_cb * , t#dlm_eviction_func * , void * ) 
dlm_register_eviction_cb void dlm_register_eviction_cb ( s#dlm_ctxt * , s#dlm_eviction_cb * ) 
dlm_unregister_eviction_cb void dlm_unregister_eviction_cb ( s#dlm_eviction_cb * ) 

/* fs/ocfs2/dlm/dlmlock.o */
s##dlm_debug_ctxt
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##vfsmount
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_geometry
s##blk_trace
s##timer_rand_state
s##mtd_info
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##cdev
s##posix_acl
s##workqueue_struct
dlmlock e#dlm_status dlmlock ( s#dlm_ctxt * , int , s#dlm_lockstatus * , int , const char * , int , t#dlm_astlockfunc_t * , void * , t#dlm_bastlockfunc_t * ) 

/* fs/ocfs2/dlm/dlmunlock.o */
s##dlm_debug_ctxt
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##vfsmount
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_geometry
s##blk_trace
s##timer_rand_state
s##mtd_info
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##cdev
s##posix_acl
s##workqueue_struct
t#dlm_astunlockfunc_t typedef void ( dlm_astunlockfunc_t ) ( void * , e#dlm_status ) 
dlmunlock e#dlm_status dlmunlock ( s#dlm_ctxt * , s#dlm_lockstatus * , int , t#dlm_astunlockfunc_t * , void * ) 

/* fs/ocfs2/stackglue.o */
s#ocfs2_protocol_version struct ocfs2_protocol_version { t#u8 pv_major ; t#u8 pv_minor ; } 
s##dlm_lock
s#fsdlm_lksb_plus_lvb struct fsdlm_lksb_plus_lvb { s#dlm_lksb lksb ; char lvb [ 64 ] ; } 
s#ocfs2_dlm_lksb struct ocfs2_dlm_lksb { union { s#dlm_lockstatus lksb_o2dlm ; s#dlm_lksb lksb_fsdlm ; s#fsdlm_lksb_plus_lvb padding ; } ; s#ocfs2_cluster_connection * lksb_conn ; } 
s#ocfs2_locking_protocol struct ocfs2_locking_protocol { s#ocfs2_protocol_version lp_max_version ; void ( * lp_lock_ast ) ( s#ocfs2_dlm_lksb * ) ; void ( * lp_blocking_ast ) ( s#ocfs2_dlm_lksb * , int ) ; void ( * lp_unlock_ast ) ( s#ocfs2_dlm_lksb * , int ) ; } 
s#ocfs2_cluster_connection struct ocfs2_cluster_connection { char cc_name [ 64 ] ; int cc_namelen ; s#ocfs2_protocol_version cc_version ; s#ocfs2_locking_protocol * cc_proto ; void ( * cc_recovery_handler ) ( int , void * ) ; void * cc_recovery_data ; void * cc_lockspace ; void * cc_private ; } 
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
s##backing_dev_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s#ocfs2_stack_operations struct ocfs2_stack_operations { int ( * connect ) ( s#ocfs2_cluster_connection * ) ; int ( * disconnect ) ( s#ocfs2_cluster_connection * ) ; int ( * this_node ) ( unsigned int * ) ; int ( * dlm_lock ) ( s#ocfs2_cluster_connection * , int , s#ocfs2_dlm_lksb * , t#u32 , void * , unsigned int ) ; int ( * dlm_unlock ) ( s#ocfs2_cluster_connection * , s#ocfs2_dlm_lksb * , t#u32 ) ; int ( * lock_status ) ( s#ocfs2_dlm_lksb * ) ; int ( * lvb_valid ) ( s#ocfs2_dlm_lksb * ) ; void * ( * lock_lvb ) ( s#ocfs2_dlm_lksb * ) ; int ( * plock ) ( s#ocfs2_cluster_connection * , t#u64 , s#file * , int , s#file_lock * ) ; void ( * dump_lksb ) ( s#ocfs2_dlm_lksb * ) ; } 
s#ocfs2_stack_plugin struct ocfs2_stack_plugin { char * sp_name ; s#ocfs2_stack_operations * sp_ops ; s#module * sp_owner ; s#list_head sp_list ; unsigned int sp_count ; s#ocfs2_protocol_version sp_max_proto ; } 
ocfs2_stack_glue_register int ocfs2_stack_glue_register ( s#ocfs2_stack_plugin * ) 
ocfs2_stack_glue_unregister void ocfs2_stack_glue_unregister ( s#ocfs2_stack_plugin * ) 
ocfs2_stack_glue_set_max_proto_version void ocfs2_stack_glue_set_max_proto_version ( s#ocfs2_protocol_version * ) 
ocfs2_dlm_lock int ocfs2_dlm_lock ( s#ocfs2_cluster_connection * , int , s#ocfs2_dlm_lksb * , t#u32 , void * , unsigned int ) 
ocfs2_dlm_unlock int ocfs2_dlm_unlock ( s#ocfs2_cluster_connection * , s#ocfs2_dlm_lksb * , t#u32 ) 
ocfs2_dlm_lock_status int ocfs2_dlm_lock_status ( s#ocfs2_dlm_lksb * ) 
ocfs2_dlm_lvb_valid int ocfs2_dlm_lvb_valid ( s#ocfs2_dlm_lksb * ) 
ocfs2_dlm_lvb void * ocfs2_dlm_lvb ( s#ocfs2_dlm_lksb * ) 
ocfs2_dlm_dump_lksb void ocfs2_dlm_dump_lksb ( s#ocfs2_dlm_lksb * ) 
ocfs2_stack_supports_plocks int ocfs2_stack_supports_plocks ( void ) 
ocfs2_plock int ocfs2_plock ( s#ocfs2_cluster_connection * , t#u64 , s#file * , int , s#file_lock * ) 
ocfs2_cluster_connect int ocfs2_cluster_connect ( const char * , const char * , int , s#ocfs2_locking_protocol * , void ( * ) ( int , void * ) , void * , s#ocfs2_cluster_connection * * ) 
ocfs2_cluster_connect_agnostic int ocfs2_cluster_connect_agnostic ( const char * , int , s#ocfs2_locking_protocol * , void ( * ) ( int , void * ) , void * , s#ocfs2_cluster_connection * * ) 
ocfs2_cluster_disconnect int ocfs2_cluster_disconnect ( s#ocfs2_cluster_connection * , int ) 
ocfs2_cluster_hangup void ocfs2_cluster_hangup ( const char * , int ) 
ocfs2_cluster_this_node int ocfs2_cluster_this_node ( unsigned int * ) 

/* fs/open.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##device
s##mnt_namespace
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##array_cache
s##kmem_list3
s##bts_context
s##nsproxy
s##proc_dir_entry
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##map_segment
s##compat_timespec
s##pollfd
s##posix_acl
vfs_statfs extern int vfs_statfs ( s#dentry * , s#kstatfs * ) 
lookup_instantiate_filp extern s#file * lookup_instantiate_filp ( s#nameidata * , s#dentry * , int ( * ) ( s#inode * , s#file * ) ) 
dentry_open extern s#file * dentry_open ( s#dentry * , s#vfsmount * , int , const s#cred * ) 
put_unused_fd extern void put_unused_fd ( unsigned int ) 
fd_install extern void fd_install ( unsigned int , s#file * ) 
filp_close extern int filp_close ( s#file * , t#fl_owner_t ) 
sys_close long sys_close ( unsigned int ) 
generic_file_open extern int generic_file_open ( s#inode * , s#file * ) 
nonseekable_open extern int nonseekable_open ( s#inode * , s#file * ) 

/* fs/partitions/check.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##nameidata
s##vfsmount
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##mtd_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##posix_acl
s##hd_geometry
s##timer_rand_state
bdevname extern const char * bdevname ( s#block_device * , char * ) 
__bdevname extern const char * __bdevname ( t#dev_t , char * ) 
t#Sector typedef struct { s#page * v ; } Sector 
read_dev_sector unsigned char * read_dev_sector ( s#block_device * , t#sector_t , t#Sector * ) 

/* fs/pipe.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##mnt_namespace
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
pipe_lock void pipe_lock ( s#pipe_inode_info * ) 
pipe_unlock void pipe_unlock ( s#pipe_inode_info * ) 

/* fs/posix_acl.o */
posix_acl_alloc extern s#posix_acl * posix_acl_alloc ( int , t#gfp_t ) 
posix_acl_clone extern s#posix_acl * posix_acl_clone ( const s#posix_acl * , t#gfp_t ) 
posix_acl_valid extern int posix_acl_valid ( const s#posix_acl * ) 
posix_acl_equiv_mode extern int posix_acl_equiv_mode ( const s#posix_acl * , t#mode_t * ) 
posix_acl_from_mode extern s#posix_acl * posix_acl_from_mode ( t#mode_t , t#gfp_t ) 
posix_acl_create_masq extern int posix_acl_create_masq ( s#posix_acl * , t#mode_t * ) 
posix_acl_chmod_masq extern int posix_acl_chmod_masq ( s#posix_acl * , t#mode_t ) 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
posix_acl_permission extern int posix_acl_permission ( s#inode * , const s#posix_acl * , int ) 

/* fs/proc/generic.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##mnt_namespace
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##net
proc_net_mkdir extern s#proc_dir_entry * proc_net_mkdir ( s#net * , const char * , s#proc_dir_entry * ) 

/* fs/proc/proc_net.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##mnt_namespace
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##net_device
s##sock
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sec_path
s##ip_conntrack_stat
s##net_generic
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
seq_open_net int seq_open_net ( s#inode * , s#file * , const s#seq_operations * , int ) 
single_open_net int single_open_net ( s#inode * , s#file * , int ( * ) ( s#seq_file * , void * ) ) 
seq_release_net int seq_release_net ( s#inode * , s#file * ) 
single_release_net int single_release_net ( s#inode * , s#file * ) 
proc_net_fops_create extern s#proc_dir_entry * proc_net_fops_create ( s#net * , const char * , t#mode_t , const s#file_operations * ) 
proc_net_remove extern void proc_net_remove ( s#net * , const char * ) 

/* fs/proc/root.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##mnt_namespace
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##array_cache
s##kmem_list3
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##bts_context
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
proc_symlink extern s#proc_dir_entry * proc_symlink ( const char * , s#proc_dir_entry * , const char * ) 
proc_mkdir extern s#proc_dir_entry * proc_mkdir ( const char * , s#proc_dir_entry * ) 
create_proc_entry extern s#proc_dir_entry * create_proc_entry ( const char * , t#mode_t , s#proc_dir_entry * ) 
proc_create_data s#proc_dir_entry * proc_create_data ( const char * , t#mode_t , s#proc_dir_entry * , const s#file_operations * , void * ) 
remove_proc_entry extern void remove_proc_entry ( const char * , s#proc_dir_entry * ) 

/* fs/quota/dquot.o */
dq_data_lock extern t#spinlock_t dq_data_lock 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##backing_dev_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##hd_struct
s##gendisk
s##posix_acl
s##mnt_namespace
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
register_quota_format int register_quota_format ( s#quota_format_type * ) 
unregister_quota_format void unregister_quota_format ( s#quota_format_type * ) 
s#dqstats struct dqstats { int lookups ; int drops ; int reads ; int writes ; int cache_hits ; int allocated_dquots ; int free_dquots ; int syncs ; } 
dqstats extern s#dqstats dqstats 
dquot_mark_dquot_dirty int dquot_mark_dquot_dirty ( s#dquot * ) 
mark_info_dirty extern void mark_info_dirty ( s#super_block * , int ) 
dquot_acquire int dquot_acquire ( s#dquot * ) 
dquot_commit int dquot_commit ( s#dquot * ) 
dquot_release int dquot_release ( s#dquot * ) 
dquot_destroy void dquot_destroy ( s#dquot * ) 
dquot_scan_active int dquot_scan_active ( s#super_block * , int ( * ) ( s#dquot * , unsigned long ) , unsigned long ) 
vfs_quota_sync int vfs_quota_sync ( s#super_block * , int ) 
dqput void dqput ( s#dquot * ) 
dquot_alloc s#dquot * dquot_alloc ( s#super_block * , int ) 
dqget s#dquot * dqget ( s#super_block * , unsigned int , int ) 
dquot_initialize int dquot_initialize ( s#inode * , int ) 
dquot_drop int dquot_drop ( s#inode * ) 
vfs_dq_drop void vfs_dq_drop ( s#inode * ) 
dquot_alloc_space int dquot_alloc_space ( s#inode * , t#qsize_t , int ) 
dquot_reserve_space int dquot_reserve_space ( s#inode * , t#qsize_t , int ) 
dquot_alloc_inode int dquot_alloc_inode ( const s#inode * , t#qsize_t ) 
dquot_claim_space int dquot_claim_space ( s#inode * , t#qsize_t ) 
dquot_free_space int dquot_free_space ( s#inode * , t#qsize_t ) 
dquot_release_reserved_space void dquot_release_reserved_space ( s#inode * , t#qsize_t ) 
dquot_free_inode int dquot_free_inode ( const s#inode * , t#qsize_t ) 
dquot_transfer int dquot_transfer ( s#inode * , s#iattr * ) 
vfs_dq_transfer int vfs_dq_transfer ( s#inode * , s#iattr * ) 
dquot_commit_info int dquot_commit_info ( s#super_block * , int ) 
vfs_quota_disable int vfs_quota_disable ( s#super_block * , int , unsigned int ) 
vfs_quota_off int vfs_quota_off ( s#super_block * , int , int ) 
vfs_quota_on_path int vfs_quota_on_path ( s#super_block * , int , int , s#path * ) 
vfs_quota_on int vfs_quota_on ( s#super_block * , int , int , char * , int ) 
vfs_quota_enable int vfs_quota_enable ( s#inode * , int , int , unsigned int ) 
vfs_quota_on_mount int vfs_quota_on_mount ( s#super_block * , char * , int , int ) 
vfs_dq_quota_on_remount int vfs_dq_quota_on_remount ( s#super_block * ) 
vfs_get_dqblk int vfs_get_dqblk ( s#super_block * , int , t#qid_t , s#if_dqblk * ) 
vfs_set_dqblk int vfs_set_dqblk ( s#super_block * , int , t#qid_t , s#if_dqblk * ) 
vfs_get_dqinfo int vfs_get_dqinfo ( s#super_block * , int , s#if_dqinfo * ) 
vfs_set_dqinfo int vfs_set_dqinfo ( s#super_block * , int , s#if_dqinfo * ) 

/* fs/quota/quota_tree.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##backing_dev_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##hd_struct
s##gendisk
s##cdev
s##posix_acl
s##mnt_namespace
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##mtd_info
s#qtree_fmt_operations struct qtree_fmt_operations { void ( * mem2disk_dqblk ) ( void * , s#dquot * ) ; void ( * disk2mem_dqblk ) ( s#dquot * , void * ) ; int ( * is_id ) ( void * , s#dquot * ) ; } 
s#qtree_mem_dqinfo struct qtree_mem_dqinfo { s#super_block * dqi_sb ; int dqi_type ; unsigned int dqi_blocks ; unsigned int dqi_free_blk ; unsigned int dqi_free_entry ; unsigned int dqi_blocksize_bits ; unsigned int dqi_entry_size ; unsigned int dqi_usable_bs ; unsigned int dqi_qtree_depth ; s#qtree_fmt_operations * dqi_ops ; } 
qtree_entry_unused int qtree_entry_unused ( s#qtree_mem_dqinfo * , char * ) 
qtree_write_dquot int qtree_write_dquot ( s#qtree_mem_dqinfo * , s#dquot * ) 
qtree_delete_dquot int qtree_delete_dquot ( s#qtree_mem_dqinfo * , s#dquot * ) 
qtree_read_dquot int qtree_read_dquot ( s#qtree_mem_dqinfo * , s#dquot * ) 
qtree_release_dquot int qtree_release_dquot ( s#qtree_mem_dqinfo * , s#dquot * ) 

/* fs/read_write.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##tvec_base
s##eventfd_ctx
s##backing_dev_info
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##poll_table_struct
generic_ro_fops extern const s#file_operations generic_ro_fops 
generic_file_llseek_unlocked extern t#loff_t generic_file_llseek_unlocked ( s#file * , t#loff_t , int ) 
generic_file_llseek extern t#loff_t generic_file_llseek ( s#file * , t#loff_t , int ) 
no_llseek extern t#loff_t no_llseek ( s#file * , t#loff_t , int ) 
default_llseek extern t#loff_t default_llseek ( s#file * , t#loff_t , int ) 
vfs_llseek extern t#loff_t vfs_llseek ( s#file * , t#loff_t , int ) 
do_sync_read extern t#ssize_t do_sync_read ( s#file * , char * , t#size_t , t#loff_t * ) 
vfs_read extern t#ssize_t vfs_read ( s#file * , char * , t#size_t , t#loff_t * ) 
do_sync_write extern t#ssize_t do_sync_write ( s#file * , const char * , t#size_t , t#loff_t * ) 
vfs_write extern t#ssize_t vfs_write ( s#file * , const char * , t#size_t , t#loff_t * ) 
iov_shorten unsigned long iov_shorten ( s#iovec * , unsigned long , t#size_t ) 
vfs_readv extern t#ssize_t vfs_readv ( s#file * , const s#iovec * , unsigned long , t#loff_t * ) 
vfs_writev extern t#ssize_t vfs_writev ( s#file * , const s#iovec * , unsigned long , t#loff_t * ) 

/* fs/readdir.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
vfs_readdir extern int vfs_readdir ( s#file * , t#filldir_t , void * ) 

/* fs/select.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
s##backing_dev_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##map_segment
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s#poll_table_entry struct poll_table_entry { s#file * filp ; unsigned long key ; t#wait_queue_t wait ; t#wait_queue_head_t * wait_address ; } 
s#poll_table_page struct poll_table_page { s#poll_table_page * next ; s#poll_table_entry * entry ; s#poll_table_entry entries [ 0 ] ; } 
s#poll_wqueues struct poll_wqueues { t#poll_table pt ; s#poll_table_page * table ; s#task_struct * polling_task ; int triggered ; int error ; int inline_index ; s#poll_table_entry inline_entries [ ( ( 832 - 256 ) / sizeof ( struct poll_table_entry ) ) ] ; } 
poll_initwait extern void poll_initwait ( s#poll_wqueues * ) 
poll_freewait extern void poll_freewait ( s#poll_wqueues * ) 
poll_schedule_timeout extern int poll_schedule_timeout ( s#poll_wqueues * , int , t#ktime_t * , unsigned long ) 

/* fs/seq_file.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
s##backing_dev_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
seq_open int seq_open ( s#file * , const s#seq_operations * ) 
seq_read t#ssize_t seq_read ( s#file * , char * , t#size_t , t#loff_t * ) 
seq_lseek t#loff_t seq_lseek ( s#file * , t#loff_t , int ) 
seq_release int seq_release ( s#inode * , s#file * ) 
seq_escape int seq_escape ( s#seq_file * , const char * , const char * ) 
seq_printf int seq_printf ( s#seq_file * , const char * , ... ) 
mangle_path char * mangle_path ( char * , char * , char * ) 
seq_path int seq_path ( s#seq_file * , s#path * , char * ) 
seq_bitmap int seq_bitmap ( s#seq_file * , const unsigned long * , unsigned int ) 
seq_bitmap_list int seq_bitmap_list ( s#seq_file * , const unsigned long * , unsigned int ) 
single_open int single_open ( s#file * , int ( * ) ( s#seq_file * , void * ) , void * ) 
single_release int single_release ( s#inode * , s#file * ) 
seq_release_private int seq_release_private ( s#inode * , s#file * ) 
__seq_open_private void * __seq_open_private ( s#file * , const s#seq_operations * , int ) 
seq_open_private int seq_open_private ( s#file * , const s#seq_operations * , int ) 
seq_putc int seq_putc ( s#seq_file * , char ) 
seq_puts int seq_puts ( s#seq_file * , const char * ) 
seq_write int seq_write ( s#seq_file * , const void * , t#size_t ) 
seq_list_start extern s#list_head * seq_list_start ( s#list_head * , t#loff_t ) 
seq_list_start_head extern s#list_head * seq_list_start_head ( s#list_head * , t#loff_t ) 
seq_list_next extern s#list_head * seq_list_next ( void * , s#list_head * , t#loff_t * ) 

/* fs/splice.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##backing_dev_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##array_cache
s##kmem_list3
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
generic_file_splice_read extern t#ssize_t generic_file_splice_read ( s#file * , t#loff_t * , s#pipe_inode_info * , t#size_t , unsigned int ) 
default_file_splice_read extern t#ssize_t default_file_splice_read ( s#file * , t#loff_t * , s#pipe_inode_info * , t#size_t , unsigned int ) 
s#splice_desc struct splice_desc { unsigned int len , total_len ; unsigned int flags ; union { void * userptr ; s#file * file ; void * data ; } u ; t#loff_t pos ; t#size_t num_spliced ; t#bool need_wakeup ; } 
pipe_to_file extern int pipe_to_file ( s#pipe_inode_info * , s#pipe_buffer * , s#splice_desc * ) 
t#splice_actor typedef int ( splice_actor ) ( s#pipe_inode_info * , s#pipe_buffer * , s#splice_desc * ) 
splice_from_pipe_feed extern int splice_from_pipe_feed ( s#pipe_inode_info * , s#splice_desc * , t#splice_actor * ) 
splice_from_pipe_next extern int splice_from_pipe_next ( s#pipe_inode_info * , s#splice_desc * ) 
splice_from_pipe_begin extern void splice_from_pipe_begin ( s#splice_desc * ) 
splice_from_pipe_end extern void splice_from_pipe_end ( s#pipe_inode_info * , s#splice_desc * ) 
__splice_from_pipe extern t#ssize_t __splice_from_pipe ( s#pipe_inode_info * , s#splice_desc * , t#splice_actor * ) 
generic_file_splice_write extern t#ssize_t generic_file_splice_write ( s#pipe_inode_info * , s#file * , t#loff_t * , t#size_t , unsigned int ) 
generic_splice_sendpage extern t#ssize_t generic_splice_sendpage ( s#pipe_inode_info * , s#file * , t#loff_t * , t#size_t , unsigned int ) 
t#splice_direct_actor typedef int ( splice_direct_actor ) ( s#pipe_inode_info * , s#splice_desc * ) 
splice_direct_to_actor extern t#ssize_t splice_direct_to_actor ( s#file * , s#splice_desc * , t#splice_direct_actor * ) 

/* fs/stack.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
fsstack_copy_inode_size extern void fsstack_copy_inode_size ( s#inode * , const s#inode * ) 
fsstack_copy_attr_all extern void fsstack_copy_attr_all ( s#inode * , const s#inode * , int ( * ) ( s#inode * ) ) 

/* fs/stat.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
generic_fillattr extern void generic_fillattr ( s#inode * , s#kstat * ) 
vfs_getattr extern int vfs_getattr ( s#vfsmount * , s#dentry * , s#kstat * ) 
vfs_fstat extern int vfs_fstat ( unsigned int , s#kstat * ) 
vfs_fstatat extern int vfs_fstatat ( int , char * , s#kstat * , int ) 
vfs_stat extern int vfs_stat ( char * , s#kstat * ) 
vfs_lstat extern int vfs_lstat ( char * , s#kstat * ) 
inode_add_bytes void inode_add_bytes ( s#inode * , t#loff_t ) 
inode_sub_bytes void inode_sub_bytes ( s#inode * , t#loff_t ) 
inode_get_bytes t#loff_t inode_get_bytes ( s#inode * ) 
inode_set_bytes void inode_set_bytes ( s#inode * , t#loff_t ) 

/* fs/super.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##hd_geometry
s##blk_trace
s##timer_rand_state
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##mnt_namespace
s##export_operations
s##xattr_handler
s##mtd_info
deactivate_super void deactivate_super ( s#super_block * ) 
deactivate_locked_super void deactivate_locked_super ( s#super_block * ) 
lock_super extern void lock_super ( s#super_block * ) 
unlock_super extern void unlock_super ( s#super_block * ) 
generic_shutdown_super void generic_shutdown_super ( s#super_block * ) 
sget s#super_block * sget ( s#file_system_type * , int ( * ) ( s#super_block * , void * ) , int ( * ) ( s#super_block * , void * ) , void * ) 
drop_super extern void drop_super ( s#super_block * ) 
get_super extern s#super_block * get_super ( s#block_device * ) 
set_anon_super int set_anon_super ( s#super_block * , void * ) 
kill_anon_super void kill_anon_super ( s#super_block * ) 
kill_litter_super void kill_litter_super ( s#super_block * ) 
get_sb_ns extern int get_sb_ns ( s#file_system_type * , int , void * , int ( * ) ( s#super_block * , void * , int ) , s#vfsmount * ) 
get_sb_bdev extern int get_sb_bdev ( s#file_system_type * , int , const char * , void * , int ( * ) ( s#super_block * , void * , int ) , s#vfsmount * ) 
kill_block_super void kill_block_super ( s#super_block * ) 
get_sb_nodev extern int get_sb_nodev ( s#file_system_type * , int , void * , int ( * ) ( s#super_block * , void * , int ) , s#vfsmount * ) 
get_sb_single extern int get_sb_single ( s#file_system_type * , int , void * , int ( * ) ( s#super_block * , void * , int ) , s#vfsmount * ) 
vfs_kern_mount extern s#vfsmount * vfs_kern_mount ( s#file_system_type * , int , const char * , void * ) 
do_kern_mount extern s#vfsmount * do_kern_mount ( const char * , int , const char * , void * ) 
kern_mount_data extern s#vfsmount * kern_mount_data ( s#file_system_type * , void * ) 

/* fs/sync.o */
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##backing_dev_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##hd_struct
s##gendisk
s##cdev
s##posix_acl
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
sync_filesystem extern int sync_filesystem ( s#super_block * ) 
file_fsync int file_fsync ( s#file * , s#dentry * , int ) 
vfs_fsync_range extern int vfs_fsync_range ( s#file * , s#dentry * , t#loff_t , t#loff_t , int ) 
vfs_fsync extern int vfs_fsync ( s#file * , s#dentry * , int ) 
generic_write_sync extern int generic_write_sync ( s#file * , t#loff_t , t#loff_t ) 
do_sync_mapping_range extern int do_sync_mapping_range ( s#address_space * , t#loff_t , t#loff_t , unsigned int ) 

/* fs/sysfs/bin.o */
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s#sysfs_elem_dir struct sysfs_elem_dir { s#kobject * kobj ; s#sysfs_dirent * children ; } 
s#sysfs_elem_symlink struct sysfs_elem_symlink { s#sysfs_dirent * target_sd ; } 
s##sysfs_open_dirent
s#sysfs_elem_attr struct sysfs_elem_attr { s#attribute * attr ; s#sysfs_open_dirent * open ; } 
s#sysfs_elem_bin_attr struct sysfs_elem_bin_attr { s#bin_attribute * bin_attr ; s#hlist_head buffers ; } 
s#sysfs_inode_attrs struct sysfs_inode_attrs { s#iattr ia_iattr ; void * ia_secdata ; t#u32 ia_secdata_len ; } 
s#sysfs_dirent struct sysfs_dirent { t#atomic_t s_count ; t#atomic_t s_active ; s#sysfs_dirent * s_parent ; s#sysfs_dirent * s_sibling ; const char * s_name ; union { s#sysfs_elem_dir s_dir ; s#sysfs_elem_symlink s_symlink ; s#sysfs_elem_attr s_attr ; s#sysfs_elem_bin_attr s_bin_attr ; } ; unsigned int s_flags ; t#ino_t s_ino ; t#umode_t s_mode ; s#sysfs_inode_attrs * s_iattr ; } 
sysfs_create_bin_file int sysfs_create_bin_file ( s#kobject * , s#bin_attribute * ) 
sysfs_remove_bin_file void sysfs_remove_bin_file ( s#kobject * , s#bin_attribute * ) 

/* fs/sysfs/dir.o */
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##mnt_namespace
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##sysfs_open_dirent
sysfs_get_dirent s#sysfs_dirent * sysfs_get_dirent ( s#sysfs_dirent * , const unsigned char * ) 

/* fs/sysfs/file.o */
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s#sysfs_open_dirent struct sysfs_open_dirent { t#atomic_t refcnt ; t#atomic_t event ; t#wait_queue_head_t poll ; s#list_head buffers ; } 
sysfs_notify_dirent void sysfs_notify_dirent ( s#sysfs_dirent * ) 
sysfs_notify void sysfs_notify ( s#kobject * , const char * , const char * ) 
sysfs_add_file_to_group int sysfs_add_file_to_group ( s#kobject * , const s#attribute * , const char * ) 
sysfs_chmod_file int sysfs_chmod_file ( s#kobject * , s#attribute * , t#mode_t ) 
sysfs_remove_file_from_group void sysfs_remove_file_from_group ( s#kobject * , const s#attribute * , const char * ) 
sysfs_schedule_callback int sysfs_schedule_callback ( s#kobject * , void ( * ) ( void * ) , void * , s#module * ) 
sysfs_create_file int sysfs_create_file ( s#kobject * , const s#attribute * ) 
sysfs_remove_file void sysfs_remove_file ( s#kobject * , const s#attribute * ) 

/* fs/sysfs/group.o */
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##sysfs_open_dirent
sysfs_create_group int sysfs_create_group ( s#kobject * , const s#attribute_group * ) 
sysfs_update_group int sysfs_update_group ( s#kobject * , const s#attribute_group * ) 
sysfs_remove_group void sysfs_remove_group ( s#kobject * , const s#attribute_group * ) 

/* fs/sysfs/mount.o */
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##mnt_namespace
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##sysfs_open_dirent
sysfs_get s#sysfs_dirent * sysfs_get ( s#sysfs_dirent * ) 
sysfs_put void sysfs_put ( s#sysfs_dirent * ) 

/* fs/sysfs/symlink.o */
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##mnt_namespace
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##sysfs_open_dirent
sysfs_create_link int sysfs_create_link ( s#kobject * , s#kobject * , const char * ) 
sysfs_remove_link void sysfs_remove_link ( s#kobject * , const char * ) 

/* fs/xattr.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##kstatfs
s##export_operations
s#xattr_handler struct xattr_handler { char * prefix ; t#size_t ( * list ) ( s#inode * , char * , t#size_t , const char * , t#size_t ) ; int ( * get ) ( s#inode * , const char * , void * , t#size_t ) ; int ( * set ) ( s#inode * , const char * , const void * , t#size_t , int ) ; } 
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##mnt_namespace
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
vfs_setxattr int vfs_setxattr ( s#dentry * , const char * , const void * , t#size_t , int ) 
xattr_getsecurity t#ssize_t xattr_getsecurity ( s#inode * , const char * , void * , t#size_t ) 
vfs_getxattr t#ssize_t vfs_getxattr ( s#dentry * , const char * , void * , t#size_t ) 
vfs_listxattr t#ssize_t vfs_listxattr ( s#dentry * , char * , t#size_t ) 
vfs_removexattr int vfs_removexattr ( s#dentry * , const char * ) 
generic_getxattr t#ssize_t generic_getxattr ( s#dentry * , const char * , void * , t#size_t ) 
generic_listxattr t#ssize_t generic_listxattr ( s#dentry * , char * , t#size_t ) 
generic_setxattr int generic_setxattr ( s#dentry * , const char * , const void * , t#size_t , int ) 
generic_removexattr int generic_removexattr ( s#dentry * , const char * ) 

/* fs/xattr_acl.o */
posix_acl_from_xattr s#posix_acl * posix_acl_from_xattr ( const void * , t#size_t ) 
posix_acl_to_xattr int posix_acl_to_xattr ( const s#posix_acl * , void * , t#size_t ) 

/* fs/xfs/dmapi/xfs_dm.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##hd_geometry
s##blk_trace
s##timer_rand_state
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##cdev
s##posix_acl
s##mnt_namespace
s##xattr_handler
s##mtd_info
t#__int32_t typedef signed int __int32_t 
t#xfs_tid_t typedef t#__int32_t xfs_tid_t 
s##xfs_ail
t#__uint32_t typedef unsigned int __uint32_t 
t#__uint64_t typedef unsigned long long int __uint64_t 
t#xfs_drfsbno_t typedef t#__uint64_t xfs_drfsbno_t 
t#xfs_drtbno_t typedef t#__uint64_t xfs_drtbno_t 
t#uuid_t typedef struct { unsigned char __u_bits [ 16 ] ; } uuid_t 
t#xfs_dfsbno_t typedef t#__uint64_t xfs_dfsbno_t 
t#xfs_ino_t typedef unsigned long long xfs_ino_t 
t#xfs_agblock_t typedef t#__uint32_t xfs_agblock_t 
t#xfs_agnumber_t typedef t#__uint32_t xfs_agnumber_t 
t#xfs_extlen_t typedef t#__uint32_t xfs_extlen_t 
t#__uint16_t typedef unsigned short int __uint16_t 
t#__uint8_t typedef unsigned char __uint8_t 
s#xfs_sb struct xfs_sb { t#__uint32_t sb_magicnum ; t#__uint32_t sb_blocksize ; t#xfs_drfsbno_t sb_dblocks ; t#xfs_drfsbno_t sb_rblocks ; t#xfs_drtbno_t sb_rextents ; t#uuid_t sb_uuid ; t#xfs_dfsbno_t sb_logstart ; t#xfs_ino_t sb_rootino ; t#xfs_ino_t sb_rbmino ; t#xfs_ino_t sb_rsumino ; t#xfs_agblock_t sb_rextsize ; t#xfs_agblock_t sb_agblocks ; t#xfs_agnumber_t sb_agcount ; t#xfs_extlen_t sb_rbmblocks ; t#xfs_extlen_t sb_logblocks ; t#__uint16_t sb_versionnum ; t#__uint16_t sb_sectsize ; t#__uint16_t sb_inodesize ; t#__uint16_t sb_inopblock ; char sb_fname [ 12 ] ; t#__uint8_t sb_blocklog ; t#__uint8_t sb_sectlog ; t#__uint8_t sb_inodelog ; t#__uint8_t sb_inopblog ; t#__uint8_t sb_agblklog ; t#__uint8_t sb_rextslog ; t#__uint8_t sb_inprogress ; t#__uint8_t sb_imax_pct ; t#__uint64_t sb_icount ; t#__uint64_t sb_ifree ; t#__uint64_t sb_fdblocks ; t#__uint64_t sb_frextents ; t#xfs_ino_t sb_uquotino ; t#xfs_ino_t sb_gquotino ; t#__uint16_t sb_qflags ; t#__uint8_t sb_flags ; t#__uint8_t sb_shared_vn ; t#xfs_extlen_t sb_inoalignmt ; t#__uint32_t sb_unit ; t#__uint32_t sb_width ; t#__uint8_t sb_dirblklog ; t#__uint8_t sb_logsectlog ; t#__uint16_t sb_logsectsize ; t#__uint32_t sb_logsunit ; t#__uint32_t sb_features2 ; t#__uint32_t sb_bad_features2 ; } 
t#xfs_sb_t typedef s#xfs_sb xfs_sb_t 
t#xfs_buf_flags_t typedef enum { XBF_READ = ( 1 << 0 ) , XBF_WRITE = ( 1 << 1 ) , XBF_MAPPED = ( 1 << 2 ) , XBF_ASYNC = ( 1 << 4 ) , XBF_DONE = ( 1 << 5 ) , XBF_DELWRI = ( 1 << 6 ) , XBF_STALE = ( 1 << 7 ) , XBF_FS_MANAGED = ( 1 << 8 ) , XBF_ORDERED = ( 1 << 11 ) , XBF_READ_AHEAD = ( 1 << 12 ) , XBF_LOG_BUFFER = ( 1 << 13 ) , XBF_LOCK = ( 1 << 14 ) , XBF_TRYLOCK = ( 1 << 15 ) , XBF_DONT_BLOCK = ( 1 << 16 ) , _XBF_PAGE_CACHE = ( 1 << 17 ) , _XBF_PAGES = ( 1 << 18 ) , _XBF_RUN_QUEUES = ( 1 << 19 ) , _XBF_DELWRI_Q = ( 1 << 21 ) , _XBF_PAGE_LOCKED = ( 1 << 22 ) , _XFS_BARRIER_FAILED = ( 1 << 23 ) , } xfs_buf_flags_t 
s#xfs_bufhash struct xfs_bufhash { s#list_head bh_list ; t#spinlock_t bh_lock ; } 
t#xfs_bufhash_t typedef s#xfs_bufhash xfs_bufhash_t 
s#xfs_buftarg struct xfs_buftarg { t#dev_t bt_dev ; s#block_device * bt_bdev ; s#address_space * bt_mapping ; unsigned int bt_bsize ; unsigned int bt_sshift ; t#size_t bt_smask ; t#uint bt_hashmask ; t#uint bt_hashshift ; t#xfs_bufhash_t * bt_hash ; s#task_struct * bt_task ; s#list_head bt_list ; s#list_head bt_delwrite_queue ; t#spinlock_t bt_delwrite_lock ; unsigned long bt_flags ; } 
t#xfs_buftarg_t typedef s#xfs_buftarg xfs_buftarg_t 
t#xfs_daddr_t typedef t#__s64 xfs_daddr_t 
t#xfs_off_t typedef t#__s64 xfs_off_t 
t#xfs_buf_iodone_t typedef void ( * xfs_buf_iodone_t ) ( s#xfs_buf * ) 
t#xfs_buf_relse_t typedef void ( * xfs_buf_relse_t ) ( s#xfs_buf * ) 
t#xfs_buf_bdstrat_t typedef int ( * xfs_buf_bdstrat_t ) ( s#xfs_buf * ) 
s#xfs_buf struct xfs_buf { s#semaphore b_sema ; unsigned long b_queuetime ; t#atomic_t b_pin_count ; t#wait_queue_head_t b_waiters ; s#list_head b_list ; t#xfs_buf_flags_t b_flags ; s#list_head b_hash_list ; t#xfs_bufhash_t * b_hash ; t#xfs_buftarg_t * b_target ; t#atomic_t b_hold ; t#xfs_daddr_t b_bn ; t#xfs_off_t b_file_offset ; t#size_t b_buffer_length ; t#size_t b_count_desired ; void * b_addr ; s#work_struct b_iodone_work ; t#atomic_t b_io_remaining ; t#xfs_buf_iodone_t b_iodone ; t#xfs_buf_relse_t b_relse ; t#xfs_buf_bdstrat_t b_strat ; s#completion b_iowait ; void * b_fspriv ; void * b_fspriv2 ; s#xfs_mount * b_mount ; unsigned short b_error ; unsigned int b_page_count ; unsigned int b_offset ; s#page * * b_pages ; s#page * b_page_array [ 2 ] ; } 
s##log
s##xfs_quotainfo
t#xfs_agino_t typedef t#__uint32_t xfs_agino_t 
s#xfs_log_callback struct xfs_log_callback { s#xfs_log_callback * cb_next ; void ( * cb_func ) ( void * , int ) ; void * cb_arg ; } 
t#xfs_log_callback_t typedef s#xfs_log_callback xfs_log_callback_t 
t#xfs_log_ticket_t typedef void * xfs_log_ticket_t 
t#__int64_t typedef signed long long int __int64_t 
t#xfs_lsn_t typedef t#__int64_t xfs_lsn_t 
s##xfs_dquot_acct
t#xfs_trans_callback_t typedef void ( * xfs_trans_callback_t ) ( s#xfs_trans * , void * ) 
t#int64_t typedef t#__s64 int64_t 
t#ushort typedef unsigned short ushort 
t#xfs_log_item_t typedef s#xfs_log_item xfs_log_item_t 
t#xfs_caddr_t typedef char * xfs_caddr_t 
s#xfs_log_iovec struct xfs_log_iovec { t#xfs_caddr_t i_addr ; int i_len ; t#uint i_type ; } 
s#xfs_item_ops struct xfs_item_ops { t#uint ( * iop_size ) ( t#xfs_log_item_t * ) ; void ( * iop_format ) ( t#xfs_log_item_t * , s#xfs_log_iovec * ) ; void ( * iop_pin ) ( t#xfs_log_item_t * ) ; void ( * iop_unpin ) ( t#xfs_log_item_t * , int ) ; void ( * iop_unpin_remove ) ( t#xfs_log_item_t * , s#xfs_trans * ) ; t#uint ( * iop_trylock ) ( t#xfs_log_item_t * ) ; void ( * iop_unlock ) ( t#xfs_log_item_t * ) ; t#xfs_lsn_t ( * iop_committed ) ( t#xfs_log_item_t * , t#xfs_lsn_t ) ; void ( * iop_push ) ( t#xfs_log_item_t * ) ; void ( * iop_pushbuf ) ( t#xfs_log_item_t * ) ; void ( * iop_committing ) ( t#xfs_log_item_t * , t#xfs_lsn_t ) ; } 
s#xfs_log_item struct xfs_log_item { s#list_head li_ail ; t#xfs_lsn_t li_lsn ; s#xfs_log_item_desc * li_desc ; s#xfs_mount * li_mountp ; s#xfs_ail * li_ailp ; t#uint li_type ; t#uint li_flags ; s#xfs_log_item * li_bio_list ; void ( * li_cb ) ( s#xfs_buf * , s#xfs_log_item * ) ; s#xfs_item_ops * li_ops ; } 
s#xfs_log_item_desc struct xfs_log_item_desc { s#xfs_log_item * lid_item ; t#ushort lid_size ; unsigned char lid_flags ; unsigned char lid_index ; } 
t#xfs_log_item_desc_t typedef s#xfs_log_item_desc xfs_log_item_desc_t 
s#xfs_log_item_chunk struct xfs_log_item_chunk { s#xfs_log_item_chunk * lic_next ; t#ushort lic_free ; t#ushort lic_unused ; t#xfs_log_item_desc_t lic_descs [ 15 ] ; } 
t#xfs_log_item_chunk_t typedef s#xfs_log_item_chunk xfs_log_item_chunk_t 
s#xfs_trans_header struct xfs_trans_header { t#uint th_magic ; t#uint th_type ; t#__int32_t th_tid ; t#uint th_num_items ; } 
t#xfs_trans_header_t typedef s#xfs_trans_header xfs_trans_header_t 
s#xfs_log_busy_slot struct xfs_log_busy_slot { t#xfs_agnumber_t lbc_ag ; t#ushort lbc_idx ; } 
t#xfs_log_busy_slot_t typedef s#xfs_log_busy_slot xfs_log_busy_slot_t 
s#xfs_log_busy_chunk struct xfs_log_busy_chunk { s#xfs_log_busy_chunk * lbc_next ; t#uint lbc_free ; t#ushort lbc_unused ; t#xfs_log_busy_slot_t lbc_busy [ 31 ] ; } 
t#xfs_log_busy_chunk_t typedef s#xfs_log_busy_chunk xfs_log_busy_chunk_t 
s#xfs_trans struct xfs_trans { unsigned int t_magic ; t#xfs_log_callback_t t_logcb ; unsigned int t_type ; unsigned int t_log_res ; unsigned int t_log_count ; unsigned int t_blk_res ; unsigned int t_blk_res_used ; unsigned int t_rtx_res ; unsigned int t_rtx_res_used ; t#xfs_log_ticket_t t_ticket ; t#xfs_lsn_t t_lsn ; t#xfs_lsn_t t_commit_lsn ; s#xfs_mount * t_mountp ; s#xfs_dquot_acct * t_dqinfo ; t#xfs_trans_callback_t t_callback ; void * t_callarg ; unsigned int t_flags ; t#int64_t t_icount_delta ; t#int64_t t_ifree_delta ; t#int64_t t_fdblocks_delta ; t#int64_t t_res_fdblocks_delta ; t#int64_t t_frextents_delta ; t#int64_t t_res_frextents_delta ; t#int64_t t_dblocks_delta ; t#int64_t t_agcount_delta ; t#int64_t t_imaxpct_delta ; t#int64_t t_rextsize_delta ; t#int64_t t_rbmblocks_delta ; t#int64_t t_rblocks_delta ; t#int64_t t_rextents_delta ; t#int64_t t_rextslog_delta ; unsigned int t_items_free ; t#xfs_log_item_chunk_t t_items ; t#xfs_trans_header_t t_header ; unsigned int t_busy_free ; t#xfs_log_busy_chunk_t t_busy ; unsigned long t_pflags ; } 
s#xfs_perag_busy struct xfs_perag_busy { t#xfs_agblock_t busy_start ; t#xfs_extlen_t busy_length ; s#xfs_trans * busy_tp ; } 
t#xfs_perag_busy_t typedef s#xfs_perag_busy xfs_perag_busy_t 
s#xfs_perag struct xfs_perag { char pagf_init ; char pagi_init ; char pagf_metadata ; char pagi_inodeok ; t#__uint8_t pagf_levels [ ( ( int ) XFS_BTNUM_CNTi + 1 ) ] ; t#__uint32_t pagf_flcount ; t#xfs_extlen_t pagf_freeblks ; t#xfs_extlen_t pagf_longest ; t#__uint32_t pagf_btreeblks ; t#xfs_agino_t pagi_freecount ; t#xfs_agino_t pagi_count ; int pagb_count ; t#xfs_perag_busy_t * pagb_list ; t#xfs_agino_t pagl_pagino ; t#xfs_agino_t pagl_leftrec ; t#xfs_agino_t pagl_rightrec ; t#spinlock_t pagb_lock ; t#atomic_t pagf_fstrms ; int pag_ici_init ; t#rwlock_t pag_ici_lock ; s#radix_tree_root pag_ici_root ; } 
s#xfs_trans_reservations struct xfs_trans_reservations { t#uint tr_write ; t#uint tr_itruncate ; t#uint tr_rename ; t#uint tr_link ; t#uint tr_remove ; t#uint tr_symlink ; t#uint tr_create ; t#uint tr_mkdir ; t#uint tr_ifree ; t#uint tr_ichange ; t#uint tr_growdata ; t#uint tr_swrite ; t#uint tr_addafork ; t#uint tr_writeid ; t#uint tr_attrinval ; t#uint tr_attrset ; t#uint tr_attrrm ; t#uint tr_clearagi ; t#uint tr_growrtalloc ; t#uint tr_growrtzero ; t#uint tr_growrtfree ; } 
t#xfs_trans_reservations_t typedef s#xfs_trans_reservations xfs_trans_reservations_t 
t#xfs_dahash_t typedef t#__uint32_t xfs_dahash_t 
s#xfs_name struct xfs_name { const char * name ; int len ; } 
e#xfs_dacmp enum xfs_dacmp { XFS_CMP_DIFFERENT , XFS_CMP_EXACT , XFS_CMP_CASE } 
t#xfs_fsblock_t typedef t#__uint64_t xfs_fsblock_t 
s#xfs_bmap_free_item struct xfs_bmap_free_item { t#xfs_fsblock_t xbfi_startblock ; t#xfs_extlen_t xbfi_blockcount ; s#xfs_bmap_free_item * xbfi_next ; } 
t#xfs_bmap_free_item_t typedef s#xfs_bmap_free_item xfs_bmap_free_item_t 
s#xfs_bmap_free struct xfs_bmap_free { t#xfs_bmap_free_item_t * xbf_first ; int xbf_count ; int xbf_low ; } 
t#xfs_dablk_t typedef t#__uint32_t xfs_dablk_t 
s#xfs_da_args struct xfs_da_args { const t#__uint8_t * name ; int namelen ; t#__uint8_t * value ; int valuelen ; int flags ; t#xfs_dahash_t hashval ; t#xfs_ino_t inumber ; s#xfs_inode * dp ; t#xfs_fsblock_t * firstblock ; s#xfs_bmap_free * flist ; s#xfs_trans * trans ; t#xfs_extlen_t total ; int whichfork ; t#xfs_dablk_t blkno ; int index ; t#xfs_dablk_t rmtblkno ; int rmtblkcnt ; t#xfs_dablk_t blkno2 ; int index2 ; t#xfs_dablk_t rmtblkno2 ; int rmtblkcnt2 ; int op_flags ; e#xfs_dacmp cmpresult ; } 
s#xfs_nameops struct xfs_nameops { t#xfs_dahash_t ( * hashname ) ( s#xfs_name * ) ; e#xfs_dacmp ( * compname ) ( s#xfs_da_args * , const char * , int ) ; } 
s##xfs_chash
s##xfs_qmops
s#xfs_icsb_cnts struct xfs_icsb_cnts { t#uint64_t icsb_fdblocks ; t#uint64_t icsb_ifree ; t#uint64_t icsb_icount ; unsigned long icsb_flags ; } 
t#xfs_icsb_cnts_t typedef s#xfs_icsb_cnts xfs_icsb_cnts_t 
s##xfs_mru_cache
s#xfs_sync_work struct xfs_sync_work { s#list_head w_list ; s#xfs_mount * w_mount ; void * w_data ; void ( * w_syncer ) ( s#xfs_mount * , void * ) ; s#completion * w_completion ; } 
t#xfs_sync_work_t typedef s#xfs_sync_work xfs_sync_work_t 
s#xfs_mount struct xfs_mount { s#super_block * m_super ; t#xfs_tid_t m_tid ; s#xfs_ail * m_ail ; t#xfs_sb_t m_sb ; t#spinlock_t m_sb_lock ; s#xfs_buf * m_sb_bp ; char * m_fsname ; int m_fsname_len ; char * m_rtname ; char * m_logname ; int m_bsize ; t#xfs_agnumber_t m_agfrotor ; t#xfs_agnumber_t m_agirotor ; t#spinlock_t m_agirotor_lock ; t#xfs_agnumber_t m_maxagi ; t#uint m_readio_log ; t#uint m_readio_blocks ; t#uint m_writeio_log ; t#uint m_writeio_blocks ; s#log * m_log ; int m_logbufs ; int m_logbsize ; t#uint m_rsumlevels ; t#uint m_rsumsize ; s#xfs_inode * m_rbmip ; s#xfs_inode * m_rsumip ; s#xfs_inode * m_rootip ; s#xfs_quotainfo * m_quotainfo ; t#xfs_buftarg_t * m_ddev_targp ; t#xfs_buftarg_t * m_logdev_targp ; t#xfs_buftarg_t * m_rtdev_targp ; t#__uint8_t m_blkbit_log ; t#__uint8_t m_blkbb_log ; t#__uint8_t m_agno_log ; t#__uint8_t m_agino_log ; t#__uint16_t m_inode_cluster_size ; t#uint m_blockmask ; t#uint m_blockwsize ; t#uint m_blockwmask ; t#uint m_alloc_mxr [ 2 ] ; t#uint m_alloc_mnr [ 2 ] ; t#uint m_bmap_dmxr [ 2 ] ; t#uint m_bmap_dmnr [ 2 ] ; t#uint m_inobt_mxr [ 2 ] ; t#uint m_inobt_mnr [ 2 ] ; t#uint m_ag_maxlevels ; t#uint m_bm_maxlevels [ 2 ] ; t#uint m_in_maxlevels ; s#xfs_perag * m_perag ; s#rw_semaphore m_peraglock ; s#mutex m_growlock ; int m_fixedfsid [ 2 ] ; t#uint m_dmevmask ; t#__uint64_t m_flags ; t#uint m_dir_node_ents ; t#uint m_attr_node_ents ; int m_ialloc_inos ; int m_ialloc_blks ; int m_inoalign_mask ; t#uint m_qflags ; t#xfs_trans_reservations_t m_reservations ; t#__uint64_t m_maxicount ; t#__uint64_t m_maxioffset ; t#__uint64_t m_resblks ; t#__uint64_t m_resblks_avail ; t#__uint64_t m_resblks_save ; int m_dalign ; int m_swidth ; int m_sinoalign ; int m_attr_magicpct ; int m_dir_magicpct ; t#__uint8_t m_sectbb_log ; const s#xfs_nameops * m_dirnameops ; int m_dirblksize ; int m_dirblkfsbs ; t#xfs_dablk_t m_dirdatablk ; t#xfs_dablk_t m_dirleafblk ; t#xfs_dablk_t m_dirfreeblk ; t#uint m_chsize ; s#xfs_chash * m_chash ; s#xfs_dmops * m_dm_ops ; s#xfs_qmops * m_qm_ops ; t#atomic_t m_active_trans ; t#xfs_icsb_cnts_t * m_sb_cnts ; unsigned long m_icsb_counters ; s#notifier_block m_icsb_notifier ; s#mutex m_icsb_mutex ; s#xfs_mru_cache * m_filestream ; s#task_struct * m_sync_task ; t#xfs_sync_work_t m_sync_work ; s#list_head m_sync_list ; t#spinlock_t m_sync_lock ; int m_sync_seq ; t#wait_queue_head_t m_wait_single_sync_task ; t#__int64_t m_update_flags ; s#vfsmount * m_vfsmount ; } 
s##xfs_dquot
s#xfs_imap struct xfs_imap { t#xfs_daddr_t im_blkno ; t#ushort im_len ; t#ushort im_boffset ; } 
s#xfs_btree_block struct xfs_btree_block { t#__be32 bb_magic ; t#__be16 bb_level ; t#__be16 bb_numrecs ; union { struct { t#__be32 bb_leftsib ; t#__be32 bb_rightsib ; } s ; struct { t#__be64 bb_leftsib ; t#__be64 bb_rightsib ; } l ; } bb_u ; } 
t#xfs_extnum_t typedef t#__int32_t xfs_extnum_t 
s#xfs_bmbt_rec_host struct xfs_bmbt_rec_host { t#__uint64_t l0 , l1 ; } 
t#xfs_bmbt_rec_host_t typedef s#xfs_bmbt_rec_host xfs_bmbt_rec_host_t 
s#xfs_ext_irec struct xfs_ext_irec { t#xfs_bmbt_rec_host_t * er_extbuf ; t#xfs_extnum_t er_extoff ; t#xfs_extnum_t er_extcount ; } 
t#xfs_ext_irec_t typedef s#xfs_ext_irec xfs_ext_irec_t 
t#xfs_dev_t typedef t#__u32 xfs_dev_t 
s#xfs_ifork struct xfs_ifork { int if_bytes ; int if_real_bytes ; s#xfs_btree_block * if_broot ; short if_broot_bytes ; unsigned char if_flags ; unsigned char if_ext_max ; t#xfs_extnum_t if_lastex ; union { t#xfs_bmbt_rec_host_t * if_extents ; t#xfs_ext_irec_t * if_ext_irec ; char * if_data ; } if_u1 ; union { t#xfs_bmbt_rec_host_t if_inline_ext [ 2 ] ; char if_inline_data [ 32 ] ; t#xfs_dev_t if_rdev ; t#uuid_t if_uuid ; } if_u2 ; } 
t#xfs_ifork_t typedef s#xfs_ifork xfs_ifork_t 
s#xfs_bmbt_rec struct xfs_bmbt_rec { t#__be64 l0 , l1 ; } 
s#xfs_inode_log_format struct xfs_inode_log_format { t#__uint16_t ilf_type ; t#__uint16_t ilf_size ; t#__uint32_t ilf_fields ; t#__uint16_t ilf_asize ; t#__uint16_t ilf_dsize ; t#__uint64_t ilf_ino ; union { t#__uint32_t ilfu_rdev ; t#uuid_t ilfu_uuid ; } ilf_u ; t#__int64_t ilf_blkno ; t#__int32_t ilf_len ; t#__int32_t ilf_boffset ; } 
t#xfs_inode_log_format_t typedef s#xfs_inode_log_format xfs_inode_log_format_t 
s#xfs_inode_log_item struct xfs_inode_log_item { t#xfs_log_item_t ili_item ; s#xfs_inode * ili_inode ; t#xfs_lsn_t ili_flush_lsn ; t#xfs_lsn_t ili_last_lsn ; unsigned short ili_flags ; unsigned short ili_logged ; unsigned int ili_last_fields ; s#xfs_bmbt_rec * ili_extents_buf ; s#xfs_bmbt_rec * ili_aextents_buf ; unsigned int ili_pushbuf_flag ; t#xfs_inode_log_format_t ili_format ; } 
t#mrlock_t typedef struct { s#rw_semaphore mr_lock ; } mrlock_t 
t#__int8_t typedef signed char __int8_t 
s#xfs_ictimestamp struct xfs_ictimestamp { t#__int32_t t_sec ; t#__int32_t t_nsec ; } 
t#xfs_ictimestamp_t typedef s#xfs_ictimestamp xfs_ictimestamp_t 
t#xfs_fsize_t typedef t#__int64_t xfs_fsize_t 
t#__int16_t typedef signed short int __int16_t 
t#xfs_aextnum_t typedef t#__int16_t xfs_aextnum_t 
s#xfs_icdinode struct xfs_icdinode { t#__uint16_t di_magic ; t#__uint16_t di_mode ; t#__int8_t di_version ; t#__int8_t di_format ; t#__uint16_t di_onlink ; t#__uint32_t di_uid ; t#__uint32_t di_gid ; t#__uint32_t di_nlink ; t#__uint16_t di_projid ; t#__uint8_t di_pad [ 8 ] ; t#__uint16_t di_flushiter ; t#xfs_ictimestamp_t di_atime ; t#xfs_ictimestamp_t di_mtime ; t#xfs_ictimestamp_t di_ctime ; t#xfs_fsize_t di_size ; t#xfs_drfsbno_t di_nblocks ; t#xfs_extlen_t di_extsize ; t#xfs_extnum_t di_nextents ; t#xfs_aextnum_t di_anextents ; t#__uint8_t di_forkoff ; t#__int8_t di_aformat ; t#__uint32_t di_dmevmask ; t#__uint16_t di_dmstate ; t#__uint16_t di_flags ; t#__uint32_t di_gen ; } 
t#xfs_icdinode_t typedef s#xfs_icdinode xfs_icdinode_t 
s#xfs_inode struct xfs_inode { s#xfs_mount * i_mount ; s#xfs_dquot * i_udquot ; s#xfs_dquot * i_gdquot ; t#xfs_ino_t i_ino ; s#xfs_imap i_imap ; t#xfs_ifork_t * i_afp ; t#xfs_ifork_t i_df ; s#xfs_trans * i_transp ; s#xfs_inode_log_item * i_itemp ; t#mrlock_t i_lock ; t#mrlock_t i_iolock ; s#completion i_flush ; t#atomic_t i_pincount ; t#wait_queue_head_t i_ipin_wait ; t#spinlock_t i_flags_lock ; unsigned short i_flags ; unsigned char i_update_core ; unsigned int i_delayed_blks ; t#xfs_icdinode_t i_d ; t#xfs_fsize_t i_size ; t#xfs_fsize_t i_new_size ; t#atomic_t i_iocount ; s#inode i_vnode ; } 
t#xfs_send_data_t typedef int ( * xfs_send_data_t ) ( int , s#xfs_inode * , t#xfs_off_t , t#size_t , int , int * ) 
t#xfs_send_mmap_t typedef int ( * xfs_send_mmap_t ) ( s#vm_area_struct * , t#uint ) 
t#xfs_send_destroy_t typedef int ( * xfs_send_destroy_t ) ( s#xfs_inode * , t#dm_right_t ) 
t#xfs_send_namesp_t typedef int ( * xfs_send_namesp_t ) ( t#dm_eventtype_t , s#xfs_mount * , s#xfs_inode * , t#dm_right_t , s#xfs_inode * , t#dm_right_t , const char * , const char * , t#mode_t , int , int ) 
t#xfs_send_mount_t typedef int ( * xfs_send_mount_t ) ( s#xfs_mount * , t#dm_right_t , char * , char * ) 
t#xfs_send_unmount_t typedef void ( * xfs_send_unmount_t ) ( s#xfs_mount * , s#xfs_inode * , t#dm_right_t , t#mode_t , int , int ) 
s#xfs_dmops struct xfs_dmops { t#xfs_send_data_t xfs_send_data ; t#xfs_send_mmap_t xfs_send_mmap ; t#xfs_send_destroy_t xfs_send_destroy ; t#xfs_send_namesp_t xfs_send_namesp ; t#xfs_send_mount_t xfs_send_mount ; t#xfs_send_unmount_t xfs_send_unmount ; } 
xfs_dmcore_xfs extern s#xfs_dmops xfs_dmcore_xfs 

/* fs/xfs/linux-2.6/xfs_ksyms.o */
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##timer_rand_state
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##xattr_handler
s##mtd_info
s##xfs_dquot_acct
s#xfs_ail_cursor struct xfs_ail_cursor { s#xfs_ail_cursor * next ; s#xfs_log_item * item ; } 
s#xfs_ail struct xfs_ail { s#xfs_mount * xa_mount ; s#list_head xa_ail ; t#uint xa_gen ; s#task_struct * xa_task ; t#xfs_lsn_t xa_target ; s#xfs_ail_cursor xa_cursors ; t#spinlock_t xa_lock ; } 
s#xfs_buf_cancel struct xfs_buf_cancel { t#xfs_daddr_t bc_blkno ; t#uint bc_len ; int bc_refcount ; s#xfs_buf_cancel * bc_next ; } 
s#sv_s struct sv_s { t#wait_queue_head_t waiters ; } 
t#sv_t typedef s#sv_s sv_t 
s#xlog_rec_header struct xlog_rec_header { t#__be32 h_magicno ; t#__be32 h_cycle ; t#__be32 h_version ; t#__be32 h_len ; t#__be64 h_lsn ; t#__be64 h_tail_lsn ; t#__be32 h_chksum ; t#__be32 h_prev_block ; t#__be32 h_num_logops ; t#__be32 h_cycle_data [ ( 32 * 1024 ) / ( 1 << 9 ) ] ; t#__be32 h_fmt ; t#uuid_t h_fs_uuid ; t#__be32 h_size ; } 
t#xlog_rec_header_t typedef s#xlog_rec_header xlog_rec_header_t 
s#xlog_rec_ext_header struct xlog_rec_ext_header { t#__be32 xh_cycle ; t#__be32 xh_cycle_data [ ( 32 * 1024 ) / ( 1 << 9 ) ] ; } 
t#xlog_rec_ext_header_t typedef s#xlog_rec_ext_header xlog_rec_ext_header_t 
u#xlog_in_core2 union xlog_in_core2 { t#xlog_rec_header_t hic_header ; t#xlog_rec_ext_header_t hic_xheader ; char hic_sector [ 512 ] ; } 
t#xlog_in_core_2_t typedef u#xlog_in_core2 xlog_in_core_2_t 
s#xlog_in_core struct xlog_in_core { t#sv_t ic_force_wait ; t#sv_t ic_write_wait ; s#xlog_in_core * ic_next ; s#xlog_in_core * ic_prev ; s#xfs_buf * ic_bp ; s#log * ic_log ; int ic_size ; int ic_offset ; int ic_bwritecnt ; unsigned short ic_state ; char * ic_datap ; t#spinlock_t ic_callback_lock __attribute__ ( ( __aligned__ ( 256 ) ) ) ; t#xfs_log_callback_t * ic_callback ; t#xfs_log_callback_t * * ic_callback_tail ; t#atomic_t ic_refcnt __attribute__ ( ( __aligned__ ( 256 ) ) ) ; t#xlog_in_core_2_t * ic_data ; } 
t#xlog_in_core_t typedef s#xlog_in_core xlog_in_core_t 
t#xlog_tid_t typedef t#__uint32_t xlog_tid_t 
s#xlog_res struct xlog_res { t#uint r_len ; t#uint r_type ; } 
t#xlog_res_t typedef s#xlog_res xlog_res_t 
s#xlog_ticket struct xlog_ticket { t#sv_t t_wait ; s#xlog_ticket * t_next ; s#xlog_ticket * t_prev ; t#xlog_tid_t t_tid ; t#atomic_t t_ref ; int t_curr_res ; int t_unit_res ; char t_ocnt ; char t_cnt ; char t_clientid ; char t_flags ; t#uint t_trans_type ; t#uint t_res_num ; t#uint t_res_num_ophdrs ; t#uint t_res_arr_sum ; t#uint t_res_o_flow ; t#xlog_res_t t_res_arr [ 15 ] ; } 
t#xlog_ticket_t typedef s#xlog_ticket xlog_ticket_t 
s#log struct log { s#xfs_mount * l_mp ; s#xfs_ail * l_ailp ; s#xfs_buf * l_xbuf ; s#xfs_buftarg * l_targ ; t#uint l_flags ; t#uint l_quotaoffs_flag ; s#xfs_buf_cancel * * l_buf_cancel_table ; int l_iclog_hsize ; int l_iclog_heads ; t#uint l_sectbb_log ; t#uint l_sectbb_mask ; int l_iclog_size ; int l_iclog_size_log ; int l_iclog_bufs ; t#xfs_daddr_t l_logBBstart ; int l_logsize ; int l_logBBsize ; t#sv_t l_flush_wait __attribute__ ( ( __aligned__ ( 256 ) ) ) ; int l_covered_state ; t#xlog_in_core_t * l_iclog ; t#spinlock_t l_icloglock ; t#xfs_lsn_t l_tail_lsn ; t#xfs_lsn_t l_last_sync_lsn ; int l_curr_cycle ; int l_prev_cycle ; int l_curr_block ; int l_prev_block ; t#spinlock_t l_grant_lock __attribute__ ( ( __aligned__ ( 256 ) ) ) ; t#xlog_ticket_t * l_reserve_headq ; t#xlog_ticket_t * l_write_headq ; int l_grant_reserve_cycle ; int l_grant_reserve_bytes ; int l_grant_write_cycle ; int l_grant_write_bytes ; } 
s##xfs_quotainfo
s##xfs_chash
s##xfs_qmops
s##xfs_mru_cache
s##xfs_dquot
t#xfs_inode_t typedef s#xfs_inode xfs_inode_t 
xfs_iunlock void xfs_iunlock ( t#xfs_inode_t * , t#uint ) 
xfs_attr_remove int xfs_attr_remove ( s#xfs_inode * , const char * , int ) 
xfs_iunlock_map_shared void xfs_iunlock_map_shared ( t#xfs_inode_t * , t#uint ) 
xfs_iget int xfs_iget ( s#xfs_mount * , s#xfs_trans * , t#xfs_ino_t , t#uint , t#uint , t#xfs_inode_t * * , t#xfs_daddr_t ) 
t#xfs_fileoff_t typedef t#__uint64_t xfs_fileoff_t 
t#xfs_filblks_t typedef t#__uint64_t xfs_filblks_t 
t#xfs_exntst_t typedef enum { XFS_EXT_NORM , XFS_EXT_UNWRITTEN , XFS_EXT_DMAPI_OFFLINE , XFS_EXT_INVALID } xfs_exntst_t 
s#xfs_bmbt_irec struct xfs_bmbt_irec { t#xfs_fileoff_t br_startoff ; t#xfs_fsblock_t br_startblock ; t#xfs_filblks_t br_blockcount ; t#xfs_exntst_t br_state ; } 
t#xfs_bmap_free_t typedef s#xfs_bmap_free xfs_bmap_free_t 
s#xfs_extdelta struct xfs_extdelta { t#xfs_fileoff_t xed_startoff ; t#xfs_filblks_t xed_blockcount ; } 
t#xfs_extdelta_t typedef s#xfs_extdelta xfs_extdelta_t 
xfs_bmapi int xfs_bmapi ( s#xfs_trans * , s#xfs_inode * , t#xfs_fileoff_t , t#xfs_filblks_t , int , t#xfs_fsblock_t * , t#xfs_extlen_t , s#xfs_bmbt_irec * , int * , t#xfs_bmap_free_t * , t#xfs_extdelta_t * ) 
t#xfs_mount_t typedef s#xfs_mount xfs_mount_t 
xfs_internal_inum int xfs_internal_inum ( t#xfs_mount_t * , t#xfs_ino_t ) 
xfs_attr_set int xfs_attr_set ( s#xfs_inode * , const char * , char * , int , int ) 
t#xfs_trans_t typedef s#xfs_trans xfs_trans_t 
xfs_trans_reserve int xfs_trans_reserve ( t#xfs_trans_t * , t#uint , t#uint , t#uint , t#uint , t#uint ) 
xfs_trans_ijoin void xfs_trans_ijoin ( t#xfs_trans_t * , s#xfs_inode * , t#uint ) 
xfs_free_eofblocks extern int xfs_free_eofblocks ( s#xfs_mount * , s#xfs_inode * , int ) 
kmem_free extern void kmem_free ( const void * ) 
_xfs_trans_commit int _xfs_trans_commit ( t#xfs_trans_t * , t#uint , int * ) 
xfs_ilock void xfs_ilock ( t#xfs_inode_t * , t#uint ) 
xfs_attr_get int xfs_attr_get ( s#xfs_inode * , const char * , char * , int * , int ) 
xfs_readdir int xfs_readdir ( s#xfs_inode * , void * , t#size_t , t#xfs_off_t * , t#filldir_t ) 
xfs_setattr int xfs_setattr ( s#xfs_inode * , s#iattr * , int ) 
xfs_trans_alloc t#xfs_trans_t * xfs_trans_alloc ( s#xfs_mount * , t#uint ) 
xfs_trans_cancel void xfs_trans_cancel ( t#xfs_trans_t * , int ) 
xfs_fsync int xfs_fsync ( s#xfs_inode * ) 
xfs_iput_new void xfs_iput_new ( t#xfs_inode_t * , t#uint ) 
t#bulkstat_one_pf typedef int ( * bulkstat_one_pf ) ( s#xfs_mount * , t#xfs_ino_t , void * , int , void * , t#xfs_daddr_t , int * , void * , int * ) 
xfs_bulkstat int xfs_bulkstat ( t#xfs_mount_t * , t#xfs_ino_t * , int * , t#bulkstat_one_pf , void * , t#size_t , char * , int , int * ) 
xfs_ilock_map_shared t#uint xfs_ilock_map_shared ( t#xfs_inode_t * ) 
xfs_iput void xfs_iput ( t#xfs_inode_t * , t#uint ) 
xfs_trans_log_inode void xfs_trans_log_inode ( t#xfs_trans_t * , s#xfs_inode * , t#uint ) 
s#attrlist_cursor_kern struct attrlist_cursor_kern { t#__u32 hashval ; t#__u32 blkno ; t#__u32 offset ; t#__u16 pad1 ; t#__u8 pad2 ; t#__u8 initted ; } 
xfs_attr_list int xfs_attr_list ( s#xfs_inode * , char * , int , int , s#attrlist_cursor_kern * ) 
kmem_alloc extern void * kmem_alloc ( t#size_t , unsigned int ) 
s#xfs_flock64 struct xfs_flock64 { t#__s16 l_type ; t#__s16 l_whence ; t#__s64 l_start ; t#__s64 l_len ; t#__s32 l_sysid ; t#__u32 l_pid ; t#__s32 l_pad [ 4 ] ; } 
t#xfs_flock64_t typedef s#xfs_flock64 xfs_flock64_t 
xfs_change_file_space int xfs_change_file_space ( s#xfs_inode * , int , t#xfs_flock64_t * , t#xfs_off_t , int ) 

/* fs/xfs/linux-2.6/xfs_super.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##xattr_handler
s##hd_geometry
s##blk_trace
s##timer_rand_state
s##mtd_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##mnt_namespace
xfs_fs_type s#file_system_type xfs_fs_type 

/* fs/xfs/support/debug.o */
assfail extern void assfail ( char * , char * , int ) 

/* fs/xfs/xfs_rw.o */
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##timer_rand_state
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##xattr_handler
s##mtd_info
s##xfs_ail
s##log
s##xfs_quotainfo
s##xfs_dquot_acct
s##xfs_nameops
s##xfs_chash
s##xfs_qmops
s##xfs_mru_cache
s##xfs_dquot
xfs_get_extsz_hint extern t#xfs_extlen_t xfs_get_extsz_hint ( s#xfs_inode * ) 

/* init/main.o */
e#system_states extern enum system_states { SYSTEM_BOOTING , SYSTEM_RUNNING , SYSTEM_HALT , SYSTEM_POWER_OFF , SYSTEM_RESTART , SYSTEM_SUSPEND_DISK , } 
system_state extern e#system_states system_state 
reset_devices extern unsigned int reset_devices 
loops_per_jiffy extern unsigned long loops_per_jiffy 
nr_cpu_ids extern int nr_cpu_ids 

/* init/version.o */
init_uts_ns extern s#uts_namespace init_uts_ns 

/* kernel/async.o */
t#async_cookie_t typedef t#u64 async_cookie_t 
t#async_func_ptr typedef void ( async_func_ptr ) ( void * , t#async_cookie_t ) 
async_schedule extern t#async_cookie_t async_schedule ( t#async_func_ptr * , void * ) 
async_schedule_domain extern t#async_cookie_t async_schedule_domain ( t#async_func_ptr * , void * , s#list_head * ) 
async_synchronize_full extern void async_synchronize_full ( void ) 
async_synchronize_full_domain extern void async_synchronize_full_domain ( s#list_head * ) 
async_synchronize_cookie_domain extern void async_synchronize_cookie_domain ( t#async_cookie_t , s#list_head * ) 
async_synchronize_cookie extern void async_synchronize_cookie ( t#async_cookie_t ) 

/* kernel/audit.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##nameidata
s##tvec_base
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##posix_acl
s##eventfd_ctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##xfrm_policy
s##sec_path
s#audit_buffer struct audit_buffer { s#list_head list ; s#sk_buff * skb ; s#audit_context * ctx ; t#gfp_t gfp_mask ; } 
audit_log_start extern s#audit_buffer * audit_log_start ( s#audit_context * , t#gfp_t , int ) 
audit_log_end extern void audit_log_end ( s#audit_buffer * ) 
audit_log_format extern void audit_log_format ( s#audit_buffer * , const char * , ... ) 
audit_log extern void audit_log ( s#audit_context * , t#gfp_t , int , const char * , ... ) 
audit_log_vformat extern void audit_log_vformat ( s#audit_buffer * , const char * , va_list args ) 
audit_log_untrustedstring extern void audit_log_untrustedstring ( s#audit_buffer * , const char * ) 

/* kernel/auditsc.o */
s##audit_buffer
audit_log_task_context extern void audit_log_task_context ( s#audit_buffer * ) 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##mnt_namespace
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##bts_context
s##nsproxy
s##proc_dir_entry
s##taskstats
s##tty_audit_buf
e#audit_state enum audit_state { AUDIT_DISABLED , AUDIT_SETUP_CONTEXT , AUDIT_BUILD_CONTEXT , AUDIT_RECORD_CONTEXT } 
s#audit_cap_data struct audit_cap_data { t#kernel_cap_t permitted ; t#kernel_cap_t inheritable ; union { unsigned int fE ; t#kernel_cap_t effective ; } ; } 
s#audit_names struct audit_names { const char * name ; int name_len ; unsigned name_put ; unsigned long ino ; t#dev_t dev ; t#umode_t mode ; t#uid_t uid ; t#gid_t gid ; t#dev_t rdev ; t#u32 osid ; s#audit_cap_data fcap ; unsigned int fcap_ver ; } 
s#audit_aux_data struct audit_aux_data { s#audit_aux_data * next ; int type ; } 
s##audit_chunk
s#audit_tree_refs struct audit_tree_refs { s#audit_tree_refs * next ; s#audit_chunk * c [ 31 ] ; } 
t#__kernel_mqd_t typedef int __kernel_mqd_t 
t#mqd_t typedef t#__kernel_mqd_t mqd_t 
s#mq_attr struct mq_attr { long mq_flags ; long mq_maxmsg ; long mq_msgsize ; long mq_curmsgs ; long __reserved [ 4 ] ; } 
s#audit_context struct audit_context { int dummy ; int in_syscall ; e#audit_state state , current_state ; unsigned int serial ; int major ; s#timespec ctime ; unsigned long argv [ 4 ] ; long return_code ; t#u64 prio ; int return_valid ; int name_count ; s#audit_names names [ 20 ] ; char * filterkey ; s#path pwd ; s#audit_context * previous ; s#audit_aux_data * aux ; s#audit_aux_data * aux_pids ; s#__kernel_sockaddr_storage * sockaddr ; t#size_t sockaddr_len ; t#pid_t pid , ppid ; t#uid_t uid , euid , suid , fsuid ; t#gid_t gid , egid , sgid , fsgid ; unsigned long personality ; int arch ; t#pid_t target_pid ; t#uid_t target_auid ; t#uid_t target_uid ; unsigned int target_sessionid ; t#u32 target_sid ; char target_comm [ 16 ] ; s#audit_tree_refs * trees , * first_trees ; s#list_head killed_trees ; int tree_count ; int type ; union { struct { int nargs ; long args [ 6 ] ; } socketcall ; struct { t#uid_t uid ; t#gid_t gid ; t#mode_t mode ; t#u32 osid ; int has_perm ; t#uid_t perm_uid ; t#gid_t perm_gid ; t#mode_t perm_mode ; unsigned long qbytes ; } ipc ; struct { t#mqd_t mqdes ; s#mq_attr mqstat ; } mq_getsetattr ; struct { t#mqd_t mqdes ; int sigev_signo ; } mq_notify ; struct { t#mqd_t mqdes ; t#size_t msg_len ; unsigned int msg_prio ; s#timespec abs_timeout ; } mq_sendrecv ; struct { int oflag ; t#mode_t mode ; s#mq_attr attr ; } mq_open ; struct { t#pid_t pid ; s#audit_cap_data cap ; } capset ; } ; int fds [ 2 ] ; } 
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##map_segment
s##compat_timespec
s##pollfd
s##posix_acl
__audit_inode_child extern void __audit_inode_child ( const char * , const s#dentry * , const s#inode * ) 

/* kernel/capability.o */
__cap_empty_set extern const t#kernel_cap_t __cap_empty_set 
__cap_full_set extern const t#kernel_cap_t __cap_full_set 
__cap_init_eff_set extern const t#kernel_cap_t __cap_init_eff_set 
capable extern int capable ( int ) 

/* kernel/cpu.o */
get_online_cpus extern void get_online_cpus ( void ) 
put_online_cpus extern void put_online_cpus ( void ) 
register_cpu_notifier extern int register_cpu_notifier ( s#notifier_block * ) 
unregister_cpu_notifier extern void unregister_cpu_notifier ( s#notifier_block * ) 
cpu_down int cpu_down ( unsigned int ) 
cpu_bit_bitmap extern const unsigned long cpu_bit_bitmap [ 64 + 1 ] [ ( ( ( 64 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] 
cpu_all_bits extern const unsigned long cpu_all_bits [ ( ( ( 64 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] 
cpu_possible_mask extern const s#cpumask * const cpu_possible_mask 
cpu_online_mask extern const s#cpumask * const cpu_online_mask 
cpu_present_mask extern const s#cpumask * const cpu_present_mask 
cpu_active_mask extern const s#cpumask * const cpu_active_mask 

/* kernel/cpuset.o */
cpuset_mem_spread_node extern int cpuset_mem_spread_node ( void ) 

/* kernel/cred.o */
s##key_type
s##key_user
s##keyring_list
__put_cred extern void __put_cred ( s#cred * ) 
prepare_creds extern s#cred * prepare_creds ( void ) 
commit_creds extern int commit_creds ( s#cred * ) 
abort_creds extern void abort_creds ( s#cred * ) 
override_creds extern const s#cred * override_creds ( const s#cred * ) 
revert_creds extern void revert_creds ( const s#cred * ) 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##array_cache
s##kmem_list3
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##bts_context
s##fs_struct
s##ipc_namespace
s##mnt_namespace
s##net_device
s##sock
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sec_path
s##ip_conntrack_stat
s##net_generic
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
prepare_kernel_cred extern s#cred * prepare_kernel_cred ( s#task_struct * ) 
set_security_override extern int set_security_override ( s#cred * , t#u32 ) 
set_security_override_from_ctx extern int set_security_override_from_ctx ( s#cred * , const char * ) 
set_create_files_as extern int set_create_files_as ( s#cred * , s#inode * ) 

/* kernel/exec_domain.o */
s##map_segment
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##backing_dev_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##compat_timespec
s##pollfd
s##nameidata
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
register_exec_domain extern int register_exec_domain ( s#exec_domain * ) 
unregister_exec_domain extern int unregister_exec_domain ( s#exec_domain * ) 
__set_personality extern int __set_personality ( unsigned long ) 

/* kernel/exit.o */
allow_signal extern int allow_signal ( int ) 
disallow_signal extern int disallow_signal ( int ) 
daemonize extern void daemonize ( const char * , ... ) 
do_exit void do_exit ( long ) 
complete_and_exit void complete_and_exit ( s#completion * , long ) 

/* kernel/fork.o */
s##rq
s##cfs_rq
s##rt_rq
s#anon_vma struct anon_vma { t#spinlock_t lock ; s#list_head head ; } 
s##map_segment
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##nameidata
s##mnt_namespace
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##array_cache
s##kmem_list3
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##timer_rand_state
s##mtd_info
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##pollfd
s##posix_acl
s##bts_context
s##uts_namespace
s##ipc_namespace
s##net
s##tty_audit_buf
s##audit_context
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##futex_pi_state
s##mem_cgroup
free_task extern void free_task ( s#task_struct * ) 
__mmdrop extern void __mmdrop ( s#mm_struct * ) 
mmput extern void mmput ( s#mm_struct * ) 
get_task_mm extern s#mm_struct * get_task_mm ( s#task_struct * ) 

/* kernel/freezer.o */
refrigerator extern void refrigerator ( void ) 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
thaw_process extern int thaw_process ( s#task_struct * ) 

/* kernel/groups.o */
groups_alloc extern s#group_info * groups_alloc ( int ) 
groups_free extern void groups_free ( s#group_info * ) 
s##key_type
s##key_user
s##keyring_list
s##user_namespace
set_groups extern int set_groups ( s#cred * , s#group_info * ) 
set_current_groups extern int set_current_groups ( s#group_info * ) 
in_group_p extern int in_group_p ( t#gid_t ) 
in_egroup_p extern int in_egroup_p ( t#gid_t ) 

/* kernel/hrtimer.o */
ktime_add_safe extern t#ktime_t ktime_add_safe ( const t#ktime_t , const t#ktime_t ) 
hrtimer_forward extern t#u64 hrtimer_forward ( s#hrtimer * , t#ktime_t , t#ktime_t ) 
e#hrtimer_mode enum hrtimer_mode { HRTIMER_MODE_ABS = 0x0 , HRTIMER_MODE_REL = 0x1 , HRTIMER_MODE_PINNED = 0x02 , HRTIMER_MODE_ABS_PINNED = 0x02 , HRTIMER_MODE_REL_PINNED = 0x03 , } 
hrtimer_start_range_ns extern int hrtimer_start_range_ns ( s#hrtimer * , t#ktime_t , unsigned long , const e#hrtimer_mode ) 
hrtimer_start extern int hrtimer_start ( s#hrtimer * , t#ktime_t , const e#hrtimer_mode ) 
hrtimer_try_to_cancel extern int hrtimer_try_to_cancel ( s#hrtimer * ) 
hrtimer_cancel extern int hrtimer_cancel ( s#hrtimer * ) 
hrtimer_get_remaining extern t#ktime_t hrtimer_get_remaining ( const s#hrtimer * ) 
hrtimer_init extern void hrtimer_init ( s#hrtimer * , t#clockid_t , e#hrtimer_mode ) 
hrtimer_get_res extern int hrtimer_get_res ( const t#clockid_t , s#timespec * ) 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s#hrtimer_sleeper struct hrtimer_sleeper { s#hrtimer timer ; s#task_struct * task ; } 
hrtimer_init_sleeper extern void hrtimer_init_sleeper ( s#hrtimer_sleeper * , s#task_struct * ) 
schedule_hrtimeout_range extern int schedule_hrtimeout_range ( t#ktime_t * , unsigned long , const e#hrtimer_mode ) 
schedule_hrtimeout extern int schedule_hrtimeout ( t#ktime_t * , const e#hrtimer_mode ) 

/* kernel/kallsyms.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
kallsyms_on_each_symbol int kallsyms_on_each_symbol ( int ( * ) ( void * , const char * , s#module * , unsigned long ) , void * ) 
sprint_symbol extern int sprint_symbol ( char * , unsigned long ) 
__print_symbol extern void __print_symbol ( const char * , unsigned long ) 

/* kernel/kfifo.o */
kfifo_init extern s#kfifo * kfifo_init ( unsigned char * , unsigned int , t#gfp_t , t#spinlock_t * ) 
kfifo_alloc extern s#kfifo * kfifo_alloc ( unsigned int , t#gfp_t , t#spinlock_t * ) 
kfifo_free extern void kfifo_free ( s#kfifo * ) 
__kfifo_put extern unsigned int __kfifo_put ( s#kfifo * , const unsigned char * , unsigned int ) 
__kfifo_get extern unsigned int __kfifo_get ( s#kfifo * , unsigned char * , unsigned int ) 

/* kernel/kmod.o */
__request_module extern int __request_module ( t#bool , const char * , ... ) 
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e#umh_wait enum umh_wait { UMH_NO_WAIT = - 1 , UMH_WAIT_EXEC = 0 , UMH_WAIT_PROC = 1 , } 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##bts_context
s##pid_namespace
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##mnt_namespace
s#subprocess_info struct subprocess_info { s#work_struct work ; s#completion * complete ; s#cred * cred ; char * path ; char * * argv ; char * * envp ; e#umh_wait wait ; int retval ; s#file * stdin ; void ( * cleanup ) ( char * * , char * * ) ; } 
call_usermodehelper_freeinfo void call_usermodehelper_freeinfo ( s#subprocess_info * ) 
call_usermodehelper_setup s#subprocess_info * call_usermodehelper_setup ( char * , char * * , char * * , t#gfp_t ) 
call_usermodehelper_setkeys void call_usermodehelper_setkeys ( s#subprocess_info * , s#key * ) 
call_usermodehelper_setcleanup void call_usermodehelper_setcleanup ( s#subprocess_info * , void ( * ) ( char * * , char * * ) ) 
call_usermodehelper_stdinpipe int call_usermodehelper_stdinpipe ( s#subprocess_info * , s#file * * ) 
call_usermodehelper_exec int call_usermodehelper_exec ( s#subprocess_info * , e#umh_wait ) 
call_usermodehelper_pipe extern int call_usermodehelper_pipe ( char * , char * [ ] , char * [ ] , s#file * * ) 

/* kernel/kprobes.o */
t#kprobe_opcode_t typedef t#u16 kprobe_opcode_t 
t#kprobe_pre_handler_t typedef int ( * kprobe_pre_handler_t ) ( s#kprobe * , s#pt_regs * ) 
t#kprobe_post_handler_t typedef void ( * kprobe_post_handler_t ) ( s#kprobe * , s#pt_regs * , unsigned long ) 
t#kprobe_fault_handler_t typedef int ( * kprobe_fault_handler_t ) ( s#kprobe * , s#pt_regs * , int ) 
t#kprobe_break_handler_t typedef int ( * kprobe_break_handler_t ) ( s#kprobe * , s#pt_regs * ) 
s#arch_specific_insn struct arch_specific_insn { t#kprobe_opcode_t * insn ; int fixup ; int ilen ; int reg ; } 
s#kprobe struct kprobe { s#hlist_node hlist ; s#list_head list ; unsigned long nmissed ; t#kprobe_opcode_t * addr ; const char * symbol_name ; unsigned int offset ; t#kprobe_pre_handler_t pre_handler ; t#kprobe_post_handler_t post_handler ; t#kprobe_fault_handler_t fault_handler ; t#kprobe_break_handler_t break_handler ; t#kprobe_opcode_t opcode ; s#arch_specific_insn ainsn ; t#u32 flags ; } 
register_kprobe int register_kprobe ( s#kprobe * ) 
register_kprobes int register_kprobes ( s#kprobe * * , int ) 
unregister_kprobe void unregister_kprobe ( s#kprobe * ) 
unregister_kprobes void unregister_kprobes ( s#kprobe * * , int ) 
s#jprobe struct jprobe { s#kprobe kp ; void * entry ; } 
register_jprobes int register_jprobes ( s#jprobe * * , int ) 
register_jprobe int register_jprobe ( s#jprobe * ) 
unregister_jprobe void unregister_jprobe ( s#jprobe * ) 
unregister_jprobes void unregister_jprobes ( s#jprobe * * , int ) 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s#kretprobe_instance struct kretprobe_instance { s#hlist_node hlist ; s#kretprobe * rp ; t#kprobe_opcode_t * ret_addr ; s#task_struct * task ; char data [ 0 ] ; } 
t#kretprobe_handler_t typedef int ( * kretprobe_handler_t ) ( s#kretprobe_instance * , s#pt_regs * ) 
s#kretprobe struct kretprobe { s#kprobe kp ; t#kretprobe_handler_t handler ; t#kretprobe_handler_t entry_handler ; int maxactive ; int nmissed ; t#size_t data_size ; s#hlist_head free_instances ; t#spinlock_t lock ; } 
register_kretprobe int register_kretprobe ( s#kretprobe * ) 
register_kretprobes int register_kretprobes ( s#kretprobe * * , int ) 
unregister_kretprobe void unregister_kretprobe ( s#kretprobe * ) 
unregister_kretprobes void unregister_kretprobes ( s#kretprobe * * , int ) 
disable_kprobe int disable_kprobe ( s#kprobe * ) 
enable_kprobe int enable_kprobe ( s#kprobe * ) 
jprobe_return void jprobe_return ( void ) 

/* kernel/ksysfs.o */
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##file
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##exec_domain
s##pollfd
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##sysfs_dirent
kernel_kobj extern s#kobject * kernel_kobj 

/* kernel/kthread.o */
kthread_should_stop int kthread_should_stop ( void ) 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##file
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##exec_domain
s##compat_timespec
s##pollfd
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##backing_dev_info
s##io_context
s##dentry
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
kthread_create s#task_struct * kthread_create ( int ( * ) ( void * ) , void * , const char [ ] , ... ) 
kthread_stop int kthread_stop ( s#task_struct * ) 

/* kernel/module.o */
__tracepoint_module_get extern s#tracepoint __tracepoint_module_get 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
module_mutex extern s#mutex module_mutex 
register_module_notifier int register_module_notifier ( s#notifier_block * ) 
unregister_module_notifier int unregister_module_notifier ( s#notifier_block * ) 
__module_put_and_exit extern void __module_put_and_exit ( s#module * , long ) 
s#symsearch struct symsearch { const s#kernel_symbol * start , * stop ; const unsigned long * crcs ; enum { NOT_GPL_ONLY , GPL_ONLY , WILL_BE_GPL_ONLY , } licence ; t#bool unused ; } 
each_symbol t#bool each_symbol ( t#bool ( * ) ( const s#symsearch * , s#module * , unsigned int , void * ) , void * ) 
find_symbol const s#kernel_symbol * find_symbol ( const char * , s#module * * , const unsigned long * * , t#bool , t#bool ) 
find_module s#module * find_module ( const char * ) 
use_module int use_module ( s#module * , s#module * ) 
module_refcount unsigned int module_refcount ( s#module * ) 
__symbol_put void __symbol_put ( const char * ) 
symbol_put_addr void symbol_put_addr ( void * ) 
module_put extern void module_put ( s#module * ) 
__symbol_get void * __symbol_get ( const char * ) 
__module_address s#module * __module_address ( unsigned long ) 
__module_text_address s#module * __module_text_address ( unsigned long ) 
s#modversion_info struct modversion_info { unsigned long crc ; char name [ ( 64 - sizeof ( unsigned long ) ) ] ; } 
module_layout void module_layout ( s#module * , s#modversion_info * , s#kernel_param * , s#kernel_symbol * , s#tracepoint * ) 

/* kernel/mutex.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##file
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
__mutex_init extern void __mutex_init ( s#mutex * , const char * , s#lock_class_key * ) 
mutex_lock extern void mutex_lock ( s#mutex * ) 
mutex_unlock extern void mutex_unlock ( s#mutex * ) 
mutex_lock_interruptible extern int mutex_lock_interruptible ( s#mutex * ) 
mutex_lock_killable extern int mutex_lock_killable ( s#mutex * ) 
mutex_trylock extern int mutex_trylock ( s#mutex * ) 
atomic_dec_and_mutex_lock extern int atomic_dec_and_mutex_lock ( t#atomic_t * , s#mutex * ) 

/* kernel/notifier.o */
s#atomic_notifier_head struct atomic_notifier_head { t#spinlock_t lock ; s#notifier_block * head ; } 
atomic_notifier_chain_register extern int atomic_notifier_chain_register ( s#atomic_notifier_head * , s#notifier_block * ) 
atomic_notifier_chain_unregister extern int atomic_notifier_chain_unregister ( s#atomic_notifier_head * , s#notifier_block * ) 
__atomic_notifier_call_chain extern int __atomic_notifier_call_chain ( s#atomic_notifier_head * , unsigned long , void * , int , int * ) 
atomic_notifier_call_chain extern int atomic_notifier_call_chain ( s#atomic_notifier_head * , unsigned long , void * ) 
blocking_notifier_chain_register extern int blocking_notifier_chain_register ( s#blocking_notifier_head * , s#notifier_block * ) 
blocking_notifier_chain_cond_register extern int blocking_notifier_chain_cond_register ( s#blocking_notifier_head * , s#notifier_block * ) 
blocking_notifier_chain_unregister extern int blocking_notifier_chain_unregister ( s#blocking_notifier_head * , s#notifier_block * ) 
__blocking_notifier_call_chain extern int __blocking_notifier_call_chain ( s#blocking_notifier_head * , unsigned long , void * , int , int * ) 
blocking_notifier_call_chain extern int blocking_notifier_call_chain ( s#blocking_notifier_head * , unsigned long , void * ) 
s#raw_notifier_head struct raw_notifier_head { s#notifier_block * head ; } 
raw_notifier_chain_register extern int raw_notifier_chain_register ( s#raw_notifier_head * , s#notifier_block * ) 
raw_notifier_chain_unregister extern int raw_notifier_chain_unregister ( s#raw_notifier_head * , s#notifier_block * ) 
__raw_notifier_call_chain extern int __raw_notifier_call_chain ( s#raw_notifier_head * , unsigned long , void * , int , int * ) 
raw_notifier_call_chain extern int raw_notifier_call_chain ( s#raw_notifier_head * , unsigned long , void * ) 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##file
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s#srcu_struct_array struct srcu_struct_array { int c [ 2 ] ; } 
s#srcu_struct struct srcu_struct { int completed ; s#srcu_struct_array * per_cpu_ref ; s#mutex mutex ; } 
s#srcu_notifier_head struct srcu_notifier_head { s#mutex mutex ; s#srcu_struct srcu ; s#notifier_block * head ; } 
srcu_notifier_chain_register extern int srcu_notifier_chain_register ( s#srcu_notifier_head * , s#notifier_block * ) 
srcu_notifier_chain_unregister extern int srcu_notifier_chain_unregister ( s#srcu_notifier_head * , s#notifier_block * ) 
__srcu_notifier_call_chain extern int __srcu_notifier_call_chain ( s#srcu_notifier_head * , unsigned long , void * , int , int * ) 
srcu_notifier_call_chain extern int srcu_notifier_call_chain ( s#srcu_notifier_head * , unsigned long , void * ) 
srcu_init_notifier_head extern void srcu_init_notifier_head ( s#srcu_notifier_head * ) 
register_reboot_notifier extern int register_reboot_notifier ( s#notifier_block * ) 
unregister_reboot_notifier extern int unregister_reboot_notifier ( s#notifier_block * ) 
register_die_notifier int register_die_notifier ( s#notifier_block * ) 
unregister_die_notifier int unregister_die_notifier ( s#notifier_block * ) 

/* kernel/panic.o */
panic_notifier_list extern s#atomic_notifier_head panic_notifier_list 
panic_blink extern long ( * panic_blink ) ( long ) 
panic void panic ( const char * , ... ) 
test_taint extern int test_taint ( unsigned ) 
add_taint extern void add_taint ( unsigned ) 
warn_slowpath_fmt extern void warn_slowpath_fmt ( const char * , const int , const char * , ... ) 
warn_slowpath_null extern void warn_slowpath_null ( const char * , const int ) 

/* kernel/params.o */
param_set_byte extern int param_set_byte ( const char * , s#kernel_param * ) 
param_get_byte extern int param_get_byte ( char * , s#kernel_param * ) 
param_set_short extern int param_set_short ( const char * , s#kernel_param * ) 
param_get_short extern int param_get_short ( char * , s#kernel_param * ) 
param_set_ushort extern int param_set_ushort ( const char * , s#kernel_param * ) 
param_get_ushort extern int param_get_ushort ( char * , s#kernel_param * ) 
param_set_int extern int param_set_int ( const char * , s#kernel_param * ) 
param_get_int extern int param_get_int ( char * , s#kernel_param * ) 
param_set_uint extern int param_set_uint ( const char * , s#kernel_param * ) 
param_get_uint extern int param_get_uint ( char * , s#kernel_param * ) 
param_set_long extern int param_set_long ( const char * , s#kernel_param * ) 
param_get_long extern int param_get_long ( char * , s#kernel_param * ) 
param_set_ulong extern int param_set_ulong ( const char * , s#kernel_param * ) 
param_get_ulong extern int param_get_ulong ( char * , s#kernel_param * ) 
param_set_charp extern int param_set_charp ( const char * , s#kernel_param * ) 
param_get_charp extern int param_get_charp ( char * , s#kernel_param * ) 
param_set_bool extern int param_set_bool ( const char * , s#kernel_param * ) 
param_get_bool extern int param_get_bool ( char * , s#kernel_param * ) 
param_set_invbool extern int param_set_invbool ( const char * , s#kernel_param * ) 
param_get_invbool extern int param_get_invbool ( char * , s#kernel_param * ) 
param_array_set extern int param_array_set ( const char * , s#kernel_param * ) 
param_array_get extern int param_array_get ( char * , s#kernel_param * ) 
param_set_copystring extern int param_set_copystring ( const char * , s#kernel_param * ) 
param_get_string extern int param_get_string ( char * , s#kernel_param * ) 

/* kernel/pid.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##ipc_namespace
s##mnt_namespace
s##net_device
s##sock
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sec_path
s##ip_conntrack_stat
s##net_generic
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##bsd_acct_struct
init_pid_ns extern s#pid_namespace init_pid_ns 
is_container_init extern int is_container_init ( s#task_struct * ) 
put_pid extern void put_pid ( s#pid * ) 
find_pid_ns extern s#pid * find_pid_ns ( int , s#pid_namespace * ) 
find_vpid extern s#pid * find_vpid ( int ) 
pid_task extern s#task_struct * pid_task ( s#pid * , e#pid_type ) 
find_get_pid extern s#pid * find_get_pid ( int ) 
pid_vnr t#pid_t pid_vnr ( s#pid * ) 
__task_pid_nr_ns t#pid_t __task_pid_nr_ns ( s#task_struct * , e#pid_type , s#pid_namespace * ) 
task_tgid_nr_ns t#pid_t task_tgid_nr_ns ( s#task_struct * , s#pid_namespace * ) 
task_active_pid_ns extern s#pid_namespace * task_active_pid_ns ( s#task_struct * ) 

/* kernel/pm_qos_params.o */
pm_qos_requirement int pm_qos_requirement ( int ) 
pm_qos_add_requirement int pm_qos_add_requirement ( int , char * , t#s32 ) 
pm_qos_update_requirement int pm_qos_update_requirement ( int , char * , t#s32 ) 
pm_qos_remove_requirement void pm_qos_remove_requirement ( int , char * ) 
pm_qos_add_notifier int pm_qos_add_notifier ( int , s#notifier_block * ) 
pm_qos_remove_notifier int pm_qos_remove_notifier ( int , s#notifier_block * ) 

/* kernel/posix-timers.o */
t#timer_t typedef t#__kernel_timer_t timer_t 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##tty_struct
s##taskstats
s##tty_audit_buf
s#sigqueue struct sigqueue { s#list_head list ; int flags ; t#siginfo_t info ; s#user_struct * user ; } 
u#cpu_time_count union cpu_time_count { t#cputime_t cpu ; unsigned long long sched ; } 
s#cpu_timer_list struct cpu_timer_list { s#list_head entry ; u#cpu_time_count expires , incr ; s#task_struct * task ; int firing ; } 
s#k_itimer struct k_itimer { s#list_head list ; t#spinlock_t it_lock ; t#clockid_t it_clock ; t#timer_t it_id ; int it_overrun ; int it_overrun_last ; int it_requeue_pending ; int it_sigev_notify ; s#signal_struct * it_signal ; union { s#pid * it_pid ; s#task_struct * it_process ; } ; s#sigqueue * sigq ; union { struct { s#hrtimer timer ; t#ktime_t interval ; } real ; s#cpu_timer_list cpu ; struct { unsigned int clock ; unsigned int node ; unsigned long incr ; unsigned long expires ; } mmtimer ; } it ; } 
posix_timer_event int posix_timer_event ( s#k_itimer * , int ) 
s#itimerspec struct itimerspec { s#timespec it_interval ; s#timespec it_value ; } 
s#k_clock struct k_clock { int res ; int ( * clock_getres ) ( const t#clockid_t , s#timespec * ) ; int ( * clock_set ) ( const t#clockid_t , s#timespec * ) ; int ( * clock_get ) ( const t#clockid_t , s#timespec * ) ; int ( * timer_create ) ( s#k_itimer * ) ; int ( * nsleep ) ( const t#clockid_t , int , s#timespec * , s#timespec * ) ; long ( * nsleep_restart ) ( s#restart_block * ) ; int ( * timer_set ) ( s#k_itimer * , int , s#itimerspec * , s#itimerspec * ) ; int ( * timer_del ) ( s#k_itimer * ) ; void ( * timer_get ) ( s#k_itimer * , s#itimerspec * ) ; } 
register_posix_clock void register_posix_clock ( const t#clockid_t , s#k_clock * ) 
do_posix_clock_nosettime int do_posix_clock_nosettime ( const t#clockid_t , s#timespec * ) 
do_posix_clock_nonanosleep int do_posix_clock_nonanosleep ( const t#clockid_t , int , s#timespec * , s#timespec * ) 

/* kernel/power/hibernate.o */
system_entering_hibernation extern t#bool system_entering_hibernation ( void ) 

/* kernel/power/main.o */
pm_flags extern unsigned int pm_flags 
register_pm_notifier extern int register_pm_notifier ( s#notifier_block * ) 
unregister_pm_notifier extern int unregister_pm_notifier ( s#notifier_block * ) 

/* kernel/printk.o */
oops_in_progress extern int oops_in_progress 
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##backing_dev_info
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##pollfd
s##nameidata
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##posix_acl
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##sysfs_dirent
s##proc_dir_entry
s#console struct console { char name [ 16 ] ; void ( * write ) ( s#console * , const char * , unsigned ) ; int ( * read ) ( s#console * , char * , unsigned ) ; s#tty_driver * ( * device ) ( s#console * , int * ) ; void ( * unblank ) ( void ) ; int ( * setup ) ( s#console * , char * ) ; int ( * early_setup ) ( void ) ; short flags ; short index ; int cflag ; void * data ; s#console * next ; } 
console_drivers extern s#console * console_drivers 
console_set_on_cmdline extern int console_set_on_cmdline 
printk int printk ( const char * , ... ) 
vprintk int vprintk ( const char * , va_list args ) 
console_suspend_enabled extern int console_suspend_enabled 
acquire_console_sem extern void acquire_console_sem ( void ) 
try_acquire_console_sem extern int try_acquire_console_sem ( void ) 
release_console_sem extern void release_console_sem ( void ) 
console_conditional_schedule extern void console_conditional_schedule ( void ) 
console_stop extern void console_stop ( s#console * ) 
console_start extern void console_start ( s#console * ) 
register_console extern void register_console ( s#console * ) 
unregister_console extern int unregister_console ( s#console * ) 
printk_ratelimit extern int printk_ratelimit ( void ) 
printk_timed_ratelimit extern t#bool printk_timed_ratelimit ( unsigned long * , unsigned int ) 
printk_hash int printk_hash ( const char * , const char * , ... ) 
printk_dev_hash int printk_dev_hash ( const char * , const char * , const char * , ... ) 

/* kernel/profile.o */
prof_on extern int prof_on 
task_handoff_register int task_handoff_register ( s#notifier_block * ) 
task_handoff_unregister int task_handoff_unregister ( s#notifier_block * ) 
e#profile_type enum profile_type { PROFILE_TASK_EXIT , PROFILE_MUNMAP } 
profile_event_register int profile_event_register ( e#profile_type , s#notifier_block * ) 
profile_event_unregister int profile_event_unregister ( e#profile_type , s#notifier_block * ) 
register_timer_hook int register_timer_hook ( int ( * ) ( s#pt_regs * ) ) 
unregister_timer_hook void unregister_timer_hook ( int ( * ) ( s#pt_regs * ) ) 
profile_hits void profile_hits ( int , void * , unsigned int ) 

/* kernel/rcupdate.o */
synchronize_sched extern void synchronize_sched ( void ) 
synchronize_rcu_bh extern void synchronize_rcu_bh ( void ) 

/* kernel/rcutree.o */
rcu_batches_completed_sched extern long rcu_batches_completed_sched ( void ) 
rcu_batches_completed_bh extern long rcu_batches_completed_bh ( void ) 
call_rcu_sched extern void call_rcu_sched ( s#rcu_head * , void ( * ) ( s#rcu_head * ) ) 
call_rcu_bh extern void call_rcu_bh ( s#rcu_head * , void ( * ) ( s#rcu_head * ) ) 
rcu_barrier_bh extern void rcu_barrier_bh ( void ) 
rcu_barrier_sched extern void rcu_barrier_sched ( void ) 
rcu_batches_completed extern long rcu_batches_completed ( void ) 
call_rcu extern void call_rcu ( s#rcu_head * , void ( * ) ( s#rcu_head * ) ) 
synchronize_rcu_expedited extern void synchronize_rcu_expedited ( void ) 
rcu_barrier extern void rcu_barrier ( void ) 

/* kernel/relay.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
s##backing_dev_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
relay_buf_full extern int relay_buf_full ( s#rchan_buf * ) 
relay_reset extern void relay_reset ( s#rchan * ) 
relay_open s#rchan * relay_open ( const char * , s#dentry * , t#size_t , t#size_t , s#rchan_callbacks * , void * ) 
relay_switch_subbuf extern t#size_t relay_switch_subbuf ( s#rchan_buf * , t#size_t ) 
relay_subbufs_consumed extern void relay_subbufs_consumed ( s#rchan * , unsigned int , t#size_t ) 
relay_close extern void relay_close ( s#rchan * ) 
relay_flush extern void relay_flush ( s#rchan * ) 
relay_file_operations extern const s#file_operations relay_file_operations 

/* kernel/resource.o */
ioport_resource extern s#resource ioport_resource 
iomem_resource extern s#resource iomem_resource 
request_resource extern int request_resource ( s#resource * , s#resource * ) 
release_resource extern int release_resource ( s#resource * ) 
allocate_resource extern int allocate_resource ( s#resource * , s#resource * , t#resource_size_t , t#resource_size_t , t#resource_size_t , t#resource_size_t , void ( * ) ( void * , s#resource * , t#resource_size_t , t#resource_size_t ) , void * ) 
adjust_resource int adjust_resource ( s#resource * , t#resource_size_t , t#resource_size_t ) 
__request_region extern s#resource * __request_region ( s#resource * , t#resource_size_t , t#resource_size_t , const char * , int ) 
__check_region extern int __check_region ( s#resource * , t#resource_size_t , t#resource_size_t ) 
__release_region extern void __release_region ( s#resource * , t#resource_size_t , t#resource_size_t ) 
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
__devm_request_region extern s#resource * __devm_request_region ( s#device * , s#resource * , t#resource_size_t , t#resource_size_t , const char * ) 
__devm_release_region extern void __devm_release_region ( s#device * , s#resource * , t#resource_size_t , t#resource_size_t ) 

/* kernel/rtmutex.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##file
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##exec_domain
s##compat_timespec
s##pollfd
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s#rt_mutex_waiter struct rt_mutex_waiter { s#plist_node list_entry ; s#plist_node pi_list_entry ; s#task_struct * task ; s#rt_mutex * lock ; } 
s##bio
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s#rt_mutex struct rt_mutex { t#spinlock_t wait_lock ; s#plist_head wait_list ; s#task_struct * owner ; } 
rt_mutex_lock extern void rt_mutex_lock ( s#rt_mutex * ) 
rt_mutex_lock_interruptible extern int rt_mutex_lock_interruptible ( s#rt_mutex * , int ) 
rt_mutex_timed_lock extern int rt_mutex_timed_lock ( s#rt_mutex * , s#hrtimer_sleeper * , int ) 
rt_mutex_trylock extern int rt_mutex_trylock ( s#rt_mutex * ) 
rt_mutex_unlock extern void rt_mutex_unlock ( s#rt_mutex * ) 
rt_mutex_destroy extern void rt_mutex_destroy ( s#rt_mutex * ) 
__rt_mutex_init extern void __rt_mutex_init ( s#rt_mutex * , const char * ) 

/* kernel/rwsem.o */
down_read extern void down_read ( s#rw_semaphore * ) 
down_read_trylock extern int down_read_trylock ( s#rw_semaphore * ) 
down_write extern void down_write ( s#rw_semaphore * ) 
down_write_trylock extern int down_write_trylock ( s#rw_semaphore * ) 
up_read extern void up_read ( s#rw_semaphore * ) 
up_write extern void up_write ( s#rw_semaphore * ) 
downgrade_write extern void downgrade_write ( s#rw_semaphore * ) 

/* kernel/sched.o */
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##anon_vma
s##radix_tree_node
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_geometry
s##tvec_base
s##blk_trace
s##timer_rand_state
s##mtd_info
s##array_cache
s##kmem_list3
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##cgroupfs_root
s##css_id
s##bts_context
s##fs_struct
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##mem_cgroup
kthread_bind void kthread_bind ( s#task_struct * , unsigned int ) 
kick_process extern void kick_process ( s#task_struct * ) 
wake_up_process extern int wake_up_process ( s#task_struct * ) 
preempt_notifier_register void preempt_notifier_register ( s#preempt_notifier * ) 
preempt_notifier_unregister void preempt_notifier_unregister ( s#preempt_notifier * ) 
avenrun extern unsigned long avenrun [ ] 
per_cpu__kstat extern __attribute__ ( ( section ( ".data.percpu" "" ) ) ) __typeof__ ( s#kernel_stat ) per_cpu__kstat 
schedule void schedule ( void ) 
default_wake_function int default_wake_function ( t#wait_queue_t * , unsigned , int , void * ) 
__wake_up void __wake_up ( t#wait_queue_head_t * , unsigned int , int , void * ) 
__wake_up_sync_key void __wake_up_sync_key ( t#wait_queue_head_t * , unsigned int , int , void * ) 
__wake_up_sync void __wake_up_sync ( t#wait_queue_head_t * , unsigned int , int ) 
complete extern void complete ( s#completion * ) 
complete_all extern void complete_all ( s#completion * ) 
wait_for_completion extern void wait_for_completion ( s#completion * ) 
wait_for_completion_timeout extern unsigned long wait_for_completion_timeout ( s#completion * , unsigned long ) 
wait_for_completion_interruptible extern int wait_for_completion_interruptible ( s#completion * ) 
wait_for_completion_interruptible_timeout extern unsigned long wait_for_completion_interruptible_timeout ( s#completion * , unsigned long ) 
wait_for_completion_killable extern int wait_for_completion_killable ( s#completion * ) 
try_wait_for_completion extern t#bool try_wait_for_completion ( s#completion * ) 
completion_done extern t#bool completion_done ( s#completion * ) 
interruptible_sleep_on extern void interruptible_sleep_on ( t#wait_queue_head_t * ) 
interruptible_sleep_on_timeout extern long interruptible_sleep_on_timeout ( t#wait_queue_head_t * , signed long ) 
sleep_on extern void sleep_on ( t#wait_queue_head_t * ) 
sleep_on_timeout extern long sleep_on_timeout ( t#wait_queue_head_t * , signed long ) 
set_user_nice extern void set_user_nice ( s#task_struct * , long ) 
task_nice extern int task_nice ( const s#task_struct * ) 
sched_setscheduler extern int sched_setscheduler ( s#task_struct * , int , s#sched_param * ) 
_cond_resched extern int _cond_resched ( void ) 
__cond_resched_lock extern int __cond_resched_lock ( t#spinlock_t * ) 
__cond_resched_softirq extern int __cond_resched_softirq ( void ) 
yield void yield ( void ) 
io_schedule void io_schedule ( void ) 
set_cpus_allowed_ptr extern int set_cpus_allowed_ptr ( s#task_struct * , const s#cpumask * ) 
rcu_expedited_torture_stats extern int rcu_expedited_torture_stats ( char * ) 
synchronize_sched_expedited extern void synchronize_sched_expedited ( void ) 

/* kernel/sched_clock.o */
cpu_clock extern unsigned long long cpu_clock ( int ) 

/* kernel/semaphore.o */
down extern void down ( s#semaphore * ) 
down_interruptible extern int down_interruptible ( s#semaphore * ) 
down_killable extern int down_killable ( s#semaphore * ) 
down_trylock extern int down_trylock ( s#semaphore * ) 
down_timeout extern int down_timeout ( s#semaphore * , long ) 
up extern void up ( s#semaphore * ) 

/* kernel/signal.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##proc_dir_entry
s##taskstats
s##tty_audit_buf
s##audit_context
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##bsd_acct_struct
kill_pid_info_as_uid extern int kill_pid_info_as_uid ( int , s#siginfo * , s#pid * , t#uid_t , t#uid_t , t#u32 ) 
kill_pgrp extern int kill_pgrp ( s#pid * , int , int ) 
kill_pid extern int kill_pid ( s#pid * , int , int ) 
recalc_sigpending extern void recalc_sigpending ( void ) 
dequeue_signal extern int dequeue_signal ( s#task_struct * , t#sigset_t * , t#siginfo_t * ) 
flush_signals extern void flush_signals ( s#task_struct * ) 
force_sig extern void force_sig ( int , s#task_struct * ) 
send_sig extern int send_sig ( int , s#task_struct * , int ) 
send_sig_info extern int send_sig_info ( int , s#siginfo * , s#task_struct * ) 
sigprocmask extern int sigprocmask ( int , t#sigset_t * , t#sigset_t * ) 
block_all_signals extern void block_all_signals ( int ( * ) ( void * ) , void * , t#sigset_t * ) 
unblock_all_signals extern void unblock_all_signals ( void ) 

/* kernel/slow-work.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
slow_work_sleep_till_thread_needed extern t#bool slow_work_sleep_till_thread_needed ( s#slow_work * , signed long * ) 
slow_work_enqueue extern int slow_work_enqueue ( s#slow_work * ) 
slow_work_cancel extern void slow_work_cancel ( s#slow_work * ) 
s#delayed_slow_work struct delayed_slow_work { s#slow_work work ; s#timer_list timer ; } 
delayed_slow_work_enqueue extern int delayed_slow_work_enqueue ( s#delayed_slow_work * , unsigned long ) 
slow_work_register_user extern int slow_work_register_user ( s#module * ) 
slow_work_unregister_user extern void slow_work_unregister_user ( s#module * ) 

/* kernel/smp.o */
smp_call_function_single int smp_call_function_single ( int , void ( * ) ( void * ) , void * , int ) 
smp_call_function_many void smp_call_function_many ( const s#cpumask * , void ( * ) ( void * ) , void * , t#bool ) 
smp_call_function int smp_call_function ( void ( * ) ( void * ) , void * , int ) 

/* kernel/softirq.o */
local_bh_disable extern void local_bh_disable ( void ) 
_local_bh_enable extern void _local_bh_enable ( void ) 
local_bh_enable extern void local_bh_enable ( void ) 
local_bh_enable_ip extern void local_bh_enable_ip ( unsigned long ) 
__tasklet_schedule extern void __tasklet_schedule ( s#tasklet_struct * ) 
__tasklet_hi_schedule extern void __tasklet_hi_schedule ( s#tasklet_struct * ) 
__tasklet_hi_schedule_first extern void __tasklet_hi_schedule_first ( s#tasklet_struct * ) 
tasklet_init extern void tasklet_init ( s#tasklet_struct * , void ( * ) ( unsigned long ) , unsigned long ) 
tasklet_kill extern void tasklet_kill ( s#tasklet_struct * ) 
s#tasklet_hrtimer struct tasklet_hrtimer { s#hrtimer timer ; s#tasklet_struct tasklet ; e#hrtimer_restart ( * function ) ( s#hrtimer * ) ; } 
tasklet_hrtimer_init extern void tasklet_hrtimer_init ( s#tasklet_hrtimer * , e#hrtimer_restart ( * ) ( s#hrtimer * ) , t#clockid_t , e#hrtimer_mode ) 
__send_remote_softirq extern void __send_remote_softirq ( s#call_single_data * , int , int , int ) 
send_remote_softirq extern void send_remote_softirq ( s#call_single_data * , int , int ) 
on_each_cpu int on_each_cpu ( void ( * ) ( void * ) , void * , int ) 

/* kernel/spinlock.o */
in_lock_functions int in_lock_functions ( unsigned long ) 

/* kernel/srcu.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##file
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
init_srcu_struct int init_srcu_struct ( s#srcu_struct * ) 
cleanup_srcu_struct void cleanup_srcu_struct ( s#srcu_struct * ) 
srcu_read_lock int srcu_read_lock ( s#srcu_struct * ) 
srcu_read_unlock void srcu_read_unlock ( s#srcu_struct * , int ) 
synchronize_srcu void synchronize_srcu ( s#srcu_struct * ) 
synchronize_srcu_expedited void synchronize_srcu_expedited ( s#srcu_struct * ) 
srcu_batches_completed long srcu_batches_completed ( s#srcu_struct * ) 

/* kernel/stacktrace.o */
print_stack_trace extern void print_stack_trace ( s#stack_trace * , int ) 

/* kernel/stop_machine.o */
stop_machine_create int stop_machine_create ( void ) 
stop_machine_destroy void stop_machine_destroy ( void ) 
stop_machine int stop_machine ( int ( * ) ( void * ) , void * , const s#cpumask * ) 

/* kernel/sys.o */
fs_overflowuid extern int fs_overflowuid 
fs_overflowgid extern int fs_overflowgid 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##pollfd
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##bts_context
s##ipc_namespace
s##mnt_namespace
s##net
s##proc_dir_entry
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##ftrace_ret_stack
s##mem_cgroup
s##bsd_acct_struct
cad_pid extern s#pid * cad_pid 
emergency_restart extern void emergency_restart ( void ) 
kernel_restart extern void kernel_restart ( char * ) 
kernel_halt extern void kernel_halt ( void ) 
kernel_power_off extern void kernel_power_off ( void ) 
orderly_poweroff extern int orderly_poweroff ( t#bool ) 

/* kernel/sysctl.o */
proc_dointvec extern int proc_dointvec ( s#ctl_table * , int , void * , t#size_t * , t#loff_t * ) 
proc_dointvec_jiffies extern int proc_dointvec_jiffies ( s#ctl_table * , int , void * , t#size_t * , t#loff_t * ) 
proc_dointvec_minmax extern int proc_dointvec_minmax ( s#ctl_table * , int , void * , t#size_t * , t#loff_t * ) 
proc_dointvec_userhz_jiffies extern int proc_dointvec_userhz_jiffies ( s#ctl_table * , int , void * , t#size_t * , t#loff_t * ) 
proc_dointvec_ms_jiffies extern int proc_dointvec_ms_jiffies ( s#ctl_table * , int , void * , t#size_t * , t#loff_t * ) 
proc_dostring extern int proc_dostring ( s#ctl_table * , int , void * , t#size_t * , t#loff_t * ) 
proc_doulongvec_minmax extern int proc_doulongvec_minmax ( s#ctl_table * , int , void * , t#size_t * , t#loff_t * ) 
proc_doulongvec_ms_jiffies_minmax extern int proc_doulongvec_ms_jiffies_minmax ( s#ctl_table * , int , void * , t#size_t * , t#loff_t * ) 
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##files_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##mtd_info
s##cdev
s##radix_tree_node
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##mem_cgroup
s##bsd_acct_struct
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_state
s##rtable
s##rt6_info
s##dn_route
s##xfrm_policy
s##sec_path
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##rt6_statistics
s##fib6_table
s##ip_conntrack_stat
s##net_generic
register_sysctl_table s#ctl_table_header * register_sysctl_table ( s#ctl_table * ) 
s#ctl_path struct ctl_path { const char * procname ; int ctl_name ; } 
register_sysctl_paths s#ctl_table_header * register_sysctl_paths ( const s#ctl_path * , s#ctl_table * ) 
sysctl_intvec extern t#ctl_handler sysctl_intvec 
sysctl_jiffies extern t#ctl_handler sysctl_jiffies 
sysctl_ms_jiffies extern t#ctl_handler sysctl_ms_jiffies 
sysctl_string extern t#ctl_handler sysctl_string 
sysctl_data extern t#ctl_handler sysctl_data 
unregister_sysctl_table void unregister_sysctl_table ( s#ctl_table_header * ) 

/* kernel/time.o */
s#timezone struct timezone { int tz_minuteswest ; int tz_dsttime ; } 
sys_tz extern s#timezone sys_tz 
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##backing_dev_info
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##hd_struct
s##gendisk
s##cdev
s##posix_acl
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
current_fs_time extern s#timespec current_fs_time ( s#super_block * ) 
jiffies_to_msecs extern unsigned int jiffies_to_msecs ( const unsigned long ) 
jiffies_to_usecs extern unsigned int jiffies_to_usecs ( const unsigned long ) 
timespec_trunc extern s#timespec timespec_trunc ( s#timespec , unsigned ) 
mktime extern unsigned long mktime ( const unsigned int , const unsigned int , const unsigned int , const unsigned int , const unsigned int , const unsigned int ) 
set_normalized_timespec extern void set_normalized_timespec ( s#timespec * , t#time_t , t#s64 ) 
ns_to_timespec extern s#timespec ns_to_timespec ( const t#s64 ) 
t#__kernel_suseconds_t typedef long __kernel_suseconds_t 
s#timeval struct timeval { t#__kernel_time_t tv_sec ; t#__kernel_suseconds_t tv_usec ; } 
ns_to_timeval extern s#timeval ns_to_timeval ( const t#s64 ) 
msecs_to_jiffies extern unsigned long msecs_to_jiffies ( const unsigned int ) 
usecs_to_jiffies extern unsigned long usecs_to_jiffies ( const unsigned int ) 
timespec_to_jiffies extern unsigned long timespec_to_jiffies ( const s#timespec * ) 
jiffies_to_timespec extern void jiffies_to_timespec ( const unsigned long , s#timespec * ) 
timeval_to_jiffies extern unsigned long timeval_to_jiffies ( const s#timeval * ) 
jiffies_to_timeval extern void jiffies_to_timeval ( const unsigned long , s#timeval * ) 
t#clock_t typedef t#__kernel_clock_t clock_t 
jiffies_to_clock_t extern t#clock_t jiffies_to_clock_t ( long ) 
clock_t_to_jiffies extern unsigned long clock_t_to_jiffies ( unsigned long ) 
jiffies_64_to_clock_t extern t#u64 jiffies_64_to_clock_t ( t#u64 ) 
jiffies extern unsigned long volatile __attribute__ ( ( section ( ".data" ) ) ) jiffies 

/* kernel/time/clockevents.o */
e#clock_event_mode enum clock_event_mode { CLOCK_EVT_MODE_UNUSED = 0 , CLOCK_EVT_MODE_SHUTDOWN , CLOCK_EVT_MODE_PERIODIC , CLOCK_EVT_MODE_ONESHOT , CLOCK_EVT_MODE_RESUME , } 
s#clock_event_device struct clock_event_device { const char * name ; unsigned int features ; unsigned long max_delta_ns ; unsigned long min_delta_ns ; unsigned long mult ; int shift ; int rating ; int irq ; const s#cpumask * cpumask ; int ( * set_next_event ) ( unsigned long , s#clock_event_device * ) ; void ( * set_mode ) ( e#clock_event_mode , s#clock_event_device * ) ; void ( * event_handler ) ( s#clock_event_device * ) ; void ( * broadcast ) ( const s#cpumask * ) ; s#list_head list ; e#clock_event_mode mode ; t#ktime_t next_event ; } 
clockevent_delta2ns extern unsigned long clockevent_delta2ns ( unsigned long , s#clock_event_device * ) 
clockevents_register_device extern void clockevents_register_device ( s#clock_event_device * ) 
clockevents_notify extern void clockevents_notify ( unsigned long , void * ) 

/* kernel/time/clocksource.o */
t#cycle_t typedef t#u64 cycle_t 
s#cyclecounter struct cyclecounter { t#cycle_t ( * read ) ( const s#cyclecounter * ) ; t#cycle_t mask ; t#u32 mult ; t#u32 shift ; } 
s#timecounter struct timecounter { const s#cyclecounter * cc ; t#cycle_t cycle_last ; t#u64 nsec ; } 
timecounter_init extern void timecounter_init ( s#timecounter * , const s#cyclecounter * , t#u64 ) 
timecounter_read extern t#u64 timecounter_read ( s#timecounter * ) 
timecounter_cyc2time extern t#u64 timecounter_cyc2time ( s#timecounter * , t#cycle_t ) 
s#clocksource struct clocksource { char * name ; s#list_head list ; int rating ; t#cycle_t ( * read ) ( s#clocksource * ) ; int ( * enable ) ( s#clocksource * ) ; void ( * disable ) ( s#clocksource * ) ; t#cycle_t mask ; t#u32 mult ; t#u32 shift ; t#u64 max_idle_ns ; unsigned long flags ; t#cycle_t ( * vread ) ( void ) ; void ( * resume ) ( void ) ; t#cycle_t cycle_last __attribute__ ( ( __aligned__ ( 256 ) ) ) ; } 
clocksource_register extern int clocksource_register ( s#clocksource * ) 
clocksource_change_rating extern void clocksource_change_rating ( s#clocksource * , int ) 
clocksource_unregister extern void clocksource_unregister ( s#clocksource * ) 

/* kernel/time/tick-sched.o */
get_cpu_idle_time_us extern t#u64 get_cpu_idle_time_us ( int , t#u64 * ) 

/* kernel/time/timecompare.o */
s#timecompare struct timecompare { s#timecounter * source ; t#ktime_t ( * target ) ( void ) ; int num_samples ; t#s64 offset ; t#s64 skew ; t#u64 last_update ; } 
timecompare_transform extern t#ktime_t timecompare_transform ( s#timecompare * , t#u64 ) 
timecompare_offset extern int timecompare_offset ( s#timecompare * , t#s64 * , t#u64 * ) 
__timecompare_update extern void __timecompare_update ( s#timecompare * , t#u64 ) 

/* kernel/time/timeconv.o */
s#tm struct tm { int tm_sec ; int tm_min ; int tm_hour ; int tm_mday ; int tm_mon ; long tm_year ; int tm_wday ; int tm_yday ; } 
time_to_tm void time_to_tm ( t#time_t , int , s#tm * ) 

/* kernel/time/timekeeping.o */
getnstimeofday extern void getnstimeofday ( s#timespec * ) 
ktime_get extern t#ktime_t ktime_get ( void ) 
ktime_get_ts extern void ktime_get_ts ( s#timespec * ) 
do_gettimeofday extern void do_gettimeofday ( s#timeval * ) 
do_settimeofday extern int do_settimeofday ( s#timespec * ) 
ktime_get_real extern t#ktime_t ktime_get_real ( void ) 
getrawmonotonic extern void getrawmonotonic ( s#timespec * ) 
getboottime extern void getboottime ( s#timespec * ) 
monotonic_to_bootbased extern void monotonic_to_bootbased ( s#timespec * ) 
get_seconds unsigned long get_seconds ( void ) 
current_kernel_time s#timespec current_kernel_time ( void ) 

/* kernel/timer.o */
jiffies_64 extern t#u64 __attribute__ ( ( section ( ".data" ) ) ) jiffies_64 
s#tvec_root struct tvec_root { s#list_head vec [ ( 1 << ( 0 ? 6 : 8 ) ) ] ; } 
s#tvec struct tvec { s#list_head vec [ ( 1 << ( 0 ? 4 : 6 ) ) ] ; } 
s#tvec_base struct tvec_base { t#spinlock_t lock ; s#timer_list * running_timer ; unsigned long timer_jiffies ; unsigned long next_timer ; s#tvec_root tv1 ; s#tvec tv2 ; s#tvec tv3 ; s#tvec tv4 ; s#tvec tv5 ; } 
boot_tvec_bases extern s#tvec_base boot_tvec_bases 
__round_jiffies unsigned long __round_jiffies ( unsigned long , int ) 
__round_jiffies_relative unsigned long __round_jiffies_relative ( unsigned long , int ) 
round_jiffies unsigned long round_jiffies ( unsigned long ) 
round_jiffies_relative unsigned long round_jiffies_relative ( unsigned long ) 
__round_jiffies_up unsigned long __round_jiffies_up ( unsigned long , int ) 
__round_jiffies_up_relative unsigned long __round_jiffies_up_relative ( unsigned long , int ) 
round_jiffies_up unsigned long round_jiffies_up ( unsigned long ) 
round_jiffies_up_relative unsigned long round_jiffies_up_relative ( unsigned long ) 
init_timer_key void init_timer_key ( s#timer_list * , const char * , s#lock_class_key * ) 
init_timer_deferrable_key void init_timer_deferrable_key ( s#timer_list * , const char * , s#lock_class_key * ) 
mod_timer_pending extern int mod_timer_pending ( s#timer_list * , unsigned long ) 
mod_timer extern int mod_timer ( s#timer_list * , unsigned long ) 
mod_timer_pinned extern int mod_timer_pinned ( s#timer_list * , unsigned long ) 
add_timer extern void add_timer ( s#timer_list * ) 
add_timer_on extern void add_timer_on ( s#timer_list * , int ) 
del_timer extern int del_timer ( s#timer_list * ) 
try_to_del_timer_sync extern int try_to_del_timer_sync ( s#timer_list * ) 
del_timer_sync extern int del_timer_sync ( s#timer_list * ) 
schedule_timeout extern signed long schedule_timeout ( signed long ) 
schedule_timeout_interruptible extern signed long schedule_timeout_interruptible ( signed long ) 
schedule_timeout_killable extern signed long schedule_timeout_killable ( signed long ) 
schedule_timeout_uninterruptible extern signed long schedule_timeout_uninterruptible ( signed long ) 
msleep void msleep ( unsigned int ) 
msleep_interruptible unsigned long msleep_interruptible ( unsigned int ) 

/* kernel/trace/blktrace.o */
s##tvec_base
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ring_buffer
s#trace_array_cpu struct trace_array_cpu { t#atomic_t disabled ; void * buffer_page ; unsigned long saved_latency ; unsigned long critical_start ; unsigned long critical_end ; unsigned long critical_sequence ; unsigned long nice ; unsigned long policy ; unsigned long rt_priority ; unsigned long skipped_entries ; t#cycle_t preempt_timestamp ; t#pid_t pid ; t#uid_t uid ; char comm [ 16 ] ; } 
s#trace_array struct trace_array { s#ring_buffer * buffer ; unsigned long entries ; int cpu ; t#cycle_t time_start ; s#task_struct * waiter ; s#trace_array_cpu * data [ 64 ] ; } 
s##vfsmount
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s#tracer_opt struct tracer_opt { const char * name ; t#u32 bit ; } 
s#tracer_flags struct tracer_flags { t#u32 val ; s#tracer_opt * opts ; } 
s#tracer struct tracer { const char * name ; int ( * init ) ( s#trace_array * ) ; void ( * reset ) ( s#trace_array * ) ; void ( * start ) ( s#trace_array * ) ; void ( * stop ) ( s#trace_array * ) ; void ( * open ) ( s#trace_iterator * ) ; void ( * pipe_open ) ( s#trace_iterator * ) ; void ( * wait_pipe ) ( s#trace_iterator * ) ; void ( * close ) ( s#trace_iterator * ) ; t#ssize_t ( * read ) ( s#trace_iterator * , s#file * , char * , t#size_t , t#loff_t * ) ; t#ssize_t ( * splice_read ) ( s#trace_iterator * , s#file * , t#loff_t * , s#pipe_inode_info * , t#size_t , unsigned int ) ; int ( * selftest ) ( s#tracer * , s#trace_array * ) ; void ( * print_header ) ( s#seq_file * ) ; e#print_line_t ( * print_line ) ( s#trace_iterator * ) ; int ( * set_flag ) ( t#u32 , t#u32 , int ) ; s#tracer * next ; int print_max ; s#tracer_flags * flags ; } 
s##ring_buffer_iter
t#filter_pred_fn_t typedef int ( * filter_pred_fn_t ) ( s#filter_pred * , void * , int , int ) 
s#filter_pred struct filter_pred { t#filter_pred_fn_t fn ; t#u64 val ; char str_val [ 256 ] ; int str_len ; char * field_name ; int offset ; int not ; int op ; int pop_n ; } 
s#event_filter struct event_filter { int n_preds ; s#filter_pred * * preds ; char * filter_string ; t#bool no_reset ; } 
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_geometry
s##timer_rand_state
s##mtd_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##cdev
s##posix_acl
__trace_note_message extern void __trace_note_message ( s#blk_trace * , const char * , ... ) 
blk_trace_remove extern int blk_trace_remove ( s#request_queue * ) 
blk_trace_setup extern int blk_trace_setup ( s#request_queue * , char * , t#dev_t , s#block_device * , char * ) 
blk_trace_startstop extern int blk_trace_startstop ( s#request_queue * , int ) 
blk_add_driver_data extern void blk_add_driver_data ( s#request_queue * , s#request * , void * , t#size_t ) 

/* kernel/trace/power-traces.o */
__tracepoint_power_start extern s#tracepoint __tracepoint_power_start 
__tracepoint_power_end extern s#tracepoint __tracepoint_power_end 
__tracepoint_power_frequency extern s#tracepoint __tracepoint_power_frequency 

/* kernel/trace/ring_buffer.o */
tracing_on void tracing_on ( void ) 
tracing_off void tracing_off ( void ) 
tracing_is_on int tracing_is_on ( void ) 
s#ring_buffer_event struct ring_buffer_event { int bitfield_begin [ 0 ] ; ; t#u32 type_len : 5 , time_delta : 27 ; int bitfield_end [ 0 ] ; ; t#u32 array [ ] ; } 
ring_buffer_event_length unsigned ring_buffer_event_length ( s#ring_buffer_event * ) 
ring_buffer_event_data void * ring_buffer_event_data ( s#ring_buffer_event * ) 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
t#local_t typedef struct { t#atomic_long_t a ; } local_t 
s#buffer_data_page struct buffer_data_page { t#u64 time_stamp ; t#local_t commit ; unsigned char data [ ] ; } 
s#buffer_page struct buffer_page { s#list_head list ; t#local_t write ; unsigned read ; t#local_t entries ; s#buffer_data_page * page ; } 
s#ring_buffer_per_cpu struct ring_buffer_per_cpu { int cpu ; s#ring_buffer * buffer ; t#spinlock_t reader_lock ; t#raw_spinlock_t lock ; s#lock_class_key lock_key ; s#list_head * pages ; s#buffer_page * head_page ; s#buffer_page * tail_page ; s#buffer_page * commit_page ; s#buffer_page * reader_page ; t#local_t commit_overrun ; t#local_t overrun ; t#local_t entries ; t#local_t committing ; t#local_t commits ; unsigned long read ; t#u64 write_stamp ; t#u64 read_stamp ; t#atomic_t record_disabled ; } 
s#ring_buffer_iter struct ring_buffer_iter { s#ring_buffer_per_cpu * cpu_buffer ; unsigned long head ; s#buffer_page * head_page ; t#u64 read_stamp ; } 
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s#ring_buffer struct ring_buffer { unsigned pages ; unsigned flags ; int cpus ; t#atomic_t record_disabled ; t#cpumask_var_t cpumask ; s#lock_class_key * reader_lock_key ; s#mutex mutex ; s#ring_buffer_per_cpu * * buffers ; s#notifier_block cpu_notify ; t#u64 ( * clock ) ( void ) ; } 
ring_buffer_time_stamp t#u64 ring_buffer_time_stamp ( s#ring_buffer * , int ) 
ring_buffer_normalize_time_stamp void ring_buffer_normalize_time_stamp ( s#ring_buffer * , int , t#u64 * ) 
__ring_buffer_alloc s#ring_buffer * __ring_buffer_alloc ( unsigned long , unsigned , s#lock_class_key * ) 
ring_buffer_free void ring_buffer_free ( s#ring_buffer * ) 
ring_buffer_resize int ring_buffer_resize ( s#ring_buffer * , unsigned long ) 
ring_buffer_lock_reserve s#ring_buffer_event * ring_buffer_lock_reserve ( s#ring_buffer * , unsigned long ) 
ring_buffer_unlock_commit int ring_buffer_unlock_commit ( s#ring_buffer * , s#ring_buffer_event * ) 
ring_buffer_discard_commit void ring_buffer_discard_commit ( s#ring_buffer * , s#ring_buffer_event * ) 
ring_buffer_write int ring_buffer_write ( s#ring_buffer * , unsigned long , void * ) 
ring_buffer_record_disable void ring_buffer_record_disable ( s#ring_buffer * ) 
ring_buffer_record_enable void ring_buffer_record_enable ( s#ring_buffer * ) 
ring_buffer_record_disable_cpu void ring_buffer_record_disable_cpu ( s#ring_buffer * , int ) 
ring_buffer_record_enable_cpu void ring_buffer_record_enable_cpu ( s#ring_buffer * , int ) 
ring_buffer_entries_cpu unsigned long ring_buffer_entries_cpu ( s#ring_buffer * , int ) 
ring_buffer_overrun_cpu unsigned long ring_buffer_overrun_cpu ( s#ring_buffer * , int ) 
ring_buffer_commit_overrun_cpu unsigned long ring_buffer_commit_overrun_cpu ( s#ring_buffer * , int ) 
ring_buffer_entries unsigned long ring_buffer_entries ( s#ring_buffer * ) 
ring_buffer_overruns unsigned long ring_buffer_overruns ( s#ring_buffer * ) 
ring_buffer_iter_reset void ring_buffer_iter_reset ( s#ring_buffer_iter * ) 
ring_buffer_iter_empty int ring_buffer_iter_empty ( s#ring_buffer_iter * ) 
ring_buffer_peek s#ring_buffer_event * ring_buffer_peek ( s#ring_buffer * , int , t#u64 * ) 
ring_buffer_iter_peek s#ring_buffer_event * ring_buffer_iter_peek ( s#ring_buffer_iter * , t#u64 * ) 
ring_buffer_consume s#ring_buffer_event * ring_buffer_consume ( s#ring_buffer * , int , t#u64 * ) 
ring_buffer_read_start s#ring_buffer_iter * ring_buffer_read_start ( s#ring_buffer * , int ) 
ring_buffer_read_finish void ring_buffer_read_finish ( s#ring_buffer_iter * ) 
ring_buffer_read s#ring_buffer_event * ring_buffer_read ( s#ring_buffer_iter * , t#u64 * ) 
ring_buffer_size unsigned long ring_buffer_size ( s#ring_buffer * ) 
ring_buffer_reset_cpu void ring_buffer_reset_cpu ( s#ring_buffer * , int ) 
ring_buffer_reset void ring_buffer_reset ( s#ring_buffer * ) 
ring_buffer_empty int ring_buffer_empty ( s#ring_buffer * ) 
ring_buffer_empty_cpu int ring_buffer_empty_cpu ( s#ring_buffer * , int ) 
ring_buffer_swap_cpu int ring_buffer_swap_cpu ( s#ring_buffer * , s#ring_buffer * , int ) 
ring_buffer_alloc_read_page void * ring_buffer_alloc_read_page ( s#ring_buffer * ) 
ring_buffer_free_read_page void ring_buffer_free_read_page ( s#ring_buffer * , void * ) 
ring_buffer_read_page int ring_buffer_read_page ( s#ring_buffer * , void * * , t#size_t , int , int ) 

/* kernel/trace/trace.o */
s##ring_buffer
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##backing_dev_info
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##cdev
s##posix_acl
s##ring_buffer_iter
filter_current_check_discard extern int filter_current_check_discard ( s#ring_buffer * , s#ftrace_event_call * , void * , s#ring_buffer_event * ) 
tracing_generic_entry_update void tracing_generic_entry_update ( s#trace_entry * , unsigned long , int ) 
trace_current_buffer_lock_reserve s#ring_buffer_event * trace_current_buffer_lock_reserve ( s#ring_buffer * * , int , unsigned long , unsigned long , int ) 
trace_current_buffer_unlock_commit void trace_current_buffer_unlock_commit ( s#ring_buffer * , s#ring_buffer_event * , unsigned long , int ) 
trace_nowake_buffer_unlock_commit void trace_nowake_buffer_unlock_commit ( s#ring_buffer * , s#ring_buffer_event * , unsigned long , int ) 
trace_current_buffer_discard_commit void trace_current_buffer_discard_commit ( s#ring_buffer * , s#ring_buffer_event * ) 
trace_vbprintk extern int trace_vbprintk ( unsigned long , const char * , va_list args ) 
trace_vprintk extern int trace_vprintk ( unsigned long , const char * , va_list args ) 

/* kernel/trace/trace_events.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##backing_dev_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##ring_buffer
s##ring_buffer_iter
trace_define_field extern int trace_define_field ( s#ftrace_event_call * , const char * , const char * , int , int , int , int ) 
trace_define_common_fields extern int trace_define_common_fields ( s#ftrace_event_call * ) 

/* kernel/trace/trace_events_filter.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##backing_dev_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##ring_buffer
s##ring_buffer_iter
filter_match_preds extern int filter_match_preds ( s#ftrace_event_call * , void * ) 

/* kernel/trace/trace_irqsoff.o */
start_critical_timings extern void start_critical_timings ( void ) 
stop_critical_timings extern void stop_critical_timings ( void ) 
trace_hardirqs_on extern void trace_hardirqs_on ( void ) 
trace_hardirqs_off extern void trace_hardirqs_off ( void ) 
trace_hardirqs_on_caller void trace_hardirqs_on_caller ( unsigned long ) 
trace_hardirqs_off_caller void trace_hardirqs_off_caller ( unsigned long ) 

/* kernel/trace/trace_output.o */
per_cpu__ftrace_event_seq extern __attribute__ ( ( section ( ".data.percpu" "" ) ) ) __typeof__ ( s#trace_seq ) per_cpu__ftrace_event_seq 
trace_seq_printf extern int trace_seq_printf ( s#trace_seq * , const char * , ... ) 
trace_seq_vprintf extern int trace_seq_vprintf ( s#trace_seq * , const char * , va_list args ) 
s#trace_print_flags struct trace_print_flags { unsigned long mask ; const char * name ; } 
ftrace_print_flags_seq const char * ftrace_print_flags_seq ( s#trace_seq * , const char * , unsigned long , const s#trace_print_flags * ) 
ftrace_print_symbols_seq const char * ftrace_print_symbols_seq ( s#trace_seq * , unsigned long , const s#trace_print_flags * ) 
s##ring_buffer
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##ring_buffer_iter
register_ftrace_event extern int register_ftrace_event ( s#trace_event * ) 
unregister_ftrace_event extern int unregister_ftrace_event ( s#trace_event * ) 

/* kernel/trace/trace_printk.o */
__trace_bprintk extern int __trace_bprintk ( unsigned long , const char * , ... ) 
__ftrace_vbprintk extern int __ftrace_vbprintk ( unsigned long , const char * , va_list ap ) 
__trace_printk extern int __trace_printk ( unsigned long , const char * , ... ) 
__ftrace_vprintk extern int __ftrace_vprintk ( unsigned long , const char * , va_list ap ) 

/* kernel/tracepoint.o */
tracepoint_probe_register extern int tracepoint_probe_register ( const char * , void * ) 
tracepoint_probe_unregister extern int tracepoint_probe_unregister ( const char * , void * ) 
tracepoint_probe_register_noupdate extern int tracepoint_probe_register_noupdate ( const char * , void * ) 
tracepoint_probe_unregister_noupdate extern int tracepoint_probe_unregister_noupdate ( const char * , void * ) 
tracepoint_probe_update_all extern void tracepoint_probe_update_all ( void ) 
tracepoint_get_iter_range extern int tracepoint_get_iter_range ( s#tracepoint * * , s#tracepoint * , s#tracepoint * ) 
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##file
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##exec_domain
s##compat_timespec
s##pollfd
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s#tracepoint_iter struct tracepoint_iter { s#module * module ; s#tracepoint * tracepoint ; } 
tracepoint_iter_start extern void tracepoint_iter_start ( s#tracepoint_iter * ) 
tracepoint_iter_next extern void tracepoint_iter_next ( s#tracepoint_iter * ) 
tracepoint_iter_stop extern void tracepoint_iter_stop ( s#tracepoint_iter * ) 
tracepoint_iter_reset extern void tracepoint_iter_reset ( s#tracepoint_iter * ) 

/* kernel/user.o */
s##key_type
s##key_user
s##keyring_list
init_user_ns extern s#user_namespace init_user_ns 

/* kernel/user_namespace.o */
free_user_ns extern void free_user_ns ( s#kref * ) 

/* kernel/utrace.o */
__utrace_engine_release void __utrace_engine_release ( s#kref * ) 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
utrace_attach_task s#utrace_engine * utrace_attach_task ( s#task_struct * , int , const s#utrace_engine_ops * , void * ) 
utrace_attach_pid s#utrace_engine * utrace_attach_pid ( s#pid * , int , const s#utrace_engine_ops * , void * ) 
utrace_set_events int utrace_set_events ( s#task_struct * , s#utrace_engine * , unsigned long ) 
utrace_control int utrace_control ( s#task_struct * , s#utrace_engine * , e#utrace_resume_action ) 
utrace_barrier int utrace_barrier ( s#task_struct * , s#utrace_engine * ) 
s#utrace_examiner struct utrace_examiner { long state ; unsigned long ncsw ; } 
utrace_prepare_examine int utrace_prepare_examine ( s#task_struct * , s#utrace_engine * , s#utrace_examiner * ) 
utrace_finish_examine int utrace_finish_examine ( s#task_struct * , s#utrace_engine * , s#utrace_examiner * ) 
t#user_regset_get_fn typedef int user_regset_get_fn ( s#task_struct * , const s#user_regset * , unsigned int , unsigned int , void * , void * ) 
t#user_regset_set_fn typedef int user_regset_set_fn ( s#task_struct * , const s#user_regset * , unsigned int , unsigned int , const void * , const void * ) 
t#user_regset_active_fn typedef int user_regset_active_fn ( s#task_struct * , const s#user_regset * ) 
t#user_regset_writeback_fn typedef int user_regset_writeback_fn ( s#task_struct * , const s#user_regset * , int ) 
s#user_regset struct user_regset { t#user_regset_get_fn * get ; t#user_regset_set_fn * set ; t#user_regset_active_fn * active ; t#user_regset_writeback_fn * writeback ; unsigned int n ; unsigned int size ; unsigned int align ; unsigned int bias ; unsigned int core_note_type ; } 
s#user_regset_view struct user_regset_view { const char * name ; const s#user_regset * regsets ; unsigned int n ; t#u32 e_flags ; t#u16 e_machine ; t#u8 ei_osabi ; } 
task_user_regset_view const s#user_regset_view * task_user_regset_view ( s#task_struct * ) 

/* kernel/wait.o */
__init_waitqueue_head extern void __init_waitqueue_head ( t#wait_queue_head_t * , s#lock_class_key * ) 
add_wait_queue extern void add_wait_queue ( t#wait_queue_head_t * , t#wait_queue_t * ) 
add_wait_queue_exclusive extern void add_wait_queue_exclusive ( t#wait_queue_head_t * , t#wait_queue_t * ) 
remove_wait_queue extern void remove_wait_queue ( t#wait_queue_head_t * , t#wait_queue_t * ) 
prepare_to_wait void prepare_to_wait ( t#wait_queue_head_t * , t#wait_queue_t * , int ) 
prepare_to_wait_exclusive void prepare_to_wait_exclusive ( t#wait_queue_head_t * , t#wait_queue_t * , int ) 
finish_wait void finish_wait ( t#wait_queue_head_t * , t#wait_queue_t * ) 
abort_exclusive_wait void abort_exclusive_wait ( t#wait_queue_head_t * , t#wait_queue_t * , unsigned int , void * ) 
autoremove_wake_function int autoremove_wake_function ( t#wait_queue_t * , unsigned , int , void * ) 
wake_bit_function int wake_bit_function ( t#wait_queue_t * , unsigned , int , void * ) 
s#wait_bit_key struct wait_bit_key { void * flags ; int bit_nr ; } 
s#wait_bit_queue struct wait_bit_queue { s#wait_bit_key key ; t#wait_queue_t wait ; } 
__wait_on_bit int __wait_on_bit ( t#wait_queue_head_t * , s#wait_bit_queue * , int ( * ) ( void * ) , unsigned ) 
out_of_line_wait_on_bit int out_of_line_wait_on_bit ( void * , int , int ( * ) ( void * ) , unsigned ) 
__wait_on_bit_lock int __wait_on_bit_lock ( t#wait_queue_head_t * , s#wait_bit_queue * , int ( * ) ( void * ) , unsigned ) 
out_of_line_wait_on_bit_lock int out_of_line_wait_on_bit_lock ( void * , int , int ( * ) ( void * ) , unsigned ) 
__wake_up_bit void __wake_up_bit ( t#wait_queue_head_t * , void * , int ) 
wake_up_bit void wake_up_bit ( void * , int ) 
bit_waitqueue t#wait_queue_head_t * bit_waitqueue ( void * , int ) 

/* kernel/workqueue.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s#cpu_workqueue_struct struct cpu_workqueue_struct { t#spinlock_t lock ; s#list_head worklist ; t#wait_queue_head_t more_work ; s#work_struct * current_work ; s#workqueue_struct * wq ; s#task_struct * thread ; } 
s#workqueue_struct struct workqueue_struct { s#cpu_workqueue_struct * cpu_wq ; s#list_head list ; const char * name ; int singlethread ; int freezeable ; int rt ; } 
queue_work extern int queue_work ( s#workqueue_struct * , s#work_struct * ) 
queue_work_on extern int queue_work_on ( int , s#workqueue_struct * , s#work_struct * ) 
queue_delayed_work extern int queue_delayed_work ( s#workqueue_struct * , s#delayed_work * , unsigned long ) 
queue_delayed_work_on extern int queue_delayed_work_on ( int , s#workqueue_struct * , s#delayed_work * , unsigned long ) 
flush_workqueue extern void flush_workqueue ( s#workqueue_struct * ) 
flush_work extern int flush_work ( s#work_struct * ) 
cancel_work_sync extern int cancel_work_sync ( s#work_struct * ) 
cancel_delayed_work_sync extern int cancel_delayed_work_sync ( s#delayed_work * ) 
schedule_work extern int schedule_work ( s#work_struct * ) 
schedule_work_on extern int schedule_work_on ( int , s#work_struct * ) 
schedule_delayed_work extern int schedule_delayed_work ( s#delayed_work * , unsigned long ) 
flush_delayed_work extern void flush_delayed_work ( s#delayed_work * ) 
schedule_delayed_work_on extern int schedule_delayed_work_on ( int , s#delayed_work * , unsigned long ) 
flush_scheduled_work extern void flush_scheduled_work ( void ) 
execute_in_process_context int execute_in_process_context ( t#work_func_t , s#execute_work * ) 
__create_workqueue_key extern s#workqueue_struct * __create_workqueue_key ( const char * , int , int , int , s#lock_class_key * , const char * ) 
destroy_workqueue extern void destroy_workqueue ( s#workqueue_struct * ) 
work_on_cpu long work_on_cpu ( unsigned int , long ( * ) ( void * ) , void * ) 

/* lib/argv_split.o */
argv_free extern void argv_free ( char * * ) 
argv_split extern char * * argv_split ( t#gfp_t , const char * , int * ) 

/* lib/bcd.o */
bcd2bin unsigned bcd2bin ( unsigned char ) 
bin2bcd unsigned char bin2bcd ( unsigned ) 

/* lib/bitmap.o */
__bitmap_empty extern int __bitmap_empty ( const unsigned long * , int ) 
__bitmap_full extern int __bitmap_full ( const unsigned long * , int ) 
__bitmap_equal extern int __bitmap_equal ( const unsigned long * , const unsigned long * , int ) 
__bitmap_complement extern void __bitmap_complement ( unsigned long * , const unsigned long * , int ) 
__bitmap_shift_right extern void __bitmap_shift_right ( unsigned long * , const unsigned long * , int , int ) 
__bitmap_shift_left extern void __bitmap_shift_left ( unsigned long * , const unsigned long * , int , int ) 
__bitmap_and extern int __bitmap_and ( unsigned long * , const unsigned long * , const unsigned long * , int ) 
__bitmap_or extern void __bitmap_or ( unsigned long * , const unsigned long * , const unsigned long * , int ) 
__bitmap_xor extern void __bitmap_xor ( unsigned long * , const unsigned long * , const unsigned long * , int ) 
__bitmap_andnot extern int __bitmap_andnot ( unsigned long * , const unsigned long * , const unsigned long * , int ) 
__bitmap_intersects extern int __bitmap_intersects ( const unsigned long * , const unsigned long * , int ) 
__bitmap_subset extern int __bitmap_subset ( const unsigned long * , const unsigned long * , int ) 
__bitmap_weight extern int __bitmap_weight ( const unsigned long * , int ) 
bitmap_scnprintf extern int bitmap_scnprintf ( char * , unsigned int , const unsigned long * , int ) 
__bitmap_parse extern int __bitmap_parse ( const char * , unsigned int , int , unsigned long * , int ) 
bitmap_parse_user extern int bitmap_parse_user ( const char * , unsigned int , unsigned long * , int ) 
bitmap_scnlistprintf extern int bitmap_scnlistprintf ( char * , unsigned int , const unsigned long * , int ) 
bitmap_parselist extern int bitmap_parselist ( const char * , unsigned long * , int ) 
bitmap_remap extern void bitmap_remap ( unsigned long * , const unsigned long * , const unsigned long * , const unsigned long * , int ) 
bitmap_bitremap extern int bitmap_bitremap ( int , const unsigned long * , const unsigned long * , int ) 
bitmap_onto extern void bitmap_onto ( unsigned long * , const unsigned long * , const unsigned long * , int ) 
bitmap_fold extern void bitmap_fold ( unsigned long * , const unsigned long * , int , int ) 
bitmap_find_free_region extern int bitmap_find_free_region ( unsigned long * , int , int ) 
bitmap_release_region extern void bitmap_release_region ( unsigned long * , int , int ) 
bitmap_allocate_region extern int bitmap_allocate_region ( unsigned long * , int , int ) 
bitmap_copy_le extern void bitmap_copy_le ( void * , const unsigned long * , int ) 

/* lib/bitrev.o */
byte_rev_table extern t#u8 const byte_rev_table [ 256 ] 
bitrev16 extern t#u16 bitrev16 ( t#u16 ) 
bitrev32 extern t#u32 bitrev32 ( t#u32 ) 

/* lib/cmdline.o */
memparse extern unsigned long long memparse ( const char * , char * * ) 
get_option extern int get_option ( char * * , int * ) 
get_options extern char * get_options ( const char * , int , int * ) 

/* lib/cpumask.o */
__first_cpu int __first_cpu ( const t#cpumask_t * ) 
__next_cpu int __next_cpu ( int , const t#cpumask_t * ) 
__any_online_cpu int __any_online_cpu ( const t#cpumask_t * ) 
cpumask_next_and int cpumask_next_and ( int , const s#cpumask * , const s#cpumask * ) 

/* lib/crc-ccitt.o */
crc_ccitt_table extern t#u16 const crc_ccitt_table [ 256 ] 
crc_ccitt extern t#u16 crc_ccitt ( t#u16 , const t#u8 * , t#size_t ) 

/* lib/crc-itu-t.o */
crc_itu_t_table extern t#u16 const crc_itu_t_table [ 256 ] 
crc_itu_t extern t#u16 crc_itu_t ( t#u16 , const t#u8 * , t#size_t ) 

/* lib/crc-t10dif.o */
crc_t10dif t#__u16 crc_t10dif ( unsigned char const * , t#size_t ) 

/* lib/crc16.o */
crc16_table extern t#u16 const crc16_table [ 256 ] 
crc16 extern t#u16 crc16 ( t#u16 , const t#u8 * , t#size_t ) 

/* lib/crc32.o */
crc32_le extern t#u32 crc32_le ( t#u32 , unsigned char const * , t#size_t ) 
crc32_be extern t#u32 crc32_be ( t#u32 , unsigned char const * , t#size_t ) 

/* lib/crc7.o */
crc7_syndrome_table extern const t#u8 crc7_syndrome_table [ 256 ] 
crc7 extern t#u8 crc7 ( t#u8 , const t#u8 * , t#size_t ) 

/* lib/ctype.o */
_ctype extern unsigned char _ctype [ ] 

/* lib/dec_and_lock.o */
_atomic_dec_and_lock extern int _atomic_dec_and_lock ( t#atomic_t * , t#spinlock_t * ) 

/* lib/div64.o */
iter_div_u64_rem t#u32 iter_div_u64_rem ( t#u64 , t#u32 , t#u64 * ) 

/* lib/dump_stack.o */
dump_stack extern void dump_stack ( void ) 

/* lib/dynamic_debug.o */
dynamic_debug_enabled extern long long dynamic_debug_enabled 
dynamic_debug_enabled2 extern long long dynamic_debug_enabled2 
s#_ddebug struct _ddebug { const char * modname ; const char * function ; const char * filename ; const char * format ; char primary_hash ; char secondary_hash ; unsigned int lineno : 24 ; unsigned int flags : 8 ; } 
ddebug_add_module int ddebug_add_module ( s#_ddebug * , unsigned int , const char * ) 
ddebug_remove_module extern int ddebug_remove_module ( char * ) 

/* lib/find_last_bit.o */
find_last_bit extern unsigned long find_last_bit ( const unsigned long * , unsigned long ) 

/* lib/gcd.o */
gcd unsigned long gcd ( unsigned long , unsigned long ) 

/* lib/halfmd4.o */
half_md4_transform t#__u32 half_md4_transform ( t#__u32 [ 4 ] , t#__u32 const [ 8 ] ) 

/* lib/hexdump.o */
hex_asc extern const char hex_asc [ ] 
hex_dump_to_buffer extern void hex_dump_to_buffer ( const void * , t#size_t , int , int , char * , t#size_t , t#bool ) 
print_hex_dump extern void print_hex_dump ( const char * , const char * , int , int , int , const void * , t#size_t , t#bool ) 
print_hex_dump_bytes extern void print_hex_dump_bytes ( const char * , int , const void * , t#size_t ) 

/* lib/hweight.o */
hweight32 extern unsigned int hweight32 ( unsigned int ) 
hweight16 extern unsigned int hweight16 ( unsigned int ) 
hweight8 extern unsigned int hweight8 ( unsigned int ) 
hweight64 extern unsigned long hweight64 ( t#__u64 ) 

/* lib/idr.o */
idr_pre_get int idr_pre_get ( s#idr * , t#gfp_t ) 
idr_get_new_above int idr_get_new_above ( s#idr * , void * , int , int * ) 
idr_get_new int idr_get_new ( s#idr * , void * , int * ) 
idr_remove void idr_remove ( s#idr * , int ) 
idr_remove_all void idr_remove_all ( s#idr * ) 
idr_destroy void idr_destroy ( s#idr * ) 
idr_find void * idr_find ( s#idr * , int ) 
idr_for_each int idr_for_each ( s#idr * , int ( * ) ( int , void * , void * ) , void * ) 
idr_replace void * idr_replace ( s#idr * , void * , int ) 
idr_init void idr_init ( s#idr * ) 
s#ida_bitmap struct ida_bitmap { long nr_busy ; unsigned long bitmap [ ( 128 / sizeof ( long ) - 1 ) ] ; } 
s#ida struct ida { s#idr idr ; s#ida_bitmap * free_bitmap ; } 
ida_pre_get int ida_pre_get ( s#ida * , t#gfp_t ) 
ida_get_new_above int ida_get_new_above ( s#ida * , int , int * ) 
ida_get_new int ida_get_new ( s#ida * , int * ) 
ida_remove void ida_remove ( s#ida * , int ) 
ida_destroy void ida_destroy ( s#ida * ) 
ida_init void ida_init ( s#ida * ) 

/* lib/int_sqrt.o */
int_sqrt unsigned long int_sqrt ( unsigned long ) 

/* lib/irq_regs.o */
per_cpu____irq_regs extern __attribute__ ( ( section ( ".data.percpu" "" ) ) ) __typeof__ ( s#pt_regs * ) per_cpu____irq_regs 

/* lib/kasprintf.o */
kvasprintf extern char * kvasprintf ( t#gfp_t , const char * , va_list args ) 
kasprintf extern char * kasprintf ( t#gfp_t , const char * , ... ) 

/* lib/kernel_lock.o */
lock_kernel extern void __attribute__ ( ( section ( ".spinlock.text" ) ) ) lock_kernel ( void ) 
unlock_kernel extern void __attribute__ ( ( section ( ".spinlock.text" ) ) ) unlock_kernel ( void ) 

/* lib/klist.o */
klist_init extern void klist_init ( s#klist * , void ( * ) ( s#klist_node * ) , void ( * ) ( s#klist_node * ) ) 
klist_add_head extern void klist_add_head ( s#klist_node * , s#klist * ) 
klist_add_tail extern void klist_add_tail ( s#klist_node * , s#klist * ) 
klist_add_after extern void klist_add_after ( s#klist_node * , s#klist_node * ) 
klist_add_before extern void klist_add_before ( s#klist_node * , s#klist_node * ) 
klist_del extern void klist_del ( s#klist_node * ) 
klist_remove extern void klist_remove ( s#klist_node * ) 
klist_node_attached extern int klist_node_attached ( s#klist_node * ) 
klist_iter_init_node extern void klist_iter_init_node ( s#klist * , s#klist_iter * , s#klist_node * ) 
klist_iter_init extern void klist_iter_init ( s#klist * , s#klist_iter * ) 
klist_iter_exit extern void klist_iter_exit ( s#klist_iter * ) 
klist_next extern s#klist_node * klist_next ( s#klist_iter * ) 

/* lib/kobject.o */
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##file
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##exec_domain
s##compat_timespec
s##pollfd
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##sysfs_dirent
kobject_get_path extern char * kobject_get_path ( s#kobject * , t#gfp_t ) 
kobject_set_name extern int kobject_set_name ( s#kobject * , const char * , ... ) 
kobject_init extern void kobject_init ( s#kobject * , s#kobj_type * ) 
kobject_add extern int kobject_add ( s#kobject * , s#kobject * , const char * , ... ) 
kobject_init_and_add extern int kobject_init_and_add ( s#kobject * , s#kobj_type * , s#kobject * , const char * , ... ) 
kobject_rename extern int kobject_rename ( s#kobject * , const char * ) 
kobject_create_and_add extern s#kobject * kobject_create_and_add ( const char * , s#kobject * ) 
kset_create_and_add extern s#kset * kset_create_and_add ( const char * , s#kset_uevent_ops * , s#kobject * ) 
kobject_get extern s#kobject * kobject_get ( s#kobject * ) 
kobject_put extern void kobject_put ( s#kobject * ) 
kobject_del extern void kobject_del ( s#kobject * ) 
kset_register extern int kset_register ( s#kset * ) 
kset_unregister extern void kset_unregister ( s#kset * ) 

/* lib/kobject_uevent.o */
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##nameidata
s##vfsmount
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##sysfs_dirent
e#kobject_action enum kobject_action { KOBJ_ADD , KOBJ_REMOVE , KOBJ_CHANGE , KOBJ_MOVE , KOBJ_ONLINE , KOBJ_OFFLINE , KOBJ_MAX } 
kobject_uevent_env int kobject_uevent_env ( s#kobject * , e#kobject_action , char * [ ] ) 
kobject_uevent int kobject_uevent ( s#kobject * , e#kobject_action ) 
add_uevent_var int add_uevent_var ( s#kobj_uevent_env * , const char * , ... ) 

/* lib/kref.o */
kref_set void kref_set ( s#kref * , int ) 
kref_init void kref_init ( s#kref * ) 
kref_get void kref_get ( s#kref * ) 
kref_put int kref_put ( s#kref * , void ( * ) ( s#kref * ) ) 

/* lib/libcrc32c.o */
crc32c t#u32 crc32c ( t#u32 , const void * , unsigned int ) 

/* lib/lzo/lzo1x_compress.o */
lzo1x_1_compress int lzo1x_1_compress ( const unsigned char * , t#size_t , unsigned char * , t#size_t * , void * ) 

/* lib/lzo/lzo1x_decompress.o */
lzo1x_decompress_safe int lzo1x_decompress_safe ( const unsigned char * , t#size_t , unsigned char * , t#size_t * ) 

/* lib/nlattr.o */
s##sock
s##neigh_parms
s##vlan_group
s##neighbour
s##wireless_dev
s##Qdisc
s##tvec_base
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ip_conntrack_stat
s##net_generic
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##rtnl_link_ops
s##sec_path
__nla_reserve extern s#nlattr * __nla_reserve ( s#sk_buff * , int , int ) 
__nla_reserve_nohdr extern void * __nla_reserve_nohdr ( s#sk_buff * , int ) 
nla_reserve extern s#nlattr * nla_reserve ( s#sk_buff * , int , int ) 
nla_reserve_nohdr extern void * nla_reserve_nohdr ( s#sk_buff * , int ) 
__nla_put extern void __nla_put ( s#sk_buff * , int , int , const void * ) 
__nla_put_nohdr extern void __nla_put_nohdr ( s#sk_buff * , int , const void * ) 
nla_put extern int nla_put ( s#sk_buff * , int , int , const void * ) 
nla_put_nohdr extern int nla_put_nohdr ( s#sk_buff * , int , const void * ) 
nla_append extern int nla_append ( s#sk_buff * , int , const void * ) 
nla_validate extern int nla_validate ( s#nlattr * , int , int , const s#nla_policy * ) 
nla_policy_len extern int nla_policy_len ( const s#nla_policy * , int ) 
nla_parse extern int nla_parse ( s#nlattr * [ ] , int , s#nlattr * , int , const s#nla_policy * ) 
nla_find extern s#nlattr * nla_find ( s#nlattr * , int , int ) 
nla_strlcpy extern t#size_t nla_strlcpy ( char * , const s#nlattr * , t#size_t ) 
nla_memcpy extern int nla_memcpy ( void * , const s#nlattr * , int ) 
nla_memcmp extern int nla_memcmp ( const s#nlattr * , const void * , t#size_t ) 
nla_strcmp extern int nla_strcmp ( const s#nlattr * , const char * ) 

/* lib/parser.o */
s#match_token struct match_token { int token ; const char * pattern ; } 
t#match_table_t typedef s#match_token match_table_t [ ] 
t#substring_t typedef struct { char * from ; char * to ; } substring_t 
match_token int match_token ( char * , const t#match_table_t , t#substring_t [ ] ) 
match_string int match_string ( t#substring_t * , const char * ) 
match_int int match_int ( t#substring_t * , int * ) 
match_octal int match_octal ( t#substring_t * , int * ) 
match_hex int match_hex ( t#substring_t * , int * ) 
match_strlcpy t#size_t match_strlcpy ( char * , const t#substring_t * , t#size_t ) 
match_strdup char * match_strdup ( const t#substring_t * ) 

/* lib/percpu_counter.o */
percpu_counter_set void percpu_counter_set ( s#percpu_counter * , t#s64 ) 
__percpu_counter_add void __percpu_counter_add ( s#percpu_counter * , t#s64 , t#s32 ) 
__percpu_counter_sum t#s64 __percpu_counter_sum ( s#percpu_counter * ) 
__percpu_counter_init int __percpu_counter_init ( s#percpu_counter * , t#s64 , s#lock_class_key * ) 
percpu_counter_destroy void percpu_counter_destroy ( s#percpu_counter * ) 
percpu_counter_batch extern int percpu_counter_batch 

/* lib/radix-tree.o */
radix_tree_preload int radix_tree_preload ( t#gfp_t ) 
s#radix_tree_node struct radix_tree_node { unsigned int height ; unsigned int count ; s#rcu_head rcu_head ; void * slots [ ( 1UL << ( 0 ? 4 : 6 ) ) ] ; unsigned long tags [ 2 ] [ ( ( ( 1UL << ( 0 ? 4 : 6 ) ) + 64 - 1 ) / 64 ) ] ; } 
radix_tree_insert int radix_tree_insert ( s#radix_tree_root * , unsigned long , void * ) 
radix_tree_lookup_slot void * * radix_tree_lookup_slot ( s#radix_tree_root * , unsigned long ) 
radix_tree_lookup void * radix_tree_lookup ( s#radix_tree_root * , unsigned long ) 
radix_tree_tag_set void * radix_tree_tag_set ( s#radix_tree_root * , unsigned long , unsigned int ) 
radix_tree_tag_clear void * radix_tree_tag_clear ( s#radix_tree_root * , unsigned long , unsigned int ) 
radix_tree_tag_get int radix_tree_tag_get ( s#radix_tree_root * , unsigned long , unsigned int ) 
radix_tree_next_hole unsigned long radix_tree_next_hole ( s#radix_tree_root * , unsigned long , unsigned long ) 
radix_tree_prev_hole unsigned long radix_tree_prev_hole ( s#radix_tree_root * , unsigned long , unsigned long ) 
radix_tree_gang_lookup unsigned int radix_tree_gang_lookup ( s#radix_tree_root * , void * * , unsigned long , unsigned int ) 
radix_tree_gang_lookup_slot unsigned int radix_tree_gang_lookup_slot ( s#radix_tree_root * , void * * * , unsigned long , unsigned int ) 
radix_tree_gang_lookup_tag unsigned int radix_tree_gang_lookup_tag ( s#radix_tree_root * , void * * , unsigned long , unsigned int , unsigned int ) 
radix_tree_gang_lookup_tag_slot unsigned int radix_tree_gang_lookup_tag_slot ( s#radix_tree_root * , void * * * , unsigned long , unsigned int , unsigned int ) 
radix_tree_delete void * radix_tree_delete ( s#radix_tree_root * , unsigned long ) 
radix_tree_tagged int radix_tree_tagged ( s#radix_tree_root * , unsigned int ) 

/* lib/random32.o */
random32 t#u32 random32 ( void ) 
srandom32 void srandom32 ( t#u32 ) 

/* lib/ratelimit.o */
s#ratelimit_state struct ratelimit_state { int interval ; int burst ; int printed ; int missed ; unsigned long begin ; } 
__ratelimit extern int __ratelimit ( s#ratelimit_state * ) 

/* lib/rbtree.o */
rb_insert_color extern void rb_insert_color ( s#rb_node * , s#rb_root * ) 
rb_erase extern void rb_erase ( s#rb_node * , s#rb_root * ) 
rb_first extern s#rb_node * rb_first ( const s#rb_root * ) 
rb_last extern s#rb_node * rb_last ( const s#rb_root * ) 
rb_next extern s#rb_node * rb_next ( const s#rb_node * ) 
rb_prev extern s#rb_node * rb_prev ( const s#rb_node * ) 
rb_replace_node extern void rb_replace_node ( s#rb_node * , s#rb_node * , s#rb_root * ) 

/* lib/rwsem.o */
__init_rwsem extern void __init_rwsem ( s#rw_semaphore * , const char * , s#lock_class_key * ) 
rwsem_down_read_failed extern s#rw_semaphore * rwsem_down_read_failed ( s#rw_semaphore * ) 
rwsem_down_write_failed extern s#rw_semaphore * rwsem_down_write_failed ( s#rw_semaphore * ) 
rwsem_wake extern s#rw_semaphore * rwsem_wake ( s#rw_semaphore * ) 
rwsem_downgrade_wake extern s#rw_semaphore * rwsem_downgrade_wake ( s#rw_semaphore * ) 

/* lib/scatterlist.o */
sg_next s#scatterlist * sg_next ( s#scatterlist * ) 
sg_last s#scatterlist * sg_last ( s#scatterlist * , unsigned int ) 
sg_init_table void sg_init_table ( s#scatterlist * , unsigned int ) 
sg_init_one void sg_init_one ( s#scatterlist * , const void * , unsigned int ) 
t#sg_free_fn typedef void ( sg_free_fn ) ( s#scatterlist * , unsigned int ) 
__sg_free_table void __sg_free_table ( s#sg_table * , unsigned int , t#sg_free_fn * ) 
sg_free_table void sg_free_table ( s#sg_table * ) 
t#sg_alloc_fn typedef s#scatterlist * ( sg_alloc_fn ) ( unsigned int , t#gfp_t ) 
__sg_alloc_table int __sg_alloc_table ( s#sg_table * , unsigned int , unsigned int , t#gfp_t , t#sg_alloc_fn * ) 
sg_alloc_table int sg_alloc_table ( s#sg_table * , unsigned int , t#gfp_t ) 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s#sg_mapping_iter struct sg_mapping_iter { s#page * page ; void * addr ; t#size_t length ; t#size_t consumed ; s#scatterlist * __sg ; unsigned int __nents ; unsigned int __offset ; unsigned int __flags ; } 
sg_miter_start void sg_miter_start ( s#sg_mapping_iter * , s#scatterlist * , unsigned int , unsigned int ) 
sg_miter_next t#bool sg_miter_next ( s#sg_mapping_iter * ) 
sg_miter_stop void sg_miter_stop ( s#sg_mapping_iter * ) 
sg_copy_from_buffer t#size_t sg_copy_from_buffer ( s#scatterlist * , unsigned int , void * , t#size_t ) 
sg_copy_to_buffer t#size_t sg_copy_to_buffer ( s#scatterlist * , unsigned int , void * , t#size_t ) 

/* lib/sha1.o */
sha_transform void sha_transform ( t#__u32 * , const char * , t#__u32 * ) 

/* lib/sort.o */
sort void sort ( void * , t#size_t , t#size_t , int ( * ) ( const void * , const void * ) , void ( * ) ( void * , void * , int ) ) 

/* lib/string.o */
strnicmp extern int strnicmp ( const char * , const char * , t#__kernel_size_t ) 
strcasecmp extern int strcasecmp ( const char * , const char * ) 
strncasecmp extern int strncasecmp ( const char * , const char * , t#size_t ) 
strncmp extern int strncmp ( const char * , const char * , t#__kernel_size_t ) 
strchr extern char * strchr ( const char * , int ) 
strnchr extern char * strnchr ( const char * , t#size_t , int ) 
strstrip extern char * strstrip ( char * ) 
strspn extern t#__kernel_size_t strspn ( const char * , const char * ) 
strcspn extern t#__kernel_size_t strcspn ( const char * , const char * ) 
strpbrk extern char * strpbrk ( const char * , const char * ) 
strsep extern char * strsep ( char * * , const char * ) 
sysfs_streq extern t#bool sysfs_streq ( const char * , const char * ) 
memmove extern void * memmove ( void * , const void * , t#__kernel_size_t ) 

/* lib/string_helpers.o */
e#string_size_units enum string_size_units { STRING_UNITS_10 , STRING_UNITS_2 , } 
string_get_size int string_get_size ( t#u64 , e#string_size_units , char * , int ) 

/* lib/syscall.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##file
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##exec_domain
s##compat_timespec
s##pollfd
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
task_current_syscall extern int task_current_syscall ( s#task_struct * , long * , unsigned long [ 6 ] , unsigned int , unsigned long * , unsigned long * ) 

/* lib/textsearch.o */
s#ts_state struct ts_state { unsigned int offset ; char cb [ 40 ] ; } 
s#ts_config struct ts_config { s#ts_ops * ops ; int flags ; unsigned int ( * get_next_block ) ( unsigned int , const t#u8 * * , s#ts_config * , s#ts_state * ) ; void ( * finish ) ( s#ts_config * , s#ts_state * ) ; } 
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##file
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##exec_domain
s##compat_timespec
s##pollfd
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s#ts_ops struct ts_ops { const char * name ; s#ts_config * ( * init ) ( const void * , unsigned int , t#gfp_t , int ) ; unsigned int ( * find ) ( s#ts_config * , s#ts_state * ) ; void ( * destroy ) ( s#ts_config * ) ; void * ( * get_pattern ) ( s#ts_config * ) ; unsigned int ( * get_pattern_len ) ( s#ts_config * ) ; s#module * owner ; s#list_head list ; } 
textsearch_register extern int textsearch_register ( s#ts_ops * ) 
textsearch_unregister extern int textsearch_unregister ( s#ts_ops * ) 
textsearch_prepare extern s#ts_config * textsearch_prepare ( const char * , const void * , unsigned int , t#gfp_t , int ) 
textsearch_find_continuous extern unsigned int textsearch_find_continuous ( s#ts_config * , s#ts_state * , const void * , unsigned int ) 
textsearch_destroy extern void textsearch_destroy ( s#ts_config * ) 

/* lib/vsprintf.o */
simple_strtoul extern unsigned long simple_strtoul ( const char * , char * * , unsigned int ) 
simple_strtol extern long simple_strtol ( const char * , char * * , unsigned int ) 
simple_strtoull extern unsigned long long simple_strtoull ( const char * , char * * , unsigned int ) 
strict_strtoul extern int strict_strtoul ( const char * , unsigned int , unsigned long * ) 
strict_strtol extern int strict_strtol ( const char * , unsigned int , long * ) 
strict_strtoull extern int strict_strtoull ( const char * , unsigned int , unsigned long long * ) 
strict_strtoll extern int strict_strtoll ( const char * , unsigned int , long long * ) 
vsnprintf extern int vsnprintf ( char * , t#size_t , const char * , va_list args ) 
vscnprintf extern int vscnprintf ( char * , t#size_t , const char * , va_list args ) 
snprintf extern int snprintf ( char * , t#size_t , const char * , ... ) 
scnprintf extern int scnprintf ( char * , t#size_t , const char * , ... ) 
vsprintf extern int vsprintf ( char * , const char * , va_list ) 
sprintf extern int sprintf ( char * , const char * , ... ) 
vbin_printf int vbin_printf ( t#u32 * , t#size_t , const char * , va_list args ) 
bstr_printf int bstr_printf ( char * , t#size_t , const char * , const t#u32 * ) 
bprintf int bprintf ( t#u32 * , t#size_t , const char * , ... ) 
vsscanf extern int vsscanf ( const char * , const char * , va_list ) 
sscanf extern int sscanf ( const char * , const char * , ... ) 

/* lib/zlib_deflate/deflate_syms.o */
zlib_deflate_workspacesize extern int zlib_deflate_workspacesize ( void ) 
t#Byte typedef unsigned char Byte 
t#uInt typedef unsigned int uInt 
t#uLong typedef unsigned long uLong 
s#internal_state struct internal_state { int dummy ; } 
s#z_stream_s struct z_stream_s { const t#Byte * next_in ; t#uInt avail_in ; t#uLong total_in ; t#Byte * next_out ; t#uInt avail_out ; t#uLong total_out ; char * msg ; s#internal_state * state ; void * workspace ; int data_type ; t#uLong adler ; t#uLong reserved ; } 
t#z_stream typedef s#z_stream_s z_stream 
t#z_streamp typedef t#z_stream * z_streamp 
zlib_deflate extern int zlib_deflate ( t#z_streamp , int ) 
zlib_deflateInit2 extern int zlib_deflateInit2 ( t#z_streamp , int , int , int , int , int ) 
zlib_deflateEnd extern int zlib_deflateEnd ( t#z_streamp ) 
zlib_deflateReset extern int zlib_deflateReset ( t#z_streamp ) 

/* lib/zlib_inflate/inflate_syms.o */
zlib_inflate_workspacesize extern int zlib_inflate_workspacesize ( void ) 
zlib_inflate extern int zlib_inflate ( t#z_streamp , int ) 
zlib_inflateInit2 extern int zlib_inflateInit2 ( t#z_streamp , int ) 
zlib_inflateEnd extern int zlib_inflateEnd ( t#z_streamp ) 
zlib_inflateReset extern int zlib_inflateReset ( t#z_streamp ) 
zlib_inflateIncomp extern int zlib_inflateIncomp ( t#z_stream * ) 
zlib_inflate_blob extern int zlib_inflate_blob ( void * , unsigned , const void * , unsigned ) 

/* mm/backing-dev.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##radix_tree_node
s##array_cache
s##kmem_list3
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
default_unplug_io_fn void default_unplug_io_fn ( s#backing_dev_info * , s#page * ) 
default_backing_dev_info extern s#backing_dev_info default_backing_dev_info 
bdi_register int bdi_register ( s#backing_dev_info * , s#device * , const char * , ... ) 
bdi_register_dev int bdi_register_dev ( s#backing_dev_info * , t#dev_t ) 
bdi_unregister void bdi_unregister ( s#backing_dev_info * ) 
bdi_init int bdi_init ( s#backing_dev_info * ) 
bdi_destroy void bdi_destroy ( s#backing_dev_info * ) 
clear_bdi_congested void clear_bdi_congested ( s#backing_dev_info * , int ) 
set_bdi_congested void set_bdi_congested ( s#backing_dev_info * , int ) 
congestion_wait long congestion_wait ( int , long ) 

/* mm/bounce.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##mtd_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##cdev
s##posix_acl
s##hd_geometry
s##timer_rand_state
blk_queue_bounce extern void blk_queue_bounce ( s#request_queue * , s#bio * * ) 

/* mm/filemap.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##kstatfs
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##hd_geometry
s##radix_tree_node
s##tvec_base
s##blk_trace
s##timer_rand_state
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
__remove_from_page_cache extern void __remove_from_page_cache ( s#page * ) 
remove_from_page_cache extern void remove_from_page_cache ( s#page * ) 
filemap_fdatawrite extern int filemap_fdatawrite ( s#address_space * ) 
filemap_fdatawrite_range extern int filemap_fdatawrite_range ( s#address_space * , t#loff_t , t#loff_t ) 
filemap_flush extern int filemap_flush ( s#address_space * ) 
filemap_fdatawait_range extern int filemap_fdatawait_range ( s#address_space * , t#loff_t , t#loff_t ) 
sync_page_range int sync_page_range ( s#inode * , s#address_space * , t#loff_t , t#loff_t ) 
sync_page_range_nolock int sync_page_range_nolock ( s#inode * , s#address_space * , t#loff_t , t#loff_t ) 
filemap_fdatawait extern int filemap_fdatawait ( s#address_space * ) 
filemap_write_and_wait extern int filemap_write_and_wait ( s#address_space * ) 
filemap_write_and_wait_range extern int filemap_write_and_wait_range ( s#address_space * , t#loff_t , t#loff_t ) 
add_to_page_cache_locked int add_to_page_cache_locked ( s#page * , s#address_space * , unsigned long , t#gfp_t ) 
add_to_page_cache int add_to_page_cache ( s#page * , s#address_space * , unsigned long , t#gfp_t ) 
add_to_page_cache_lru int add_to_page_cache_lru ( s#page * , s#address_space * , unsigned long , t#gfp_t ) 
wait_on_page_bit extern void wait_on_page_bit ( s#page * , int ) 
add_page_wait_queue extern void add_page_wait_queue ( s#page * , t#wait_queue_t * ) 
unlock_page extern void unlock_page ( s#page * ) 
end_page_writeback extern void end_page_writeback ( s#page * ) 
__lock_page extern void __lock_page ( s#page * ) 
__lock_page_killable extern int __lock_page_killable ( s#page * ) 
__wait_on_page_locked extern void __wait_on_page_locked ( s#page * ) 
find_get_page extern s#page * find_get_page ( s#address_space * , unsigned long ) 
find_lock_page extern s#page * find_lock_page ( s#address_space * , unsigned long ) 
find_or_create_page extern s#page * find_or_create_page ( s#address_space * , unsigned long , t#gfp_t ) 
find_get_pages unsigned find_get_pages ( s#address_space * , unsigned long , unsigned int , s#page * * ) 
find_get_pages_contig unsigned find_get_pages_contig ( s#address_space * , unsigned long , unsigned int , s#page * * ) 
find_get_pages_tag unsigned find_get_pages_tag ( s#address_space * , unsigned long * , int , unsigned int , s#page * * ) 
grab_cache_page_nowait extern s#page * grab_cache_page_nowait ( s#address_space * , unsigned long ) 
generic_segment_checks extern int generic_segment_checks ( const s#iovec * , unsigned long * , t#size_t * , int ) 
generic_file_aio_read extern t#ssize_t generic_file_aio_read ( s#kiocb * , const s#iovec * , unsigned long , t#loff_t ) 
filemap_fault extern int filemap_fault ( s#vm_area_struct * , s#vm_fault * ) 
generic_file_mmap extern int generic_file_mmap ( s#file * , s#vm_area_struct * ) 
generic_file_readonly_mmap extern int generic_file_readonly_mmap ( s#file * , s#vm_area_struct * ) 
t#filler_t typedef int filler_t ( void * , s#page * ) 
read_cache_page_async extern s#page * read_cache_page_async ( s#address_space * , unsigned long , t#filler_t * , void * ) 
read_cache_page_gfp extern s#page * read_cache_page_gfp ( s#address_space * , unsigned long , t#gfp_t ) 
read_cache_page extern s#page * read_cache_page ( s#address_space * , unsigned long , t#filler_t * , void * ) 
should_remove_suid extern int should_remove_suid ( s#dentry * ) 
file_remove_suid extern int file_remove_suid ( s#file * ) 
s#iov_iter struct iov_iter { const s#iovec * iov ; unsigned long nr_segs ; t#size_t iov_offset ; t#size_t count ; } 
iov_iter_copy_from_user_atomic t#size_t iov_iter_copy_from_user_atomic ( s#page * , s#iov_iter * , unsigned long , t#size_t ) 
iov_iter_copy_from_user t#size_t iov_iter_copy_from_user ( s#page * , s#iov_iter * , unsigned long , t#size_t ) 
iov_iter_advance void iov_iter_advance ( s#iov_iter * , t#size_t ) 
iov_iter_fault_in_readable int iov_iter_fault_in_readable ( s#iov_iter * , t#size_t ) 
iov_iter_single_seg_count t#size_t iov_iter_single_seg_count ( s#iov_iter * ) 
generic_write_checks int generic_write_checks ( s#file * , t#loff_t * , t#size_t * , int ) 
pagecache_write_begin int pagecache_write_begin ( s#file * , s#address_space * , t#loff_t , unsigned , unsigned , s#page * * , void * * ) 
pagecache_write_end int pagecache_write_end ( s#file * , s#address_space * , t#loff_t , unsigned , unsigned , s#page * , void * ) 
generic_file_direct_write extern t#ssize_t generic_file_direct_write ( s#kiocb * , const s#iovec * , unsigned long * , t#loff_t , t#loff_t * , t#size_t , t#size_t ) 
grab_cache_page_write_begin s#page * grab_cache_page_write_begin ( s#address_space * , unsigned long , unsigned ) 
generic_file_buffered_write extern t#ssize_t generic_file_buffered_write ( s#kiocb * , const s#iovec * , unsigned long , t#loff_t , t#loff_t * , t#size_t , t#ssize_t ) 
__generic_file_aio_write extern t#ssize_t __generic_file_aio_write ( s#kiocb * , const s#iovec * , unsigned long , t#loff_t * ) 
generic_file_aio_write extern t#ssize_t generic_file_aio_write ( s#kiocb * , const s#iovec * , unsigned long , t#loff_t ) 
try_to_release_page extern int try_to_release_page ( s#page * , t#gfp_t ) 

/* mm/filemap_xip.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
s##backing_dev_info
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
xip_file_read extern t#ssize_t xip_file_read ( s#file * , char * , t#size_t , t#loff_t * ) 
xip_file_mmap extern int xip_file_mmap ( s#file * , s#vm_area_struct * ) 
xip_file_write extern t#ssize_t xip_file_write ( s#file * , const char * , t#size_t , t#loff_t * ) 
xip_truncate_page extern int xip_truncate_page ( s#address_space * , t#loff_t ) 

/* mm/hugetlb.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##backing_dev_info
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##linux_binfmt
s##anon_vma
vma_kernel_pagesize extern unsigned long vma_kernel_pagesize ( s#vm_area_struct * ) 

/* mm/maccess.o */
probe_kernel_read extern long probe_kernel_read ( void * , void * , t#size_t ) 
probe_kernel_write extern long probe_kernel_write ( void * , void * , t#size_t ) 

/* mm/memory.o */
max_mapnr extern unsigned long max_mapnr 
s##rq
s##cfs_rq
s##rt_rq
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##radix_tree_node
s##array_cache
s##kmem_list3
mem_map extern s#page * mem_map 
num_physpages extern unsigned long num_physpages 
high_memory extern void * high_memory 
s#zap_details struct zap_details { s#vm_area_struct * nonlinear_vma ; s#address_space * check_mapping ; unsigned long first_index ; unsigned long last_index ; t#spinlock_t * i_mmap_lock ; unsigned long truncate_count ; } 
zap_page_range unsigned long zap_page_range ( s#vm_area_struct * , unsigned long , unsigned long , s#zap_details * ) 
zap_vma_ptes int zap_vma_ptes ( s#vm_area_struct * , unsigned long , unsigned long ) 
get_user_pages int get_user_pages ( s#task_struct * , s#mm_struct * , unsigned long , int , int , int , s#page * * , s#vm_area_struct * * ) 
vm_insert_page int vm_insert_page ( s#vm_area_struct * , unsigned long , s#page * ) 
vm_insert_pfn int vm_insert_pfn ( s#vm_area_struct * , unsigned long , unsigned long ) 
vm_insert_mixed int vm_insert_mixed ( s#vm_area_struct * , unsigned long , unsigned long ) 
remap_pfn_range int remap_pfn_range ( s#vm_area_struct * , unsigned long , unsigned long , unsigned long , t#pgprot_t ) 
t#pte_t typedef struct { unsigned long pte ; } pte_t 
t#pgtable_t typedef t#pte_t * pgtable_t 
t#pte_fn_t typedef int ( * pte_fn_t ) ( t#pte_t * , t#pgtable_t , unsigned long , void * ) 
apply_to_page_range extern int apply_to_page_range ( s#mm_struct * , unsigned long , unsigned long , t#pte_fn_t , void * ) 
unmap_mapping_range void unmap_mapping_range ( s#address_space * , t#loff_t const , t#loff_t const , int ) 
handle_mm_fault extern int handle_mm_fault ( s#mm_struct * , s#vm_area_struct * , unsigned long , unsigned int ) 
follow_pfn int follow_pfn ( s#vm_area_struct * , unsigned long , unsigned long * ) 

/* mm/memory_hotplug.o */
s#per_cpu_pages struct per_cpu_pages { int count ; int high ; int batch ; s#list_head lists [ 3 ] ; } 
s#per_cpu_pageset struct per_cpu_pageset { s#per_cpu_pages pcp ; t#s8 stat_threshold ; t#s8 vm_stat_diff [ NR_VM_ZONE_STAT_ITEMS ] ; } 
s#free_area struct free_area { s#list_head free_list [ 5 ] ; unsigned long nr_free ; } 
s#zone_padding struct zone_padding { char x [ 0 ] ; } 
s#zone_lru struct zone_lru { s#list_head list ; } 
s#zone_reclaim_stat struct zone_reclaim_stat { unsigned long recent_rotated [ 2 ] ; unsigned long recent_scanned [ 2 ] ; unsigned long nr_saved_scan [ NR_LRU_LISTS ] ; } 
s##zonelist_cache
s#zoneref struct zoneref { s#zone * zone ; int zone_idx ; } 
s#zonelist struct zonelist { s#zonelist_cache * zlcache_ptr ; s#zoneref _zonerefs [ ( ( 1 << 0 ) * 3 ) + 1 ] ; } 
s#bootmem_data struct bootmem_data { unsigned long node_min_pfn ; unsigned long node_low_pfn ; void * node_bootmem_map ; unsigned long last_end_off ; unsigned long hint_idx ; s#list_head list ; } 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s#pglist_data struct pglist_data { s#zone node_zones [ 3 ] ; s#zonelist node_zonelists [ 1 ] ; int nr_zones ; s#bootmem_data * bdata ; t#spinlock_t node_size_lock ; unsigned long node_start_pfn ; unsigned long node_present_pages ; unsigned long node_spanned_pages ; int node_id ; t#wait_queue_head_t kswapd_wait ; s#task_struct * kswapd ; int kswapd_max_order ; } 
s#zone struct zone { unsigned long pages_emerg ; unsigned long watermark [ NR_WMARK ] ; unsigned long lowmem_reserve [ 3 ] ; s#per_cpu_pageset pageset [ 64 ] ; t#spinlock_t lock ; t#seqlock_t span_seqlock ; s#free_area free_area [ 9 ] ; s#zone_padding _pad1_ ; t#spinlock_t lru_lock ; s#zone_lru lru [ NR_LRU_LISTS ] ; s#zone_reclaim_stat reclaim_stat ; unsigned long pages_scanned ; unsigned long flags ; t#atomic_long_t vm_stat [ NR_VM_ZONE_STAT_ITEMS ] ; int prev_priority ; unsigned int inactive_ratio ; s#zone_padding _pad2_ ; t#wait_queue_head_t * wait_table ; unsigned long wait_table_hash_nr_entries ; unsigned long wait_table_bits ; s#pglist_data * zone_pgdat ; unsigned long zone_start_pfn ; unsigned long spanned_pages ; unsigned long present_pages ; const char * name ; } 
__add_pages extern int __add_pages ( int , s#zone * , unsigned long , unsigned long ) 
__remove_pages extern int __remove_pages ( s#zone * , unsigned long , unsigned long ) 
add_memory extern int add_memory ( int , t#u64 , t#u64 ) 
remove_memory extern int remove_memory ( t#u64 , t#u64 ) 

/* mm/mempool.o */
mempool_create extern t#mempool_t * mempool_create ( int , t#mempool_alloc_t * , t#mempool_free_t * , void * ) 
mempool_create_node extern t#mempool_t * mempool_create_node ( int , t#mempool_alloc_t * , t#mempool_free_t * , void * , int ) 
mempool_resize extern int mempool_resize ( t#mempool_t * , int , t#gfp_t ) 
mempool_destroy extern void mempool_destroy ( t#mempool_t * ) 
mempool_alloc extern void * mempool_alloc ( t#mempool_t * , t#gfp_t ) 
mempool_free extern void mempool_free ( void * , t#mempool_t * ) 
mempool_alloc_slab void * mempool_alloc_slab ( t#gfp_t , void * ) 
mempool_free_slab void mempool_free_slab ( void * , void * ) 
mempool_kmalloc void * mempool_kmalloc ( t#gfp_t , void * ) 
mempool_kfree void mempool_kfree ( void * , void * ) 
mempool_alloc_pages void * mempool_alloc_pages ( t#gfp_t , void * ) 
mempool_free_pages void mempool_free_pages ( void * , void * ) 

/* mm/migrate.o */
migrate_prep extern int migrate_prep ( void ) 
putback_lru_pages extern int putback_lru_pages ( s#list_head * ) 
s##rq
s##cfs_rq
s##rt_rq
s##array_cache
s##kmem_list3
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##radix_tree_node
fail_migrate_page extern int fail_migrate_page ( s#address_space * , s#page * , s#page * ) 
migrate_page extern int migrate_page ( s#address_space * , s#page * , s#page * ) 
buffer_migrate_page extern int buffer_migrate_page ( s#address_space * , s#page * , s#page * ) 
t#new_page_t typedef s#page * new_page_t ( s#page * , unsigned long , int * * ) 
migrate_pages extern int migrate_pages ( s#list_head * , t#new_page_t , unsigned long ) 

/* mm/mlock.o */
can_do_mlock extern int can_do_mlock ( void ) 

/* mm/mm_init.o */
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##file
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##exec_domain
s##compat_timespec
s##pollfd
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##sysfs_dirent
mm_kobj extern s#kobject * mm_kobj 

/* mm/mmap.o */
vm_get_page_prot t#pgprot_t vm_get_page_prot ( unsigned long ) 
s##rq
s##cfs_rq
s##rt_rq
s##radix_tree_node
s##device
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##array_cache
s##kmem_list3
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##bsd_acct_struct
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##map_segment
s##compat_timespec
s##pollfd
s##nameidata
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
do_mmap_pgoff extern unsigned long do_mmap_pgoff ( s#file * , unsigned long , unsigned long , unsigned long , unsigned long , unsigned long ) 
get_unmapped_area extern unsigned long get_unmapped_area ( s#file * , unsigned long , unsigned long , unsigned long , unsigned long ) 
find_vma extern s#vm_area_struct * find_vma ( s#mm_struct * , unsigned long ) 
do_munmap extern int do_munmap ( s#mm_struct * , unsigned long , t#size_t ) 
do_brk extern unsigned long do_brk ( unsigned long , unsigned long ) 

/* mm/oom_kill.o */
register_oom_notifier extern int register_oom_notifier ( s#notifier_block * ) 
unregister_oom_notifier extern int unregister_oom_notifier ( s#notifier_block * ) 

/* mm/page-writeback.o */
laptop_mode extern int laptop_mode 
s##rq
s##cfs_rq
s##rt_rq
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##kstatfs
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##hd_geometry
s##radix_tree_node
s##tvec_base
s##blk_trace
s##timer_rand_state
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
bdi_writeout_inc extern void bdi_writeout_inc ( s#backing_dev_info * ) 
bdi_set_max_ratio int bdi_set_max_ratio ( s#backing_dev_info * , unsigned int ) 
balance_dirty_pages_ratelimited_nr void balance_dirty_pages_ratelimited_nr ( s#address_space * , unsigned long ) 
t#writepage_t typedef int ( * writepage_t ) ( s#page * , s#writeback_control * , void * ) 
write_cache_pages int write_cache_pages ( s#address_space * , s#writeback_control * , t#writepage_t , void * ) 
generic_writepages int generic_writepages ( s#address_space * , s#writeback_control * ) 
write_one_page int write_one_page ( s#page * , int ) 
__set_page_dirty_nobuffers int __set_page_dirty_nobuffers ( s#page * ) 
set_page_dirty_notag int set_page_dirty_notag ( s#page * ) 
redirty_page_for_writepage int redirty_page_for_writepage ( s#writeback_control * , s#page * ) 
set_page_dirty int set_page_dirty ( s#page * ) 
set_page_dirty_lock int set_page_dirty_lock ( s#page * ) 
clear_page_dirty_for_io int clear_page_dirty_for_io ( s#page * ) 
test_set_page_writeback int test_set_page_writeback ( s#page * ) 
mapping_tagged int mapping_tagged ( s#address_space * , int ) 

/* mm/page_alloc.o */
node_states extern t#nodemask_t node_states [ NR_NODE_STATES ] 
totalram_pages extern unsigned long totalram_pages 
movable_zone extern int movable_zone 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##hd_geometry
s##radix_tree_node
s##tvec_base
s##blk_trace
s##timer_rand_state
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
s##zonelist_cache
__alloc_pages_nodemask s#page * __alloc_pages_nodemask ( t#gfp_t , unsigned int , s#zonelist * , t#nodemask_t * ) 
__get_free_pages extern unsigned long __get_free_pages ( t#gfp_t , unsigned int ) 
get_zeroed_page extern unsigned long get_zeroed_page ( t#gfp_t ) 
__free_pages extern void __free_pages ( s#page * , unsigned int ) 
free_pages extern void free_pages ( unsigned long , unsigned int ) 
alloc_pages_exact void * alloc_pages_exact ( t#size_t , t#gfp_t ) 
free_pages_exact void free_pages_exact ( void * , t#size_t ) 
nr_free_buffer_pages extern unsigned int nr_free_buffer_pages ( void ) 
si_meminfo extern void si_meminfo ( s#sysinfo * ) 
contig_page_data extern s#pglist_data contig_page_data 
adjust_memalloc_reserve int adjust_memalloc_reserve ( int ) 

/* mm/percpu.o */
pcpu_base_addr extern void * pcpu_base_addr 
__alloc_percpu extern void * __alloc_percpu ( t#size_t , t#size_t ) 
free_percpu extern void free_percpu ( void * ) 
__per_cpu_offset extern unsigned long __per_cpu_offset [ 64 ] 

/* mm/readahead.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##array_cache
s##kmem_list3
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##hd_geometry
s##radix_tree_node
s##tvec_base
s##blk_trace
s##timer_rand_state
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
file_ra_state_init extern void file_ra_state_init ( s#file_ra_state * , s#address_space * ) 
read_cache_pages extern int read_cache_pages ( s#address_space * , s#list_head * , t#filler_t * , void * ) 
page_cache_sync_readahead void page_cache_sync_readahead ( s#address_space * , s#file_ra_state * , s#file * , unsigned long , unsigned long ) 
page_cache_async_readahead void page_cache_async_readahead ( s#address_space * , s#file_ra_state * , s#file * , s#page * , unsigned long , unsigned long ) 

/* mm/reserve.o */
mem_reserve_root extern s#mem_reserve mem_reserve_root 
mem_reserve_init void mem_reserve_init ( s#mem_reserve * , const char * , s#mem_reserve * ) 
mem_reserve_connect int mem_reserve_connect ( s#mem_reserve * , s#mem_reserve * ) 
mem_reserve_disconnect void mem_reserve_disconnect ( s#mem_reserve * ) 
mem_reserve_pages_set int mem_reserve_pages_set ( s#mem_reserve * , long ) 
mem_reserve_pages_charge int mem_reserve_pages_charge ( s#mem_reserve * , long ) 
mem_reserve_kmalloc_set int mem_reserve_kmalloc_set ( s#mem_reserve * , long ) 
mem_reserve_kmalloc_charge int mem_reserve_kmalloc_charge ( s#mem_reserve * , long ) 
s##array_cache
s##kmem_list3
mem_reserve_kmem_cache_set int mem_reserve_kmem_cache_set ( s#mem_reserve * , s#kmem_cache * , int ) 
mem_reserve_kmem_cache_charge int mem_reserve_kmem_cache_charge ( s#mem_reserve * , s#kmem_cache * , long ) 

/* mm/rmap.o */
s##rq
s##cfs_rq
s##rt_rq
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
page_mkclean int page_mkclean ( s#page * ) 

/* mm/shmem.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##hd_geometry
s##tvec_base
s##blk_trace
s##timer_rand_state
s##mtd_info
s##eventfd_ctx
s##array_cache
s##kmem_list3
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##mnt_namespace
shmem_file_setup s#file * shmem_file_setup ( const char * , t#loff_t , unsigned long ) 

/* mm/slab.o */
s#array_cache struct array_cache { unsigned int avail ; unsigned int limit ; unsigned int batchcount ; unsigned int touched : 1 , reserve : 1 ; t#spinlock_t lock ; void * entry [ ] ; } 
s#kmem_list3 struct kmem_list3 { s#list_head slabs_partial ; s#list_head slabs_full ; s#list_head slabs_free ; unsigned long free_objects ; unsigned int free_limit ; unsigned int colour_next ; t#spinlock_t list_lock ; s#array_cache * shared ; s#array_cache * * alien ; unsigned long next_reap ; int free_touched ; } 
slab_buffer_size extern t#size_t slab_buffer_size ( s#kmem_cache * ) 
malloc_sizes extern s#cache_sizes malloc_sizes [ ] 
kmem_cache_create s#kmem_cache * kmem_cache_create ( const char * , t#size_t , t#size_t , unsigned long , void ( * ) ( void * ) ) 
kmem_cache_shrink int kmem_cache_shrink ( s#kmem_cache * ) 
kmem_cache_destroy void kmem_cache_destroy ( s#kmem_cache * ) 
kmem_cache_alloc void * kmem_cache_alloc ( s#kmem_cache * , t#gfp_t ) 
kmem_cache_alloc_notrace extern void * kmem_cache_alloc_notrace ( s#kmem_cache * , t#gfp_t ) 
__kmalloc void * __kmalloc ( t#size_t , t#gfp_t ) 
__kmalloc_track_caller void * __kmalloc_track_caller ( t#size_t , t#gfp_t , unsigned long ) 
kmem_cache_free void kmem_cache_free ( s#kmem_cache * , void * ) 
kfree void kfree ( const void * ) 
kmem_cache_size unsigned int kmem_cache_size ( s#kmem_cache * ) 
kmem_cache_name const char * kmem_cache_name ( s#kmem_cache * ) 
kmalloc_estimate_objs unsigned kmalloc_estimate_objs ( t#size_t , t#gfp_t , int ) 
kmalloc_estimate_bytes unsigned kmalloc_estimate_bytes ( t#gfp_t , t#size_t ) 
ksize t#size_t ksize ( const void * ) 

/* mm/sparse.o */
s##page_cgroup
s#mem_section struct mem_section { unsigned long section_mem_map ; unsigned long * pageblock_flags ; s#page_cgroup * page_cgroup ; unsigned long pad ; } 
mem_section extern s#mem_section * mem_section [ ( ( 1UL << ( 42 - 28 ) ) / ( ( ( 1UL ) << 12 ) / sizeof ( struct mem_section ) ) ) ] 

/* mm/swap.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##device
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##radix_tree_node
s##array_cache
s##kmem_list3
put_page void put_page ( s#page * ) 
put_pages_list void put_pages_list ( s#list_head * ) 
mark_page_accessed extern void mark_page_accessed ( s#page * ) 
__pagevec_release void __pagevec_release ( s#pagevec * ) 
e#lru_list enum lru_list { LRU_INACTIVE_ANON = 0 , LRU_ACTIVE_ANON = 0 + 1 , LRU_INACTIVE_FILE = 0 + 2 , LRU_ACTIVE_FILE = 0 + 2 + 1 , LRU_UNEVICTABLE , NR_LRU_LISTS } 
____pagevec_lru_add void ____pagevec_lru_add ( s#pagevec * , e#lru_list ) 
pagevec_lookup unsigned pagevec_lookup ( s#pagevec * , s#address_space * , unsigned long , unsigned ) 
pagevec_lookup_tag unsigned pagevec_lookup_tag ( s#pagevec * , s#address_space * , unsigned long * , int , unsigned ) 

/* mm/swapfile.o */
s##rq
s##cfs_rq
s##rt_rq
s##array_cache
s##kmem_list3
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##kstatfs
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##hd_geometry
s##radix_tree_node
s##tvec_base
s##blk_trace
s##timer_rand_state
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
__page_file_mapping extern s#address_space * __page_file_mapping ( s#page * ) 
__page_file_index extern unsigned long __page_file_index ( s#page * ) 

/* mm/truncate.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##device
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##radix_tree_node
s##array_cache
s##kmem_list3
cancel_dirty_page extern void cancel_dirty_page ( s#page * , unsigned int ) 
generic_error_remove_page int generic_error_remove_page ( s#address_space * , s#page * ) 
truncate_inode_pages_range extern void truncate_inode_pages_range ( s#address_space * , t#loff_t , t#loff_t ) 
truncate_inode_pages extern void truncate_inode_pages ( s#address_space * , t#loff_t ) 
invalidate_mapping_pages unsigned long invalidate_mapping_pages ( s#address_space * , unsigned long , unsigned long ) 
invalidate_inode_pages2_range extern int invalidate_inode_pages2_range ( s#address_space * , unsigned long , unsigned long ) 
invalidate_inode_pages2 extern int invalidate_inode_pages2 ( s#address_space * ) 
truncate_pagecache extern void truncate_pagecache ( s#inode * , t#loff_t , t#loff_t ) 
vmtruncate extern int vmtruncate ( s#inode * , t#loff_t ) 

/* mm/util.o */
kstrdup extern char * kstrdup ( const char * , t#gfp_t ) 
kstrndup extern char * kstrndup ( const char * , t#size_t , t#gfp_t ) 
kmemdup extern void * kmemdup ( const void * , t#size_t , t#gfp_t ) 
memdup_user extern void * memdup_user ( const void * , t#size_t ) 
__krealloc void * __krealloc ( const void * , t#size_t , t#gfp_t ) 
krealloc void * krealloc ( const void * , t#size_t , t#gfp_t ) 
kzfree void kzfree ( const void * ) 
strndup_user extern char * strndup_user ( const char * , long ) 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
get_user_pages_fast int get_user_pages_fast ( unsigned long , int , int , s#page * * ) 
__tracepoint_kmalloc extern s#tracepoint __tracepoint_kmalloc 
__tracepoint_kmem_cache_alloc extern s#tracepoint __tracepoint_kmem_cache_alloc 
__tracepoint_kmalloc_node extern s#tracepoint __tracepoint_kmalloc_node 
__tracepoint_kmem_cache_alloc_node extern s#tracepoint __tracepoint_kmem_cache_alloc_node 
__tracepoint_kfree extern s#tracepoint __tracepoint_kfree 
__tracepoint_kmem_cache_free extern s#tracepoint __tracepoint_kmem_cache_free 

/* mm/vmalloc.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
vmalloc_to_page s#page * vmalloc_to_page ( const void * ) 
vmalloc_to_pfn unsigned long vmalloc_to_pfn ( const void * ) 
vm_unmap_aliases extern void vm_unmap_aliases ( void ) 
vm_unmap_ram extern void vm_unmap_ram ( const void * , unsigned int ) 
vm_map_ram extern void * vm_map_ram ( s#page * * , unsigned int , int , t#pgprot_t ) 
s#vm_struct struct vm_struct { s#vm_struct * next ; void * addr ; unsigned long size ; unsigned long flags ; s#page * * pages ; unsigned int nr_pages ; unsigned long phys_addr ; void * caller ; } 
map_vm_area extern int map_vm_area ( s#vm_struct * , t#pgprot_t , s#page * * * ) 
__get_vm_area extern s#vm_struct * __get_vm_area ( unsigned long , unsigned long , unsigned long , unsigned long ) 
vfree extern void vfree ( const void * ) 
vunmap extern void vunmap ( const void * ) 
vmap extern void * vmap ( s#page * * , unsigned int , unsigned long , t#pgprot_t ) 
__vmalloc extern void * __vmalloc ( unsigned long , t#gfp_t , t#pgprot_t ) 
vmalloc extern void * vmalloc ( unsigned long ) 
vmalloc_user extern void * vmalloc_user ( unsigned long ) 
vmalloc_node extern void * vmalloc_node ( unsigned long , int ) 
vmalloc_32 extern void * vmalloc_32 ( unsigned long ) 
vmalloc_32_user extern void * vmalloc_32_user ( unsigned long ) 
remap_vmalloc_range extern int remap_vmalloc_range ( s#vm_area_struct * , void * , unsigned long ) 
alloc_vm_area extern s#vm_struct * alloc_vm_area ( t#size_t ) 
free_vm_area extern void free_vm_area ( s#vm_struct * ) 

/* mm/vmscan.o */
s#shrinker struct shrinker { int ( * shrink ) ( int , t#gfp_t ) ; int seeks ; s#list_head list ; long nr ; } 
register_shrinker extern void register_shrinker ( s#shrinker * ) 
unregister_shrinker extern void unregister_shrinker ( s#shrinker * ) 
s##rq
s##cfs_rq
s##rt_rq
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##hd_geometry
s##radix_tree_node
s##tvec_base
s##blk_trace
s##timer_rand_state
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##array_cache
s##kmem_list3
isolate_lru_page extern int isolate_lru_page ( s#page * ) 

/* mm/vmstat.o */
s#vm_event_state struct vm_event_state { unsigned long event [ NR_VM_EVENT_ITEMS ] ; } 
per_cpu__vm_event_states extern __attribute__ ( ( section ( ".data.percpu" "" ) ) ) __typeof__ ( s#vm_event_state ) per_cpu__vm_event_states 
all_vm_events extern void all_vm_events ( unsigned long * ) 
vm_stat extern t#atomic_long_t vm_stat [ NR_VM_ZONE_STAT_ITEMS ] 
s##zonelist_cache
s##bootmem_data
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
e#zone_stat_item enum zone_stat_item { NR_FREE_PAGES , NR_LRU_BASE , NR_INACTIVE_ANON = NR_LRU_BASE , NR_ACTIVE_ANON , NR_INACTIVE_FILE , NR_ACTIVE_FILE , NR_UNEVICTABLE , NR_MLOCK , NR_ANON_PAGES , NR_FILE_MAPPED , NR_FILE_PAGES , NR_FILE_DIRTY , NR_WRITEBACK , NR_SLAB_RECLAIMABLE , NR_SLAB_UNRECLAIMABLE , NR_PAGETABLE , NR_KERNEL_STACK , NR_UNSTABLE_NFS , NR_BOUNCE , NR_VMSCAN_WRITE , NR_WRITEBACK_TEMP , NR_ISOLATED_ANON , NR_ISOLATED_FILE , NR_SHMEM , NR_VM_ZONE_STAT_ITEMS } 
__mod_zone_page_state void __mod_zone_page_state ( s#zone * , e#zone_stat_item , int ) 
mod_zone_page_state void mod_zone_page_state ( s#zone * , e#zone_stat_item , int ) 
__inc_zone_page_state void __inc_zone_page_state ( s#page * , e#zone_stat_item ) 
__dec_zone_page_state void __dec_zone_page_state ( s#page * , e#zone_stat_item ) 
inc_zone_page_state void inc_zone_page_state ( s#page * , e#zone_stat_item ) 
dec_zone_page_state void dec_zone_page_state ( s#page * , e#zone_stat_item ) 

/* net/802/garp.o */
s##sock
s##sec_path
s##neigh_parms
s##vlan_group
s##neighbour
s##wireless_dev
s##Qdisc
s##tvec_base
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ip_conntrack_stat
s##net_generic
s##net_bridge_port
s##macvlan_port
e#garp_applications enum garp_applications { GARP_APPLICATION_GVRP , __GARP_APPLICATION_MAX } 
s#stp_proto struct stp_proto { unsigned char group_address [ 6 ] ; void ( * rcv ) ( const s#stp_proto * , s#sk_buff * , s#net_device * ) ; void * data ; } 
s#garp_application struct garp_application { e#garp_applications type ; unsigned int maxattr ; s#stp_proto proto ; } 
s#garp_applicant struct garp_applicant { s#garp_application * app ; s#net_device * dev ; s#timer_list join_timer ; t#spinlock_t lock ; s#sk_buff_head queue ; s#sk_buff * pdu ; s#rb_root gid ; } 
s#garp_port struct garp_port { s#garp_applicant * applicants [ ( __GARP_APPLICATION_MAX - 1 ) + 1 ] ; } 
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##rtnl_link_ops
garp_request_join extern int garp_request_join ( const s#net_device * , const s#garp_application * , const void * , t#u8 , t#u8 ) 
garp_request_leave extern void garp_request_leave ( const s#net_device * , const s#garp_application * , const void * , t#u8 , t#u8 ) 
garp_init_applicant extern int garp_init_applicant ( s#net_device * , s#garp_application * ) 
garp_uninit_applicant extern void garp_uninit_applicant ( s#net_device * , s#garp_application * ) 
garp_register_application extern int garp_register_application ( s#garp_application * ) 
garp_unregister_application extern void garp_unregister_application ( s#garp_application * ) 

/* net/802/p8022.o */
s##sock
s##neigh_parms
s##vlan_group
s##neighbour
s##wireless_dev
s##Qdisc
s##tvec_base
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ip_conntrack_stat
s##net_generic
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##rtnl_link_ops
s##sec_path
s#packet_type struct packet_type { t#__be16 type ; s#net_device * dev ; int ( * func ) ( s#sk_buff * , s#net_device * , s#packet_type * , s#net_device * ) ; s#sk_buff * ( * gso_segment ) ( s#sk_buff * , int ) ; int ( * gso_send_check ) ( s#sk_buff * ) ; s#sk_buff * * ( * gro_receive ) ( s#sk_buff * * , s#sk_buff * ) ; int ( * gro_complete ) ( s#sk_buff * ) ; void * af_packet_priv ; s#list_head list ; } 
s#llc_addr struct llc_addr { unsigned char lsap ; unsigned char mac [ 6 ] ; } 
s#llc_sap struct llc_sap { unsigned char state ; unsigned char p_bit ; unsigned char f_bit ; t#atomic_t refcnt ; int ( * rcv_func ) ( s#sk_buff * , s#net_device * , s#packet_type * , s#net_device * ) ; s#llc_addr laddr ; s#list_head node ; struct { t#rwlock_t lock ; s#hlist_head list ; } sk_list ; } 
s#datalink_proto struct datalink_proto { unsigned char type [ 8 ] ; s#llc_sap * sap ; unsigned short header_length ; int ( * rcvfunc ) ( s#sk_buff * , s#net_device * , s#packet_type * , s#net_device * ) ; int ( * request ) ( s#datalink_proto * , s#sk_buff * , unsigned char * ) ; s#list_head node ; } 
register_8022_client extern s#datalink_proto * register_8022_client ( unsigned char , int ( * ) ( s#sk_buff * , s#net_device * , s#packet_type * , s#net_device * ) ) 
unregister_8022_client extern void unregister_8022_client ( s#datalink_proto * ) 

/* net/802/psnap.o */
s##sock
s##neigh_parms
s##vlan_group
s##neighbour
s##wireless_dev
s##Qdisc
s##tvec_base
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ip_conntrack_stat
s##net_generic
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##rtnl_link_ops
s##sec_path
register_snap_client extern s#datalink_proto * register_snap_client ( const unsigned char * , int ( * ) ( s#sk_buff * , s#net_device * , s#packet_type * , s#net_device * ) ) 
unregister_snap_client extern void unregister_snap_client ( s#datalink_proto * ) 

/* net/802/stp.o */
s##sock
s##neigh_parms
s##vlan_group
s##neighbour
s##wireless_dev
s##Qdisc
s##tvec_base
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ip_conntrack_stat
s##net_generic
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##rtnl_link_ops
s##sec_path
stp_proto_register extern int stp_proto_register ( const s#stp_proto * ) 
stp_proto_unregister extern void stp_proto_unregister ( const s#stp_proto * ) 

/* net/802/tr.o */
s##sock
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ip_conntrack_stat
s##net_generic
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##sec_path
tr_type_trans extern t#__be16 tr_type_trans ( s#sk_buff * , s#net_device * ) 
alloc_trdev extern s#net_device * alloc_trdev ( int ) 

/* net/8021q/vlan_core.o */
s##sock
s##neigh_parms
s##neighbour
s##wireless_dev
s##Qdisc
s##tvec_base
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ip_conntrack_stat
s##net_generic
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##rtnl_link_ops
s##sec_path
__vlan_hwaccel_rx extern int __vlan_hwaccel_rx ( s#sk_buff * , s#vlan_group * , t#u16 , int ) 
vlan_dev_real_dev extern s#net_device * vlan_dev_real_dev ( const s#net_device * ) 
vlan_dev_vlan_id extern t#u16 vlan_dev_vlan_id ( const s#net_device * ) 
s#napi_struct struct napi_struct { s#list_head poll_list ; unsigned long state ; int weight ; int ( * poll ) ( s#napi_struct * , int ) ; unsigned int gro_count ; s#net_device * dev ; s#list_head dev_list ; s#sk_buff * gro_list ; s#sk_buff * skb ; } 
vlan_gro_receive extern int vlan_gro_receive ( s#napi_struct * , s#vlan_group * , unsigned int , s#sk_buff * ) 
vlan_gro_frags extern int vlan_gro_frags ( s#napi_struct * , s#vlan_group * , unsigned int ) 

/* net/9p/client.o */
s#p9_fcall struct p9_fcall { t#u32 size ; t#u8 id ; t#u16 tag ; t#size_t offset ; t#size_t capacity ; t#uint8_t * sdata ; } 
s#p9_req_t struct p9_req_t { int status ; int t_err ; t#wait_queue_head_t * wq ; s#p9_fcall * tc ; s#p9_fcall * rc ; void * aux ; s#list_head req_list ; } 
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s#p9_trans_module struct p9_trans_module { s#list_head list ; char * name ; int maxsize ; int def ; s#module * owner ; int ( * create ) ( s#p9_client * , const char * , char * ) ; void ( * close ) ( s#p9_client * ) ; int ( * request ) ( s#p9_client * , s#p9_req_t * ) ; int ( * cancel ) ( s#p9_client * , s#p9_req_t * ) ; } 
e#p9_trans_status enum p9_trans_status { Connected , Disconnected , Hung , } 
s##p9_conn
s##p9_idpool
s#p9_client struct p9_client { t#spinlock_t lock ; int msize ; unsigned char dotu ; s#p9_trans_module * trans_mod ; e#p9_trans_status status ; void * trans ; s#p9_conn * conn ; s#p9_idpool * fidpool ; s#list_head fidlist ; s#p9_idpool * tagpool ; s#p9_req_t * reqs [ 255 ] ; int max_tag ; } 
p9_tag_lookup s#p9_req_t * p9_tag_lookup ( s#p9_client * , t#u16 ) 
p9_client_cb void p9_client_cb ( s#p9_client * , s#p9_req_t * ) 
t#int8_t typedef t#__s8 int8_t 
p9_parse_header int p9_parse_header ( s#p9_fcall * , t#int32_t * , t#int8_t * , t#int16_t * , int ) 
p9_client_version int p9_client_version ( s#p9_client * ) 
p9_client_create s#p9_client * p9_client_create ( const char * , char * ) 
p9_client_destroy void p9_client_destroy ( s#p9_client * ) 
p9_client_disconnect void p9_client_disconnect ( s#p9_client * ) 
s#p9_qid struct p9_qid { t#u8 type ; t#u32 version ; t#u64 path ; } 
s#p9_fid struct p9_fid { s#p9_client * clnt ; t#u32 fid ; int mode ; s#p9_qid qid ; t#u32 iounit ; t#uid_t uid ; void * rdir ; s#list_head flist ; s#list_head dlist ; } 
p9_client_attach s#p9_fid * p9_client_attach ( s#p9_client * , s#p9_fid * , char * , t#u32 , char * ) 
p9_client_auth s#p9_fid * p9_client_auth ( s#p9_client * , char * , t#u32 , char * ) 
p9_client_walk s#p9_fid * p9_client_walk ( s#p9_fid * , int , char * * , int ) 
p9_client_open int p9_client_open ( s#p9_fid * , int ) 
p9_client_fcreate int p9_client_fcreate ( s#p9_fid * , char * , t#u32 , int , char * ) 
p9_client_clunk int p9_client_clunk ( s#p9_fid * ) 
p9_client_remove int p9_client_remove ( s#p9_fid * ) 
p9_client_read int p9_client_read ( s#p9_fid * , char * , char * , t#u64 , t#u32 ) 
p9_client_write int p9_client_write ( s#p9_fid * , char * , const char * , t#u64 , t#u32 ) 
s#p9_wstat struct p9_wstat { t#u16 size ; t#u16 type ; t#u32 dev ; s#p9_qid qid ; t#u32 mode ; t#u32 atime ; t#u32 mtime ; t#u64 length ; char * name ; char * uid ; char * gid ; char * muid ; char * extension ; t#u32 n_uid ; t#u32 n_gid ; t#u32 n_muid ; } 
p9_client_stat s#p9_wstat * p9_client_stat ( s#p9_fid * ) 
p9_client_wstat int p9_client_wstat ( s#p9_fid * , s#p9_wstat * ) 

/* net/9p/error.o */
p9_error_init int p9_error_init ( void ) 
p9_errstr2errno int p9_errstr2errno ( char * , int ) 

/* net/9p/mod.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##p9_conn
s##p9_idpool
v9fs_register_trans void v9fs_register_trans ( s#p9_trans_module * ) 
v9fs_unregister_trans void v9fs_unregister_trans ( s#p9_trans_module * ) 
v9fs_get_trans_by_name s#p9_trans_module * v9fs_get_trans_by_name ( const t#substring_t * ) 
v9fs_get_default_trans s#p9_trans_module * v9fs_get_default_trans ( void ) 

/* net/9p/protocol.o */
p9pdu_dump void p9pdu_dump ( int , s#p9_fcall * ) 
p9stat_free void p9stat_free ( s#p9_wstat * ) 
p9stat_read int p9stat_read ( char * , int , s#p9_wstat * , int ) 

/* net/9p/util.o */
s#p9_idpool struct p9_idpool { t#spinlock_t lock ; s#idr pool ; } 
p9_idpool_create s#p9_idpool * p9_idpool_create ( void ) 
p9_idpool_destroy void p9_idpool_destroy ( s#p9_idpool * ) 
p9_idpool_get int p9_idpool_get ( s#p9_idpool * ) 
p9_idpool_put void p9_idpool_put ( int , s#p9_idpool * ) 
p9_idpool_check int p9_idpool_check ( int , s#p9_idpool * ) 

/* net/bridge/br.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##vlan_group
s##wireless_dev
s##Qdisc
s##xfrm_state
s##rt6_info
s##dn_route
s##in_device
s#bridge_id struct bridge_id { unsigned char prio [ 2 ] ; unsigned char addr [ 6 ] ; } 
t#bridge_id typedef s#bridge_id bridge_id 
s#net_bridge struct net_bridge { t#spinlock_t lock ; s#list_head port_list ; s#net_device * dev ; t#spinlock_t hash_lock ; s#hlist_head hash [ ( 1 << 8 ) ] ; s#list_head age_list ; unsigned long feature_mask ; s#rtable fake_rtable ; unsigned long flags ; t#bridge_id designated_root ; t#bridge_id t#bridge_id ; t#u32 root_path_cost ; unsigned long max_age ; unsigned long hello_time ; unsigned long forward_delay ; unsigned long bridge_max_age ; unsigned long ageing_time ; unsigned long bridge_hello_time ; unsigned long bridge_forward_delay ; t#u8 group_addr [ 6 ] ; t#u16 root_port ; enum { BR_NO_STP , BR_KERNEL_STP , BR_USER_STP , } stp_enabled ; unsigned char topology_change ; unsigned char topology_change_detected ; s#timer_list hello_timer ; s#timer_list tcn_timer ; s#timer_list topology_change_timer ; s#timer_list gc_timer ; s#kobject * ifobj ; } 
t#port_id typedef t#__u16 port_id 
s#net_bridge_port struct net_bridge_port { s#net_bridge * br ; s#net_device * dev ; s#list_head list ; t#u8 priority ; t#u8 state ; t#u16 port_no ; unsigned char topology_change_ack ; unsigned char config_pending ; t#port_id t#port_id ; t#port_id designated_port ; t#bridge_id designated_root ; t#bridge_id designated_bridge ; t#u32 path_cost ; t#u32 designated_cost ; s#timer_list forward_delay_timer ; s#timer_list hold_timer ; s#timer_list message_age_timer ; s#kobject kobj ; s#rcu_head rcu ; unsigned long flags ; } 
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_statistics
s##fib6_table
s##ip_conntrack_stat
s##net_generic
s##xfrm_policy
s##sec_path
br_should_route_hook extern int ( * br_should_route_hook ) ( s#sk_buff * ) 

/* net/can/af_can.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##xfrm_policy
s##sec_path
can_send extern int can_send ( s#sk_buff * , int ) 
t#canid_t typedef t#__u32 canid_t 
can_rx_register extern int can_rx_register ( s#net_device * , t#canid_t , t#canid_t , void ( * ) ( s#sk_buff * , void * ) , void * , char * ) 
can_rx_unregister extern void can_rx_unregister ( s#net_device * , t#canid_t , t#canid_t , void ( * ) ( s#sk_buff * , void * ) , void * ) 
s#can_proto struct can_proto { int type ; int protocol ; int capability ; s#proto_ops * ops ; s#proto * prot ; } 
can_proto_register extern int can_proto_register ( s#can_proto * ) 
can_proto_unregister extern void can_proto_unregister ( s#can_proto * ) 

/* net/compat.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##sec_path
s##tvec_base
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
compat_sock_get_timestamp extern int compat_sock_get_timestamp ( s#sock * , s#timeval * ) 
compat_sock_get_timestampns extern int compat_sock_get_timestampns ( s#sock * , s#timespec * ) 
compat_mc_setsockopt extern int compat_mc_setsockopt ( s#sock * , int , int , char * , unsigned int , int ( * ) ( s#sock * , int , int , char * , unsigned int ) ) 
compat_mc_getsockopt extern int compat_mc_getsockopt ( s#sock * , int , int , char * , int * , int ( * ) ( s#sock * , int , int , char * , int * ) ) 

/* net/core/datagram.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##xfrm_policy
s##sec_path
__skb_recv_datagram extern s#sk_buff * __skb_recv_datagram ( s#sock * , unsigned , int * , int * ) 
skb_free_datagram extern void skb_free_datagram ( s#sock * , s#sk_buff * ) 
skb_free_datagram_locked extern void skb_free_datagram_locked ( s#sock * , s#sk_buff * ) 
skb_kill_datagram extern int skb_kill_datagram ( s#sock * , s#sk_buff * , unsigned int ) 
skb_copy_datagram_const_iovec extern int skb_copy_datagram_const_iovec ( const s#sk_buff * , int , const s#iovec * , int , int ) 
skb_copy_datagram_from_iovec extern int skb_copy_datagram_from_iovec ( s#sk_buff * , int , const s#iovec * , int , int ) 
__skb_checksum_complete_head extern t#__sum16 __skb_checksum_complete_head ( s#sk_buff * , int ) 
__skb_checksum_complete extern t#__sum16 __skb_checksum_complete ( s#sk_buff * ) 
datagram_poll extern unsigned int datagram_poll ( s#file * , s#socket * , s#poll_table_struct * ) 
skb_copy_and_csum_datagram_iovec extern int skb_copy_and_csum_datagram_iovec ( s#sk_buff * , int , s#iovec * ) 
skb_copy_datagram_iovec extern int skb_copy_datagram_iovec ( const s#sk_buff * , int , s#iovec * , int ) 
skb_recv_datagram extern s#sk_buff * skb_recv_datagram ( s#sock * , unsigned , int , int * ) 

/* net/core/dev.o */
dev_base_lock extern t#rwlock_t dev_base_lock 
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##wireless_dev
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##xfrm_policy
s##sec_path
s#tcmsg struct tcmsg { unsigned char tcm_family ; unsigned char tcm__pad1 ; unsigned short tcm__pad2 ; int tcm_ifindex ; t#__u32 tcm_handle ; t#__u32 tcm_parent ; t#__u32 tcm_info ; } 
s#qdisc_walker struct qdisc_walker { int stop ; int skip ; int count ; int ( * fn ) ( s#Qdisc * , unsigned long , s#qdisc_walker * ) ; } 
s#tcf_result struct tcf_result { unsigned long class ; t#u32 classid ; } 
s##tcf_walker
s#tcf_proto_ops struct tcf_proto_ops { s#tcf_proto_ops * next ; char kind [ 16 ] ; int ( * classify ) ( s#sk_buff * , s#tcf_proto * , s#tcf_result * ) ; int ( * init ) ( s#tcf_proto * ) ; void ( * destroy ) ( s#tcf_proto * ) ; unsigned long ( * get ) ( s#tcf_proto * , t#u32 ) ; void ( * put ) ( s#tcf_proto * , unsigned long ) ; int ( * change ) ( s#tcf_proto * , unsigned long , t#u32 , s#nlattr * * , unsigned long * ) ; int ( * delete ) ( s#tcf_proto * , unsigned long ) ; void ( * walk ) ( s#tcf_proto * , s#tcf_walker * ) ; int ( * dump ) ( s#tcf_proto * , unsigned long , s#sk_buff * , s#tcmsg * ) ; s#module * owner ; } 
s#tcf_proto struct tcf_proto { s#tcf_proto * next ; void * root ; int ( * classify ) ( s#sk_buff * , s#tcf_proto * , s#tcf_result * ) ; t#__be16 protocol ; t#u32 prio ; t#u32 classid ; s#Qdisc * q ; void * data ; s#tcf_proto_ops * ops ; } 
s#tc_stats struct tc_stats { t#__u64 bytes ; t#__u32 packets ; t#__u32 drops ; t#__u32 overlimits ; t#__u32 bps ; t#__u32 pps ; t#__u32 qlen ; t#__u32 backlog ; } 
s#gnet_dump struct gnet_dump { t#spinlock_t * lock ; s#sk_buff * skb ; s#nlattr * tail ; int compat_tc_stats ; int compat_xstats ; void * xstats ; int xstats_len ; s#tc_stats tc_stats ; } 
s#Qdisc_class_ops struct Qdisc_class_ops { s#netdev_queue * ( * select_queue ) ( s#Qdisc * , s#tcmsg * ) ; int ( * graft ) ( s#Qdisc * , unsigned long , s#Qdisc * , s#Qdisc * * ) ; s#Qdisc * ( * leaf ) ( s#Qdisc * , unsigned long ) ; void ( * qlen_notify ) ( s#Qdisc * , unsigned long ) ; unsigned long ( * get ) ( s#Qdisc * , t#u32 ) ; void ( * put ) ( s#Qdisc * , unsigned long ) ; int ( * change ) ( s#Qdisc * , t#u32 , t#u32 , s#nlattr * * , unsigned long * ) ; int ( * delete ) ( s#Qdisc * , unsigned long ) ; void ( * walk ) ( s#Qdisc * , s#qdisc_walker * ) ; s#tcf_proto * * ( * tcf_chain ) ( s#Qdisc * , unsigned long ) ; unsigned long ( * bind_tcf ) ( s#Qdisc * , unsigned long , t#u32 ) ; void ( * unbind_tcf ) ( s#Qdisc * , unsigned long ) ; int ( * dump ) ( s#Qdisc * , unsigned long , s#sk_buff * , s#tcmsg * ) ; int ( * dump_stats ) ( s#Qdisc * , unsigned long , s#gnet_dump * ) ; } 
s#Qdisc_ops struct Qdisc_ops { s#Qdisc_ops * next ; const s#Qdisc_class_ops * cl_ops ; char id [ 16 ] ; int priv_size ; int ( * enqueue ) ( s#sk_buff * , s#Qdisc * ) ; s#sk_buff * ( * dequeue ) ( s#Qdisc * ) ; s#sk_buff * ( * peek ) ( s#Qdisc * ) ; unsigned int ( * drop ) ( s#Qdisc * ) ; int ( * init ) ( s#Qdisc * , s#nlattr * ) ; void ( * reset ) ( s#Qdisc * ) ; void ( * destroy ) ( s#Qdisc * ) ; int ( * change ) ( s#Qdisc * , s#nlattr * ) ; void ( * attach ) ( s#Qdisc * ) ; int ( * dump ) ( s#Qdisc * , s#sk_buff * ) ; int ( * dump_stats ) ( s#Qdisc * , s#gnet_dump * ) ; s#module * owner ; } 
s#tc_sizespec struct tc_sizespec { unsigned char cell_log ; unsigned char size_log ; short cell_align ; int overhead ; unsigned int linklayer ; unsigned int mpu ; unsigned int mtu ; unsigned int tsize ; } 
s#qdisc_size_table struct qdisc_size_table { s#list_head list ; s#tc_sizespec szopts ; int refcnt ; t#u16 data [ ] ; } 
s#gnet_stats_rate_est struct gnet_stats_rate_est { t#__u32 bps ; t#__u32 pps ; } 
s#gnet_stats_basic_packed struct gnet_stats_basic_packed { t#__u64 bytes ; t#__u32 packets ; } 
s#gnet_stats_queue struct gnet_stats_queue { t#__u32 qlen ; t#__u32 backlog ; t#__u32 drops ; t#__u32 requeues ; t#__u32 overlimits ; } 
s#Qdisc struct Qdisc { int ( * enqueue ) ( s#sk_buff * , s#Qdisc * ) ; s#sk_buff * ( * dequeue ) ( s#Qdisc * ) ; unsigned flags ; int padded ; s#Qdisc_ops * ops ; s#qdisc_size_table * stab ; s#list_head list ; t#u32 handle ; t#u32 parent ; t#atomic_t refcnt ; s#gnet_stats_rate_est rate_est ; int ( * reshape_fail ) ( s#sk_buff * , s#Qdisc * ) ; void * u32_node ; s#Qdisc * __parent ; s#netdev_queue * dev_queue ; s#Qdisc * next_sched ; s#sk_buff * gso_skb ; unsigned long state ; s#sk_buff_head q ; s#gnet_stats_basic_packed bstats ; s#gnet_stats_queue qstats ; } 
s#softnet_data struct softnet_data { s#Qdisc * output_queue ; s#sk_buff_head input_pkt_queue ; s#list_head poll_list ; s#sk_buff * completion_queue ; s#napi_struct backlog ; } 
per_cpu__softnet_data extern __attribute__ ( ( section ( ".data.percpu" "" ) ) ) __typeof__ ( s#softnet_data ) per_cpu__softnet_data 
dev_add_pack extern void dev_add_pack ( s#packet_type * ) 
__dev_remove_pack extern void __dev_remove_pack ( s#packet_type * ) 
dev_remove_pack extern void dev_remove_pack ( s#packet_type * ) 
netdev_boot_setup_check extern int netdev_boot_setup_check ( s#net_device * ) 
__dev_get_by_name extern s#net_device * __dev_get_by_name ( s#net * , const char * ) 
dev_get_by_name extern s#net_device * dev_get_by_name ( s#net * , const char * ) 
__dev_get_by_index extern s#net_device * __dev_get_by_index ( s#net * , int ) 
dev_get_by_index extern s#net_device * dev_get_by_index ( s#net * , int ) 
dev_getbyhwaddr extern s#net_device * dev_getbyhwaddr ( s#net * , unsigned short , char * ) 
__dev_getfirstbyhwtype extern s#net_device * __dev_getfirstbyhwtype ( s#net * , unsigned short ) 
dev_getfirstbyhwtype extern s#net_device * dev_getfirstbyhwtype ( s#net * , unsigned short ) 
dev_get_by_flags extern s#net_device * dev_get_by_flags ( s#net * , unsigned short , unsigned short ) 
dev_valid_name extern int dev_valid_name ( const char * ) 
dev_alloc_name extern int dev_alloc_name ( s#net_device * , const char * ) 
netdev_features_change extern void netdev_features_change ( s#net_device * ) 
netdev_state_change extern void netdev_state_change ( s#net_device * ) 
netdev_bonding_change extern void netdev_bonding_change ( s#net_device * , unsigned long ) 
dev_load extern void dev_load ( s#net * , const char * ) 
dev_open extern int dev_open ( s#net_device * ) 
dev_close extern int dev_close ( s#net_device * ) 
dev_disable_lro extern void dev_disable_lro ( s#net_device * ) 
register_netdevice_notifier extern int register_netdevice_notifier ( s#notifier_block * ) 
unregister_netdevice_notifier extern int unregister_netdevice_notifier ( s#notifier_block * ) 
net_enable_timestamp extern void net_enable_timestamp ( void ) 
net_disable_timestamp extern void net_disable_timestamp ( void ) 
__netif_schedule extern void __netif_schedule ( s#Qdisc * ) 
dev_kfree_skb_irq extern void dev_kfree_skb_irq ( s#sk_buff * ) 
dev_kfree_skb_any extern void dev_kfree_skb_any ( s#sk_buff * ) 
netif_device_detach extern void netif_device_detach ( s#net_device * ) 
netif_device_attach extern void netif_device_attach ( s#net_device * ) 
skb_checksum_help extern int skb_checksum_help ( s#sk_buff * ) 
skb_gso_segment extern s#sk_buff * skb_gso_segment ( s#sk_buff * , int ) 
netdev_rx_csum_fault extern void netdev_rx_csum_fault ( s#net_device * ) 
skb_tx_hash extern t#u16 skb_tx_hash ( const s#net_device * , const s#sk_buff * ) 
dev_queue_xmit extern int dev_queue_xmit ( s#sk_buff * ) 
netif_rx extern int netif_rx ( s#sk_buff * ) 
netif_rx_ni extern int netif_rx_ni ( s#sk_buff * ) 
br_handle_frame_hook extern s#sk_buff * ( * br_handle_frame_hook ) ( s#net_bridge_port * , s#sk_buff * ) 
macvlan_handle_frame_hook extern s#sk_buff * ( * macvlan_handle_frame_hook ) ( s#sk_buff * ) 
netif_receive_skb extern int netif_receive_skb ( s#sk_buff * ) 
napi_gro_flush extern void napi_gro_flush ( s#napi_struct * ) 
dev_gro_receive extern int dev_gro_receive ( s#napi_struct * , s#sk_buff * ) 
napi_skb_finish extern int napi_skb_finish ( int , s#sk_buff * ) 
skb_gro_reset_offset extern void skb_gro_reset_offset ( s#sk_buff * ) 
napi_gro_receive extern int napi_gro_receive ( s#napi_struct * , s#sk_buff * ) 
napi_reuse_skb extern void napi_reuse_skb ( s#napi_struct * , s#sk_buff * ) 
napi_get_frags extern s#sk_buff * napi_get_frags ( s#napi_struct * ) 
napi_frags_finish extern int napi_frags_finish ( s#napi_struct * , s#sk_buff * , int ) 
napi_frags_skb extern s#sk_buff * napi_frags_skb ( s#napi_struct * ) 
napi_gro_frags extern int napi_gro_frags ( s#napi_struct * ) 
__napi_schedule extern void __napi_schedule ( s#napi_struct * ) 
__napi_complete extern void __napi_complete ( s#napi_struct * ) 
napi_complete extern void napi_complete ( s#napi_struct * ) 
netif_napi_add void netif_napi_add ( s#net_device * , s#napi_struct * , int ( * ) ( s#napi_struct * , int ) , int ) 
netif_napi_del void netif_napi_del ( s#napi_struct * ) 
t#gifconf_func_t typedef int gifconf_func_t ( s#net_device * , char * , int ) 
register_gifconf extern int register_gifconf ( unsigned int , t#gifconf_func_t * ) 
netdev_set_master extern int netdev_set_master ( s#net_device * , s#net_device * ) 
dev_set_promiscuity extern int dev_set_promiscuity ( s#net_device * , int ) 
dev_set_allmulti extern int dev_set_allmulti ( s#net_device * , int ) 
dev_addr_add extern int dev_addr_add ( s#net_device * , unsigned char * , unsigned char ) 
dev_addr_del extern int dev_addr_del ( s#net_device * , unsigned char * , unsigned char ) 
dev_addr_add_multiple extern int dev_addr_add_multiple ( s#net_device * , s#net_device * , unsigned char ) 
dev_addr_del_multiple extern int dev_addr_del_multiple ( s#net_device * , s#net_device * , unsigned char ) 
dev_unicast_delete extern int dev_unicast_delete ( s#net_device * , void * ) 
dev_unicast_add extern int dev_unicast_add ( s#net_device * , void * ) 
__dev_addr_sync extern int __dev_addr_sync ( s#dev_addr_list * * , int * , s#dev_addr_list * * , int * ) 
__dev_addr_unsync extern void __dev_addr_unsync ( s#dev_addr_list * * , int * , s#dev_addr_list * * , int * ) 
dev_unicast_sync extern int dev_unicast_sync ( s#net_device * , s#net_device * ) 
dev_unicast_unsync extern void dev_unicast_unsync ( s#net_device * , s#net_device * ) 
dev_get_flags extern unsigned dev_get_flags ( const s#net_device * ) 
dev_change_flags extern int dev_change_flags ( s#net_device * , unsigned ) 
dev_set_mtu extern int dev_set_mtu ( s#net_device * , int ) 
dev_set_mac_address extern int dev_set_mac_address ( s#net_device * , s#sockaddr * ) 
netdev_fix_features unsigned long netdev_fix_features ( unsigned long , const char * ) 
register_netdevice extern int register_netdevice ( s#net_device * ) 
init_dummy_netdev extern int init_dummy_netdev ( s#net_device * ) 
register_netdev extern int register_netdev ( s#net_device * ) 
dev_get_stats extern const s#net_device_stats * dev_get_stats ( s#net_device * ) 
alloc_netdev_mq extern s#net_device * alloc_netdev_mq ( int , const char * , void ( * ) ( s#net_device * ) , unsigned int ) 
free_netdev extern void free_netdev ( s#net_device * ) 
synchronize_net extern void synchronize_net ( void ) 
unregister_netdevice extern void unregister_netdevice ( s#net_device * ) 
unregister_netdev extern void unregister_netdev ( s#net_device * ) 
dev_change_net_namespace extern int dev_change_net_namespace ( s#net_device * , s#net * , const char * ) 
netdev_increment_features unsigned long netdev_increment_features ( unsigned long , unsigned long , unsigned long ) 

/* net/core/dev_mcast.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##in_device
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##xfrm_policy
s##sec_path
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
dev_mc_sync extern int dev_mc_sync ( s#net_device * , s#net_device * ) 
dev_mc_unsync extern void dev_mc_unsync ( s#net_device * , s#net_device * ) 
dev_mc_add extern int dev_mc_add ( s#net_device * , void * , int , int ) 
dev_mc_delete extern int dev_mc_delete ( s#net_device * , void * , int , int ) 

/* net/core/dst.o */
s##sock
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##sec_path
dst_discard extern int dst_discard ( s#sk_buff * ) 
dst_release extern void dst_release ( s#dst_entry * ) 
__dst_free extern void __dst_free ( s#dst_entry * ) 
dst_alloc extern void * dst_alloc ( s#dst_ops * ) 
dst_destroy extern s#dst_entry * dst_destroy ( s#dst_entry * ) 

/* net/core/ethtool.o */
s##sock
s##sec_path
s##neigh_parms
s##vlan_group
s##neighbour
s##wireless_dev
s##Qdisc
s##tvec_base
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ip_conntrack_stat
s##net_generic
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##rtnl_link_ops
ethtool_op_get_rx_csum t#u32 ethtool_op_get_rx_csum ( s#net_device * ) 
ethtool_op_get_tx_csum t#u32 ethtool_op_get_tx_csum ( s#net_device * ) 
ethtool_op_get_link t#u32 ethtool_op_get_link ( s#net_device * ) 
ethtool_op_get_sg t#u32 ethtool_op_get_sg ( s#net_device * ) 
ethtool_op_get_tso t#u32 ethtool_op_get_tso ( s#net_device * ) 
ethtool_op_set_sg int ethtool_op_set_sg ( s#net_device * , t#u32 ) 
ethtool_op_set_tso int ethtool_op_set_tso ( s#net_device * , t#u32 ) 
ethtool_op_set_tx_csum int ethtool_op_set_tx_csum ( s#net_device * , t#u32 ) 
ethtool_op_set_tx_hw_csum int ethtool_op_set_tx_hw_csum ( s#net_device * , t#u32 ) 
ethtool_op_set_tx_ipv6_csum int ethtool_op_set_tx_ipv6_csum ( s#net_device * , t#u32 ) 
ethtool_op_set_ufo int ethtool_op_set_ufo ( s#net_device * , t#u32 ) 
ethtool_op_get_ufo t#u32 ethtool_op_get_ufo ( s#net_device * ) 
ethtool_op_set_flags int ethtool_op_set_flags ( s#net_device * , t#u32 ) 
ethtool_op_get_flags t#u32 ethtool_op_get_flags ( s#net_device * ) 

/* net/core/fib_rules.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##cdev
s##posix_acl
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_state
s##rtable
s##rt6_info
s##dn_route
s##xfrm_policy
s##sec_path
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_statistics
s##fib6_table
s##ip_conntrack_stat
s##net_generic
s#fib_rule struct fib_rule { s#list_head list ; t#atomic_t refcnt ; int ifindex ; char ifname [ 16 ] ; t#u32 mark ; t#u32 mark_mask ; t#u32 pref ; t#u32 flags ; t#u32 table ; t#u8 action ; t#u32 target ; s#fib_rule * ctarget ; s#rcu_head rcu ; s#net * fr_net ; } 
s#fib_lookup_arg struct fib_lookup_arg { void * lookup_ptr ; void * result ; s#fib_rule * rule ; } 
s#fib_rule_hdr struct fib_rule_hdr { t#__u8 family ; t#__u8 dst_len ; t#__u8 src_len ; t#__u8 tos ; t#__u8 table ; t#__u8 res1 ; t#__u8 res2 ; t#__u8 action ; t#__u32 flags ; } 
s#fib_rules_ops struct fib_rules_ops { int family ; s#list_head list ; int rule_size ; int addr_size ; int unresolved_rules ; int nr_goto_rules ; int ( * action ) ( s#fib_rule * , s#flowi * , int , s#fib_lookup_arg * ) ; int ( * match ) ( s#fib_rule * , s#flowi * , int ) ; int ( * configure ) ( s#fib_rule * , s#sk_buff * , s#fib_rule_hdr * , s#nlattr * * ) ; int ( * compare ) ( s#fib_rule * , s#fib_rule_hdr * , s#nlattr * * ) ; int ( * fill ) ( s#fib_rule * , s#sk_buff * , s#fib_rule_hdr * ) ; t#u32 ( * default_pref ) ( s#fib_rules_ops * ) ; t#size_t ( * nlmsg_payload ) ( s#fib_rule * ) ; void ( * flush_cache ) ( s#fib_rules_ops * ) ; int nlgroup ; const s#nla_policy * policy ; s#list_head rules_list ; s#module * owner ; s#net * fro_net ; } 
fib_default_rule_add extern int fib_default_rule_add ( s#fib_rules_ops * , t#u32 , t#u32 , t#u32 ) 
fib_rules_register extern int fib_rules_register ( s#fib_rules_ops * ) 
fib_rules_cleanup_ops extern void fib_rules_cleanup_ops ( s#fib_rules_ops * ) 
fib_rules_unregister extern void fib_rules_unregister ( s#fib_rules_ops * ) 
fib_rules_lookup extern int fib_rules_lookup ( s#fib_rules_ops * , s#flowi * , int , s#fib_lookup_arg * ) 

/* net/core/filter.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
sk_filter extern int sk_filter ( s#sock * , s#sk_buff * ) 
sk_run_filter extern unsigned int sk_run_filter ( s#sk_buff * , s#sock_filter * , int ) 
sk_chk_filter extern int sk_chk_filter ( s#sock_filter * , int ) 

/* net/core/flow.o */
flow_cache_genid extern t#atomic_t flow_cache_genid 
s##net
t#flow_resolve_t typedef int ( * flow_resolve_t ) ( s#net * , s#flowi * , t#u16 , t#u8 , void * * , t#atomic_t * * ) 
flow_cache_lookup extern void * flow_cache_lookup ( s#net * , s#flowi * , t#u16 , t#u8 , t#flow_resolve_t ) 

/* net/core/gen_estimator.o */
gen_new_estimator extern int gen_new_estimator ( s#gnet_stats_basic_packed * , s#gnet_stats_rate_est * , t#spinlock_t * , s#nlattr * ) 
gen_kill_estimator extern void gen_kill_estimator ( s#gnet_stats_basic_packed * , s#gnet_stats_rate_est * ) 
gen_replace_estimator extern int gen_replace_estimator ( s#gnet_stats_basic_packed * , s#gnet_stats_rate_est * , t#spinlock_t * , s#nlattr * ) 
gen_estimator_active extern t#bool gen_estimator_active ( const s#gnet_stats_basic_packed * , const s#gnet_stats_rate_est * ) 

/* net/core/gen_stats.o */
s##sock
s##net_device
s##sec_path
gnet_stats_start_copy extern int gnet_stats_start_copy ( s#sk_buff * , int , t#spinlock_t * , s#gnet_dump * ) 
gnet_stats_start_copy_compat extern int gnet_stats_start_copy_compat ( s#sk_buff * , int , int , int , t#spinlock_t * , s#gnet_dump * ) 
gnet_stats_copy_basic extern int gnet_stats_copy_basic ( s#gnet_dump * , s#gnet_stats_basic_packed * ) 
gnet_stats_copy_rate_est extern int gnet_stats_copy_rate_est ( s#gnet_dump * , s#gnet_stats_rate_est * ) 
gnet_stats_copy_queue extern int gnet_stats_copy_queue ( s#gnet_dump * , s#gnet_stats_queue * ) 
gnet_stats_copy_app extern int gnet_stats_copy_app ( s#gnet_dump * , void * , int ) 
gnet_stats_finish_copy extern int gnet_stats_finish_copy ( s#gnet_dump * ) 

/* net/core/iovec.o */
csum_partial_copy_fromiovecend extern int csum_partial_copy_fromiovecend ( unsigned char * , s#iovec * , int , unsigned int , t#__wsum * ) 
memcpy_fromiovec extern int memcpy_fromiovec ( unsigned char * , s#iovec * , int ) 
memcpy_fromiovecend extern int memcpy_fromiovecend ( unsigned char * , const s#iovec * , int , int ) 
memcpy_toiovec extern int memcpy_toiovec ( s#iovec * , unsigned char * , int ) 
memcpy_toiovecend extern int memcpy_toiovecend ( const s#iovec * , unsigned char * , int , int ) 

/* net/core/link_watch.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##xfrm_policy
s##sec_path
s##vlan_group
s##wireless_dev
s##tcf_walker
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
linkwatch_fire_event extern void linkwatch_fire_event ( s#net_device * ) 

/* net/core/neighbour.o */
neigh_rand_reach_time extern unsigned long neigh_rand_reach_time ( unsigned long ) 
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##xfrm_policy
s##sec_path
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
neigh_changeaddr extern void neigh_changeaddr ( s#neigh_table * , s#net_device * ) 
neigh_ifdown extern int neigh_ifdown ( s#neigh_table * , s#net_device * ) 
neigh_lookup extern s#neighbour * neigh_lookup ( s#neigh_table * , const void * , s#net_device * ) 
neigh_lookup_nodev extern s#neighbour * neigh_lookup_nodev ( s#neigh_table * , s#net * , const void * ) 
neigh_create extern s#neighbour * neigh_create ( s#neigh_table * , const void * , s#net_device * ) 
__pneigh_lookup extern s#pneigh_entry * __pneigh_lookup ( s#neigh_table * , s#net * , const void * , s#net_device * ) 
pneigh_lookup extern s#pneigh_entry * pneigh_lookup ( s#neigh_table * , s#net * , const void * , s#net_device * , int ) 
neigh_destroy extern void neigh_destroy ( s#neighbour * ) 
__neigh_event_send extern int __neigh_event_send ( s#neighbour * , s#sk_buff * ) 
neigh_update extern int neigh_update ( s#neighbour * , const t#u8 * , t#u8 , t#u32 ) 
neigh_event_ns extern s#neighbour * neigh_event_ns ( s#neigh_table * , t#u8 * , void * , s#net_device * ) 
neigh_compat_output extern int neigh_compat_output ( s#sk_buff * ) 
neigh_resolve_output extern int neigh_resolve_output ( s#sk_buff * ) 
neigh_connected_output extern int neigh_connected_output ( s#sk_buff * ) 
pneigh_enqueue extern void pneigh_enqueue ( s#neigh_table * , s#neigh_parms * , s#sk_buff * ) 
neigh_parms_alloc extern s#neigh_parms * neigh_parms_alloc ( s#net_device * , s#neigh_table * ) 
neigh_parms_release extern void neigh_parms_release ( s#neigh_table * , s#neigh_parms * ) 
neigh_table_init_no_netlink extern void neigh_table_init_no_netlink ( s#neigh_table * ) 
neigh_table_init extern void neigh_table_init ( s#neigh_table * ) 
neigh_table_clear extern int neigh_table_clear ( s#neigh_table * ) 
neigh_for_each extern void neigh_for_each ( s#neigh_table * , void ( * ) ( s#neighbour * , void * ) , void * ) 
__neigh_for_each_release extern void __neigh_for_each_release ( s#neigh_table * , int ( * ) ( s#neighbour * ) ) 
neigh_seq_start extern void * neigh_seq_start ( s#seq_file * , t#loff_t * , s#neigh_table * , unsigned int ) 
neigh_seq_next extern void * neigh_seq_next ( s#seq_file * , void * , t#loff_t * ) 
neigh_seq_stop extern void neigh_seq_stop ( s#seq_file * , void * ) 
neigh_sysctl_register extern int neigh_sysctl_register ( s#net_device * , s#neigh_parms * , int , int , char * , t#proc_handler * , t#ctl_handler * ) 
neigh_sysctl_unregister extern void neigh_sysctl_unregister ( s#neigh_parms * ) 

/* net/core/net-sysfs.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##nameidata
s##vfsmount
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
netdev_class_create_file extern int netdev_class_create_file ( s#class_attribute * ) 
netdev_class_remove_file extern void netdev_class_remove_file ( s#class_attribute * ) 

/* net/core/net-traces.o */
__tracepoint_kfree_skb extern s#tracepoint __tracepoint_kfree_skb 
__tracepoint_napi_poll s#tracepoint __tracepoint_napi_poll __attribute__ ( ( section ( "__tracepoints" ) , aligned ( 32 ) ) ) 

/* net/core/net_namespace.o */
net_namespace_list extern s#list_head net_namespace_list 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##net_device
s##sock
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sec_path
s##ip_conntrack_stat
init_net extern s#net init_net 
__put_net extern void __put_net ( s#net * ) 
get_net_ns_by_pid extern s#net * get_net_ns_by_pid ( t#pid_t ) 
s#pernet_operations struct pernet_operations { s#list_head list ; int ( * init ) ( s#net * ) ; void ( * exit ) ( s#net * ) ; } 
register_pernet_subsys extern int register_pernet_subsys ( s#pernet_operations * ) 
unregister_pernet_subsys extern void unregister_pernet_subsys ( s#pernet_operations * ) 
register_pernet_gen_subsys extern int register_pernet_gen_subsys ( int * , s#pernet_operations * ) 
unregister_pernet_gen_subsys extern void unregister_pernet_gen_subsys ( int , s#pernet_operations * ) 
register_pernet_device extern int register_pernet_device ( s#pernet_operations * ) 
register_pernet_gen_device extern int register_pernet_gen_device ( int * , s#pernet_operations * ) 
unregister_pernet_device extern void unregister_pernet_device ( s#pernet_operations * ) 
unregister_pernet_gen_device extern void unregister_pernet_gen_device ( int , s#pernet_operations * ) 
net_assign_generic extern int net_assign_generic ( s#net * , int , void * ) 

/* net/core/netevent.o */
register_netevent_notifier extern int register_netevent_notifier ( s#notifier_block * ) 
unregister_netevent_notifier extern int unregister_netevent_notifier ( s#notifier_block * ) 
call_netevent_notifiers extern int call_netevent_notifiers ( unsigned long , void * ) 

/* net/core/rtnetlink.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s#udp_hslot struct udp_hslot { s#hlist_nulls_head head ; t#spinlock_t lock ; } 
s#udp_table struct udp_table { s#udp_hslot hash [ 128 ] ; } 
s##raw_hashinfo
s##vlan_group
s##wireless_dev
s##tcf_walker
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##mfc_cache
s##vif_device
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##in_device
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##xfrm_policy
s##sec_path
s#nlmsghdr struct nlmsghdr { t#__u32 nlmsg_len ; t#__u16 nlmsg_type ; t#__u16 nlmsg_flags ; t#__u32 nlmsg_seq ; t#__u32 nlmsg_pid ; } 
t#rtnl_doit_func typedef int ( * rtnl_doit_func ) ( s#sk_buff * , s#nlmsghdr * , void * ) 
s#netlink_callback struct netlink_callback { s#sk_buff * skb ; const s#nlmsghdr * nlh ; int ( * dump ) ( s#sk_buff * , s#netlink_callback * ) ; int ( * done ) ( s#netlink_callback * ) ; int family ; long args [ 6 ] ; } 
t#rtnl_dumpit_func typedef int ( * rtnl_dumpit_func ) ( s#sk_buff * , s#netlink_callback * ) 
__rtnl_register extern int __rtnl_register ( int , int , t#rtnl_doit_func , t#rtnl_dumpit_func ) 
rtnl_register extern void rtnl_register ( int , int , t#rtnl_doit_func , t#rtnl_dumpit_func ) 
rtnl_unregister extern int rtnl_unregister ( int , int ) 
rtnl_unregister_all extern void rtnl_unregister_all ( int ) 
__rtnl_link_register extern int __rtnl_link_register ( s#rtnl_link_ops * ) 
rtnl_link_register extern int rtnl_link_register ( s#rtnl_link_ops * ) 
rtnl_kill_links extern void rtnl_kill_links ( s#net * , s#rtnl_link_ops * ) 
__rtnl_link_unregister extern void __rtnl_link_unregister ( s#rtnl_link_ops * ) 
rtnl_link_unregister extern void rtnl_link_unregister ( s#rtnl_link_ops * ) 
rtnl_put_cacheinfo extern int rtnl_put_cacheinfo ( s#sk_buff * , s#dst_entry * , t#u32 , t#u32 , t#u32 , long , t#u32 ) 
__rta_fill extern void __rta_fill ( s#sk_buff * , int , int , const void * ) 
rtnetlink_put_metrics extern int rtnetlink_put_metrics ( s#sk_buff * , t#u32 * ) 
rtnl_lock extern void rtnl_lock ( void ) 
rtnl_trylock extern int rtnl_trylock ( void ) 
rtnl_unlock extern void rtnl_unlock ( void ) 
rtnl_is_locked extern int rtnl_is_locked ( void ) 
rtnl_unicast extern int rtnl_unicast ( s#sk_buff * , s#net * , t#u32 ) 
rtnl_notify extern void rtnl_notify ( s#sk_buff * , s#net * , t#u32 , t#u32 , s#nlmsghdr * , t#gfp_t ) 
rtnl_set_sk_err extern void rtnl_set_sk_err ( s#net * , t#u32 , int ) 
rtnl_create_link extern s#net_device * rtnl_create_link ( s#net * , char * , const s#rtnl_link_ops * , s#nlattr * [ ] ) 
ifla_policy extern const s#nla_policy ifla_policy [ ( __IFLA_MAX - 1 ) + 1 ] 

/* net/core/scm.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_state
s##rtable
s##rt6_info
s##dn_route
s##xfrm_policy
s##sec_path
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##rt6_statistics
s##fib6_table
s##ip_conntrack_stat
s##net_generic
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s#scm_fp_list struct scm_fp_list { s#list_head list ; int count ; s#file * fp [ 255 ] ; } 
s#scm_cookie struct scm_cookie { s#ucred creds ; s#scm_fp_list * fp ; t#u32 secid ; } 
__scm_destroy extern void __scm_destroy ( s#scm_cookie * ) 
__scm_send extern int __scm_send ( s#socket * , s#msghdr * , s#scm_cookie * ) 
put_cmsg extern int put_cmsg ( s#msghdr * , int , int , int , void * ) 
scm_detach_fds extern void scm_detach_fds ( s#msghdr * , s#scm_cookie * ) 
scm_fp_dup extern s#scm_fp_list * scm_fp_dup ( s#scm_fp_list * ) 

/* net/core/skbuff.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##vlan_group
s##wireless_dev
s##tcf_walker
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
t#xfrm_address_t typedef union { t#__be32 a4 ; t#__be32 a6 [ 4 ] ; } xfrm_address_t 
s#xfrm_id struct xfrm_id { t#xfrm_address_t daddr ; t#__be32 spi ; t#__u8 proto ; } 
s#xfrm_selector struct xfrm_selector { t#xfrm_address_t daddr ; t#xfrm_address_t saddr ; t#__be16 dport ; t#__be16 dport_mask ; t#__be16 sport ; t#__be16 sport_mask ; t#__u16 family ; t#__u8 prefixlen_d ; t#__u8 prefixlen_s ; t#__u8 proto ; int ifindex ; t#__kernel_uid32_t user ; } 
s#xfrm_state_walk struct xfrm_state_walk { s#list_head all ; t#u8 state ; union { t#u8 dying ; t#u8 proto ; } ; t#u32 seq ; } 
s#xfrm_lifetime_cfg struct xfrm_lifetime_cfg { t#__u64 soft_byte_limit ; t#__u64 hard_byte_limit ; t#__u64 soft_packet_limit ; t#__u64 hard_packet_limit ; t#__u64 soft_add_expires_seconds ; t#__u64 hard_add_expires_seconds ; t#__u64 soft_use_expires_seconds ; t#__u64 hard_use_expires_seconds ; } 
s#xfrm_algo struct xfrm_algo { char alg_name [ 64 ] ; unsigned int alg_key_len ; char alg_key [ 0 ] ; } 
s#xfrm_algo_aead struct xfrm_algo_aead { char alg_name [ 64 ] ; unsigned int alg_key_len ; unsigned int alg_icv_len ; char alg_key [ 0 ] ; } 
s#xfrm_encap_tmpl struct xfrm_encap_tmpl { t#__u16 encap_type ; t#__be16 encap_sport ; t#__be16 encap_dport ; t#xfrm_address_t encap_oa ; } 
s#xfrm_replay_state struct xfrm_replay_state { t#__u32 oseq ; t#__u32 seq ; t#__u32 bitmap ; } 
s#xfrm_stats struct xfrm_stats { t#__u32 replay_window ; t#__u32 replay ; t#__u32 integrity_failed ; } 
s#xfrm_lifetime_cur struct xfrm_lifetime_cur { t#__u64 bytes ; t#__u64 packets ; t#__u64 add_time ; t#__u64 use_time ; } 
s#xfrm_type struct xfrm_type { char * description ; s#module * owner ; t#__u8 proto ; t#__u8 flags ; int ( * init_state ) ( s#xfrm_state * ) ; void ( * destructor ) ( s#xfrm_state * ) ; int ( * input ) ( s#xfrm_state * , s#sk_buff * ) ; int ( * output ) ( s#xfrm_state * , s#sk_buff * ) ; int ( * reject ) ( s#xfrm_state * , s#sk_buff * , s#flowi * ) ; int ( * hdr_offset ) ( s#xfrm_state * , s#sk_buff * , t#u8 * * ) ; t#u32 ( * get_mtu ) ( s#xfrm_state * , int ) ; } 
s#xfrm_tmpl struct xfrm_tmpl { s#xfrm_id id ; t#xfrm_address_t saddr ; unsigned short encap_family ; t#__u32 reqid ; t#__u8 mode ; t#__u8 share ; t#__u8 optional ; t#__u8 allalgs ; t#__u32 aalgos ; t#__u32 ealgos ; t#__u32 calgos ; } 
s#xfrm_state_afinfo struct xfrm_state_afinfo { unsigned int family ; unsigned int proto ; t#__be16 eth_proto ; s#module * owner ; const s#xfrm_type * type_map [ IPPROTO_MAX ] ; s#xfrm_mode * mode_map [ 5 ] ; int ( * init_flags ) ( s#xfrm_state * ) ; void ( * init_tempsel ) ( s#xfrm_state * , s#flowi * , s#xfrm_tmpl * , t#xfrm_address_t * , t#xfrm_address_t * ) ; int ( * tmpl_sort ) ( s#xfrm_tmpl * * , s#xfrm_tmpl * * , int ) ; int ( * state_sort ) ( s#xfrm_state * * , s#xfrm_state * * , int ) ; int ( * output ) ( s#sk_buff * ) ; int ( * extract_input ) ( s#xfrm_state * , s#sk_buff * ) ; int ( * extract_output ) ( s#xfrm_state * , s#sk_buff * ) ; int ( * transport_finish ) ( s#sk_buff * , int ) ; } 
s#xfrm_mode struct xfrm_mode { int ( * input2 ) ( s#xfrm_state * , s#sk_buff * ) ; int ( * input ) ( s#xfrm_state * , s#sk_buff * ) ; int ( * output2 ) ( s#xfrm_state * , s#sk_buff * ) ; int ( * output ) ( s#xfrm_state * , s#sk_buff * ) ; s#xfrm_state_afinfo * afinfo ; s#module * owner ; unsigned int encap ; int flags ; } 
s#xfrm_sec_ctx struct xfrm_sec_ctx { t#__u8 ctx_doi ; t#__u8 ctx_alg ; t#__u16 ctx_len ; t#__u32 ctx_sid ; char ctx_str [ 0 ] ; } 
s#xfrm_state struct xfrm_state { s#net * xs_net ; union { s#hlist_node gclist ; s#hlist_node bydst ; } ; s#hlist_node bysrc ; s#hlist_node byspi ; t#atomic_t refcnt ; t#spinlock_t lock ; s#xfrm_id id ; s#xfrm_selector sel ; t#u32 genid ; s#xfrm_state_walk km ; struct { t#u32 reqid ; t#u8 mode ; t#u8 replay_window ; t#u8 aalgo , ealgo , calgo ; t#u8 flags ; t#u16 family ; t#xfrm_address_t saddr ; int header_len ; int trailer_len ; } props ; s#xfrm_lifetime_cfg lft ; s#xfrm_algo * aalg ; s#xfrm_algo * ealg ; s#xfrm_algo * calg ; s#xfrm_algo_aead * aead ; s#xfrm_encap_tmpl * encap ; t#xfrm_address_t * coaddr ; s#xfrm_state * tunnel ; t#atomic_t tunnel_users ; s#xfrm_replay_state replay ; s#xfrm_replay_state preplay ; t#u32 xflags ; t#u32 replay_maxage ; t#u32 replay_maxdiff ; s#timer_list rtimer ; s#xfrm_stats stats ; s#xfrm_lifetime_cur curlft ; s#timer_list timer ; unsigned long lastused ; const s#xfrm_type * type ; s#xfrm_mode * inner_mode ; s#xfrm_mode * inner_mode_iaf ; s#xfrm_mode * outer_mode ; s#xfrm_sec_ctx * security ; void * data ; } 
s##in_device
s##dn_route
s#fib6_node struct fib6_node { s#fib6_node * parent ; s#fib6_node * left ; s#fib6_node * right ; s#fib6_node * subtree ; s#rt6_info * leaf ; t#__u16 fn_bit ; t#__u16 fn_flags ; t#__u32 fn_sernum ; s#rt6_info * rr_ptr ; } 
s#fib6_table struct fib6_table { s#hlist_node tb6_hlist ; t#u32 tb6_id ; t#rwlock_t tb6_lock ; s#fib6_node tb6_root ; } 
s#rt6key struct rt6key { s#in6_addr addr ; int plen ; } 
s#rt6_info struct rt6_info { union { s#dst_entry dst ; } u ; s#inet6_dev * rt6i_idev ; s#fib6_node * rt6i_node ; s#in6_addr rt6i_gateway ; t#u32 rt6i_flags ; t#u32 rt6i_metric ; t#atomic_t rt6i_ref ; unsigned short rt6i_nfheader_len ; t#u8 rt6i_protocol ; s#fib6_table * rt6i_table ; s#rt6key rt6i_dst ; t#u32 rt6i_flow_cache_genid ; s#rt6key rt6i_src ; } 
s#rt6_statistics struct rt6_statistics { t#__u32 fib_nodes ; t#__u32 fib_route_nodes ; t#__u32 fib_rt_alloc ; t#__u32 fib_rt_entries ; t#__u32 fib_rt_cache ; t#__u32 fib_discarded_routes ; } 
s##ip_conntrack_stat
s##net_generic
s#xfrm_policy_walk_entry struct xfrm_policy_walk_entry { s#list_head all ; t#u8 dead ; } 
s#xfrm_policy struct xfrm_policy { s#net * xp_net ; s#hlist_node bydst ; s#hlist_node byidx ; t#rwlock_t lock ; t#atomic_t refcnt ; s#timer_list timer ; t#u32 priority ; t#u32 index ; s#xfrm_selector selector ; s#xfrm_lifetime_cfg lft ; s#xfrm_lifetime_cur curlft ; s#dst_entry * bundles ; s#xfrm_policy_walk_entry walk ; t#u8 type ; t#u8 action ; t#u8 flags ; t#u8 xfrm_nr ; t#u16 family ; s#xfrm_sec_ctx * security ; s#xfrm_tmpl xfrm_vec [ 6 ] ; } 
s#sec_path struct sec_path { t#atomic_t refcnt ; int len ; s#xfrm_state * xvec [ 6 ] ; } 
skb_over_panic extern void skb_over_panic ( s#sk_buff * , int , void * ) 
skb_under_panic extern void skb_under_panic ( s#sk_buff * , int , void * ) 
__alloc_skb extern s#sk_buff * __alloc_skb ( unsigned int , t#gfp_t , int , int ) 
__netdev_alloc_skb extern s#sk_buff * __netdev_alloc_skb ( s#net_device * , unsigned int , t#gfp_t ) 
__netdev_alloc_page extern s#page * __netdev_alloc_page ( s#net_device * , t#gfp_t ) 
__netdev_free_page extern void __netdev_free_page ( s#net_device * , s#page * ) 
skb_add_rx_frag extern void skb_add_rx_frag ( s#sk_buff * , int , s#page * , int , int ) 
dev_alloc_skb extern s#sk_buff * dev_alloc_skb ( unsigned int ) 
__kfree_skb extern void __kfree_skb ( s#sk_buff * ) 
kfree_skb extern void kfree_skb ( s#sk_buff * ) 
consume_skb extern void consume_skb ( s#sk_buff * ) 
skb_recycle_check extern int skb_recycle_check ( s#sk_buff * , int ) 
skb_morph extern s#sk_buff * skb_morph ( s#sk_buff * , s#sk_buff * ) 
skb_clone extern s#sk_buff * skb_clone ( s#sk_buff * , t#gfp_t ) 
skb_copy extern s#sk_buff * skb_copy ( const s#sk_buff * , t#gfp_t ) 
pskb_copy extern s#sk_buff * pskb_copy ( s#sk_buff * , t#gfp_t ) 
pskb_expand_head extern int pskb_expand_head ( s#sk_buff * , int , int , t#gfp_t ) 
skb_realloc_headroom extern s#sk_buff * skb_realloc_headroom ( s#sk_buff * , unsigned int ) 
skb_copy_expand extern s#sk_buff * skb_copy_expand ( const s#sk_buff * , int , int , t#gfp_t ) 
skb_pad extern int skb_pad ( s#sk_buff * , int ) 
skb_put extern unsigned char * skb_put ( s#sk_buff * , unsigned int ) 
skb_push extern unsigned char * skb_push ( s#sk_buff * , unsigned int ) 
skb_pull extern unsigned char * skb_pull ( s#sk_buff * , unsigned int ) 
skb_trim extern void skb_trim ( s#sk_buff * , unsigned int ) 
___pskb_trim extern int ___pskb_trim ( s#sk_buff * , unsigned int ) 
__pskb_pull_tail extern unsigned char * __pskb_pull_tail ( s#sk_buff * , int ) 
skb_copy_bits extern int skb_copy_bits ( const s#sk_buff * , int , void * , int ) 
skb_store_bits extern int skb_store_bits ( s#sk_buff * , int , const void * , int ) 
skb_checksum extern t#__wsum skb_checksum ( const s#sk_buff * , int , int , t#__wsum ) 
skb_copy_and_csum_bits extern t#__wsum skb_copy_and_csum_bits ( const s#sk_buff * , int , t#u8 * , int , t#__wsum ) 
skb_copy_and_csum_dev extern void skb_copy_and_csum_dev ( const s#sk_buff * , t#u8 * ) 
skb_dequeue extern s#sk_buff * skb_dequeue ( s#sk_buff_head * ) 
skb_dequeue_tail extern s#sk_buff * skb_dequeue_tail ( s#sk_buff_head * ) 
skb_queue_purge extern void skb_queue_purge ( s#sk_buff_head * ) 
skb_queue_head extern void skb_queue_head ( s#sk_buff_head * , s#sk_buff * ) 
skb_queue_tail extern void skb_queue_tail ( s#sk_buff_head * , s#sk_buff * ) 
skb_unlink extern void skb_unlink ( s#sk_buff * , s#sk_buff_head * ) 
skb_append extern void skb_append ( s#sk_buff * , s#sk_buff * , s#sk_buff_head * ) 
skb_insert extern void skb_insert ( s#sk_buff * , s#sk_buff * , s#sk_buff_head * ) 
skb_split extern void skb_split ( s#sk_buff * , s#sk_buff * , const t#u32 ) 
s#skb_seq_state struct skb_seq_state { t#__u32 lower_offset ; t#__u32 upper_offset ; t#__u32 frag_idx ; t#__u32 stepped_offset ; s#sk_buff * root_skb ; s#sk_buff * cur_skb ; t#__u8 * frag_data ; } 
skb_prepare_seq_read extern void skb_prepare_seq_read ( s#sk_buff * , unsigned int , unsigned int , s#skb_seq_state * ) 
skb_seq_read extern unsigned int skb_seq_read ( unsigned int , const t#u8 * * , s#skb_seq_state * ) 
skb_abort_seq_read extern void skb_abort_seq_read ( s#skb_seq_state * ) 
skb_find_text extern unsigned int skb_find_text ( s#sk_buff * , unsigned int , unsigned int , s#ts_config * , s#ts_state * ) 
skb_append_datato_frags extern int skb_append_datato_frags ( s#sock * , s#sk_buff * , int ( void * , char * , int , int , int , s#sk_buff * ) , void * , int ) 
skb_pull_rcsum unsigned char * skb_pull_rcsum ( s#sk_buff * , unsigned int ) 
skb_segment extern s#sk_buff * skb_segment ( s#sk_buff * , int ) 
skb_gro_receive extern int skb_gro_receive ( s#sk_buff * * , s#sk_buff * ) 
skb_to_sgvec extern int skb_to_sgvec ( s#sk_buff * , s#scatterlist * , int , int ) 
skb_cow_data extern int skb_cow_data ( s#sk_buff * , int , s#sk_buff * * ) 
s#skb_shared_hwtstamps struct skb_shared_hwtstamps { t#ktime_t hwtstamp ; t#ktime_t syststamp ; } 
skb_tstamp_tx extern void skb_tstamp_tx ( s#sk_buff * , s#skb_shared_hwtstamps * ) 
skb_partial_csum_set t#bool skb_partial_csum_set ( s#sk_buff * , t#u16 , t#u16 ) 
__skb_warn_lro_forwarding extern void __skb_warn_lro_forwarding ( const s#sk_buff * ) 

/* net/core/sock.o */
sysctl_optmem_max extern int sysctl_optmem_max 
net_rx_reserve extern s#mem_reserve net_rx_reserve 
net_skb_reserve extern s#mem_reserve net_skb_reserve 
sk_adjust_memalloc extern int sk_adjust_memalloc ( int , long ) 
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##in_device
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##udp_table
s##raw_hashinfo
sk_set_memalloc extern int sk_set_memalloc ( s#sock * ) 
sk_clear_memalloc extern int sk_clear_memalloc ( s#sock * ) 
__sk_backlog_rcv extern int __sk_backlog_rcv ( s#sock * , s#sk_buff * ) 
sock_queue_rcv_skb extern int sock_queue_rcv_skb ( s#sock * , s#sk_buff * ) 
sk_receive_skb extern int sk_receive_skb ( s#sock * , s#sk_buff * , const int ) 
__sk_dst_check extern s#dst_entry * __sk_dst_check ( s#sock * , t#u32 ) 
sk_dst_check extern s#dst_entry * sk_dst_check ( s#sock * , t#u32 ) 
sock_setsockopt extern int sock_setsockopt ( s#socket * , int , int , char * , unsigned int ) 
sk_alloc extern s#sock * sk_alloc ( s#net * , int , t#gfp_t , s#proto * ) 
sk_free extern void sk_free ( s#sock * ) 
sk_release_kernel extern void sk_release_kernel ( s#sock * ) 
sk_clone extern s#sock * sk_clone ( const s#sock * , const t#gfp_t ) 
sk_setup_caps extern void sk_setup_caps ( s#sock * , s#dst_entry * ) 
sock_wfree extern void sock_wfree ( s#sk_buff * ) 
sock_rfree extern void sock_rfree ( s#sk_buff * ) 
sock_i_uid extern int sock_i_uid ( s#sock * ) 
sock_i_ino extern unsigned long sock_i_ino ( s#sock * ) 
sock_wmalloc extern s#sk_buff * sock_wmalloc ( s#sock * , unsigned long , int , t#gfp_t ) 
sock_kmalloc extern void * sock_kmalloc ( s#sock * , int , t#gfp_t ) 
sock_kfree_s extern void sock_kfree_s ( s#sock * , void * , int ) 
sock_alloc_send_pskb extern s#sk_buff * sock_alloc_send_pskb ( s#sock * , unsigned long , unsigned long , int , int * ) 
sock_alloc_send_skb extern s#sk_buff * sock_alloc_send_skb ( s#sock * , unsigned long , int , int * ) 
sk_wait_data extern int sk_wait_data ( s#sock * , long * ) 
__sk_mem_schedule extern int __sk_mem_schedule ( s#sock * , int , int ) 
__sk_mem_reclaim extern void __sk_mem_reclaim ( s#sock * ) 
sock_no_bind extern int sock_no_bind ( s#socket * , s#sockaddr * , int ) 
sock_no_connect extern int sock_no_connect ( s#socket * , s#sockaddr * , int , int ) 
sock_no_socketpair extern int sock_no_socketpair ( s#socket * , s#socket * ) 
sock_no_accept extern int sock_no_accept ( s#socket * , s#socket * , int ) 
sock_no_getname extern int sock_no_getname ( s#socket * , s#sockaddr * , int * , int ) 
sock_no_poll extern unsigned int sock_no_poll ( s#file * , s#socket * , s#poll_table_struct * ) 
sock_no_ioctl extern int sock_no_ioctl ( s#socket * , unsigned int , unsigned long ) 
sock_no_listen extern int sock_no_listen ( s#socket * , int ) 
sock_no_shutdown extern int sock_no_shutdown ( s#socket * , int ) 
sock_no_setsockopt extern int sock_no_setsockopt ( s#socket * , int , int , char * , unsigned int ) 
sock_no_getsockopt extern int sock_no_getsockopt ( s#socket * , int , int , char * , int * ) 
sock_no_sendmsg extern int sock_no_sendmsg ( s#kiocb * , s#socket * , s#msghdr * , t#size_t ) 
sock_no_recvmsg extern int sock_no_recvmsg ( s#kiocb * , s#socket * , s#msghdr * , t#size_t , int ) 
sock_no_mmap extern int sock_no_mmap ( s#file * , s#socket * , s#vm_area_struct * ) 
sock_no_sendpage extern t#ssize_t sock_no_sendpage ( s#socket * , s#page * , int , t#size_t , int ) 
sk_send_sigurg extern void sk_send_sigurg ( s#sock * ) 
sk_reset_timer extern void sk_reset_timer ( s#sock * , s#timer_list * , unsigned long ) 
sk_stop_timer extern void sk_stop_timer ( s#sock * , s#timer_list * ) 
sock_init_data extern void sock_init_data ( s#socket * , s#sock * ) 
lock_sock_nested extern void lock_sock_nested ( s#sock * , int ) 
release_sock extern void release_sock ( s#sock * ) 
sock_get_timestamp extern int sock_get_timestamp ( s#sock * , s#timeval * ) 
sock_get_timestampns extern int sock_get_timestampns ( s#sock * , s#timespec * ) 
sock_common_getsockopt extern int sock_common_getsockopt ( s#socket * , int , int , char * , int * ) 
compat_sock_common_getsockopt extern int compat_sock_common_getsockopt ( s#socket * , int , int , char * , int * ) 
sock_common_recvmsg extern int sock_common_recvmsg ( s#kiocb * , s#socket * , s#msghdr * , t#size_t , int ) 
sock_common_setsockopt extern int sock_common_setsockopt ( s#socket * , int , int , char * , unsigned int ) 
compat_sock_common_setsockopt extern int compat_sock_common_setsockopt ( s#socket * , int , int , char * , unsigned int ) 
sk_common_release extern void sk_common_release ( s#sock * ) 
sock_prot_inuse_add extern void sock_prot_inuse_add ( s#net * , s#proto * , int ) 
sock_prot_inuse_get extern int sock_prot_inuse_get ( s#net * , s#proto * ) 
proto_register extern int proto_register ( s#proto * , int ) 
proto_unregister extern void proto_unregister ( s#proto * ) 

/* net/core/stream.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
sk_stream_write_space extern void sk_stream_write_space ( s#sock * ) 
sk_stream_wait_connect extern int sk_stream_wait_connect ( s#sock * , long * ) 
sk_stream_wait_close extern void sk_stream_wait_close ( s#sock * , long ) 
sk_stream_wait_memory extern int sk_stream_wait_memory ( s#sock * , long * ) 
sk_stream_error extern int sk_stream_error ( s#sock * , int , int ) 
sk_stream_kill_queues extern void sk_stream_kill_queues ( s#sock * ) 

/* net/core/utils.o */
net_msg_warn extern int net_msg_warn 
net_ratelimit extern int net_ratelimit ( void ) 
in_aton extern t#__be32 in_aton ( const char * ) 
in4_pton extern int in4_pton ( const char * , int , t#u8 * , int , const char * * ) 
in6_pton extern int in6_pton ( const char * , int , t#u8 * , int , const char * * ) 
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##xfrm_policy
s##sec_path
inet_proto_csum_replace4 extern void inet_proto_csum_replace4 ( t#__sum16 * , s#sk_buff * , t#__be32 , t#__be32 , int ) 

/* net/dccp/feat.o */
dccp_feat_list_purge extern void dccp_feat_list_purge ( s#list_head * ) 

/* net/dccp/input.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##in_device
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s#dccp_hdr struct dccp_hdr { t#__be16 dccph_sport , dccph_dport ; t#__u8 dccph_doff ; t#__u8 dccph_ccval : 4 , dccph_cscov : 4 ; t#__sum16 dccph_checksum ; t#__u8 dccph_reserved : 3 , dccph_type : 4 , dccph_x : 1 ; t#__u8 dccph_seq2 ; t#__be16 dccph_seq ; } 
dccp_rcv_established extern int dccp_rcv_established ( s#sock * , s#sk_buff * , const s#dccp_hdr * , const unsigned ) 
dccp_rcv_state_process extern int dccp_rcv_state_process ( s#sock * , s#sk_buff * , s#dccp_hdr * , unsigned ) 

/* net/dccp/ipv4.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##in_device
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##udp_table
s##raw_hashinfo
dccp_v4_connect extern int dccp_v4_connect ( s#sock * , s#sockaddr * , int ) 
dccp_v4_send_check extern void dccp_v4_send_check ( s#sock * , int , s#sk_buff * ) 
dccp_v4_request_recv_sock extern s#sock * dccp_v4_request_recv_sock ( s#sock * , s#sk_buff * , s#request_sock * , s#dst_entry * ) 
dccp_v4_conn_request extern int dccp_v4_conn_request ( s#sock * , s#sk_buff * ) 
dccp_v4_do_rcv extern int dccp_v4_do_rcv ( s#sock * , s#sk_buff * ) 
dccp_invalid_packet extern int dccp_invalid_packet ( s#sk_buff * ) 

/* net/dccp/minisocks.o */
s##tvec_base
s##array_cache
s##kmem_list3
s#inet_timewait_death_row struct inet_timewait_death_row { int twcal_hand ; unsigned long twcal_jiffie ; s#timer_list twcal_timer ; s#hlist_head twcal_row [ ( 1 << 5 ) ] ; t#spinlock_t death_lock ; int tw_count ; int period ; t#u32 thread_slots ; s#work_struct twkill_work ; s#timer_list tw_timer ; int slot ; s#hlist_head cells [ 8 ] ; s#inet_hashinfo * hashinfo ; int sysctl_tw_recycle ; int sysctl_max_tw_buckets ; } 
dccp_death_row extern s#inet_timewait_death_row dccp_death_row 
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##eventfd_ctx
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##in_device
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##udp_table
s##raw_hashinfo
dccp_create_openreq_child extern s#sock * dccp_create_openreq_child ( s#sock * , const s#request_sock * , const s#sk_buff * ) 
dccp_check_req extern s#sock * dccp_check_req ( s#sock * , s#sk_buff * , s#request_sock * , s#request_sock * * ) 
dccp_child_process extern int dccp_child_process ( s#sock * , s#sock * , s#sk_buff * ) 
dccp_reqsk_send_ack extern void dccp_reqsk_send_ack ( s#sock * , s#sk_buff * , s#request_sock * ) 
s#in6_pktinfo struct in6_pktinfo { s#in6_addr ipi6_addr ; int ipi6_ifindex ; } 
s#ip6_sf_socklist struct ip6_sf_socklist { unsigned int sl_max ; unsigned int sl_count ; s#in6_addr sl_addr [ 0 ] ; } 
s#ipv6_mc_socklist struct ipv6_mc_socklist { s#in6_addr addr ; int ifindex ; s#ipv6_mc_socklist * next ; t#rwlock_t sflock ; unsigned int sfmode ; s#ip6_sf_socklist * sflist ; } 
s#ipv6_ac_socklist struct ipv6_ac_socklist { s#in6_addr acl_addr ; int acl_ifindex ; s#ipv6_ac_socklist * acl_next ; } 
s#ipv6_opt_hdr struct ipv6_opt_hdr { t#__u8 nexthdr ; t#__u8 hdrlen ; } 
s#ipv6_rt_hdr struct ipv6_rt_hdr { t#__u8 nexthdr ; t#__u8 hdrlen ; t#__u8 type ; t#__u8 segments_left ; } 
s#ipv6_txoptions struct ipv6_txoptions { int tot_len ; t#__u16 opt_flen ; t#__u16 opt_nflen ; s#ipv6_opt_hdr * hopopt ; s#ipv6_opt_hdr * dst0opt ; s#ipv6_rt_hdr * srcrt ; s#ipv6_opt_hdr * dst1opt ; } 
s#ip6_flowlabel struct ip6_flowlabel { s#ip6_flowlabel * next ; t#__be32 label ; t#atomic_t users ; s#in6_addr dst ; s#ipv6_txoptions * opt ; unsigned long linger ; t#u8 share ; t#u32 owner ; unsigned long lastuse ; unsigned long expires ; s#net * fl_net ; } 
s#ipv6_fl_socklist struct ipv6_fl_socklist { s#ipv6_fl_socklist * next ; s#ip6_flowlabel * fl ; } 
s#ipv6_pinfo struct ipv6_pinfo { s#in6_addr saddr ; s#in6_addr rcv_saddr ; s#in6_addr daddr ; s#in6_pktinfo sticky_pktinfo ; s#in6_addr * daddr_cache ; s#in6_addr * saddr_cache ; t#__be32 flow_label ; t#__u32 frag_size ; t#__s16 hop_limit : 9 ; t#__u16 __unused_1 : 7 ; t#__s16 mcast_hops : 9 ; t#__u16 __unused_2 : 6 , mc_loop : 1 ; int mcast_oif ; union { struct { t#__u16 srcrt : 1 , osrcrt : 1 , rxinfo : 1 , rxoinfo : 1 , rxhlim : 1 , rxohlim : 1 , hopopts : 1 , ohopopts : 1 , dstopts : 1 , odstopts : 1 , rxflow : 1 , rxtclass : 1 ; } bits ; t#__u16 all ; } rxopt ; t#__u8 recverr : 1 , sndflow : 1 , pmtudisc : 2 , ipv6only : 1 , srcprefs : 3 ; t#__u8 tclass ; t#__u32 dst_cookie ; s#ipv6_mc_socklist * ipv6_mc_list ; s#ipv6_ac_socklist * ipv6_ac_list ; s#ipv6_fl_socklist * ipv6_fl_list ; s#ipv6_txoptions * opt ; s#sk_buff * pktoptions ; struct { s#ipv6_txoptions * opt ; t#u8 hop_limit ; t#u8 tclass ; } cork ; } 
s#ip_options struct ip_options { t#__be32 faddr ; unsigned char optlen ; unsigned char srr ; unsigned char rr ; unsigned char ts ; unsigned char is_strictroute : 1 , srr_is_hit : 1 , is_changed : 1 , rr_needaddr : 1 , ts_needtime : 1 , ts_needaddr : 1 ; unsigned char router_alert ; unsigned char cipso ; unsigned char __pad2 ; unsigned char __data [ 0 ] ; } 
s##ip_mc_socklist
s#inet_sock struct inet_sock { s#sock sk ; s#ipv6_pinfo * pinet6 ; t#__be32 daddr ; t#__be32 rcv_saddr ; t#__be16 dport ; t#__u16 num ; t#__be32 saddr ; t#__s16 uc_ttl ; t#__u16 cmsg_flags ; s#ip_options * opt ; t#__be16 sport ; t#__u16 id ; t#__u8 tos ; t#__u8 mc_ttl ; t#__u8 pmtudisc ; t#__u8 recverr : 1 , is_icsk : 1 , freebind : 1 , hdrincl : 1 , mc_loop : 1 , transparent : 1 , mc_all : 1 ; int mc_index ; t#__be32 mc_addr ; s#ip_mc_socklist * mc_list ; struct { unsigned int flags ; unsigned int fragsize ; s#ip_options * opt ; s#dst_entry * dst ; int length ; t#__be32 addr ; s#flowi fl ; } cork ; } 
s#listen_sock struct listen_sock { t#u8 max_qlen_log ; int qlen ; int qlen_young ; int clock_hand ; t#u32 hash_rnd ; t#u32 nr_table_entries ; s#request_sock * syn_table [ 0 ] ; } 
s#request_sock_queue struct request_sock_queue { s#request_sock * rskq_accept_head ; s#request_sock * rskq_accept_tail ; t#rwlock_t syn_wait_lock ; t#u8 rskq_defer_accept ; s#listen_sock * listen_opt ; } 
s#inet_bind_bucket struct inet_bind_bucket { s#net * ib_net ; unsigned short port ; signed short fastreuse ; int num_owners ; s#hlist_node node ; s#hlist_head owners ; } 
e#tcp_ca_event enum tcp_ca_event { CA_EVENT_TX_START , CA_EVENT_CWND_RESTART , CA_EVENT_COMPLETE_CWR , CA_EVENT_FRTO , CA_EVENT_LOSS , CA_EVENT_FAST_ACK , CA_EVENT_SLOW_ACK , } 
s#tcp_congestion_ops struct tcp_congestion_ops { s#list_head list ; unsigned long flags ; void ( * init ) ( s#sock * ) ; void ( * release ) ( s#sock * ) ; t#u32 ( * ssthresh ) ( s#sock * ) ; t#u32 ( * min_cwnd ) ( const s#sock * ) ; void ( * cong_avoid ) ( s#sock * , t#u32 , t#u32 ) ; void ( * set_state ) ( s#sock * , t#u8 ) ; void ( * cwnd_event ) ( s#sock * , e#tcp_ca_event ) ; t#u32 ( * undo_cwnd ) ( s#sock * ) ; void ( * pkts_acked ) ( s#sock * , t#u32 , t#s32 ) ; void ( * get_info ) ( s#sock * , t#u32 , s#sk_buff * ) ; char name [ 16 ] ; s#module * owner ; } 
s#inet_connection_sock_af_ops struct inet_connection_sock_af_ops { int ( * queue_xmit ) ( s#sk_buff * , int ) ; void ( * send_check ) ( s#sock * , int , s#sk_buff * ) ; int ( * rebuild_header ) ( s#sock * ) ; int ( * conn_request ) ( s#sock * , s#sk_buff * ) ; s#sock * ( * syn_recv_sock ) ( s#sock * , s#sk_buff * , s#request_sock * , s#dst_entry * ) ; int ( * remember_stamp ) ( s#sock * ) ; t#u16 net_header_len ; t#u16 sockaddr_len ; int ( * setsockopt ) ( s#sock * , int , int , char * , unsigned int ) ; int ( * getsockopt ) ( s#sock * , int , int , char * , int * ) ; int ( * compat_setsockopt ) ( s#sock * , int , int , char * , unsigned int ) ; int ( * compat_getsockopt ) ( s#sock * , int , int , char * , int * ) ; void ( * addr2sockaddr ) ( s#sock * , s#sockaddr * ) ; int ( * bind_conflict ) ( const s#sock * , const s#inet_bind_bucket * ) ; } 
s#inet_connection_sock struct inet_connection_sock { s#inet_sock icsk_inet ; s#request_sock_queue icsk_accept_queue ; s#inet_bind_bucket * icsk_bind_hash ; unsigned long icsk_timeout ; s#timer_list icsk_retransmit_timer ; s#timer_list icsk_delack_timer ; t#__u32 icsk_rto ; t#__u32 icsk_pmtu_cookie ; const s#tcp_congestion_ops * icsk_ca_ops ; const s#inet_connection_sock_af_ops * icsk_af_ops ; unsigned int ( * icsk_sync_mss ) ( s#sock * , t#u32 ) ; t#__u8 icsk_ca_state ; t#__u8 icsk_retransmits ; t#__u8 icsk_pending ; t#__u8 icsk_backoff ; t#__u8 icsk_syn_retries ; t#__u8 icsk_probes_out ; t#__u16 icsk_ext_hdr_len ; struct { t#__u8 pending ; t#__u8 quick ; t#__u8 pingpong ; t#__u8 blocked ; t#__u32 ato ; unsigned long timeout ; t#__u32 lrcvtime ; t#__u16 last_seg_size ; t#__u16 rcv_mss ; } icsk_ack ; struct { int enabled ; int search_high ; int search_low ; int probe_size ; } icsk_mtup ; t#u32 icsk_ca_priv [ 16 ] ; } 
s#dccp_service_list struct dccp_service_list { t#__u32 dccpsl_nr ; t#__be32 dccpsl_list [ 0 ] ; } 
s#dccp_ackvec struct dccp_ackvec { t#u64 av_buf_ackno ; s#list_head av_records ; t#ktime_t av_time ; t#u16 av_buf_head ; t#u16 av_vec_len ; t#u8 av_buf_nonce ; t#u8 av_ack_nonce ; t#u8 av_buf [ ( 253 * 2 ) ] ; } 
s#tcp_info struct tcp_info { t#__u8 tcpi_state ; t#__u8 tcpi_ca_state ; t#__u8 tcpi_retransmits ; t#__u8 tcpi_probes ; t#__u8 tcpi_backoff ; t#__u8 tcpi_options ; t#__u8 tcpi_snd_wscale : 4 , tcpi_rcv_wscale : 4 ; t#__u32 tcpi_rto ; t#__u32 tcpi_ato ; t#__u32 tcpi_snd_mss ; t#__u32 tcpi_rcv_mss ; t#__u32 tcpi_unacked ; t#__u32 tcpi_sacked ; t#__u32 tcpi_lost ; t#__u32 tcpi_retrans ; t#__u32 tcpi_fackets ; t#__u32 tcpi_last_data_sent ; t#__u32 tcpi_last_ack_sent ; t#__u32 tcpi_last_data_recv ; t#__u32 tcpi_last_ack_recv ; t#__u32 tcpi_pmtu ; t#__u32 tcpi_rcv_ssthresh ; t#__u32 tcpi_rtt ; t#__u32 tcpi_rttvar ; t#__u32 tcpi_snd_ssthresh ; t#__u32 tcpi_snd_cwnd ; t#__u32 tcpi_advmss ; t#__u32 tcpi_reordering ; t#__u32 tcpi_rcv_rtt ; t#__u32 tcpi_rcv_space ; t#__u32 tcpi_total_retrans ; } 
s#ccid_operations struct ccid_operations { unsigned char ccid_id ; t#__u32 ccid_ccmps ; const char * ccid_name ; s#kmem_cache * ccid_hc_rx_slab , * ccid_hc_tx_slab ; t#__u32 ccid_hc_rx_obj_size , ccid_hc_tx_obj_size ; int ( * ccid_hc_rx_init ) ( s#ccid * , s#sock * ) ; int ( * ccid_hc_tx_init ) ( s#ccid * , s#sock * ) ; void ( * ccid_hc_rx_exit ) ( s#sock * ) ; void ( * ccid_hc_tx_exit ) ( s#sock * ) ; void ( * ccid_hc_rx_packet_recv ) ( s#sock * , s#sk_buff * ) ; int ( * ccid_hc_rx_parse_options ) ( s#sock * , unsigned char , unsigned char , t#u16 , unsigned char * ) ; int ( * ccid_hc_rx_insert_options ) ( s#sock * , s#sk_buff * ) ; void ( * ccid_hc_tx_packet_recv ) ( s#sock * , s#sk_buff * ) ; int ( * ccid_hc_tx_parse_options ) ( s#sock * , unsigned char , unsigned char , t#u16 , unsigned char * ) ; int ( * ccid_hc_tx_send_packet ) ( s#sock * , s#sk_buff * ) ; void ( * ccid_hc_tx_packet_sent ) ( s#sock * , int , unsigned int ) ; void ( * ccid_hc_rx_get_info ) ( s#sock * , s#tcp_info * ) ; void ( * ccid_hc_tx_get_info ) ( s#sock * , s#tcp_info * ) ; int ( * ccid_hc_rx_getsockopt ) ( s#sock * , const int , int , t#u32 * , int * ) ; int ( * ccid_hc_tx_getsockopt ) ( s#sock * , const int , int , t#u32 * , int * ) ; } 
s#ccid struct ccid { s#ccid_operations * ccid_ops ; char ccid_priv [ 0 ] ; } 
s#dccp_options_received struct dccp_options_received { t#u64 dccpor_ndp : 48 ; t#u32 dccpor_timestamp ; t#u32 dccpor_timestamp_echo ; t#u32 dccpor_elapsed_time ; } 
e#dccp_role enum dccp_role { DCCP_ROLE_UNDEFINED , DCCP_ROLE_LISTEN , DCCP_ROLE_CLIENT , DCCP_ROLE_SERVER , } 
s#dccp_sock struct dccp_sock { s#inet_connection_sock dccps_inet_connection ; t#__u64 dccps_swl ; t#__u64 dccps_swh ; t#__u64 dccps_awl ; t#__u64 dccps_awh ; t#__u64 dccps_iss ; t#__u64 dccps_isr ; t#__u64 dccps_osr ; t#__u64 dccps_gss ; t#__u64 dccps_gsr ; t#__u64 dccps_gar ; t#__be32 dccps_service ; t#__u32 dccps_mss_cache ; s#dccp_service_list * dccps_service_list ; t#__u32 dccps_timestamp_echo ; t#__u32 dccps_timestamp_time ; t#__u16 dccps_l_ack_ratio ; t#__u16 dccps_r_ack_ratio ; t#__u64 dccps_l_seq_win : 48 ; t#__u64 dccps_r_seq_win : 48 ; t#__u8 dccps_pcslen : 4 ; t#__u8 dccps_pcrlen : 4 ; t#__u8 dccps_send_ndp_count : 1 ; t#__u64 dccps_ndp_count : 48 ; unsigned long dccps_rate_last ; s#list_head dccps_featneg ; s#dccp_ackvec * dccps_hc_rx_ackvec ; s#ccid * dccps_hc_rx_ccid ; s#ccid * dccps_hc_tx_ccid ; s#dccp_options_received dccps_options_received ; e#dccp_role dccps_role : 2 ; t#__u8 dccps_hc_rx_insert_options : 1 ; t#__u8 dccps_hc_tx_insert_options : 1 ; t#__u8 dccps_server_timewait : 1 ; s#timer_list dccps_xmit_timer ; } 
dccp_reqsk_init extern int dccp_reqsk_init ( s#request_sock * , s#dccp_sock const * , s#sk_buff const * ) 

/* net/dccp/options.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##in_device
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s#inet_request_sock struct inet_request_sock { s#request_sock req ; t#u16 inet6_rsk_offset ; t#__be16 loc_port ; t#__be32 loc_addr ; t#__be32 rmt_addr ; t#__be16 rmt_port ; int flags_begin [ 0 ] ; ; t#u16 snd_wscale : 4 , rcv_wscale : 4 , tstamp_ok : 1 , sack_ok : 1 , wscale_ok : 1 , ecn_ok : 1 , acked : 1 , no_srccheck : 1 ; int flags_end [ 0 ] ; ; s#ip_options * opt ; } 
s#dccp_request_sock struct dccp_request_sock { s#inet_request_sock dreq_inet_rsk ; t#__u64 dreq_iss ; t#__u64 dreq_isr ; t#__be32 dreq_service ; s#list_head dreq_featneg ; t#__u32 dreq_timestamp_echo ; t#__u32 dreq_timestamp_time ; } 
dccp_parse_options extern int dccp_parse_options ( s#sock * , s#dccp_request_sock * , s#sk_buff * ) 
dccp_insert_option extern int dccp_insert_option ( s#sock * , s#sk_buff * , unsigned char , const void * , unsigned char ) 
dccp_insert_option_elapsed_time extern int dccp_insert_option_elapsed_time ( s#sock * , s#sk_buff * , t#u32 ) 
dccp_insert_option_timestamp extern int dccp_insert_option_timestamp ( s#sock * , s#sk_buff * ) 

/* net/dccp/output.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##in_device
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
dccp_sync_mss extern unsigned int dccp_sync_mss ( s#sock * , t#u32 ) 
dccp_make_response extern s#sk_buff * dccp_make_response ( s#sock * , s#dst_entry * , s#request_sock * ) 
dccp_ctl_make_reset extern s#sk_buff * dccp_ctl_make_reset ( s#sock * , s#sk_buff * ) 
dccp_connect extern int dccp_connect ( s#sock * ) 
dccp_send_ack extern void dccp_send_ack ( s#sock * ) 
e#dccp_pkt_type enum dccp_pkt_type { DCCP_PKT_REQUEST = 0 , DCCP_PKT_RESPONSE , DCCP_PKT_DATA , DCCP_PKT_ACK , DCCP_PKT_DATAACK , DCCP_PKT_CLOSEREQ , DCCP_PKT_CLOSE , DCCP_PKT_RESET , DCCP_PKT_SYNC , DCCP_PKT_SYNCACK , DCCP_PKT_INVALID , } 
dccp_send_sync extern void dccp_send_sync ( s#sock * , const t#u64 , const e#dccp_pkt_type ) 

/* net/dccp/proto.o */
s#dccp_mib struct dccp_mib { unsigned long mibs [ __DCCP_MIB_MAX ] ; } 
dccp_statistics extern __typeof__ ( s#dccp_mib ) * dccp_statistics [ 2 ] 
dccp_orphan_count extern s#percpu_counter dccp_orphan_count 
s##array_cache
s##kmem_list3
dccp_hashinfo extern s#inet_hashinfo dccp_hashinfo 
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##in_device
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##udp_table
s##raw_hashinfo
dccp_set_state extern void dccp_set_state ( s#sock * , const int ) 
dccp_done extern void dccp_done ( s#sock * ) 
dccp_packet_name extern const char * dccp_packet_name ( const int ) 
dccp_state_name extern const char * dccp_state_name ( const int ) 
dccp_init_sock extern int dccp_init_sock ( s#sock * , const t#__u8 ) 
dccp_destroy_sock extern void dccp_destroy_sock ( s#sock * ) 
dccp_disconnect extern int dccp_disconnect ( s#sock * , int ) 
dccp_poll extern unsigned int dccp_poll ( s#file * , s#socket * , t#poll_table * ) 
dccp_ioctl extern int dccp_ioctl ( s#sock * , int , unsigned long ) 
dccp_setsockopt extern int dccp_setsockopt ( s#sock * , int , int , char * , unsigned int ) 
compat_dccp_setsockopt extern int compat_dccp_setsockopt ( s#sock * , int , int , char * , unsigned int ) 
dccp_getsockopt extern int dccp_getsockopt ( s#sock * , int , int , char * , int * ) 
compat_dccp_getsockopt extern int compat_dccp_getsockopt ( s#sock * , int , int , char * , int * ) 
dccp_sendmsg extern int dccp_sendmsg ( s#kiocb * , s#sock * , s#msghdr * , t#size_t ) 
dccp_recvmsg extern int dccp_recvmsg ( s#kiocb * , s#sock * , s#msghdr * , t#size_t , int , int , int * ) 
inet_dccp_listen extern int inet_dccp_listen ( s#socket * , int ) 
dccp_close extern void dccp_close ( s#sock * , long ) 
dccp_shutdown extern void dccp_shutdown ( s#sock * , int ) 

/* net/dccp/timer.o */
dccp_timestamp extern t#u32 dccp_timestamp ( void ) 

/* net/ethernet/eth.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##xfrm_policy
s##sec_path
eth_header extern int eth_header ( s#sk_buff * , s#net_device * , unsigned short , const void * , const void * , unsigned ) 
eth_rebuild_header extern int eth_rebuild_header ( s#sk_buff * ) 
eth_type_trans extern t#__be16 eth_type_trans ( s#sk_buff * , s#net_device * ) 
eth_header_parse int eth_header_parse ( const s#sk_buff * , unsigned char * ) 
eth_header_cache extern int eth_header_cache ( const s#neighbour * , s#hh_cache * ) 
eth_header_cache_update extern void eth_header_cache_update ( s#hh_cache * , const s#net_device * , const unsigned char * ) 
eth_mac_addr extern int eth_mac_addr ( s#net_device * , void * ) 
eth_change_mtu extern int eth_change_mtu ( s#net_device * , int ) 
eth_validate_addr extern int eth_validate_addr ( s#net_device * ) 
ether_setup extern void ether_setup ( s#net_device * ) 
alloc_etherdev_mq extern s#net_device * alloc_etherdev_mq ( int , unsigned int ) 
sysfs_format_mac extern t#ssize_t sysfs_format_mac ( char * , const unsigned char * , int ) 
print_mac extern char * print_mac ( char * , const unsigned char * ) 

/* net/ieee802154/netlink.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##xfrm_policy
s##sec_path
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s#ieee802154_addr struct ieee802154_addr { int addr_type ; t#u16 pan_id ; union { t#u8 hwaddr [ 8 ] ; t#u16 short_addr ; } ; } 
ieee802154_nl_assoc_indic int ieee802154_nl_assoc_indic ( s#net_device * , s#ieee802154_addr * , t#u8 ) 
ieee802154_nl_assoc_confirm int ieee802154_nl_assoc_confirm ( s#net_device * , t#u16 , t#u8 ) 
ieee802154_nl_disassoc_indic int ieee802154_nl_disassoc_indic ( s#net_device * , s#ieee802154_addr * , t#u8 ) 
ieee802154_nl_disassoc_confirm int ieee802154_nl_disassoc_confirm ( s#net_device * , t#u8 ) 
ieee802154_nl_beacon_indic int ieee802154_nl_beacon_indic ( s#net_device * , t#u16 , t#u16 ) 
ieee802154_nl_scan_confirm int ieee802154_nl_scan_confirm ( s#net_device * , t#u8 , t#u8 , t#u32 , t#u8 , t#u8 * ) 
ieee802154_nl_start_confirm int ieee802154_nl_start_confirm ( s#net_device * , t#u8 ) 

/* net/ieee802154/wpan-class.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s#wpan_phy struct wpan_phy { s#mutex pib_lock ; t#u8 current_channel ; t#u8 current_page ; t#u32 channels_supported ; t#u8 transmit_power ; t#u8 cca_mode ; s#device dev ; int idx ; char priv [ 0 ] __attribute__ ( ( __aligned__ ( 32 ) ) ) ; } 
wpan_phy_find s#wpan_phy * wpan_phy_find ( const char * ) 
wpan_phy_alloc s#wpan_phy * wpan_phy_alloc ( t#size_t ) 
wpan_phy_register int wpan_phy_register ( s#device * , s#wpan_phy * ) 
wpan_phy_unregister void wpan_phy_unregister ( s#wpan_phy * ) 
wpan_phy_free void wpan_phy_free ( s#wpan_phy * ) 

/* net/ipv4/af_inet.o */
s#ipv4_config struct ipv4_config { int log_martians ; int no_pmtu_disc ; } 
ipv4_config extern s#ipv4_config ipv4_config 
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##prot_inuse
s##xt_table
t#vifi_t typedef unsigned short vifi_t 
s#mfc_cache struct mfc_cache { s#mfc_cache * next ; s#net * mfc_net ; t#__be32 mfc_mcastgrp ; t#__be32 mfc_origin ; t#vifi_t mfc_parent ; int mfc_flags ; union { struct { unsigned long expires ; s#sk_buff_head unresolved ; } unres ; struct { unsigned long last_assert ; int minvif ; int maxvif ; unsigned long bytes ; unsigned long pkt ; unsigned long wrong_if ; unsigned char ttls [ 32 ] ; } res ; } mfc_un ; } 
s#vif_device struct vif_device { s#net_device * dev ; unsigned long bytes_in , bytes_out ; unsigned long pkt_in , pkt_out ; unsigned long rate_limit ; unsigned char threshold ; unsigned short flags ; t#__be32 local , remote ; int link ; } 
s#in_ifaddr struct in_ifaddr { s#in_ifaddr * ifa_next ; s#in_device * ifa_dev ; s#rcu_head rcu_head ; t#__be32 ifa_local ; t#__be32 ifa_address ; t#__be32 ifa_mask ; t#__be32 ifa_broadcast ; unsigned char ifa_scope ; unsigned char ifa_flags ; unsigned char ifa_prefixlen ; char ifa_label [ 16 ] ; } 
s#ip_sf_list struct ip_sf_list { s#ip_sf_list * sf_next ; t#__be32 sf_inaddr ; unsigned long sf_count [ 2 ] ; unsigned char sf_gsresp ; unsigned char sf_oldin ; unsigned char sf_crcount ; } 
s#ip_mc_list struct ip_mc_list { s#in_device * interface ; t#__be32 multiaddr ; s#ip_sf_list * sources ; s#ip_sf_list * tomb ; unsigned int sfmode ; unsigned long sfcount [ 2 ] ; s#ip_mc_list * next ; s#timer_list timer ; int users ; t#atomic_t refcnt ; t#spinlock_t lock ; char tm_running ; char reporter ; char unsolicit_count ; char loaded ; unsigned char gsquery ; unsigned char crcount ; } 
s#in_device struct in_device { s#net_device * dev ; t#atomic_t refcnt ; int dead ; s#in_ifaddr * ifa_list ; t#rwlock_t mc_list_lock ; s#ip_mc_list * mc_list ; int mc_count ; t#spinlock_t mc_tomb_lock ; s#ip_mc_list * mc_tomb ; unsigned long mr_v1_seen ; unsigned long mr_v2_seen ; unsigned long mr_maxdelay ; unsigned char mr_qrv ; unsigned char mr_gq_running ; unsigned char mr_ifc_count ; s#timer_list mr_gq_timer ; s#timer_list mr_ifc_timer ; s#neigh_parms * arp_parms ; s#ipv4_devconf cnf ; s#rcu_head rcu_head ; } 
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s#raw_hashinfo struct raw_hashinfo { t#rwlock_t lock ; s#hlist_head ht [ 256 ] ; } 
inet_sock_destruct extern void inet_sock_destruct ( s#sock * ) 
inet_listen extern int inet_listen ( s#socket * , int ) 
inet_ehash_secret extern t#u32 inet_ehash_secret 
build_ehash_secret extern void build_ehash_secret ( void ) 
inet_release extern int inet_release ( s#socket * ) 
sysctl_ip_nonlocal_bind extern int sysctl_ip_nonlocal_bind 
inet_bind extern int inet_bind ( s#socket * , s#sockaddr * , int ) 
inet_dgram_connect extern int inet_dgram_connect ( s#socket * , s#sockaddr * , int , int ) 
inet_stream_connect extern int inet_stream_connect ( s#socket * , s#sockaddr * , int , int ) 
inet_accept extern int inet_accept ( s#socket * , s#socket * , int ) 
inet_getname extern int inet_getname ( s#socket * , s#sockaddr * , int * , int ) 
inet_sendmsg extern int inet_sendmsg ( s#kiocb * , s#socket * , s#msghdr * , t#size_t ) 
inet_shutdown extern int inet_shutdown ( s#socket * , int ) 
inet_ioctl extern int inet_ioctl ( s#socket * , unsigned int , unsigned long ) 
inet_stream_ops extern const s#proto_ops inet_stream_ops 
inet_dgram_ops extern const s#proto_ops inet_dgram_ops 
s#inet_protosw struct inet_protosw { s#list_head list ; unsigned short type ; unsigned short protocol ; s#proto * prot ; const s#proto_ops * ops ; int capability ; char no_check ; unsigned char flags ; } 
inet_register_protosw extern void inet_register_protosw ( s#inet_protosw * ) 
inet_unregister_protosw extern void inet_unregister_protosw ( s#inet_protosw * ) 
inet_sk_rebuild_header extern int inet_sk_rebuild_header ( s#sock * ) 
inet_ctl_sock_create extern int inet_ctl_sock_create ( s#sock * * , unsigned short , unsigned short , unsigned char , s#net * ) 
snmp_fold_field extern unsigned long snmp_fold_field ( void * [ ] , int ) 
snmp_mib_init extern int snmp_mib_init ( void * [ 2 ] , t#size_t ) 
snmp_mib_free extern void snmp_mib_free ( void * [ 2 ] ) 

/* net/ipv4/arp.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##udp_table
s##raw_hashinfo
s##prot_inuse
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##ip_mc_list
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##xfrm_policy
s##sec_path
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
arp_broken_ops extern const s#neigh_ops arp_broken_ops 
arp_find extern int arp_find ( unsigned char * , s#sk_buff * ) 
arp_create extern s#sk_buff * arp_create ( int , int , t#__be32 , s#net_device * , t#__be32 , const unsigned char * , const unsigned char * , const unsigned char * ) 
arp_xmit extern void arp_xmit ( s#sk_buff * ) 
arp_send extern void arp_send ( int , int , t#__be32 , s#net_device * , t#__be32 , const unsigned char * , const unsigned char * , const unsigned char * ) 
arp_tbl extern s#neigh_table arp_tbl 

/* net/ipv4/datagram.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##in_device
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
ip4_datagram_connect extern int ip4_datagram_connect ( s#sock * , s#sockaddr * , int ) 

/* net/ipv4/devinet.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##prot_inuse
s##xt_table
s##mfc_cache
s##vif_device
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##xfrm_policy
s##sec_path
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
in_dev_finish_destroy extern void in_dev_finish_destroy ( s#in_device * ) 
inet_select_addr extern t#__be32 inet_select_addr ( const s#net_device * , t#__be32 , int ) 
inetdev_by_index extern s#in_device * inetdev_by_index ( s#net * , int ) 
register_inetaddr_notifier extern int register_inetaddr_notifier ( s#notifier_block * ) 
unregister_inetaddr_notifier extern int unregister_inetaddr_notifier ( s#notifier_block * ) 

/* net/ipv4/fib_frontend.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##cdev
s##posix_acl
s##udp_table
s##raw_hashinfo
s##xfrm_state
s##ip_mc_list
s##rt6_info
s##dn_route
s##xfrm_policy
s##sec_path
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##xt_table
s##mfc_cache
s##vif_device
s##rt6_statistics
s##fib6_table
s##ip_conntrack_stat
s##net_generic
inet_addr_type extern unsigned inet_addr_type ( s#net * , t#__be32 ) 
inet_dev_addr_type extern unsigned inet_dev_addr_type ( s#net * , const s#net_device * , t#__be32 ) 
ip_dev_find extern s#net_device * ip_dev_find ( s#net * , t#__be32 ) 

/* net/ipv4/icmp.o */
s#icmp_err struct icmp_err { int errno ; unsigned fatal : 1 ; } 
icmp_err_convert extern s#icmp_err icmp_err_convert [ ] 
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ip_mc_list
s##dn_route
s##ip_conntrack_stat
s##net_generic
icmp_send extern void icmp_send ( s#sk_buff * , int , int , t#__be32 ) 
xrlim_allow extern int xrlim_allow ( s#dst_entry * , int ) 

/* net/ipv4/igmp.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##prot_inuse
s##fib_rules_ops
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##xfrm_policy
s##sec_path
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
ip_mc_dec_group extern void ip_mc_dec_group ( s#in_device * , t#__be32 ) 
ip_mc_inc_group extern void ip_mc_inc_group ( s#in_device * , t#__be32 ) 
s#ip_mreqn struct ip_mreqn { s#in_addr imr_multiaddr ; s#in_addr imr_address ; int imr_ifindex ; } 
ip_mc_join_group extern int ip_mc_join_group ( s#sock * , s#ip_mreqn * ) 
ip_mc_rejoin_group extern void ip_mc_rejoin_group ( s#ip_mc_list * ) 

/* net/ipv4/inet_connection_sock.o */
inet_csk_timer_bug_msg extern const char inet_csk_timer_bug_msg [ ] 
inet_get_local_port_range extern void inet_get_local_port_range ( int * , int * ) 
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##in_device
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##udp_table
s##raw_hashinfo
inet_csk_bind_conflict extern int inet_csk_bind_conflict ( const s#sock * , const s#inet_bind_bucket * ) 
inet_csk_get_port extern int inet_csk_get_port ( s#sock * , unsigned short ) 
inet_csk_accept extern s#sock * inet_csk_accept ( s#sock * , int , int * ) 
inet_csk_init_xmit_timers extern void inet_csk_init_xmit_timers ( s#sock * , void ( * ) ( unsigned long ) , void ( * ) ( unsigned long ) , void ( * ) ( unsigned long ) ) 
inet_csk_clear_xmit_timers extern void inet_csk_clear_xmit_timers ( s#sock * ) 
inet_csk_delete_keepalive_timer extern void inet_csk_delete_keepalive_timer ( s#sock * ) 
inet_csk_reset_keepalive_timer extern void inet_csk_reset_keepalive_timer ( s#sock * , unsigned long ) 
inet_csk_route_req extern s#dst_entry * inet_csk_route_req ( s#sock * , const s#request_sock * ) 
inet_csk_search_req extern s#request_sock * inet_csk_search_req ( const s#sock * , s#request_sock * * * , const t#__be16 , const t#__be32 , const t#__be32 ) 
inet_csk_reqsk_queue_hash_add extern void inet_csk_reqsk_queue_hash_add ( s#sock * , s#request_sock * , unsigned long ) 
inet_csk_reqsk_queue_prune extern void inet_csk_reqsk_queue_prune ( s#sock * , const unsigned long , const unsigned long , const unsigned long ) 
inet_csk_clone extern s#sock * inet_csk_clone ( s#sock * , const s#request_sock * , const t#gfp_t ) 
inet_csk_destroy_sock extern void inet_csk_destroy_sock ( s#sock * ) 
inet_csk_listen_start extern int inet_csk_listen_start ( s#sock * , const int ) 
inet_csk_listen_stop extern void inet_csk_listen_stop ( s#sock * ) 
inet_csk_addr2sockaddr extern void inet_csk_addr2sockaddr ( s#sock * , s#sockaddr * ) 
inet_csk_compat_getsockopt extern int inet_csk_compat_getsockopt ( s#sock * , int , int , char * , int * ) 
inet_csk_compat_setsockopt extern int inet_csk_compat_setsockopt ( s#sock * , int , int , char * , unsigned int ) 

/* net/ipv4/inet_diag.o */
s##array_cache
s##kmem_list3
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##in_device
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s#inet_diag_sockid struct inet_diag_sockid { t#__be16 idiag_sport ; t#__be16 idiag_dport ; t#__be32 idiag_src [ 4 ] ; t#__be32 idiag_dst [ 4 ] ; t#__u32 idiag_if ; t#__u32 idiag_cookie [ 2 ] ; } 
s#inet_diag_msg struct inet_diag_msg { t#__u8 idiag_family ; t#__u8 idiag_state ; t#__u8 idiag_timer ; t#__u8 idiag_retrans ; s#inet_diag_sockid id ; t#__u32 idiag_expires ; t#__u32 idiag_rqueue ; t#__u32 idiag_wqueue ; t#__u32 idiag_uid ; t#__u32 idiag_inode ; } 
s#inet_diag_handler struct inet_diag_handler { s#inet_hashinfo * idiag_hashinfo ; void ( * idiag_get_info ) ( s#sock * , s#inet_diag_msg * , void * ) ; t#__u16 idiag_info_size ; t#__u16 idiag_type ; } 
inet_diag_register extern int inet_diag_register ( const s#inet_diag_handler * ) 
inet_diag_unregister extern void inet_diag_unregister ( const s#inet_diag_handler * ) 

/* net/ipv4/inet_fragment.o */
s##tvec_base
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##file
s##linux_binfmt
s##bts_context
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##sock
s##net_device
s##sec_path
s#inet_frag_queue struct inet_frag_queue { s#hlist_node list ; s#netns_frags * net ; s#list_head lru_list ; t#spinlock_t lock ; t#atomic_t refcnt ; s#timer_list timer ; s#sk_buff * fragments ; t#ktime_t stamp ; int len ; int meat ; t#__u8 last_in ; } 
s#inet_frags struct inet_frags { s#hlist_head hash [ 64 ] ; t#rwlock_t lock ; t#u32 rnd ; int qsize ; int secret_interval ; s#timer_list secret_timer ; unsigned int ( * hashfn ) ( s#inet_frag_queue * ) ; void ( * constructor ) ( s#inet_frag_queue * , void * ) ; void ( * destructor ) ( s#inet_frag_queue * ) ; void ( * skb_free ) ( s#sk_buff * ) ; int ( * match ) ( s#inet_frag_queue * , void * ) ; void ( * frag_expire ) ( unsigned long ) ; } 
inet_frags_init void inet_frags_init ( s#inet_frags * ) 
inet_frags_init_net void inet_frags_init_net ( s#netns_frags * ) 
inet_frags_fini void inet_frags_fini ( s#inet_frags * ) 
inet_frags_exit_net void inet_frags_exit_net ( s#netns_frags * , s#inet_frags * ) 
inet_frag_kill void inet_frag_kill ( s#inet_frag_queue * , s#inet_frags * ) 
inet_frag_destroy void inet_frag_destroy ( s#inet_frag_queue * , s#inet_frags * , int * ) 
inet_frag_evictor int inet_frag_evictor ( s#netns_frags * , s#inet_frags * ) 
inet_frag_find s#inet_frag_queue * inet_frag_find ( s#netns_frags * , s#inet_frags * , void * , unsigned int ) 

/* net/ipv4/inet_hashtables.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##in_device
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
inet_put_port extern void inet_put_port ( s#sock * ) 
__inet_inherit_port extern void __inet_inherit_port ( s#sock * , s#sock * ) 
__inet_lookup_listener extern s#sock * __inet_lookup_listener ( s#net * , s#inet_hashinfo * , const t#__be32 , const unsigned short , const int ) 
__inet_lookup_established extern s#sock * __inet_lookup_established ( s#net * , s#inet_hashinfo * , const t#__be32 , const t#__be16 , const t#__be32 , const t#u16 , const int ) 
__inet_hash_nolisten extern void __inet_hash_nolisten ( s#sock * ) 
inet_hash extern void inet_hash ( s#sock * ) 
inet_unhash extern void inet_unhash ( s#sock * ) 
inet_hash_connect extern int inet_hash_connect ( s#inet_timewait_death_row * , s#sock * ) 
inet_hashinfo_init void inet_hashinfo_init ( s#inet_hashinfo * ) 

/* net/ipv4/inet_lro.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##udp_table
s##raw_hashinfo
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##in_device
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##xfrm_policy
s##sec_path
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s#net_lro_stats struct net_lro_stats { unsigned long aggregated ; unsigned long flushed ; unsigned long no_desc ; } 
s#skb_frag_struct struct skb_frag_struct { s#page * page ; t#__u32 page_offset ; t#__u32 size ; } 
s#net_lro_desc struct net_lro_desc { s#sk_buff * parent ; s#sk_buff * last_skb ; s#skb_frag_struct * next_frag ; s#iphdr * iph ; s#tcphdr * tcph ; s#vlan_group * vgrp ; t#__wsum data_csum ; t#__be32 tcp_rcv_tsecr ; t#__be32 tcp_rcv_tsval ; t#__be32 tcp_ack ; t#u32 tcp_next_seq ; t#u32 skb_tot_frags_len ; t#u16 ip_tot_len ; t#u16 tcp_saw_tstamp ; t#__be16 tcp_window ; t#u16 vlan_tag ; int pkt_aggr_cnt ; int vlan_packet ; int mss ; int active ; } 
s#net_lro_mgr struct net_lro_mgr { s#net_device * dev ; s#net_lro_stats stats ; unsigned long features ; t#u32 ip_summed ; t#u32 ip_summed_aggr ; int max_desc ; int max_aggr ; int frag_align_pad ; s#net_lro_desc * lro_arr ; int ( * get_skb_header ) ( s#sk_buff * , void * * , void * * , t#u64 * , void * ) ; int ( * get_frag_header ) ( s#skb_frag_struct * , void * * , void * * , void * * , t#u64 * , void * ) ; } 
lro_receive_skb void lro_receive_skb ( s#net_lro_mgr * , s#sk_buff * , void * ) 
lro_vlan_hwaccel_receive_skb void lro_vlan_hwaccel_receive_skb ( s#net_lro_mgr * , s#sk_buff * , s#vlan_group * , t#u16 , void * ) 
lro_receive_frags void lro_receive_frags ( s#net_lro_mgr * , s#skb_frag_struct * , int , int , void * , t#__wsum ) 
lro_vlan_hwaccel_receive_frags void lro_vlan_hwaccel_receive_frags ( s#net_lro_mgr * , s#skb_frag_struct * , int , int , s#vlan_group * , t#u16 , void * , t#__wsum ) 
lro_flush_all void lro_flush_all ( s#net_lro_mgr * ) 
lro_flush_pkt void lro_flush_pkt ( s#net_lro_mgr * , s#iphdr * , s#tcphdr * ) 

/* net/ipv4/inet_timewait_sock.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##in_device
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##sec_path
s##xfrm_policy
s##udp_table
s##raw_hashinfo
s#inet_timewait_sock struct inet_timewait_sock { s#sock_common __tw_common ; int tw_timeout ; volatile unsigned char tw_substate ; unsigned char tw_rcv_wscale ; t#__be16 tw_sport ; t#__be32 tw_daddr __attribute__ ( ( aligned ( 8 ) ) ) ; t#__be32 tw_rcv_saddr ; t#__be16 tw_dport ; t#__u16 tw_num ; int flags_begin [ 0 ] ; ; unsigned int tw_ipv6only : 1 , tw_transparent : 1 , tw_pad : 14 , tw_ipv6_offset : 16 ; int flags_end [ 0 ] ; ; unsigned long tw_ttd ; s#inet_bind_bucket * tw_tb ; s#hlist_node tw_death_node ; } 
inet_twsk_put extern void inet_twsk_put ( s#inet_timewait_sock * ) 
__inet_twsk_hashdance extern void __inet_twsk_hashdance ( s#inet_timewait_sock * , s#sock * , s#inet_hashinfo * ) 
inet_twsk_alloc extern s#inet_timewait_sock * inet_twsk_alloc ( const s#sock * , const int ) 
inet_twdr_hangman extern void inet_twdr_hangman ( unsigned long ) 
inet_twdr_twkill_work extern void inet_twdr_twkill_work ( s#work_struct * ) 
inet_twsk_deschedule extern void inet_twsk_deschedule ( s#inet_timewait_sock * , s#inet_timewait_death_row * ) 
inet_twsk_schedule extern void inet_twsk_schedule ( s#inet_timewait_sock * , s#inet_timewait_death_row * , const int , const int ) 
inet_twdr_twcal_tick extern void inet_twdr_twcal_tick ( unsigned long ) 
inet_twsk_purge extern void inet_twsk_purge ( s#net * , s#inet_hashinfo * , s#inet_timewait_death_row * , int ) 

/* net/ipv4/ip_fragment.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##tvec_base
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sec_path
ip_defrag int ip_defrag ( s#sk_buff * , t#u32 ) 

/* net/ipv4/ip_output.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##in_device
s##dn_route
s##ip_conntrack_stat
s##net_generic
ip_local_out extern int ip_local_out ( s#sk_buff * ) 
ip_build_and_send_pkt extern int ip_build_and_send_pkt ( s#sk_buff * , s#sock * , t#__be32 , t#__be32 , s#ip_options * ) 
ip_fragment extern int ip_fragment ( s#sk_buff * , int ( * ) ( s#sk_buff * ) ) 
ip_generic_getfrag extern int ip_generic_getfrag ( void * , char * , int , int , int , s#sk_buff * ) 
ip_queue_xmit extern int ip_queue_xmit ( s#sk_buff * , int ) 
ip_send_check extern void ip_send_check ( s#iphdr * ) 

/* net/ipv4/ip_sockglue.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##fib_rules_ops
s##xt_table
s##dn_route
s##ip_conntrack_stat
s##net_generic
ip_cmsg_recv extern void ip_cmsg_recv ( s#msghdr * , s#sk_buff * ) 
ip_setsockopt extern int ip_setsockopt ( s#sock * , int , int , char * , unsigned int ) 
compat_ip_setsockopt extern int compat_ip_setsockopt ( s#sock * , int , int , char * , unsigned int ) 
ip_getsockopt extern int ip_getsockopt ( s#sock * , int , int , char * , int * ) 
compat_ip_getsockopt extern int compat_ip_getsockopt ( s#sock * , int , int , char * , int * ) 

/* net/ipv4/netfilter.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##in_device
s##dn_route
s##ip_conntrack_stat
s##net_generic
ip_route_me_harder extern int ip_route_me_harder ( s#sk_buff * , unsigned ) 
ip_xfrm_me_harder extern int ip_xfrm_me_harder ( s#sk_buff * ) 
ip_nat_decode_session extern void ( * ip_nat_decode_session ) ( s#sk_buff * , s#flowi * ) 
t#u_int8_t typedef t#__u8 u_int8_t 
nf_ip_checksum extern t#__sum16 nf_ip_checksum ( s#sk_buff * , unsigned int , unsigned int , t#u_int8_t ) 
nf_net_ipv4_netfilter_sysctl_path extern s#ctl_path nf_net_ipv4_netfilter_sysctl_path [ ] 

/* net/ipv4/netfilter/arp_tables.o */
s#xt_table_info struct xt_table_info { unsigned int size ; unsigned int number ; unsigned int initial_entries ; unsigned int hook_entry [ NF_INET_NUMHOOKS ] ; unsigned int underflow [ NF_INET_NUMHOOKS ] ; void * entries [ 1 ] ; } 
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##nameidata
s##vfsmount
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s#xt_table struct xt_table { s#list_head list ; unsigned int valid_hooks ; s#xt_table_info * private ; s#module * me ; t#u_int8_t af ; const char name [ 32 ] ; } 
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_state
s##rtable
s##rt6_info
s##dn_route
s##xfrm_policy
s##sec_path
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_statistics
s##fib6_table
s##ip_conntrack_stat
s##net_generic
s#xt_counters struct xt_counters { t#__u64 pcnt , bcnt ; } 
s#arpt_devaddr_info struct arpt_devaddr_info { char addr [ 16 ] ; char mask [ 16 ] ; } 
t#u_int16_t typedef t#__u16 u_int16_t 
s#arpt_arp struct arpt_arp { s#in_addr src , tgt ; s#in_addr smsk , tmsk ; t#u_int8_t arhln , arhln_mask ; s#arpt_devaddr_info src_devaddr ; s#arpt_devaddr_info tgt_devaddr ; t#__be16 arpop , arpop_mask ; t#__be16 arhrd , arhrd_mask ; t#__be16 arpro , arpro_mask ; char iniface [ 16 ] , outiface [ 16 ] ; unsigned char iniface_mask [ 16 ] , outiface_mask [ 16 ] ; t#u_int8_t flags ; t#u_int16_t invflags ; } 
s#arpt_entry struct arpt_entry { s#arpt_arp arp ; t#u_int16_t target_offset ; t#u_int16_t next_offset ; unsigned int comefrom ; s#xt_counters counters ; unsigned char elems [ 0 ] ; } 
s#arpt_replace struct arpt_replace { char name [ 32 ] ; unsigned int valid_hooks ; unsigned int num_entries ; unsigned int size ; unsigned int hook_entry [ 3 ] ; unsigned int underflow [ 3 ] ; unsigned int num_counters ; s#xt_counters * counters ; s#arpt_entry entries [ 0 ] ; } 
arpt_register_table extern s#xt_table * arpt_register_table ( s#net * , const s#xt_table * , const s#arpt_replace * ) 
arpt_unregister_table extern void arpt_unregister_table ( s#xt_table * ) 
arpt_do_table extern unsigned int arpt_do_table ( s#sk_buff * , unsigned int , const s#net_device * , const s#net_device * , s#xt_table * ) 

/* net/ipv4/netfilter/ip_tables.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##nameidata
s##vfsmount
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_state
s##rtable
s##rt6_info
s##dn_route
s##xfrm_policy
s##sec_path
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##mfc_cache
s##vif_device
s##rt6_statistics
s##fib6_table
s##ip_conntrack_stat
s##net_generic
s#ipt_ip struct ipt_ip { s#in_addr src , dst ; s#in_addr smsk , dmsk ; char iniface [ 16 ] , outiface [ 16 ] ; unsigned char iniface_mask [ 16 ] , outiface_mask [ 16 ] ; t#u_int16_t proto ; t#u_int8_t flags ; t#u_int8_t invflags ; } 
s#ipt_entry struct ipt_entry { s#ipt_ip ip ; unsigned int nfcache ; t#u_int16_t target_offset ; t#u_int16_t next_offset ; unsigned int comefrom ; s#xt_counters counters ; unsigned char elems [ 0 ] ; } 
s#ipt_replace struct ipt_replace { char name [ 32 ] ; unsigned int valid_hooks ; unsigned int num_entries ; unsigned int size ; unsigned int hook_entry [ NF_INET_NUMHOOKS ] ; unsigned int underflow [ NF_INET_NUMHOOKS ] ; unsigned int num_counters ; s#xt_counters * counters ; s#ipt_entry entries [ 0 ] ; } 
ipt_register_table extern s#xt_table * ipt_register_table ( s#net * , const s#xt_table * , const s#ipt_replace * ) 
ipt_unregister_table extern void ipt_unregister_table ( s#xt_table * ) 
ipt_do_table extern unsigned int ipt_do_table ( s#sk_buff * , unsigned int , const s#net_device * , const s#net_device * , s#xt_table * ) 

/* net/ipv4/netfilter/nf_conntrack_l3proto_ipv4.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##mfc_cache
s##vif_device
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##in_device
s##dn_route
s#ip_conntrack_stat struct ip_conntrack_stat { unsigned int searched ; unsigned int found ; unsigned int new ; unsigned int invalid ; unsigned int ignore ; unsigned int delete ; unsigned int delete_list ; unsigned int insert ; unsigned int insert_failed ; unsigned int drop ; unsigned int early_drop ; unsigned int error ; unsigned int expect_new ; unsigned int expect_create ; unsigned int expect_delete ; } 
s##net_generic
s##xfrm_policy
s##sec_path
u#nf_inet_addr union nf_inet_addr { t#__u32 all [ 4 ] ; t#__be32 ip ; t#__be32 ip6 [ 4 ] ; s#in_addr in ; s#in6_addr in6 ; } 
u#nf_conntrack_man_proto union nf_conntrack_man_proto { t#__be16 all ; struct { t#__be16 port ; } tcp ; struct { t#__be16 port ; } udp ; struct { t#__be16 id ; } icmp ; struct { t#__be16 port ; } dccp ; struct { t#__be16 port ; } sctp ; struct { t#__be16 key ; } gre ; } 
s#nf_conntrack_man struct nf_conntrack_man { u#nf_inet_addr u3 ; u#nf_conntrack_man_proto u ; t#u_int16_t l3num ; } 
s#nf_conntrack_tuple struct nf_conntrack_tuple { s#nf_conntrack_man src ; struct { u#nf_inet_addr u3 ; union { t#__be16 all ; struct { t#__be16 port ; } tcp ; struct { t#__be16 port ; } udp ; struct { t#u_int8_t type , code ; } icmp ; struct { t#__be16 port ; } dccp ; struct { t#__be16 port ; } sctp ; struct { t#__be16 key ; } gre ; } u ; t#u_int8_t protonum ; t#u_int8_t dir ; } dst ; } 
s#nf_conntrack_tuple_hash struct nf_conntrack_tuple_hash { s#hlist_nulls_node hnnode ; s#nf_conntrack_tuple tuple ; } 
t#u_int32_t typedef t#__u32 u_int32_t 
t#u_int64_t typedef t#__u64 u_int64_t 
s#nf_ct_dccp struct nf_ct_dccp { t#u_int8_t role [ IP_CT_DIR_MAX ] ; t#u_int8_t state ; t#u_int8_t last_pkt ; t#u_int8_t last_dir ; t#u_int64_t handshake_seq ; } 
e#sctp_conntrack enum sctp_conntrack { SCTP_CONNTRACK_NONE , SCTP_CONNTRACK_CLOSED , SCTP_CONNTRACK_COOKIE_WAIT , SCTP_CONNTRACK_COOKIE_ECHOED , SCTP_CONNTRACK_ESTABLISHED , SCTP_CONNTRACK_SHUTDOWN_SENT , SCTP_CONNTRACK_SHUTDOWN_RECD , SCTP_CONNTRACK_SHUTDOWN_ACK_SENT , SCTP_CONNTRACK_MAX } 
s#ip_ct_sctp struct ip_ct_sctp { e#sctp_conntrack state ; t#__be32 vtag [ IP_CT_DIR_MAX ] ; } 
s#ip_ct_tcp_state struct ip_ct_tcp_state { t#u_int32_t td_end ; t#u_int32_t td_maxend ; t#u_int32_t td_maxwin ; t#u_int32_t td_maxack ; t#u_int8_t td_scale ; t#u_int8_t flags ; } 
s#ip_ct_tcp struct ip_ct_tcp { s#ip_ct_tcp_state seen [ 2 ] ; t#u_int8_t state ; t#u_int8_t last_dir ; t#u_int8_t retrans ; t#u_int8_t last_index ; t#u_int32_t last_seq ; t#u_int32_t last_ack ; t#u_int32_t last_end ; t#u_int16_t last_win ; } 
s#nf_ct_gre struct nf_ct_gre { unsigned int stream_timeout ; unsigned int timeout ; } 
u#nf_conntrack_proto union nf_conntrack_proto { s#nf_ct_dccp dccp ; s#ip_ct_sctp sctp ; s#ip_ct_tcp tcp ; s#nf_ct_gre gre ; } 
s#nf_ct_ext struct nf_ct_ext { s#rcu_head rcu ; t#u8 offset [ NF_CT_EXT_NUM ] ; t#u8 len ; char data [ 0 ] ; } 
s#nf_conn struct nf_conn { s#nf_conntrack ct_general ; t#spinlock_t lock ; s#nf_conntrack_tuple_hash tuplehash [ IP_CT_DIR_MAX ] ; unsigned long status ; s#nf_conn * master ; s#timer_list timeout ; t#u_int32_t mark ; t#u_int32_t secmark ; u#nf_conntrack_proto proto ; s#nf_ct_ext * ext ; s#net * ct_net ; } 
e#ip_conntrack_info enum ip_conntrack_info { IP_CT_ESTABLISHED , IP_CT_RELATED , IP_CT_NEW , IP_CT_IS_REPLY , IP_CT_NUMBER = IP_CT_IS_REPLY * 2 - 1 } 
nf_nat_seq_adjust_hook extern int ( * nf_nat_seq_adjust_hook ) ( s#sk_buff * , s#nf_conn * , e#ip_conntrack_info ) 
need_ipv4_conntrack extern void need_ipv4_conntrack ( void ) 

/* net/ipv4/netfilter/nf_defrag_ipv4.o */
nf_defrag_ipv4_enable extern void nf_defrag_ipv4_enable ( void ) 

/* net/ipv4/netfilter/nf_nat_core.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##nameidata
s##vfsmount
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##udp_table
s##raw_hashinfo
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##mfc_cache
s##vif_device
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##in_device
s##dn_route
s##net_generic
s##xfrm_policy
s##sec_path
e#nf_nat_manip_type enum nf_nat_manip_type { IP_NAT_MANIP_SRC , IP_NAT_MANIP_DST } 
s#nf_nat_range struct nf_nat_range { unsigned int flags ; t#__be32 min_ip , max_ip ; u#nf_conntrack_man_proto min , max ; } 
s#nf_nat_protocol struct nf_nat_protocol { unsigned int protonum ; s#module * me ; t#bool ( * manip_pkt ) ( s#sk_buff * , unsigned int , const s#nf_conntrack_tuple * , e#nf_nat_manip_type ) ; t#bool ( * in_range ) ( const s#nf_conntrack_tuple * , e#nf_nat_manip_type , const u#nf_conntrack_man_proto * , const u#nf_conntrack_man_proto * ) ; t#bool ( * unique_tuple ) ( s#nf_conntrack_tuple * , const s#nf_nat_range * , e#nf_nat_manip_type , const s#nf_conn * ) ; int ( * range_to_nlattr ) ( s#sk_buff * , const s#nf_nat_range * ) ; int ( * nlattr_to_range ) ( s#nlattr * [ ] , s#nf_nat_range * ) ; } 
nf_nat_proto_find_get extern const s#nf_nat_protocol * nf_nat_proto_find_get ( t#u_int8_t ) 
nf_nat_proto_put extern void nf_nat_proto_put ( const s#nf_nat_protocol * ) 
nf_nat_used_tuple extern int nf_nat_used_tuple ( const s#nf_conntrack_tuple * , const s#nf_conn * ) 
nf_nat_setup_info extern unsigned int nf_nat_setup_info ( s#nf_conn * , const s#nf_nat_range * , e#nf_nat_manip_type ) 
nf_nat_packet extern unsigned int nf_nat_packet ( s#nf_conn * , e#ip_conntrack_info , unsigned int , s#sk_buff * ) 
nf_nat_icmp_reply_translation extern int nf_nat_icmp_reply_translation ( s#nf_conn * , e#ip_conntrack_info , unsigned int , s#sk_buff * ) 
nf_nat_protocol_register extern int nf_nat_protocol_register ( const s#nf_nat_protocol * ) 
nf_nat_protocol_unregister extern void nf_nat_protocol_unregister ( const s#nf_nat_protocol * ) 

/* net/ipv4/netfilter/nf_nat_helper.o */
t#s16 typedef signed short s16 
s##tvec_base
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##cdev
s##posix_acl
s##udp_table
s##raw_hashinfo
s##xfrm_state
s##in_device
s##rt6_info
s##dn_route
s##xfrm_policy
s##sec_path
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##mfc_cache
s##vif_device
s##rt6_statistics
s##fib6_table
s##net_generic
e#ip_conntrack_dir enum ip_conntrack_dir { IP_CT_DIR_ORIGINAL , IP_CT_DIR_REPLY , IP_CT_DIR_MAX } 
nf_nat_get_offset extern t#s16 nf_nat_get_offset ( const s#nf_conn * , e#ip_conntrack_dir , t#u32 ) 
nf_nat_mangle_tcp_packet extern int nf_nat_mangle_tcp_packet ( s#sk_buff * , s#nf_conn * , e#ip_conntrack_info , unsigned int , unsigned int , const char * , unsigned int ) 
nf_nat_mangle_udp_packet extern int nf_nat_mangle_udp_packet ( s#sk_buff * , s#nf_conn * , e#ip_conntrack_info , unsigned int , unsigned int , const char * , unsigned int ) 
s#nf_conntrack_tuple_mask struct nf_conntrack_tuple_mask { struct { u#nf_inet_addr u3 ; u#nf_conntrack_man_proto u ; } src ; } 
s#nf_conntrack_expect_policy struct nf_conntrack_expect_policy { unsigned int max_expected ; unsigned int timeout ; } 
s#nf_conntrack_helper struct nf_conntrack_helper { s#hlist_node hnode ; const char * name ; s#module * me ; const s#nf_conntrack_expect_policy * expect_policy ; s#nf_conntrack_tuple tuple ; int ( * help ) ( s#sk_buff * , unsigned int , s#nf_conn * , e#ip_conntrack_info ) ; void ( * destroy ) ( s#nf_conn * ) ; int ( * to_nlattr ) ( s#sk_buff * , const s#nf_conn * ) ; unsigned int expect_class_max ; } 
s#nf_conntrack_expect struct nf_conntrack_expect { s#hlist_node lnode ; s#hlist_node hnode ; s#nf_conntrack_tuple tuple ; s#nf_conntrack_tuple_mask mask ; void ( * expectfn ) ( s#nf_conn * , s#nf_conntrack_expect * ) ; s#nf_conntrack_helper * helper ; s#nf_conn * master ; s#timer_list timeout ; t#atomic_t use ; unsigned int flags ; unsigned int class ; t#__be32 saved_ip ; u#nf_conntrack_man_proto saved_proto ; e#ip_conntrack_dir dir ; s#rcu_head rcu ; } 
nf_nat_follow_master extern void nf_nat_follow_master ( s#nf_conn * , s#nf_conntrack_expect * ) 

/* net/ipv4/netfilter/nf_nat_proto_common.o */
nf_nat_proto_in_range extern t#bool nf_nat_proto_in_range ( const s#nf_conntrack_tuple * , e#nf_nat_manip_type , const u#nf_conntrack_man_proto * , const u#nf_conntrack_man_proto * ) 
s##tvec_base
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##pollfd
s##cdev
s##posix_acl
s##sock
s##sec_path
s##neigh_parms
s##vlan_group
s##neighbour
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##rtnl_link_ops
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##net_generic
nf_nat_proto_unique_tuple extern t#bool nf_nat_proto_unique_tuple ( s#nf_conntrack_tuple * , const s#nf_nat_range * , e#nf_nat_manip_type , const s#nf_conn * , t#u_int16_t * ) 
nf_nat_proto_nlattr_to_range extern int nf_nat_proto_nlattr_to_range ( s#nlattr * [ ] , s#nf_nat_range * ) 
nf_nat_proto_range_to_nlattr extern int nf_nat_proto_range_to_nlattr ( s#sk_buff * , const s#nf_nat_range * ) 

/* net/ipv4/netfilter/nf_nat_proto_gre.o */
nf_nat_need_gre extern void nf_nat_need_gre ( void ) 

/* net/ipv4/protocol.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##xfrm_policy
s##sec_path
s#net_protocol struct net_protocol { int ( * handler ) ( s#sk_buff * ) ; void ( * err_handler ) ( s#sk_buff * , t#u32 ) ; int ( * gso_send_check ) ( s#sk_buff * ) ; s#sk_buff * ( * gso_segment ) ( s#sk_buff * , int ) ; s#sk_buff * * ( * gro_receive ) ( s#sk_buff * * , s#sk_buff * ) ; int ( * gro_complete ) ( s#sk_buff * ) ; unsigned int no_policy : 1 , netns_ok : 1 ; } 
inet_add_protocol extern int inet_add_protocol ( const s#net_protocol * , unsigned char ) 
inet_del_protocol extern int inet_del_protocol ( const s#net_protocol * , unsigned char ) 

/* net/ipv4/raw.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##in_device
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##inet_hashinfo
raw_hash_sk void raw_hash_sk ( s#sock * ) 
raw_unhash_sk void raw_unhash_sk ( s#sock * ) 
raw_seq_start void * raw_seq_start ( s#seq_file * , t#loff_t * ) 
raw_seq_next void * raw_seq_next ( s#seq_file * , void * , t#loff_t * ) 
raw_seq_stop void raw_seq_stop ( s#seq_file * , void * ) 
raw_seq_open int raw_seq_open ( s#inode * , s#file * , s#raw_hashinfo * , const s#seq_operations * ) 

/* net/ipv4/route.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##cdev
s##posix_acl
s##udp_table
s##raw_hashinfo
s##dn_route
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##xt_table
s##ip_conntrack_stat
s##net_generic
__ip_route_output_key extern int __ip_route_output_key ( s#net * , s#rtable * * , const s#flowi * ) 
ip_route_output_flow extern int ip_route_output_flow ( s#net * , s#rtable * * , s#flowi * , s#sock * , int ) 
__ip_select_ident extern void __ip_select_ident ( s#iphdr * , s#dst_entry * , int ) 
ip_route_input extern int ip_route_input ( s#sk_buff * , t#__be32 , t#__be32 , t#u8 , s#net_device * ) 
ip_route_output_key extern int ip_route_output_key ( s#net * , s#rtable * * , s#flowi * ) 

/* net/ipv4/syncookies.o */
syncookie_secret extern t#__u32 syncookie_secret [ 2 ] [ 16 - 4 + 5 ] 
s#tcp_options_received struct tcp_options_received { long ts_recent_stamp ; t#u32 ts_recent ; t#u32 rcv_tsval ; t#u32 rcv_tsecr ; t#u16 saw_tstamp : 1 , tstamp_ok : 1 , dsack : 1 , wscale_ok : 1 , sack_ok : 4 , snd_wscale : 4 , rcv_wscale : 4 ; t#u8 num_sacks ; t#u16 user_mss ; t#u16 mss_clamp ; } 
cookie_check_timestamp extern void cookie_check_timestamp ( s#tcp_options_received * ) 

/* net/ipv4/sysctl_net_ipv4.o */
net_ipv4_ctl_path extern s#ctl_path net_ipv4_ctl_path [ ] 

/* net/ipv4/tcp.o */
tcp_orphan_count extern s#percpu_counter tcp_orphan_count 
sysctl_tcp_mem extern int sysctl_tcp_mem [ 3 ] 
sysctl_tcp_rmem extern int sysctl_tcp_rmem [ 3 ] 
sysctl_tcp_wmem extern int sysctl_tcp_wmem [ 3 ] 
tcp_memory_allocated extern t#atomic_t tcp_memory_allocated 
tcp_sockets_allocated extern s#percpu_counter tcp_sockets_allocated 
tcp_memory_pressure extern int tcp_memory_pressure 
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##in_device
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##udp_table
s##raw_hashinfo
tcp_enter_memory_pressure extern void tcp_enter_memory_pressure ( s#sock * ) 
tcp_set_state extern void tcp_set_state ( s#sock * , int ) 
compat_tcp_setsockopt extern int compat_tcp_setsockopt ( s#sock * , int , int , char * , unsigned int ) 
tcp_get_info extern void tcp_get_info ( s#sock * , s#tcp_info * ) 
compat_tcp_getsockopt extern int compat_tcp_getsockopt ( s#sock * , int , int , char * , int * ) 
tcp_tso_segment extern s#sk_buff * tcp_tso_segment ( s#sk_buff * , int ) 
tcp_gro_receive extern s#sk_buff * * tcp_gro_receive ( s#sk_buff * * , s#sk_buff * ) 
tcp_gro_complete extern int tcp_gro_complete ( s#sk_buff * ) 
tcp_done extern void tcp_done ( s#sock * ) 
tcp_close extern void tcp_close ( s#sock * , long ) 
tcp_disconnect extern int tcp_disconnect ( s#sock * , int ) 
tcp_getsockopt extern int tcp_getsockopt ( s#sock * , int , int , char * , int * ) 
tcp_ioctl extern int tcp_ioctl ( s#sock * , int , unsigned long ) 
tcp_poll extern unsigned int tcp_poll ( s#file * , s#socket * , s#poll_table_struct * ) 
t#sk_read_actor_t typedef int ( * sk_read_actor_t ) ( t#read_descriptor_t * , s#sk_buff * , unsigned int , t#size_t ) 
tcp_read_sock extern int tcp_read_sock ( s#sock * , t#read_descriptor_t * , t#sk_read_actor_t ) 
tcp_recvmsg extern int tcp_recvmsg ( s#kiocb * , s#sock * , s#msghdr * , t#size_t , int , int , int * ) 
tcp_sendmsg extern int tcp_sendmsg ( s#kiocb * , s#socket * , s#msghdr * , t#size_t ) 
tcp_splice_read extern t#ssize_t tcp_splice_read ( s#socket * , t#loff_t * , s#pipe_inode_info * , t#size_t , unsigned int ) 
tcp_sendpage extern t#ssize_t tcp_sendpage ( s#socket * , s#page * , int , t#size_t , int ) 
tcp_setsockopt extern int tcp_setsockopt ( s#sock * , int , int , char * , unsigned int ) 
tcp_shutdown extern void tcp_shutdown ( s#sock * , int ) 

/* net/ipv4/tcp_cong.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##in_device
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
tcp_register_congestion_control extern int tcp_register_congestion_control ( s#tcp_congestion_ops * ) 
tcp_unregister_congestion_control extern void tcp_unregister_congestion_control ( s#tcp_congestion_ops * ) 
tcp_is_cwnd_limited extern int tcp_is_cwnd_limited ( const s#sock * , t#u32 ) 
s##ipv6_mc_socklist
s##ipv6_ac_socklist
s##ipv6_fl_socklist
s##ipv6_txoptions
s##ip_mc_socklist
s#tcp_sack_block struct tcp_sack_block { t#u32 start_seq ; t#u32 end_seq ; } 
s#tcp_sock struct tcp_sock { s#inet_connection_sock inet_conn ; t#u16 tcp_header_len ; t#u16 xmit_size_goal_segs ; t#__be32 pred_flags ; t#u32 rcv_nxt ; t#u32 copied_seq ; t#u32 rcv_wup ; t#u32 snd_nxt ; t#u32 snd_una ; t#u32 snd_sml ; t#u32 rcv_tstamp ; t#u32 lsndtime ; struct { s#sk_buff_head prequeue ; s#task_struct * task ; s#iovec * iov ; int memory ; int len ; } ucopy ; t#u32 snd_wl1 ; t#u32 snd_wnd ; t#u32 max_window ; t#u32 mss_cache ; t#u32 window_clamp ; t#u32 rcv_ssthresh ; t#u32 frto_highmark ; t#u16 advmss ; t#u8 frto_counter ; t#u8 nonagle ; t#u32 srtt ; t#u32 mdev ; t#u32 mdev_max ; t#u32 rttvar ; t#u32 rtt_seq ; t#u32 packets_out ; t#u32 retrans_out ; t#u16 urg_data ; t#u8 ecn_flags ; t#u8 reordering ; t#u32 snd_up ; t#u8 keepalive_probes ; s#tcp_options_received rx_opt ; t#u32 snd_ssthresh ; t#u32 snd_cwnd ; t#u32 snd_cwnd_cnt ; t#u32 snd_cwnd_clamp ; t#u32 snd_cwnd_used ; t#u32 snd_cwnd_stamp ; t#u32 rcv_wnd ; t#u32 write_seq ; t#u32 pushed_seq ; t#u32 lost_out ; t#u32 sacked_out ; t#u32 fackets_out ; t#u32 tso_deferred ; t#u32 bytes_acked ; s#sk_buff * lost_skb_hint ; s#sk_buff * scoreboard_skb_hint ; s#sk_buff * retransmit_skb_hint ; s#sk_buff_head out_of_order_queue ; s#tcp_sack_block duplicate_sack [ 1 ] ; s#tcp_sack_block selective_acks [ 4 ] ; s#tcp_sack_block recv_sack_cache [ 4 ] ; s#sk_buff * highest_sack ; int lost_cnt_hint ; t#u32 retransmit_high ; t#u32 lost_retrans_low ; t#u32 prior_ssthresh ; t#u32 high_seq ; t#u32 retrans_stamp ; t#u32 undo_marker ; int undo_retrans ; t#u32 total_retrans ; t#u32 urg_seq ; unsigned int keepalive_time ; unsigned int keepalive_intvl ; int linger2 ; struct { t#u32 rtt ; t#u32 seq ; t#u32 time ; } rcv_rtt_est ; struct { int space ; t#u32 seq ; t#u32 time ; } rcvq_space ; struct { t#u32 probe_seq_start ; t#u32 probe_seq_end ; } mtu_probe ; } 
tcp_slow_start extern void tcp_slow_start ( s#tcp_sock * ) 
tcp_cong_avoid_ai extern void tcp_cong_avoid_ai ( s#tcp_sock * , t#u32 ) 
tcp_reno_cong_avoid extern void tcp_reno_cong_avoid ( s#sock * , t#u32 , t#u32 ) 
tcp_reno_ssthresh extern t#u32 tcp_reno_ssthresh ( s#sock * ) 
tcp_reno_min_cwnd extern t#u32 tcp_reno_min_cwnd ( const s#sock * ) 
tcp_init_congestion_ops extern s#tcp_congestion_ops tcp_init_congestion_ops 

/* net/ipv4/tcp_input.o */
sysctl_tcp_ecn extern int sysctl_tcp_ecn 
sysctl_tcp_reordering extern int sysctl_tcp_reordering 
sysctl_tcp_adv_win_scale extern int sysctl_tcp_adv_win_scale 
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##udp_table
s##raw_hashinfo
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##in_device
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##xfrm_policy
s##sec_path
tcp_parse_options extern void tcp_parse_options ( s#sk_buff * , s#tcp_options_received * , int ) 
tcp_rcv_established extern int tcp_rcv_established ( s#sock * , s#sk_buff * , s#tcphdr * , unsigned ) 
tcp_rcv_state_process extern int tcp_rcv_state_process ( s#sock * , s#sk_buff * , s#tcphdr * , unsigned ) 
tcp_initialize_rcv_mss extern void tcp_initialize_rcv_mss ( s#sock * ) 

/* net/ipv4/tcp_ipv4.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##in_device
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##udp_table
s##raw_hashinfo
tcp_twsk_unique extern int tcp_twsk_unique ( s#sock * , s#sock * , void * ) 
tcp_v4_destroy_sock extern void tcp_v4_destroy_sock ( s#sock * ) 
tcp4_gro_receive extern s#sk_buff * * tcp4_gro_receive ( s#sk_buff * * , s#sk_buff * ) 
tcp4_gro_complete extern int tcp4_gro_complete ( s#sk_buff * ) 
ipv4_specific extern const s#inet_connection_sock_af_ops ipv4_specific 
tcp_hashinfo extern s#inet_hashinfo tcp_hashinfo 
tcp_prot extern s#proto tcp_prot 
tcp_v4_conn_request extern int tcp_v4_conn_request ( s#sock * , s#sk_buff * ) 
tcp_v4_connect extern int tcp_v4_connect ( s#sock * , s#sockaddr * , int ) 
tcp_v4_do_rcv extern int tcp_v4_do_rcv ( s#sock * , s#sk_buff * ) 
tcp_v4_remember_stamp extern int tcp_v4_remember_stamp ( s#sock * ) 
tcp_v4_send_check extern void tcp_v4_send_check ( s#sock * , int , s#sk_buff * ) 
tcp_v4_syn_recv_sock extern s#sock * tcp_v4_syn_recv_sock ( s#sock * , s#sk_buff * , s#request_sock * , s#dst_entry * ) 
s#tcp_seq_afinfo struct tcp_seq_afinfo { char * name ; t#sa_family_t family ; s#file_operations seq_fops ; s#seq_operations seq_ops ; } 
tcp_proc_register extern int tcp_proc_register ( s#net * , s#tcp_seq_afinfo * ) 
tcp_proc_unregister extern void tcp_proc_unregister ( s#net * , s#tcp_seq_afinfo * ) 
sysctl_tcp_low_latency extern int sysctl_tcp_low_latency 

/* net/ipv4/tcp_minisocks.o */
sysctl_tcp_syncookies extern int sysctl_tcp_syncookies 
s##tvec_base
s##array_cache
s##kmem_list3
tcp_death_row extern s#inet_timewait_death_row tcp_death_row 
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##eventfd_ctx
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##in_device
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##udp_table
s##raw_hashinfo
tcp_twsk_destructor extern void tcp_twsk_destructor ( s#sock * ) 
tcp_check_req extern s#sock * tcp_check_req ( s#sock * , s#sk_buff * , s#request_sock * , s#request_sock * * ) 
tcp_child_process extern int tcp_child_process ( s#sock * , s#sock * , s#sk_buff * ) 
tcp_create_openreq_child extern s#sock * tcp_create_openreq_child ( s#sock * , s#request_sock * , s#sk_buff * ) 
e#tcp_tw_status enum tcp_tw_status { TCP_TW_SUCCESS = 0 , TCP_TW_RST = 1 , TCP_TW_ACK = 2 , TCP_TW_SYN = 3 } 
tcp_timewait_state_process extern e#tcp_tw_status tcp_timewait_state_process ( s#inet_timewait_sock * , s#sk_buff * , const s#tcphdr * ) 

/* net/ipv4/tcp_output.o */
tcp_select_initial_window extern void tcp_select_initial_window ( int , t#__u32 , t#__u32 * , t#__u32 * , int , t#__u8 * ) 
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##in_device
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
tcp_connect extern int tcp_connect ( s#sock * ) 
tcp_make_synack extern s#sk_buff * tcp_make_synack ( s#sock * , s#dst_entry * , s#request_sock * ) 
tcp_simple_retransmit extern void tcp_simple_retransmit ( s#sock * ) 
tcp_sync_mss extern unsigned int tcp_sync_mss ( s#sock * , t#u32 ) 
tcp_mtup_init extern void tcp_mtup_init ( s#sock * ) 

/* net/ipv4/tcp_timer.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##in_device
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
tcp_init_xmit_timers extern void tcp_init_xmit_timers ( s#sock * ) 

/* net/ipv4/tcp_vegas.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##in_device
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
tcp_vegas_init extern void tcp_vegas_init ( s#sock * ) 
tcp_vegas_pkts_acked extern void tcp_vegas_pkts_acked ( s#sock * , t#u32 , t#s32 ) 
tcp_vegas_state extern void tcp_vegas_state ( s#sock * , t#u8 ) 
tcp_vegas_cwnd_event extern void tcp_vegas_cwnd_event ( s#sock * , e#tcp_ca_event ) 
tcp_vegas_get_info extern void tcp_vegas_get_info ( s#sock * , t#u32 , s#sk_buff * ) 

/* net/ipv4/tunnel4.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##in_device
s##dn_route
s##ip_conntrack_stat
s##net_generic
s#xfrm_tunnel struct xfrm_tunnel { int ( * handler ) ( s#sk_buff * ) ; int ( * err_handler ) ( s#sk_buff * , t#__u32 ) ; s#xfrm_tunnel * next ; int priority ; } 
xfrm4_tunnel_register extern int xfrm4_tunnel_register ( s#xfrm_tunnel * , unsigned short ) 
xfrm4_tunnel_deregister extern int xfrm4_tunnel_deregister ( s#xfrm_tunnel * , unsigned short ) 

/* net/ipv4/udp.o */
udp_table extern s#udp_table udp_table 
sysctl_udp_mem extern int sysctl_udp_mem [ 3 ] 
sysctl_udp_rmem_min extern int sysctl_udp_rmem_min 
sysctl_udp_wmem_min extern int sysctl_udp_wmem_min 
udp_memory_allocated extern t#atomic_t udp_memory_allocated 
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##in_device
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##inet_hashinfo
s##raw_hashinfo
udp_lib_get_port extern int udp_lib_get_port ( s#sock * , unsigned short , int ( * ) ( const s#sock * , const s#sock * ) ) 
udp4_lib_lookup extern s#sock * udp4_lib_lookup ( s#net * , t#__be32 , t#__be16 , t#__be32 , t#__be16 , int ) 
udp_flush_pending_frames extern void udp_flush_pending_frames ( s#sock * ) 
udp_sendmsg extern int udp_sendmsg ( s#kiocb * , s#sock * , s#msghdr * , t#size_t ) 
udp_ioctl extern int udp_ioctl ( s#sock * , int , unsigned long ) 
udp_disconnect extern int udp_disconnect ( s#sock * , int ) 
udp_lib_unhash extern void udp_lib_unhash ( s#sock * ) 
udp_lib_setsockopt extern int udp_lib_setsockopt ( s#sock * , int , int , char * , unsigned int , int ( * ) ( s#sock * ) ) 
udp_lib_getsockopt extern int udp_lib_getsockopt ( s#sock * , int , int , char * , int * ) 
udp_poll extern unsigned int udp_poll ( s#file * , s#socket * , t#poll_table * ) 
udp_prot extern s#proto udp_prot 
s#udp_seq_afinfo struct udp_seq_afinfo { char * name ; t#sa_family_t family ; s#udp_table * udp_table ; s#file_operations seq_fops ; s#seq_operations seq_ops ; } 
udp_proc_register extern int udp_proc_register ( s#net * , s#udp_seq_afinfo * ) 
udp_proc_unregister extern void udp_proc_unregister ( s#net * , s#udp_seq_afinfo * ) 

/* net/ipv4/udplite.o */
udplite_table extern s#udp_table udplite_table 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##cdev
s##posix_acl
s##sec_path
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##xfrm_policy
s##inet_hashinfo
s##raw_hashinfo
udplite_prot extern s#proto udplite_prot 

/* net/ipv4/xfrm4_input.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##in_device
s##dn_route
s##ip_conntrack_stat
s##net_generic
xfrm4_rcv_encap extern int xfrm4_rcv_encap ( s#sk_buff * , int , t#__be32 , int ) 
xfrm4_rcv extern int xfrm4_rcv ( s#sk_buff * ) 

/* net/ipv4/xfrm4_output.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##cdev
s##posix_acl
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##in_device
s##dn_route
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ip_conntrack_stat
s##net_generic
xfrm4_prepare_output extern int xfrm4_prepare_output ( s#xfrm_state * , s#sk_buff * ) 

/* net/ipv6/addrconf.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##udp_table
s##raw_hashinfo
s##prot_inuse
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##xfrm_state
s##ip_mc_list
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##xfrm_policy
s##sec_path
s##vlan_group
s##wireless_dev
s##tcf_walker
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
in6_dev_finish_destroy extern void in6_dev_finish_destroy ( s#inet6_dev * ) 
ipv6_dev_get_saddr extern int ipv6_dev_get_saddr ( s#net * , s#net_device * , const s#in6_addr * , unsigned int , s#in6_addr * ) 
ipv6_chk_addr extern int ipv6_chk_addr ( s#net * , s#in6_addr * , s#net_device * , int ) 
ipv6_chk_prefix extern int ipv6_chk_prefix ( s#in6_addr * , s#net_device * ) 
__ipv6_isatap_ifid extern int __ipv6_isatap_ifid ( t#u8 * , t#__be32 ) 
register_inet6addr_notifier extern int register_inet6addr_notifier ( s#notifier_block * ) 
unregister_inet6addr_notifier extern int unregister_inet6addr_notifier ( s#notifier_block * ) 

/* net/ipv6/addrconf_core.o */
__ipv6_addr_type extern int __ipv6_addr_type ( const s#in6_addr * ) 

/* net/ipv6/af_inet6.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##xfrm_state
s##in_device
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##sec_path
s##raw_hashinfo
s##xfrm_policy
inet6_bind extern int inet6_bind ( s#socket * , s#sockaddr * , int ) 
inet6_release extern int inet6_release ( s#socket * ) 
inet6_destroy_sock extern void inet6_destroy_sock ( s#sock * ) 
inet6_getname extern int inet6_getname ( s#socket * , s#sockaddr * , int * , int ) 
inet6_ioctl extern int inet6_ioctl ( s#socket * , unsigned int , unsigned long ) 
inet6_register_protosw extern int inet6_register_protosw ( s#inet_protosw * ) 
inet6_unregister_protosw extern void inet6_unregister_protosw ( s#inet_protosw * ) 
inet6_sk_rebuild_header extern int inet6_sk_rebuild_header ( s#sock * ) 
ipv6_opt_accepted extern int ipv6_opt_accepted ( s#sock * , s#sk_buff * ) 

/* net/ipv6/exthdrs.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##in_device
s##dn_route
s##ip_conntrack_stat
s##net_generic
ipv6_find_tlv extern int ipv6_find_tlv ( s#sk_buff * , int , int ) 
ipv6_push_nfrag_opts extern void ipv6_push_nfrag_opts ( s#sk_buff * , s#ipv6_txoptions * , t#u8 * , s#in6_addr * * ) 
ipv6_dup_options extern s#ipv6_txoptions * ipv6_dup_options ( s#sock * , s#ipv6_txoptions * ) 

/* net/ipv6/exthdrs_core.o */
ipv6_ext_hdr extern int ipv6_ext_hdr ( t#u8 ) 
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##xfrm_policy
s##sec_path
ipv6_skip_exthdr extern int ipv6_skip_exthdr ( const s#sk_buff * , int , t#u8 * ) 

/* net/ipv6/icmp.o */
icmpv6_statistics __typeof__ ( s#icmpv6_mib ) * icmpv6_statistics [ 2 ] 
icmpv6msg_statistics __typeof__ ( s#icmpv6msg_mib ) * icmpv6msg_statistics [ 2 ] 
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##in_device
s##dn_route
s##ip_conntrack_stat
s##net_generic
icmpv6_send extern void icmpv6_send ( s#sk_buff * , t#u8 , t#u8 , t#__u32 , s#net_device * ) 
icmpv6_err_convert extern int icmpv6_err_convert ( t#u8 , t#u8 , int * ) 

/* net/ipv6/inet6_connection_sock.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##xfrm_state
s##in_device
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
inet6_csk_bind_conflict extern int inet6_csk_bind_conflict ( const s#sock * , const s#inet_bind_bucket * ) 
inet6_csk_search_req extern s#request_sock * inet6_csk_search_req ( const s#sock * , s#request_sock * * * , const t#__be16 , const s#in6_addr * , const s#in6_addr * , const int ) 
inet6_csk_reqsk_queue_hash_add extern void inet6_csk_reqsk_queue_hash_add ( s#sock * , s#request_sock * , const unsigned long ) 
inet6_csk_addr2sockaddr extern void inet6_csk_addr2sockaddr ( s#sock * , s#sockaddr * ) 
inet6_csk_xmit extern int inet6_csk_xmit ( s#sk_buff * , int ) 

/* net/ipv6/inet6_hashtables.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##in_device
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
__inet6_hash extern void __inet6_hash ( s#sock * ) 
__inet6_lookup_established extern s#sock * __inet6_lookup_established ( s#net * , s#inet_hashinfo * , const s#in6_addr * , const t#__be16 , const s#in6_addr * , const t#u16 , const int ) 
inet6_lookup_listener extern s#sock * inet6_lookup_listener ( s#net * , s#inet_hashinfo * , const s#in6_addr * , const unsigned short , const int ) 
inet6_lookup extern s#sock * inet6_lookup ( s#net * , s#inet_hashinfo * , const s#in6_addr * , const t#__be16 , const s#in6_addr * , const t#__be16 , const int ) 
inet6_hash_connect extern int inet6_hash_connect ( s#inet_timewait_death_row * , s#sock * ) 

/* net/ipv6/ip6_flowlabel.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##cdev
s##posix_acl
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_state
s##rtable
s##dn_route
s##xfrm_policy
s##sec_path
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ip_conntrack_stat
s##net_generic
fl6_sock_lookup extern s#ip6_flowlabel * fl6_sock_lookup ( s#sock * , t#__be32 ) 

/* net/ipv6/ip6_output.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##in_device
s##dn_route
s##ip_conntrack_stat
s##net_generic
ip6_local_out extern int ip6_local_out ( s#sk_buff * ) 
ip6_xmit extern int ip6_xmit ( s#sock * , s#sk_buff * , s#flowi * , s#ipv6_txoptions * , int ) 
ip6_dst_lookup extern int ip6_dst_lookup ( s#sock * , s#dst_entry * * , s#flowi * ) 
ip6_sk_dst_lookup extern int ip6_sk_dst_lookup ( s#sock * , s#dst_entry * * , s#flowi * ) 

/* net/ipv6/ipv6_sockglue.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##in_device
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##raw_hashinfo
ipv6_setsockopt extern int ipv6_setsockopt ( s#sock * , int , int , char * , unsigned int ) 
compat_ipv6_setsockopt extern int compat_ipv6_setsockopt ( s#sock * , int , int , char * , unsigned int ) 
ipv6_getsockopt extern int ipv6_getsockopt ( s#sock * , int , int , char * , int * ) 
compat_ipv6_getsockopt extern int compat_ipv6_getsockopt ( s#sock * , int , int , char * , int * ) 

/* net/ipv6/ndisc.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##xfrm_state
s##rtable
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##xfrm_policy
s##sec_path
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
ndisc_mc_map extern int ndisc_mc_map ( s#in6_addr * , char * , s#net_device * , int ) 
ndisc_build_skb extern s#sk_buff * ndisc_build_skb ( s#net_device * , const s#in6_addr * , const s#in6_addr * , s#icmp6hdr * , const s#in6_addr * , int ) 
ndisc_send_skb extern void ndisc_send_skb ( s#sk_buff * , s#net_device * , s#neighbour * , const s#in6_addr * , const s#in6_addr * , s#icmp6hdr * ) 

/* net/ipv6/netfilter.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##in_device
s##dn_route
s##ip_conntrack_stat
s##net_generic
ip6_route_me_harder extern int ip6_route_me_harder ( s#sk_buff * ) 
nf_ip6_checksum extern t#__sum16 nf_ip6_checksum ( s#sk_buff * , unsigned int , unsigned int , t#u_int8_t ) 

/* net/ipv6/netfilter/ip6_tables.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##nameidata
s##vfsmount
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_state
s##rtable
s##rt6_info
s##dn_route
s##xfrm_policy
s##sec_path
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##mfc_cache
s##vif_device
s##rt6_statistics
s##fib6_table
s##ip_conntrack_stat
s##net_generic
s#ip6t_ip6 struct ip6t_ip6 { s#in6_addr src , dst ; s#in6_addr smsk , dmsk ; char iniface [ 16 ] , outiface [ 16 ] ; unsigned char iniface_mask [ 16 ] , outiface_mask [ 16 ] ; t#u_int16_t proto ; t#u_int8_t tos ; t#u_int8_t flags ; t#u_int8_t invflags ; } 
s#ip6t_entry struct ip6t_entry { s#ip6t_ip6 ipv6 ; unsigned int nfcache ; t#u_int16_t target_offset ; t#u_int16_t next_offset ; unsigned int comefrom ; s#xt_counters counters ; unsigned char elems [ 0 ] ; } 
s#ip6t_replace struct ip6t_replace { char name [ 32 ] ; unsigned int valid_hooks ; unsigned int num_entries ; unsigned int size ; unsigned int hook_entry [ NF_INET_NUMHOOKS ] ; unsigned int underflow [ NF_INET_NUMHOOKS ] ; unsigned int num_counters ; s#xt_counters * counters ; s#ip6t_entry entries [ 0 ] ; } 
ip6t_register_table extern s#xt_table * ip6t_register_table ( s#net * , const s#xt_table * , const s#ip6t_replace * ) 
ip6t_unregister_table extern void ip6t_unregister_table ( s#xt_table * ) 
ip6t_do_table extern unsigned int ip6t_do_table ( s#sk_buff * , unsigned int , const s#net_device * , const s#net_device * , s#xt_table * ) 
ip6t_ext_hdr extern int ip6t_ext_hdr ( t#u8 ) 
ipv6_find_hdr extern int ipv6_find_hdr ( const s#sk_buff * , unsigned int * , int , unsigned short * ) 

/* net/ipv6/protocol.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##xfrm_policy
s##sec_path
s#inet6_skb_parm struct inet6_skb_parm { int iif ; t#__u16 ra ; t#__u16 hop ; t#__u16 dst0 ; t#__u16 srcrt ; t#__u16 dst1 ; t#__u16 lastopt ; t#__u32 nhoff ; t#__u16 flags ; t#__u16 dsthao ; } 
s#inet6_protocol struct inet6_protocol { int ( * handler ) ( s#sk_buff * ) ; void ( * err_handler ) ( s#sk_buff * , s#inet6_skb_parm * , t#u8 , t#u8 , int , t#__be32 ) ; int ( * gso_send_check ) ( s#sk_buff * ) ; s#sk_buff * ( * gso_segment ) ( s#sk_buff * , int ) ; s#sk_buff * * ( * gro_receive ) ( s#sk_buff * * , s#sk_buff * ) ; int ( * gro_complete ) ( s#sk_buff * ) ; unsigned int flags ; } 
inet6_add_protocol extern int inet6_add_protocol ( const s#inet6_protocol * , unsigned char ) 
inet6_del_protocol extern int inet6_del_protocol ( const s#inet6_protocol * , unsigned char ) 

/* net/ipv6/raw.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##in_device
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##inet_hashinfo
rawv6_mh_filter_register int rawv6_mh_filter_register ( int ( * ) ( s#sock * , s#sk_buff * ) ) 
rawv6_mh_filter_unregister int rawv6_mh_filter_unregister ( int ( * ) ( s#sock * , s#sk_buff * ) ) 

/* net/ipv6/reassembly.o */
inet6_hash_frag extern unsigned int inet6_hash_frag ( t#__be32 , const s#in6_addr * , const s#in6_addr * , t#u32 ) 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##xfrm_state
s##rtable
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##xfrm_policy
s##sec_path
ip6_frag_match int ip6_frag_match ( s#inet_frag_queue * , void * ) 
ip6_frag_init void ip6_frag_init ( s#inet_frag_queue * , void * ) 

/* net/ipv6/route.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##tvec_base
s##mfc_cache
s##vif_device
s##ip_conntrack_stat
s##net_generic
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##eventfd_ctx
s##udp_table
s##raw_hashinfo
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##in_device
s##dn_route
rt6_lookup extern s#rt6_info * rt6_lookup ( s#net * , const s#in6_addr * , const s#in6_addr * , int , int ) 
ip6_route_output extern s#dst_entry * ip6_route_output ( s#net * , s#sock * , s#flowi * ) 
ip6_dst_blackhole extern int ip6_dst_blackhole ( s#sock * , s#dst_entry * * , s#flowi * ) 

/* net/ipv6/sysctl_net_ipv6.o */
net_ipv6_ctl_path extern s#ctl_path net_ipv6_ctl_path [ ] 

/* net/ipv6/tunnel6.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##in_device
s##dn_route
s##ip_conntrack_stat
s##net_generic
s#xfrm6_tunnel struct xfrm6_tunnel { int ( * handler ) ( s#sk_buff * ) ; int ( * err_handler ) ( s#sk_buff * , s#inet6_skb_parm * , t#u8 , t#u8 , int , t#__be32 ) ; s#xfrm6_tunnel * next ; int priority ; } 
xfrm6_tunnel_register extern int xfrm6_tunnel_register ( s#xfrm6_tunnel * , unsigned short ) 
xfrm6_tunnel_deregister extern int xfrm6_tunnel_deregister ( s#xfrm6_tunnel * , unsigned short ) 

/* net/ipv6/xfrm6_input.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##in_device
s##dn_route
s##ip_conntrack_stat
s##net_generic
xfrm6_rcv_spi extern int xfrm6_rcv_spi ( s#sk_buff * , int , t#__be32 ) 
xfrm6_rcv extern int xfrm6_rcv ( s#sk_buff * ) 
xfrm6_input_addr extern int xfrm6_input_addr ( s#sk_buff * , t#xfrm_address_t * , t#xfrm_address_t * , t#u8 ) 

/* net/ipv6/xfrm6_output.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##cdev
s##posix_acl
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##in_device
s##dn_route
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ip_conntrack_stat
s##net_generic
xfrm6_find_1stfragopt extern int xfrm6_find_1stfragopt ( s#xfrm_state * , s#sk_buff * , t#u8 * * ) 
xfrm6_prepare_output extern int xfrm6_prepare_output ( s#xfrm_state * , s#sk_buff * ) 

/* net/ipv6/xfrm6_tunnel.o */
xfrm6_tunnel_spi_lookup extern t#__be32 xfrm6_tunnel_spi_lookup ( t#xfrm_address_t * ) 
xfrm6_tunnel_alloc_spi extern t#__be32 xfrm6_tunnel_alloc_spi ( t#xfrm_address_t * ) 
xfrm6_tunnel_free_spi extern void xfrm6_tunnel_free_spi ( t#xfrm_address_t * ) 

/* net/iucv/iucv.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##device_private
s##driver_private
s##dma_coherent_mem
s##class_private
s##bus_type_private
iucv_bus extern s#bus_type iucv_bus 
iucv_root extern s#device * iucv_root 
s#iucv_path struct iucv_path { t#u16 pathid ; t#u16 msglim ; t#u8 flags ; void * private ; s#iucv_handler * handler ; s#list_head list ; } 
s#iucv_message struct iucv_message { t#u32 id ; t#u32 audit ; t#u32 class ; t#u32 tag ; t#u32 length ; t#u32 reply_size ; t#u8 rmmsg [ 8 ] ; t#u8 flags ; } 
s#iucv_handler struct iucv_handler { int ( * path_pending ) ( s#iucv_path * , t#u8 [ 8 ] , t#u8 [ 16 ] ) ; void ( * path_complete ) ( s#iucv_path * , t#u8 [ 16 ] ) ; void ( * path_severed ) ( s#iucv_path * , t#u8 [ 16 ] ) ; void ( * path_quiesced ) ( s#iucv_path * , t#u8 [ 16 ] ) ; void ( * path_resumed ) ( s#iucv_path * , t#u8 [ 16 ] ) ; void ( * message_pending ) ( s#iucv_path * , s#iucv_message * ) ; void ( * message_complete ) ( s#iucv_path * , s#iucv_message * ) ; s#list_head list ; s#list_head paths ; } 
iucv_register int iucv_register ( s#iucv_handler * , int ) 
iucv_unregister void iucv_unregister ( s#iucv_handler * , int ) 
iucv_path_accept int iucv_path_accept ( s#iucv_path * , s#iucv_handler * , t#u8 [ 16 ] , void * ) 
iucv_path_connect int iucv_path_connect ( s#iucv_path * , s#iucv_handler * , t#u8 [ 8 ] , t#u8 [ 8 ] , t#u8 [ 16 ] , void * ) 
iucv_path_quiesce int iucv_path_quiesce ( s#iucv_path * , t#u8 [ 16 ] ) 
iucv_path_sever int iucv_path_sever ( s#iucv_path * , t#u8 [ 16 ] ) 
iucv_message_purge int iucv_message_purge ( s#iucv_path * , s#iucv_message * , t#u32 ) 
__iucv_message_receive int __iucv_message_receive ( s#iucv_path * , s#iucv_message * , t#u8 , void * , t#size_t , t#size_t * ) 
iucv_message_receive int iucv_message_receive ( s#iucv_path * , s#iucv_message * , t#u8 , void * , t#size_t , t#size_t * ) 
iucv_message_reject int iucv_message_reject ( s#iucv_path * , s#iucv_message * ) 
iucv_message_reply int iucv_message_reply ( s#iucv_path * , s#iucv_message * , t#u8 , void * , t#size_t ) 
__iucv_message_send int __iucv_message_send ( s#iucv_path * , s#iucv_message * , t#u8 , t#u32 , void * , t#size_t ) 
iucv_message_send int iucv_message_send ( s#iucv_path * , s#iucv_message * , t#u8 , t#u32 , void * , t#size_t ) 
iucv_message_send2way int iucv_message_send2way ( s#iucv_path * , s#iucv_message * , t#u8 , t#u32 , void * , t#size_t , void * , t#size_t , t#size_t * ) 

/* net/llc/llc_core.o */
llc_sap_list extern s#list_head llc_sap_list 
llc_sap_list_lock extern t#rwlock_t llc_sap_list_lock 
s##sock
s##neigh_parms
s##vlan_group
s##neighbour
s##wireless_dev
s##Qdisc
s##tvec_base
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ip_conntrack_stat
s##net_generic
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##rtnl_link_ops
s##sec_path
llc_sap_find extern s#llc_sap * llc_sap_find ( unsigned char ) 
llc_sap_open extern s#llc_sap * llc_sap_open ( unsigned char , int ( * ) ( s#sk_buff * , s#net_device * , s#packet_type * , s#net_device * ) ) 
llc_sap_close extern void llc_sap_close ( s#llc_sap * ) 

/* net/llc/llc_input.o */
s##sock
s##neigh_parms
s##vlan_group
s##neighbour
s##wireless_dev
s##Qdisc
s##tvec_base
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ip_conntrack_stat
s##net_generic
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##rtnl_link_ops
s##sec_path
llc_add_pack extern void llc_add_pack ( int , void ( * ) ( s#llc_sap * , s#sk_buff * ) ) 
llc_remove_pack extern void llc_remove_pack ( int ) 
llc_set_station_handler extern void llc_set_station_handler ( void ( * ) ( s#sk_buff * ) ) 

/* net/llc/llc_output.o */
s##sock
s##neigh_parms
s##vlan_group
s##neighbour
s##wireless_dev
s##Qdisc
s##tvec_base
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ip_conntrack_stat
s##net_generic
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##rtnl_link_ops
s##sec_path
llc_mac_hdr_init extern int llc_mac_hdr_init ( s#sk_buff * , const unsigned char * , const unsigned char * ) 
llc_build_and_send_ui_pkt extern int llc_build_and_send_ui_pkt ( s#llc_sap * , s#sk_buff * , unsigned char * , unsigned char ) 

/* net/netfilter/core.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##xfrm_policy
s##sec_path
s##nf_queue_entry
s#nf_afinfo struct nf_afinfo { unsigned short family ; t#__sum16 ( * checksum ) ( s#sk_buff * , unsigned int , unsigned int , t#u_int8_t ) ; t#__sum16 ( * checksum_partial ) ( s#sk_buff * , unsigned int , unsigned int , unsigned int , t#u_int8_t ) ; int ( * route ) ( s#dst_entry * * , s#flowi * ) ; void ( * saveroute ) ( const s#sk_buff * , s#nf_queue_entry * ) ; int ( * reroute ) ( s#sk_buff * , const s#nf_queue_entry * ) ; int route_key_size ; } 
nf_afinfo extern const s#nf_afinfo * nf_afinfo [ NFPROTO_NUMPROTO ] 
nf_register_afinfo extern int nf_register_afinfo ( const s#nf_afinfo * ) 
nf_unregister_afinfo extern void nf_unregister_afinfo ( const s#nf_afinfo * ) 
nf_hooks extern s#list_head nf_hooks [ NFPROTO_NUMPROTO ] [ 8 ] 
t#nf_hookfn typedef unsigned int nf_hookfn ( unsigned int , s#sk_buff * , const s#net_device * , const s#net_device * , int ( * ) ( s#sk_buff * ) ) 
s#nf_hook_ops struct nf_hook_ops { s#list_head list ; t#nf_hookfn * hook ; s#module * owner ; t#u_int8_t pf ; unsigned int hooknum ; int priority ; } 
nf_register_hook int nf_register_hook ( s#nf_hook_ops * ) 
nf_unregister_hook void nf_unregister_hook ( s#nf_hook_ops * ) 
nf_register_hooks int nf_register_hooks ( s#nf_hook_ops * , unsigned int ) 
nf_unregister_hooks void nf_unregister_hooks ( s#nf_hook_ops * , unsigned int ) 
nf_hook_slow int nf_hook_slow ( t#u_int8_t , unsigned int , s#sk_buff * , s#net_device * , s#net_device * , int ( * ) ( s#sk_buff * ) , int ) 
skb_make_writable extern int skb_make_writable ( s#sk_buff * , unsigned int ) 
ip_ct_attach extern void ( * ip_ct_attach ) ( s#sk_buff * , s#sk_buff * ) 
nf_ct_attach extern void nf_ct_attach ( s#sk_buff * , s#sk_buff * ) 
nf_ct_destroy extern void ( * nf_ct_destroy ) ( s#nf_conntrack * ) 
nf_conntrack_destroy extern void nf_conntrack_destroy ( s#nf_conntrack * ) 
proc_net_netfilter extern s#proc_dir_entry * proc_net_netfilter 
nf_net_netfilter_sysctl_path extern s#ctl_path nf_net_netfilter_sysctl_path [ ] 

/* net/netfilter/ipvs/ip_vs_app.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##nameidata
s##vfsmount
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s#ip_vs_stats_user struct ip_vs_stats_user { t#__u32 conns ; t#__u32 inpkts ; t#__u32 outpkts ; t#__u64 inbytes ; t#__u64 outbytes ; t#__u32 cps ; t#__u32 inpps ; t#__u32 outpps ; t#__u32 inbps ; t#__u32 outbps ; } 
s#ip_vs_estimator struct ip_vs_estimator { s#list_head list ; t#u64 last_inbytes ; t#u64 last_outbytes ; t#u32 last_conns ; t#u32 last_inpkts ; t#u32 last_outpkts ; t#u32 cps ; t#u32 inpps ; t#u32 outpps ; t#u32 inbps ; t#u32 outbps ; } 
s#ip_vs_stats struct ip_vs_stats { s#ip_vs_stats_user ustats ; s#ip_vs_estimator est ; t#spinlock_t lock ; } 
s##udp_table
s##raw_hashinfo
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##rt6_info
s##rt6_statistics
s##fib6_table
s##ip_conntrack_stat
s##net_generic
s##xfrm_policy
s##sec_path
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##xfrm_state
s##in_device
s##dn_route
s#ip_vs_scheduler struct ip_vs_scheduler { s#list_head n_list ; char * name ; t#atomic_t refcnt ; s#module * module ; int ( * init_service ) ( s#ip_vs_service * ) ; int ( * done_service ) ( s#ip_vs_service * ) ; int ( * update_service ) ( s#ip_vs_service * ) ; s#ip_vs_dest * ( * schedule ) ( s#ip_vs_service * , const s#sk_buff * ) ; } 
s#ip_vs_service struct ip_vs_service { s#list_head s_list ; s#list_head f_list ; t#atomic_t refcnt ; t#atomic_t usecnt ; t#u16 af ; t#__u16 protocol ; u#nf_inet_addr addr ; t#__be16 port ; t#__u32 fwmark ; unsigned flags ; unsigned timeout ; t#__be32 netmask ; s#list_head destinations ; t#__u32 num_dests ; s#ip_vs_stats stats ; s#ip_vs_app * inc ; s#ip_vs_scheduler * scheduler ; t#rwlock_t sched_lock ; void * sched_data ; } 
s#ip_vs_dest struct ip_vs_dest { s#list_head n_list ; s#list_head d_list ; t#u16 af ; u#nf_inet_addr addr ; t#__be16 port ; volatile unsigned flags ; t#atomic_t conn_flags ; t#atomic_t weight ; t#atomic_t refcnt ; s#ip_vs_stats stats ; t#atomic_t activeconns ; t#atomic_t inactconns ; t#atomic_t persistconns ; t#__u32 u_threshold ; t#__u32 l_threshold ; t#spinlock_t dst_lock ; s#dst_entry * dst_cache ; t#u32 dst_rtos ; s#ip_vs_service * svc ; t#__u16 protocol ; u#nf_inet_addr vaddr ; t#__be16 vport ; t#__u32 vfwmark ; } 
s#ip_vs_iphdr struct ip_vs_iphdr { int len ; t#__u8 protocol ; u#nf_inet_addr saddr ; u#nf_inet_addr daddr ; } 
s#ip_vs_protocol struct ip_vs_protocol { s#ip_vs_protocol * next ; char * name ; t#u16 protocol ; t#u16 num_states ; int dont_defrag ; t#atomic_t appcnt ; int * timeout_table ; void ( * init ) ( s#ip_vs_protocol * ) ; void ( * exit ) ( s#ip_vs_protocol * ) ; int ( * conn_schedule ) ( int , s#sk_buff * , s#ip_vs_protocol * , int * , s#ip_vs_conn * * ) ; s#ip_vs_conn * ( * conn_in_get ) ( int , const s#sk_buff * , s#ip_vs_protocol * , const s#ip_vs_iphdr * , unsigned int , int ) ; s#ip_vs_conn * ( * conn_out_get ) ( int , const s#sk_buff * , s#ip_vs_protocol * , const s#ip_vs_iphdr * , unsigned int , int ) ; int ( * snat_handler ) ( s#sk_buff * , s#ip_vs_protocol * , s#ip_vs_conn * ) ; int ( * dnat_handler ) ( s#sk_buff * , s#ip_vs_protocol * , s#ip_vs_conn * ) ; int ( * csum_check ) ( int , s#sk_buff * , s#ip_vs_protocol * ) ; const char * ( * state_name ) ( int ) ; int ( * state_transition ) ( s#ip_vs_conn * , int , const s#sk_buff * , s#ip_vs_protocol * ) ; int ( * register_app ) ( s#ip_vs_app * ) ; void ( * unregister_app ) ( s#ip_vs_app * ) ; int ( * app_conn_bind ) ( s#ip_vs_conn * ) ; void ( * debug_packet ) ( s#ip_vs_protocol * , const s#sk_buff * , int , const char * ) ; void ( * timeout_change ) ( s#ip_vs_protocol * , int ) ; int ( * set_state_timeout ) ( s#ip_vs_protocol * , char * , int ) ; } 
s#ip_vs_seq struct ip_vs_seq { t#__u32 init_seq ; t#__u32 delta ; t#__u32 previous_delta ; } 
s#ip_vs_conn struct ip_vs_conn { s#list_head c_list ; t#u16 af ; u#nf_inet_addr caddr ; u#nf_inet_addr vaddr ; u#nf_inet_addr daddr ; t#__be16 cport ; t#__be16 vport ; t#__be16 dport ; t#__u16 protocol ; t#atomic_t refcnt ; s#timer_list timer ; volatile unsigned long timeout ; t#spinlock_t lock ; volatile t#__u16 flags ; volatile t#__u16 state ; volatile t#__u16 old_state ; s#ip_vs_conn * control ; t#atomic_t n_control ; s#ip_vs_dest * dest ; t#atomic_t in_pkts ; int ( * packet_xmit ) ( s#sk_buff * , s#ip_vs_conn * , s#ip_vs_protocol * ) ; s#ip_vs_app * app ; void * app_data ; s#ip_vs_seq in_seq ; s#ip_vs_seq out_seq ; } 
s#ip_vs_app struct ip_vs_app { s#list_head a_list ; int type ; char * name ; t#__u16 protocol ; s#module * module ; s#list_head incs_list ; s#list_head p_list ; s#ip_vs_app * app ; t#__be16 port ; t#atomic_t usecnt ; int ( * pkt_out ) ( s#ip_vs_app * , s#ip_vs_conn * , s#sk_buff * , int * ) ; int ( * pkt_in ) ( s#ip_vs_app * , s#ip_vs_conn * , s#sk_buff * , int * ) ; int ( * init_conn ) ( s#ip_vs_app * , s#ip_vs_conn * ) ; int ( * done_conn ) ( s#ip_vs_app * , s#ip_vs_conn * ) ; int ( * bind_conn ) ( s#ip_vs_app * , s#ip_vs_conn * , s#ip_vs_protocol * ) ; void ( * unbind_conn ) ( s#ip_vs_app * , s#ip_vs_conn * ) ; int * timeout_table ; int * timeouts ; int timeouts_size ; int ( * conn_schedule ) ( s#sk_buff * , s#ip_vs_app * , int * , s#ip_vs_conn * * ) ; s#ip_vs_conn * ( * conn_in_get ) ( const s#sk_buff * , s#ip_vs_app * , const s#iphdr * , unsigned int , int ) ; s#ip_vs_conn * ( * conn_out_get ) ( const s#sk_buff * , s#ip_vs_app * , const s#iphdr * , unsigned int , int ) ; int ( * state_transition ) ( s#ip_vs_conn * , int , const s#sk_buff * , s#ip_vs_app * ) ; void ( * timeout_change ) ( s#ip_vs_app * , int ) ; } 
register_ip_vs_app extern int register_ip_vs_app ( s#ip_vs_app * ) 
unregister_ip_vs_app extern void unregister_ip_vs_app ( s#ip_vs_app * ) 
register_ip_vs_app_inc extern int register_ip_vs_app_inc ( s#ip_vs_app * , t#__u16 , t#__u16 ) 

/* net/netfilter/ipvs/ip_vs_core.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##nameidata
s##vfsmount
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##raw_hashinfo
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##rt6_info
s##rt6_statistics
s##fib6_table
s##ip_conntrack_stat
s##net_generic
s##xfrm_policy
s##sec_path
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##xfrm_state
s##in_device
s##dn_route
register_ip_vs_scheduler extern int register_ip_vs_scheduler ( s#ip_vs_scheduler * ) 
unregister_ip_vs_scheduler extern int unregister_ip_vs_scheduler ( s#ip_vs_scheduler * ) 
ip_vs_skb_replace extern int ip_vs_skb_replace ( s#sk_buff * , t#gfp_t , char * , int , char * , int ) 
ip_vs_proto_name extern const char * ip_vs_proto_name ( unsigned ) 
ip_vs_conn_new extern s#ip_vs_conn * ip_vs_conn_new ( int , int , const u#nf_inet_addr * , t#__be16 , const u#nf_inet_addr * , t#__be16 , const u#nf_inet_addr * , t#__be16 , unsigned , s#ip_vs_dest * ) 
ip_vs_conn_in_get extern s#ip_vs_conn * ip_vs_conn_in_get ( int , int , const u#nf_inet_addr * , t#__be16 , const u#nf_inet_addr * , t#__be16 ) 
ip_vs_conn_out_get extern s#ip_vs_conn * ip_vs_conn_out_get ( int , int , const u#nf_inet_addr * , t#__be16 , const u#nf_inet_addr * , t#__be16 ) 
ip_vs_tcp_conn_listen extern void ip_vs_tcp_conn_listen ( s#ip_vs_conn * ) 
ip_vs_conn_put extern void ip_vs_conn_put ( s#ip_vs_conn * ) 

/* net/netfilter/ipvs/ip_vs_ctl.o */
net_vs_ctl_path extern const s#ctl_path net_vs_ctl_path [ ] 

/* net/netfilter/nf_conntrack_acct.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##pollfd
s##sock
s##sec_path
s##neigh_parms
s##vlan_group
s##neighbour
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##rtnl_link_ops
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##net_generic
seq_print_acct extern unsigned int seq_print_acct ( s#seq_file * , const s#nf_conn * , int ) 

/* net/netfilter/nf_conntrack_amanda.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##net_generic
s##xfrm_policy
s##sec_path
nf_nat_amanda_hook extern unsigned int ( * nf_nat_amanda_hook ) ( s#sk_buff * , e#ip_conntrack_info , unsigned int , unsigned int , s#nf_conntrack_expect * ) 

/* net/netfilter/nf_conntrack_core.o */
s##tvec_base
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##pollfd
s##cdev
s##posix_acl
s##sock
s##sec_path
s##neigh_parms
s##vlan_group
s##neighbour
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##rtnl_link_ops
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##net_generic
nfnetlink_parse_nat_setup_hook extern int ( * nfnetlink_parse_nat_setup_hook ) ( s#nf_conn * , e#nf_nat_manip_type , const s#nlattr * ) 
nf_conntrack_lock extern t#spinlock_t nf_conntrack_lock 
nf_conntrack_htable_size extern unsigned int nf_conntrack_htable_size 
nf_conntrack_max extern unsigned int nf_conntrack_max 
nf_conntrack_untracked extern s#nf_conn nf_conntrack_untracked 
s#nf_conntrack_l3proto struct nf_conntrack_l3proto { t#u_int16_t l3proto ; const char * name ; t#bool ( * pkt_to_tuple ) ( const s#sk_buff * , unsigned int , s#nf_conntrack_tuple * ) ; t#bool ( * invert_tuple ) ( s#nf_conntrack_tuple * , const s#nf_conntrack_tuple * ) ; int ( * print_tuple ) ( s#seq_file * , const s#nf_conntrack_tuple * ) ; int ( * get_l4proto ) ( const s#sk_buff * , unsigned int , unsigned int * , t#u_int8_t * ) ; int ( * tuple_to_nlattr ) ( s#sk_buff * , const s#nf_conntrack_tuple * ) ; int ( * nlattr_tuple_size ) ( void ) ; int ( * nlattr_to_tuple ) ( s#nlattr * [ ] , s#nf_conntrack_tuple * ) ; const s#nla_policy * nla_policy ; t#size_t nla_size ; s#ctl_table_header * ctl_table_header ; s#ctl_path * ctl_table_path ; s#ctl_table * ctl_table ; s#module * me ; } 
s#nf_conntrack_l4proto struct nf_conntrack_l4proto { t#u_int16_t l3proto ; t#u_int8_t l4proto ; t#bool ( * pkt_to_tuple ) ( const s#sk_buff * , unsigned int , s#nf_conntrack_tuple * ) ; t#bool ( * invert_tuple ) ( s#nf_conntrack_tuple * , const s#nf_conntrack_tuple * ) ; int ( * packet ) ( s#nf_conn * , const s#sk_buff * , unsigned int , e#ip_conntrack_info , t#u_int8_t , unsigned int ) ; t#bool ( * new ) ( s#nf_conn * , const s#sk_buff * , unsigned int ) ; void ( * destroy ) ( s#nf_conn * ) ; int ( * error ) ( s#net * , s#sk_buff * , unsigned int , e#ip_conntrack_info * , t#u_int8_t , unsigned int ) ; int ( * print_tuple ) ( s#seq_file * , const s#nf_conntrack_tuple * ) ; int ( * print_conntrack ) ( s#seq_file * , s#nf_conn * ) ; int ( * to_nlattr ) ( s#sk_buff * , s#nlattr * , s#nf_conn * ) ; int ( * nlattr_size ) ( void ) ; int ( * from_nlattr ) ( s#nlattr * [ ] , s#nf_conn * ) ; int ( * tuple_to_nlattr ) ( s#sk_buff * , const s#nf_conntrack_tuple * ) ; int ( * nlattr_tuple_size ) ( void ) ; int ( * nlattr_to_tuple ) ( s#nlattr * [ ] , s#nf_conntrack_tuple * ) ; const s#nla_policy * nla_policy ; t#size_t nla_size ; s#ctl_table_header * * ctl_table_header ; s#ctl_table * ctl_table ; unsigned int * ctl_table_users ; const char * name ; s#module * me ; } 
nf_ct_get_tuple extern t#bool nf_ct_get_tuple ( const s#sk_buff * , unsigned int , unsigned int , t#u_int16_t , t#u_int8_t , s#nf_conntrack_tuple * , const s#nf_conntrack_l3proto * , const s#nf_conntrack_l4proto * ) 
nf_ct_get_tuplepr extern t#bool nf_ct_get_tuplepr ( const s#sk_buff * , unsigned int , t#u_int16_t , s#nf_conntrack_tuple * ) 
nf_ct_invert_tuple extern t#bool nf_ct_invert_tuple ( s#nf_conntrack_tuple * , const s#nf_conntrack_tuple * , const s#nf_conntrack_l3proto * , const s#nf_conntrack_l4proto * ) 
nf_ct_delete_from_lists extern void nf_ct_delete_from_lists ( s#nf_conn * ) 
nf_ct_insert_dying_list extern void nf_ct_insert_dying_list ( s#nf_conn * ) 
__nf_conntrack_find extern s#nf_conntrack_tuple_hash * __nf_conntrack_find ( s#net * , const s#nf_conntrack_tuple * ) 
nf_conntrack_find_get extern s#nf_conntrack_tuple_hash * nf_conntrack_find_get ( s#net * , const s#nf_conntrack_tuple * ) 
nf_conntrack_hash_insert extern void nf_conntrack_hash_insert ( s#nf_conn * ) 
__nf_conntrack_confirm extern int __nf_conntrack_confirm ( s#sk_buff * ) 
nf_conntrack_tuple_taken extern int nf_conntrack_tuple_taken ( const s#nf_conntrack_tuple * , const s#nf_conn * ) 
nf_conntrack_alloc extern s#nf_conn * nf_conntrack_alloc ( s#net * , const s#nf_conntrack_tuple * , const s#nf_conntrack_tuple * , t#gfp_t ) 
nf_conntrack_free extern void nf_conntrack_free ( s#nf_conn * ) 
nf_conntrack_in extern unsigned int nf_conntrack_in ( s#net * , t#u_int8_t , unsigned int , s#sk_buff * ) 
nf_ct_invert_tuplepr extern t#bool nf_ct_invert_tuplepr ( s#nf_conntrack_tuple * , const s#nf_conntrack_tuple * ) 
nf_conntrack_alter_reply extern void nf_conntrack_alter_reply ( s#nf_conn * , const s#nf_conntrack_tuple * ) 
__nf_ct_refresh_acct extern void __nf_ct_refresh_acct ( s#nf_conn * , e#ip_conntrack_info , const s#sk_buff * , unsigned long , int ) 
__nf_ct_kill_acct extern t#bool __nf_ct_kill_acct ( s#nf_conn * , e#ip_conntrack_info , const s#sk_buff * , int ) 
nf_ct_port_tuple_to_nlattr extern int nf_ct_port_tuple_to_nlattr ( s#sk_buff * , const s#nf_conntrack_tuple * ) 
nf_ct_port_nla_policy extern const s#nla_policy nf_ct_port_nla_policy [ ] 
nf_ct_port_nlattr_to_tuple extern int nf_ct_port_nlattr_to_tuple ( s#nlattr * [ ] , s#nf_conntrack_tuple * ) 
nf_ct_port_nlattr_tuple_size extern int nf_ct_port_nlattr_tuple_size ( void ) 
nf_ct_iterate_cleanup extern void nf_ct_iterate_cleanup ( s#net * , int ( * ) ( s#nf_conn * , void * ) , void * ) 
nf_ct_free_hashtable extern void nf_ct_free_hashtable ( void * , int , unsigned int ) 
nf_conntrack_flush_report extern void nf_conntrack_flush_report ( s#net * , t#u32 , int ) 
nf_ct_alloc_hashtable extern void * nf_ct_alloc_hashtable ( unsigned int * , int * , int ) 
nf_conntrack_set_hashsize extern int nf_conntrack_set_hashsize ( const char * , s#kernel_param * ) 
nf_ct_nat_offset extern t#s16 ( * nf_ct_nat_offset ) ( const s#nf_conn * , e#ip_conntrack_dir , t#u32 ) 

/* net/netfilter/nf_conntrack_ecache.o */
s##tvec_base
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##pollfd
s##cdev
s##posix_acl
s##sock
s##sec_path
s##neigh_parms
s##vlan_group
s##neighbour
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##rtnl_link_ops
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##net_generic
s#nf_ct_event struct nf_ct_event { s#nf_conn * ct ; t#u32 pid ; int report ; } 
s#nf_ct_event_notifier struct nf_ct_event_notifier { int ( * fcn ) ( unsigned int , s#nf_ct_event * ) ; } 
nf_conntrack_event_cb extern s#nf_ct_event_notifier * nf_conntrack_event_cb 
s##nf_conntrack_helper
s#nf_exp_event struct nf_exp_event { s#nf_conntrack_expect * exp ; t#u32 pid ; int report ; } 
s#nf_exp_event_notifier struct nf_exp_event_notifier { int ( * fcn ) ( unsigned int , s#nf_exp_event * ) ; } 
nf_expect_event_cb extern s#nf_exp_event_notifier * nf_expect_event_cb 
nf_ct_deliver_cached_events extern void nf_ct_deliver_cached_events ( s#nf_conn * ) 
nf_conntrack_register_notifier extern int nf_conntrack_register_notifier ( s#nf_ct_event_notifier * ) 
nf_conntrack_unregister_notifier extern void nf_conntrack_unregister_notifier ( s#nf_ct_event_notifier * ) 
nf_ct_expect_register_notifier extern int nf_ct_expect_register_notifier ( s#nf_exp_event_notifier * ) 
nf_ct_expect_unregister_notifier extern void nf_ct_expect_unregister_notifier ( s#nf_exp_event_notifier * ) 

/* net/netfilter/nf_conntrack_expect.o */
nf_ct_expect_hsize extern unsigned int nf_ct_expect_hsize 
s##tvec_base
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##pollfd
s##cdev
s##posix_acl
s##sock
s##sec_path
s##neigh_parms
s##vlan_group
s##neighbour
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##rtnl_link_ops
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##net_generic
nf_ct_unlink_expect void nf_ct_unlink_expect ( s#nf_conntrack_expect * ) 
__nf_ct_expect_find s#nf_conntrack_expect * __nf_ct_expect_find ( s#net * , const s#nf_conntrack_tuple * ) 
nf_ct_expect_find_get s#nf_conntrack_expect * nf_ct_expect_find_get ( s#net * , const s#nf_conntrack_tuple * ) 
nf_ct_remove_expectations void nf_ct_remove_expectations ( s#nf_conn * ) 
nf_ct_unexpect_related void nf_ct_unexpect_related ( s#nf_conntrack_expect * ) 
nf_ct_expect_alloc s#nf_conntrack_expect * nf_ct_expect_alloc ( s#nf_conn * ) 
nf_ct_expect_init void nf_ct_expect_init ( s#nf_conntrack_expect * , unsigned int , t#u_int8_t , const u#nf_inet_addr * , const u#nf_inet_addr * , t#u_int8_t , const t#__be16 * , const t#__be16 * ) 
nf_ct_expect_put void nf_ct_expect_put ( s#nf_conntrack_expect * ) 
nf_ct_expect_related_report int nf_ct_expect_related_report ( s#nf_conntrack_expect * , t#u32 , int ) 

/* net/netfilter/nf_conntrack_extend.o */
s##tvec_base
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##pollfd
s##cdev
s##posix_acl
s##sock
s##sec_path
s##neigh_parms
s##vlan_group
s##neighbour
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##rtnl_link_ops
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##net_generic
__nf_ct_ext_destroy extern void __nf_ct_ext_destroy ( s#nf_conn * ) 
e#nf_ct_ext_id enum nf_ct_ext_id { NF_CT_EXT_HELPER , NF_CT_EXT_NAT , NF_CT_EXT_ACCT , NF_CT_EXT_ECACHE , NF_CT_EXT_NUM , } 
__nf_ct_ext_add void * __nf_ct_ext_add ( s#nf_conn * , e#nf_ct_ext_id , t#gfp_t ) 
s#nf_ct_ext_type struct nf_ct_ext_type { void ( * destroy ) ( s#nf_conn * ) ; void ( * move ) ( void * , void * ) ; e#nf_ct_ext_id id ; unsigned int flags ; t#u8 len ; t#u8 align ; t#u8 alloc_size ; } 
nf_ct_extend_register int nf_ct_extend_register ( s#nf_ct_ext_type * ) 
nf_ct_extend_unregister void nf_ct_extend_unregister ( s#nf_ct_ext_type * ) 

/* net/netfilter/nf_conntrack_ftp.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##udp_table
s##raw_hashinfo
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##mfc_cache
s##vif_device
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##in_device
s##dn_route
s##net_generic
s##xfrm_policy
s##sec_path
e#nf_ct_ftp_type enum nf_ct_ftp_type { NF_CT_FTP_PORT , NF_CT_FTP_PASV , NF_CT_FTP_EPRT , NF_CT_FTP_EPSV , } 
nf_nat_ftp_hook extern unsigned int ( * nf_nat_ftp_hook ) ( s#sk_buff * , e#ip_conntrack_info , e#nf_ct_ftp_type , unsigned int , unsigned int , s#nf_conntrack_expect * ) 

/* net/netfilter/nf_conntrack_h323_main.o */
s##tvec_base
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##cdev
s##posix_acl
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_state
s##in_device
s##inet6_dev
s##dn_route
s##xfrm_policy
s##sec_path
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##mfc_cache
s##vif_device
s##net_generic
s#TransportAddress_ipAddress struct TransportAddress_ipAddress { int options ; unsigned ip ; } 
t#TransportAddress_ipAddress typedef s#TransportAddress_ipAddress TransportAddress_ipAddress 
s#TransportAddress_ip6Address struct TransportAddress_ip6Address { int options ; unsigned ip ; } 
t#TransportAddress_ip6Address typedef s#TransportAddress_ip6Address TransportAddress_ip6Address 
s#TransportAddress struct TransportAddress { enum { eTransportAddress_ipAddress , eTransportAddress_ipSourceRoute , eTransportAddress_ipxAddress , eTransportAddress_ip6Address , eTransportAddress_netBios , eTransportAddress_nsap , eTransportAddress_nonStandardAddress , } choice ; union { t#TransportAddress_ipAddress ipAddress ; t#TransportAddress_ip6Address ip6Address ; } ; } 
t#TransportAddress typedef s#TransportAddress TransportAddress 
get_h225_addr extern int get_h225_addr ( s#nf_conn * , unsigned char * , t#TransportAddress * , u#nf_inet_addr * , t#__be16 * ) 
s#UnicastAddress_iPAddress struct UnicastAddress_iPAddress { int options ; unsigned network ; } 
t#UnicastAddress_iPAddress typedef s#UnicastAddress_iPAddress UnicastAddress_iPAddress 
s#UnicastAddress_iP6Address struct UnicastAddress_iP6Address { int options ; unsigned network ; } 
t#UnicastAddress_iP6Address typedef s#UnicastAddress_iP6Address UnicastAddress_iP6Address 
s#UnicastAddress struct UnicastAddress { enum { eUnicastAddress_iPAddress , eUnicastAddress_iPXAddress , eUnicastAddress_iP6Address , eUnicastAddress_netBios , eUnicastAddress_iPSourceRouteAddress , eUnicastAddress_nsap , eUnicastAddress_nonStandardAddress , } choice ; union { t#UnicastAddress_iPAddress iPAddress ; t#UnicastAddress_iP6Address iP6Address ; } ; } 
t#UnicastAddress typedef s#UnicastAddress UnicastAddress 
s#H245_TransportAddress struct H245_TransportAddress { enum { eH245_TransportAddress_unicastAddress , eH245_TransportAddress_multicastAddress , } choice ; union { t#UnicastAddress unicastAddress ; } ; } 
t#H245_TransportAddress typedef s#H245_TransportAddress H245_TransportAddress 
set_h245_addr_hook extern int ( * set_h245_addr_hook ) ( s#sk_buff * , unsigned char * * , int , t#H245_TransportAddress * , u#nf_inet_addr * , t#__be16 ) 
set_h225_addr_hook extern int ( * set_h225_addr_hook ) ( s#sk_buff * , unsigned char * * , int , t#TransportAddress * , u#nf_inet_addr * , t#__be16 ) 
set_sig_addr_hook extern int ( * set_sig_addr_hook ) ( s#sk_buff * , s#nf_conn * , e#ip_conntrack_info , unsigned char * * , t#TransportAddress * , int ) 
set_ras_addr_hook extern int ( * set_ras_addr_hook ) ( s#sk_buff * , s#nf_conn * , e#ip_conntrack_info , unsigned char * * , t#TransportAddress * , int ) 
nat_rtp_rtcp_hook extern int ( * nat_rtp_rtcp_hook ) ( s#sk_buff * , s#nf_conn * , e#ip_conntrack_info , unsigned char * * , int , t#H245_TransportAddress * , t#__be16 , t#__be16 , s#nf_conntrack_expect * , s#nf_conntrack_expect * ) 
nat_t120_hook extern int ( * nat_t120_hook ) ( s#sk_buff * , s#nf_conn * , e#ip_conntrack_info , unsigned char * * , int , t#H245_TransportAddress * , t#__be16 , s#nf_conntrack_expect * ) 
nat_h245_hook extern int ( * nat_h245_hook ) ( s#sk_buff * , s#nf_conn * , e#ip_conntrack_info , unsigned char * * , int , t#TransportAddress * , t#__be16 , s#nf_conntrack_expect * ) 
nat_callforwarding_hook extern int ( * nat_callforwarding_hook ) ( s#sk_buff * , s#nf_conn * , e#ip_conntrack_info , unsigned char * * , int , t#TransportAddress * , t#__be16 , s#nf_conntrack_expect * ) 
nat_q931_hook extern int ( * nat_q931_hook ) ( s#sk_buff * , s#nf_conn * , e#ip_conntrack_info , unsigned char * * , t#TransportAddress * , int , t#__be16 , s#nf_conntrack_expect * ) 

/* net/netfilter/nf_conntrack_helper.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##sock
s##neigh_parms
s##vlan_group
s##neighbour
s##wireless_dev
s##Qdisc
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##net_generic
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##rtnl_link_ops
s##sec_path
__nf_conntrack_helper_find_byname extern s#nf_conntrack_helper * __nf_conntrack_helper_find_byname ( const char * ) 
s#nf_ct_ftp_master struct nf_ct_ftp_master { t#u_int32_t seq_aft_nl [ IP_CT_DIR_MAX ] [ 2 ] ; int seq_aft_nl_num [ IP_CT_DIR_MAX ] ; } 
e#pptp_ctrlsess_state enum pptp_ctrlsess_state { PPTP_SESSION_NONE , PPTP_SESSION_ERROR , PPTP_SESSION_STOPREQ , PPTP_SESSION_REQUESTED , PPTP_SESSION_CONFIRMED , } 
e#pptp_ctrlcall_state enum pptp_ctrlcall_state { PPTP_CALL_NONE , PPTP_CALL_ERROR , PPTP_CALL_OUT_REQ , PPTP_CALL_OUT_CONF , PPTP_CALL_IN_REQ , PPTP_CALL_IN_REP , PPTP_CALL_IN_CONF , PPTP_CALL_CLEAR_REQ , } 
s#nf_ct_gre_keymap struct nf_ct_gre_keymap { s#list_head list ; s#nf_conntrack_tuple tuple ; } 
s#nf_ct_pptp_master struct nf_ct_pptp_master { e#pptp_ctrlsess_state sstate ; e#pptp_ctrlcall_state cstate ; t#__be16 pac_call_id ; t#__be16 pns_call_id ; s#nf_ct_gre_keymap * keymap [ IP_CT_DIR_MAX ] ; } 
s#nf_ct_h323_master struct nf_ct_h323_master { t#__be16 sig_port [ IP_CT_DIR_MAX ] ; t#__be16 rtp_port [ 4 ] [ IP_CT_DIR_MAX ] ; union { t#u_int32_t timeout ; t#u_int16_t tpkt_len [ IP_CT_DIR_MAX ] ; } ; } 
e#sane_state enum sane_state { SANE_STATE_NORMAL , SANE_STATE_START_REQUESTED , } 
s#nf_ct_sane_master struct nf_ct_sane_master { e#sane_state state ; } 
s#nf_ct_sip_master struct nf_ct_sip_master { unsigned int register_cseq ; unsigned int invite_cseq ; } 
u#nf_conntrack_help union nf_conntrack_help { s#nf_ct_ftp_master ct_ftp_info ; s#nf_ct_pptp_master ct_pptp_info ; s#nf_ct_h323_master ct_h323_info ; s#nf_ct_sane_master ct_sane_info ; s#nf_ct_sip_master ct_sip_info ; } 
s#nf_conn_help struct nf_conn_help { s#nf_conntrack_helper * helper ; u#nf_conntrack_help help ; s#hlist_head expectations ; t#u8 expecting [ 3 ] ; } 
nf_ct_helper_ext_add extern s#nf_conn_help * nf_ct_helper_ext_add ( s#nf_conn * , t#gfp_t ) 
__nf_ct_try_assign_helper extern int __nf_ct_try_assign_helper ( s#nf_conn * , t#gfp_t ) 
nf_conntrack_helper_register extern int nf_conntrack_helper_register ( s#nf_conntrack_helper * ) 
nf_conntrack_helper_unregister extern void nf_conntrack_helper_unregister ( s#nf_conntrack_helper * ) 

/* net/netfilter/nf_conntrack_irc.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##net_generic
s##xfrm_policy
s##sec_path
nf_nat_irc_hook extern unsigned int ( * nf_nat_irc_hook ) ( s#sk_buff * , e#ip_conntrack_info , unsigned int , unsigned int , s#nf_conntrack_expect * ) 

/* net/netfilter/nf_conntrack_l3proto_generic.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##mfc_cache
s##vif_device
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##net_generic
s##xfrm_policy
s##sec_path
nf_conntrack_l3proto_generic extern s#nf_conntrack_l3proto nf_conntrack_l3proto_generic 

/* net/netfilter/nf_conntrack_pptp.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##net_generic
s##xfrm_policy
s##sec_path
s#PptpControlHeader struct PptpControlHeader { t#__be16 messageType ; t#__u16 reserved ; } 
s#PptpStartSessionRequest struct PptpStartSessionRequest { t#__be16 protocolVersion ; t#__u16 reserved1 ; t#__be32 framingCapability ; t#__be32 bearerCapability ; t#__be16 maxChannels ; t#__be16 firmwareRevision ; t#__u8 hostName [ 64 ] ; t#__u8 vendorString [ 64 ] ; } 
s#PptpStartSessionReply struct PptpStartSessionReply { t#__be16 protocolVersion ; t#__u8 resultCode ; t#__u8 generalErrorCode ; t#__be32 framingCapability ; t#__be32 bearerCapability ; t#__be16 maxChannels ; t#__be16 firmwareRevision ; t#__u8 hostName [ 64 ] ; t#__u8 vendorString [ 64 ] ; } 
s#PptpStopSessionRequest struct PptpStopSessionRequest { t#__u8 reason ; t#__u8 reserved1 ; t#__u16 reserved2 ; } 
s#PptpStopSessionReply struct PptpStopSessionReply { t#__u8 resultCode ; t#__u8 generalErrorCode ; t#__u16 reserved1 ; } 
s#PptpOutCallRequest struct PptpOutCallRequest { t#__be16 callID ; t#__be16 callSerialNumber ; t#__be32 minBPS ; t#__be32 maxBPS ; t#__be32 bearerType ; t#__be32 framingType ; t#__be16 packetWindow ; t#__be16 packetProcDelay ; t#__be16 phoneNumberLength ; t#__u16 reserved1 ; t#__u8 phoneNumber [ 64 ] ; t#__u8 subAddress [ 64 ] ; } 
s#PptpOutCallReply struct PptpOutCallReply { t#__be16 callID ; t#__be16 peersCallID ; t#__u8 resultCode ; t#__u8 generalErrorCode ; t#__be16 causeCode ; t#__be32 connectSpeed ; t#__be16 packetWindow ; t#__be16 packetProcDelay ; t#__be32 physChannelID ; } 
s#PptpInCallRequest struct PptpInCallRequest { t#__be16 callID ; t#__be16 callSerialNumber ; t#__be32 callBearerType ; t#__be32 physChannelID ; t#__be16 dialedNumberLength ; t#__be16 dialingNumberLength ; t#__u8 dialedNumber [ 64 ] ; t#__u8 dialingNumber [ 64 ] ; t#__u8 subAddress [ 64 ] ; } 
s#PptpInCallReply struct PptpInCallReply { t#__be16 callID ; t#__be16 peersCallID ; t#__u8 resultCode ; t#__u8 generalErrorCode ; t#__be16 packetWindow ; t#__be16 packetProcDelay ; t#__u16 reserved ; } 
s#PptpInCallConnected struct PptpInCallConnected { t#__be16 peersCallID ; t#__u16 reserved ; t#__be32 connectSpeed ; t#__be16 packetWindow ; t#__be16 packetProcDelay ; t#__be32 callFramingType ; } 
s#PptpClearCallRequest struct PptpClearCallRequest { t#__be16 callID ; t#__u16 reserved ; } 
s#PptpCallDisconnectNotify struct PptpCallDisconnectNotify { t#__be16 callID ; t#__u8 resultCode ; t#__u8 generalErrorCode ; t#__be16 causeCode ; t#__u16 reserved ; t#__u8 callStatistics [ 128 ] ; } 
s#PptpWanErrorNotify struct PptpWanErrorNotify { t#__be16 peersCallID ; t#__u16 reserved ; t#__be32 crcErrors ; t#__be32 framingErrors ; t#__be32 hardwareOverRuns ; t#__be32 bufferOverRuns ; t#__be32 timeoutErrors ; t#__be32 alignmentErrors ; } 
s#PptpSetLinkInfo struct PptpSetLinkInfo { t#__be16 peersCallID ; t#__u16 reserved ; t#__be32 sendAccm ; t#__be32 recvAccm ; } 
u#pptp_ctrl_union union pptp_ctrl_union { s#PptpStartSessionRequest sreq ; s#PptpStartSessionReply srep ; s#PptpStopSessionRequest streq ; s#PptpStopSessionReply strep ; s#PptpOutCallRequest ocreq ; s#PptpOutCallReply ocack ; s#PptpInCallRequest icreq ; s#PptpInCallReply icack ; s#PptpInCallConnected iccon ; s#PptpClearCallRequest clrreq ; s#PptpCallDisconnectNotify disc ; s#PptpWanErrorNotify wanerr ; s#PptpSetLinkInfo setlink ; } 
nf_nat_pptp_hook_outbound extern int ( * nf_nat_pptp_hook_outbound ) ( s#sk_buff * , s#nf_conn * , e#ip_conntrack_info , s#PptpControlHeader * , u#pptp_ctrl_union * ) 
nf_nat_pptp_hook_inbound extern int ( * nf_nat_pptp_hook_inbound ) ( s#sk_buff * , s#nf_conn * , e#ip_conntrack_info , s#PptpControlHeader * , u#pptp_ctrl_union * ) 
nf_nat_pptp_hook_exp_gre extern void ( * nf_nat_pptp_hook_exp_gre ) ( s#nf_conntrack_expect * , s#nf_conntrack_expect * ) 
nf_nat_pptp_hook_expectfn extern void ( * nf_nat_pptp_hook_expectfn ) ( s#nf_conn * , s#nf_conntrack_expect * ) 
pptp_msg_name extern const char * const pptp_msg_name [ ] 

/* net/netfilter/nf_conntrack_proto.o */
s##sock
s##neigh_parms
s##vlan_group
s##neighbour
s##wireless_dev
s##Qdisc
s##tvec_base
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##pollfd
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##net_generic
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##rtnl_link_ops
s##sec_path
nf_ct_l3protos extern s#nf_conntrack_l3proto * nf_ct_l3protos [ 37 ] 
__nf_ct_l4proto_find extern s#nf_conntrack_l4proto * __nf_ct_l4proto_find ( t#u_int16_t , t#u_int8_t ) 
nf_ct_l3proto_find_get extern s#nf_conntrack_l3proto * nf_ct_l3proto_find_get ( t#u_int16_t ) 
nf_ct_l3proto_put extern void nf_ct_l3proto_put ( s#nf_conntrack_l3proto * ) 
nf_ct_l3proto_try_module_get extern int nf_ct_l3proto_try_module_get ( unsigned short ) 
nf_ct_l3proto_module_put extern void nf_ct_l3proto_module_put ( unsigned short ) 
nf_conntrack_l3proto_register extern int nf_conntrack_l3proto_register ( s#nf_conntrack_l3proto * ) 
nf_conntrack_l3proto_unregister extern void nf_conntrack_l3proto_unregister ( s#nf_conntrack_l3proto * ) 
nf_conntrack_l4proto_register extern int nf_conntrack_l4proto_register ( s#nf_conntrack_l4proto * ) 
nf_conntrack_l4proto_unregister extern void nf_conntrack_l4proto_unregister ( s#nf_conntrack_l4proto * ) 

/* net/netfilter/nf_conntrack_proto_gre.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##pollfd
s##cdev
s##posix_acl
s##sock
s##sec_path
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
nf_ct_gre_keymap_flush extern void nf_ct_gre_keymap_flush ( s#net * ) 
nf_ct_gre_keymap_add int nf_ct_gre_keymap_add ( s#nf_conn * , e#ip_conntrack_dir , s#nf_conntrack_tuple * ) 
nf_ct_gre_keymap_destroy void nf_ct_gre_keymap_destroy ( s#nf_conn * ) 

/* net/netfilter/nf_conntrack_proto_tcp.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##udp_table
s##raw_hashinfo
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##mfc_cache
s##vif_device
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##in_device
s##dn_route
s##net_generic
s##xfrm_policy
s##sec_path
nf_conntrack_l4proto_tcp4 extern s#nf_conntrack_l4proto nf_conntrack_l4proto_tcp4 
nf_conntrack_l4proto_tcp6 extern s#nf_conntrack_l4proto nf_conntrack_l4proto_tcp6 

/* net/netfilter/nf_conntrack_proto_udp.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##mfc_cache
s##vif_device
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##net_generic
s##xfrm_policy
s##sec_path
nf_conntrack_l4proto_udp4 extern s#nf_conntrack_l4proto nf_conntrack_l4proto_udp4 
nf_conntrack_l4proto_udp6 extern s#nf_conntrack_l4proto nf_conntrack_l4proto_udp6 

/* net/netfilter/nf_conntrack_sip.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##net_generic
s##xfrm_policy
s##sec_path
nf_nat_sip_hook extern unsigned int ( * nf_nat_sip_hook ) ( s#sk_buff * , const char * * , unsigned int * ) 
nf_nat_sip_expect_hook extern unsigned int ( * nf_nat_sip_expect_hook ) ( s#sk_buff * , const char * * , unsigned int * , s#nf_conntrack_expect * , unsigned int , unsigned int ) 
e#sdp_header_types enum sdp_header_types { SDP_HDR_UNSPEC , SDP_HDR_VERSION , SDP_HDR_OWNER_IP4 , SDP_HDR_CONNECTION_IP4 , SDP_HDR_OWNER_IP6 , SDP_HDR_CONNECTION_IP6 , SDP_HDR_MEDIA , } 
nf_nat_sdp_addr_hook extern unsigned int ( * nf_nat_sdp_addr_hook ) ( s#sk_buff * , const char * * , unsigned int , unsigned int * , e#sdp_header_types , e#sdp_header_types , const u#nf_inet_addr * ) 
nf_nat_sdp_port_hook extern unsigned int ( * nf_nat_sdp_port_hook ) ( s#sk_buff * , const char * * , unsigned int * , unsigned int , unsigned int , t#u_int16_t ) 
nf_nat_sdp_session_hook extern unsigned int ( * nf_nat_sdp_session_hook ) ( s#sk_buff * , const char * * , unsigned int , unsigned int * , const u#nf_inet_addr * ) 
nf_nat_sdp_media_hook extern unsigned int ( * nf_nat_sdp_media_hook ) ( s#sk_buff * , const char * * , unsigned int * , s#nf_conntrack_expect * , s#nf_conntrack_expect * , unsigned int , unsigned int , u#nf_inet_addr * ) 
ct_sip_parse_request extern int ct_sip_parse_request ( const s#nf_conn * , const char * , unsigned int , unsigned int * , unsigned int * , u#nf_inet_addr * , t#__be16 * ) 
e#sip_header_types enum sip_header_types { SIP_HDR_CSEQ , SIP_HDR_FROM , SIP_HDR_TO , SIP_HDR_CONTACT , SIP_HDR_VIA , SIP_HDR_EXPIRES , SIP_HDR_CONTENT_LENGTH , } 
ct_sip_get_header extern int ct_sip_get_header ( const s#nf_conn * , const char * , unsigned int , unsigned int , e#sip_header_types , unsigned int * , unsigned int * ) 
ct_sip_parse_header_uri extern int ct_sip_parse_header_uri ( const s#nf_conn * , const char * , unsigned int * , unsigned int , e#sip_header_types , int * , unsigned int * , unsigned int * , u#nf_inet_addr * , t#__be16 * ) 
ct_sip_parse_address_param extern int ct_sip_parse_address_param ( const s#nf_conn * , const char * , unsigned int , unsigned int , const char * , unsigned int * , unsigned int * , u#nf_inet_addr * ) 
ct_sip_parse_numerical_param extern int ct_sip_parse_numerical_param ( const s#nf_conn * , const char * , unsigned int , unsigned int , const char * , unsigned int * , unsigned int * , unsigned int * ) 
ct_sip_get_sdp_header extern int ct_sip_get_sdp_header ( const s#nf_conn * , const char * , unsigned int , unsigned int , e#sdp_header_types , e#sdp_header_types , unsigned int * , unsigned int * ) 

/* net/netfilter/nf_conntrack_standalone.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##pollfd
s##sock
s##neigh_parms
s##vlan_group
s##neighbour
s##wireless_dev
s##Qdisc
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##net_generic
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##rtnl_link_ops
s##sec_path
print_tuple int print_tuple ( s#seq_file * , const s#nf_conntrack_tuple * , const s#nf_conntrack_l3proto * , const s#nf_conntrack_l4proto * ) 
need_conntrack extern void need_conntrack ( void ) 

/* net/netfilter/nf_conntrack_tftp.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##net_generic
s##xfrm_policy
s##sec_path
nf_nat_tftp_hook extern unsigned int ( * nf_nat_tftp_hook ) ( s#sk_buff * , e#ip_conntrack_info , s#nf_conntrack_expect * ) 

/* net/netfilter/nf_log.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##nameidata
s##vfsmount
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##xfrm_policy
s##sec_path
s#nf_loginfo struct nf_loginfo { t#u_int8_t type ; union { struct { t#u_int32_t copy_len ; t#u_int16_t group ; t#u_int16_t qthreshold ; } ulog ; struct { t#u_int8_t level ; t#u_int8_t logflags ; } log ; } u ; } 
t#nf_logfn typedef void nf_logfn ( t#u_int8_t , unsigned int , const s#sk_buff * , const s#net_device * , const s#net_device * , const s#nf_loginfo * , const char * ) 
s#nf_logger struct nf_logger { s#module * me ; t#nf_logfn * logfn ; char * name ; s#list_head list [ NFPROTO_NUMPROTO ] ; } 
nf_log_register int nf_log_register ( t#u_int8_t , s#nf_logger * ) 
nf_log_unregister void nf_log_unregister ( s#nf_logger * ) 
nf_log_bind_pf int nf_log_bind_pf ( t#u_int8_t , const s#nf_logger * ) 
nf_log_unbind_pf void nf_log_unbind_pf ( t#u_int8_t ) 
nf_log_packet void nf_log_packet ( t#u_int8_t , unsigned int , const s#sk_buff * , const s#net_device * , const s#net_device * , const s#nf_loginfo * , const char * , ... ) 

/* net/netfilter/nf_queue.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##xfrm_policy
s##sec_path
s#nf_queue_entry struct nf_queue_entry { s#list_head list ; s#sk_buff * skb ; unsigned int id ; s#nf_hook_ops * elem ; t#u_int8_t pf ; unsigned int hook ; s#net_device * indev ; s#net_device * outdev ; int ( * okfn ) ( s#sk_buff * ) ; } 
s#nf_queue_handler struct nf_queue_handler { int ( * outfn ) ( s#nf_queue_entry * , unsigned int ) ; char * name ; } 
nf_register_queue_handler extern int nf_register_queue_handler ( t#u_int8_t , const s#nf_queue_handler * ) 
nf_unregister_queue_handler extern int nf_unregister_queue_handler ( t#u_int8_t , const s#nf_queue_handler * ) 
nf_unregister_queue_handlers extern void nf_unregister_queue_handlers ( const s#nf_queue_handler * ) 
nf_reinject extern void nf_reinject ( s#nf_queue_entry * , unsigned int ) 

/* net/netfilter/nf_sockopt.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s#nf_sockopt_ops struct nf_sockopt_ops { s#list_head list ; t#u_int8_t pf ; int set_optmin ; int set_optmax ; int ( * set ) ( s#sock * , int , void * , unsigned int ) ; int ( * compat_set ) ( s#sock * , int , void * , unsigned int ) ; int get_optmin ; int get_optmax ; int ( * get ) ( s#sock * , int , void * , int * ) ; int ( * compat_get ) ( s#sock * , int , void * , int * ) ; s#module * owner ; } 
nf_register_sockopt int nf_register_sockopt ( s#nf_sockopt_ops * ) 
nf_unregister_sockopt void nf_unregister_sockopt ( s#nf_sockopt_ops * ) 
nf_setsockopt int nf_setsockopt ( s#sock * , t#u_int8_t , int , char * , unsigned int ) 
nf_getsockopt int nf_getsockopt ( s#sock * , t#u_int8_t , int , char * , int * ) 
compat_nf_setsockopt int compat_nf_setsockopt ( s#sock * , t#u_int8_t , int , char * , unsigned int ) 
compat_nf_getsockopt int compat_nf_getsockopt ( s#sock * , t#u_int8_t , int , char * , int * ) 

/* net/netfilter/nf_tproxy_core.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##in_device
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##sec_path
s##raw_hashinfo
s##xfrm_policy
nf_tproxy_get_sock_v4 extern s#sock * nf_tproxy_get_sock_v4 ( s#net * , const t#u8 , const t#__be32 , const t#__be32 , const t#__be16 , const t#__be16 , const s#net_device * , t#bool ) 
nf_tproxy_assign_sock int nf_tproxy_assign_sock ( s#sk_buff * , s#sock * ) 

/* net/netfilter/nfnetlink.o */
nfnl_lock extern void nfnl_lock ( void ) 
nfnl_unlock extern void nfnl_unlock ( void ) 
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s#nfnl_callback struct nfnl_callback { int ( * call ) ( s#sock * , s#sk_buff * , const s#nlmsghdr * , const s#nlattr * const [ ] ) ; const s#nla_policy * policy ; const t#u_int16_t attr_count ; } 
s#nfnetlink_subsystem struct nfnetlink_subsystem { const char * name ; t#__u8 subsys_id ; t#__u8 cb_count ; const s#nfnl_callback * cb ; } 
nfnetlink_subsys_register extern int nfnetlink_subsys_register ( const s#nfnetlink_subsystem * ) 
nfnetlink_subsys_unregister extern int nfnetlink_subsys_unregister ( const s#nfnetlink_subsystem * ) 
nfnetlink_has_listeners extern int nfnetlink_has_listeners ( unsigned int ) 
nfnetlink_send extern int nfnetlink_send ( s#sk_buff * , t#u32 , unsigned , int , t#gfp_t ) 
nfnetlink_set_err extern void nfnetlink_set_err ( t#u32 , t#u32 , int ) 
nfnetlink_unicast extern int nfnetlink_unicast ( s#sk_buff * , t#u_int32_t , int ) 

/* net/netfilter/nfnetlink_log.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##vlan_group
s##wireless_dev
s##Qdisc
s##xfrm_state
s##rt6_info
s##dn_route
s##in_device
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##rt6_statistics
s##fib6_table
s##ip_conntrack_stat
s##net_generic
s##xfrm_policy
s##sec_path
nfulnl_log_packet void nfulnl_log_packet ( t#u_int8_t , unsigned int , const s#sk_buff * , const s#net_device * , const s#net_device * , const s#nf_loginfo * , const char * ) 

/* net/netfilter/x_tables.o */
s##sock
s##neigh_parms
s##vlan_group
s##neighbour
s##wireless_dev
s##Qdisc
s##tvec_base
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##pollfd
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ip_conntrack_stat
s##net_generic
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##rtnl_link_ops
s##sec_path
s#xt_target_param struct xt_target_param { const s#net_device * in , * out ; const s#xt_target * target ; const void * targinfo ; unsigned int hooknum ; t#u_int8_t family ; } 
s#xt_tgchk_param struct xt_tgchk_param { const char * table ; const void * entryinfo ; const s#xt_target * target ; void * targinfo ; unsigned int hook_mask ; t#u_int8_t family ; } 
s#xt_tgdtor_param struct xt_tgdtor_param { const s#xt_target * target ; void * targinfo ; t#u_int8_t family ; } 
s#xt_target struct xt_target { s#list_head list ; const char name [ 30 - 1 ] ; unsigned int ( * target ) ( s#sk_buff * , const s#xt_target_param * ) ; t#bool ( * checkentry ) ( const s#xt_tgchk_param * ) ; void ( * destroy ) ( const s#xt_tgdtor_param * ) ; void ( * compat_from_user ) ( void * , void * ) ; int ( * compat_to_user ) ( void * , void * ) ; s#module * me ; const char * table ; unsigned int targetsize ; unsigned int compatsize ; unsigned int hooks ; unsigned short proto ; unsigned short family ; t#u_int8_t revision ; } 
xt_register_target extern int xt_register_target ( s#xt_target * ) 
xt_unregister_target extern void xt_unregister_target ( s#xt_target * ) 
xt_register_targets extern int xt_register_targets ( s#xt_target * , unsigned int ) 
xt_unregister_targets extern void xt_unregister_targets ( s#xt_target * , unsigned int ) 
s#xt_match_param struct xt_match_param { const s#net_device * in , * out ; const s#xt_match * match ; const void * matchinfo ; int fragoff ; unsigned int thoff ; unsigned int hooknum ; t#u_int8_t family ; t#bool * hotdrop ; } 
s#xt_mtchk_param struct xt_mtchk_param { const char * table ; const void * entryinfo ; const s#xt_match * match ; void * matchinfo ; unsigned int hook_mask ; t#u_int8_t family ; } 
s#xt_mtdtor_param struct xt_mtdtor_param { const s#xt_match * match ; void * matchinfo ; t#u_int8_t family ; } 
s#xt_match struct xt_match { s#list_head list ; const char name [ 30 - 1 ] ; t#u_int8_t revision ; t#bool ( * match ) ( const s#sk_buff * , const s#xt_match_param * ) ; t#bool ( * checkentry ) ( const s#xt_mtchk_param * ) ; void ( * destroy ) ( const s#xt_mtdtor_param * ) ; void ( * compat_from_user ) ( void * , void * ) ; int ( * compat_to_user ) ( void * , void * ) ; s#module * me ; unsigned long data ; const char * table ; unsigned int matchsize ; unsigned int compatsize ; unsigned int hooks ; unsigned short proto ; unsigned short family ; } 
xt_register_match extern int xt_register_match ( s#xt_match * ) 
xt_unregister_match extern void xt_unregister_match ( s#xt_match * ) 
xt_register_matches extern int xt_register_matches ( s#xt_match * , unsigned int ) 
xt_unregister_matches extern void xt_unregister_matches ( s#xt_match * , unsigned int ) 
xt_find_match extern s#xt_match * xt_find_match ( t#u8 , const char * , t#u8 ) 
xt_find_target extern s#xt_target * xt_find_target ( t#u8 , const char * , t#u8 ) 
xt_request_find_target extern s#xt_target * xt_request_find_target ( t#u8 , const char * , t#u8 ) 
xt_find_revision extern int xt_find_revision ( t#u8 , const char * , t#u8 , int , int * ) 
xt_check_match extern int xt_check_match ( s#xt_mtchk_param * , unsigned int , t#u_int8_t , t#bool ) 
xt_compat_add_offset extern int xt_compat_add_offset ( t#u_int8_t , unsigned int , short ) 
xt_compat_flush_offsets extern void xt_compat_flush_offsets ( t#u_int8_t ) 
xt_compat_calc_jump extern short xt_compat_calc_jump ( t#u_int8_t , unsigned int ) 
xt_compat_match_offset extern int xt_compat_match_offset ( const s#xt_match * ) 
s#xt_entry_match struct xt_entry_match { union { struct { t#__u16 match_size ; char name [ 30 - 1 ] ; t#__u8 revision ; } user ; struct { t#__u16 match_size ; s#xt_match * match ; } kernel ; t#__u16 match_size ; } u ; unsigned char data [ 0 ] ; } 
xt_compat_match_from_user extern int xt_compat_match_from_user ( s#xt_entry_match * , void * * , unsigned int * ) 
xt_compat_match_to_user extern int xt_compat_match_to_user ( s#xt_entry_match * , void * * , unsigned int * ) 
xt_check_target extern int xt_check_target ( s#xt_tgchk_param * , unsigned int , t#u_int8_t , t#bool ) 
xt_compat_target_offset extern int xt_compat_target_offset ( const s#xt_target * ) 
s#xt_entry_target struct xt_entry_target { union { struct { t#__u16 target_size ; char name [ 30 - 1 ] ; t#__u8 revision ; } user ; struct { t#__u16 target_size ; s#xt_target * target ; } kernel ; t#__u16 target_size ; } u ; unsigned char data [ 0 ] ; } 
xt_compat_target_from_user extern void xt_compat_target_from_user ( s#xt_entry_target * , void * * , unsigned int * ) 
xt_compat_target_to_user extern int xt_compat_target_to_user ( s#xt_entry_target * , void * * , unsigned int * ) 
xt_alloc_table_info extern s#xt_table_info * xt_alloc_table_info ( unsigned int ) 
xt_free_table_info extern void xt_free_table_info ( s#xt_table_info * ) 
xt_find_table_lock extern s#xt_table * xt_find_table_lock ( s#net * , t#u_int8_t , const char * ) 
xt_table_unlock extern void xt_table_unlock ( s#xt_table * ) 
xt_compat_lock extern void xt_compat_lock ( t#u_int8_t ) 
xt_compat_unlock extern void xt_compat_unlock ( t#u_int8_t ) 
s#xt_info_lock struct xt_info_lock { t#spinlock_t lock ; unsigned char readers ; } 
per_cpu__xt_info_locks extern __attribute__ ( ( section ( ".data.percpu" "" ) ) ) __typeof__ ( s#xt_info_lock ) per_cpu__xt_info_locks 
xt_replace_table extern s#xt_table_info * xt_replace_table ( s#xt_table * , unsigned int , s#xt_table_info * , int * ) 
xt_register_table extern s#xt_table * xt_register_table ( s#net * , const s#xt_table * , s#xt_table_info * , s#xt_table_info * ) 
xt_unregister_table extern void * xt_unregister_table ( s#xt_table * ) 
xt_proto_init extern int xt_proto_init ( s#net * , t#u_int8_t ) 
xt_proto_fini extern void xt_proto_fini ( s#net * , t#u_int8_t ) 

/* net/netfilter/xt_RATEEST.o */
s#gnet_estimator struct gnet_estimator { signed char interval ; unsigned char ewma_log ; } 
s#xt_rateest struct xt_rateest { s#hlist_node list ; char name [ 16 ] ; unsigned int refcnt ; t#spinlock_t lock ; s#gnet_estimator params ; s#gnet_stats_rate_est rstats ; s#gnet_stats_basic_packed bstats ; } 
xt_rateest_lookup extern s#xt_rateest * xt_rateest_lookup ( const char * ) 
xt_rateest_put extern void xt_rateest_put ( s#xt_rateest * ) 

/* net/netlink/af_netlink.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##sec_path
s##tvec_base
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##eventfd_ctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
netlink_unicast extern int netlink_unicast ( s#sock * , s#sk_buff * , t#__u32 , int ) 
netlink_has_listeners extern int netlink_has_listeners ( s#sock * , unsigned int ) 
netlink_broadcast extern int netlink_broadcast ( s#sock * , s#sk_buff * , t#__u32 , t#__u32 , t#gfp_t ) 
netlink_set_err extern void netlink_set_err ( s#sock * , t#__u32 , t#__u32 , int ) 
netlink_kernel_create extern s#sock * netlink_kernel_create ( s#net * , int , unsigned int , void ( * ) ( s#sk_buff * ) , s#mutex * , s#module * ) 
netlink_kernel_release extern void netlink_kernel_release ( s#sock * ) 
netlink_set_nonroot extern void netlink_set_nonroot ( int , unsigned ) 
netlink_dump_start extern int netlink_dump_start ( s#sock * , s#sk_buff * , const s#nlmsghdr * , int ( * ) ( s#sk_buff * , s#netlink_callback * ) , int ( * ) ( s#netlink_callback * ) ) 
netlink_ack extern void netlink_ack ( s#sk_buff * , s#nlmsghdr * , int ) 
netlink_rcv_skb extern int netlink_rcv_skb ( s#sk_buff * , int ( * ) ( s#sk_buff * , s#nlmsghdr * ) ) 
nlmsg_notify extern int nlmsg_notify ( s#sock * , s#sk_buff * , t#u32 , unsigned int , int , t#gfp_t ) 
netlink_register_notifier extern int netlink_register_notifier ( s#notifier_block * ) 
netlink_unregister_notifier extern int netlink_unregister_notifier ( s#notifier_block * ) 

/* net/netlink/genetlink.o */
s#genl_family struct genl_family { unsigned int id ; unsigned int hdrsize ; char name [ 16 ] ; unsigned int version ; unsigned int maxattr ; t#bool netnsok ; s#nlattr * * attrbuf ; s#list_head ops_list ; s#list_head family_list ; s#list_head mcast_groups ; } 
s#genl_multicast_group struct genl_multicast_group { s#genl_family * family ; s#list_head list ; char name [ 16 ] ; t#u32 id ; } 
genl_register_mc_group extern int genl_register_mc_group ( s#genl_family * , s#genl_multicast_group * ) 
genl_unregister_mc_group extern void genl_unregister_mc_group ( s#genl_family * , s#genl_multicast_group * ) 
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##xfrm_policy
s##sec_path
s#genlmsghdr struct genlmsghdr { t#__u8 cmd ; t#__u8 version ; t#__u16 reserved ; } 
s#genl_info struct genl_info { t#u32 snd_seq ; t#u32 snd_pid ; s#nlmsghdr * nlhdr ; s#genlmsghdr * genlhdr ; void * userhdr ; s#nlattr * * attrs ; s#net * _net ; } 
s#genl_ops struct genl_ops { t#u8 cmd ; unsigned int flags ; const s#nla_policy * policy ; int ( * doit ) ( s#sk_buff * , s#genl_info * ) ; int ( * dumpit ) ( s#sk_buff * , s#netlink_callback * ) ; int ( * done ) ( s#netlink_callback * ) ; s#list_head ops_list ; } 
genl_register_family_with_ops extern int genl_register_family_with_ops ( s#genl_family * , s#genl_ops * , t#size_t ) 
genl_register_ops extern int genl_register_ops ( s#genl_family * , s#genl_ops * ) 
genl_unregister_ops extern int genl_unregister_ops ( s#genl_family * , s#genl_ops * ) 
genl_register_family extern int genl_register_family ( s#genl_family * ) 
genl_unregister_family extern int genl_unregister_family ( s#genl_family * ) 
genlmsg_multicast_allns int genlmsg_multicast_allns ( s#sk_buff * , t#u32 , unsigned int , t#gfp_t ) 

/* net/phonet/af_phonet.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##xfrm_policy
s##sec_path
phonet_header_ops extern s#header_ops phonet_header_ops 
s#sockaddr_pn struct sockaddr_pn { t#sa_family_t spn_family ; t#__u8 spn_obj ; t#__u8 spn_dev ; t#__u8 spn_resource ; t#__u8 spn_zero [ sizeof ( struct sockaddr ) - sizeof ( sa_family_t ) - 3 ] ; } 
pn_skb_send int pn_skb_send ( s#sock * , s#sk_buff * , const s#sockaddr_pn * ) 
s#phonet_protocol struct phonet_protocol { const s#proto_ops * ops ; s#proto * prot ; int sock_type ; } 
phonet_proto_register int phonet_proto_register ( int , s#phonet_protocol * ) 
phonet_proto_unregister void phonet_proto_unregister ( int , s#phonet_protocol * ) 

/* net/phonet/socket.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
pn_sock_hash void pn_sock_hash ( s#sock * ) 
pn_sock_unhash void pn_sock_unhash ( s#sock * ) 
phonet_stream_ops extern const s#proto_ops phonet_stream_ops 
pn_sock_get_port int pn_sock_get_port ( s#sock * , unsigned short ) 

/* net/rds/cong.o */
s#rds_cong_map struct rds_cong_map { s#rb_node m_rb_node ; t#__be32 m_addr ; t#wait_queue_head_t m_waitq ; s#list_head m_conn_list ; unsigned long m_page_addrs [ ( ( ( ( ( 65536 / 8 ) ) + ( ( typeof ( ( 65536 / 8 ) ) ) ( ( ( 1UL ) << 12 ) ) - 1 ) ) & ~ ( ( typeof ( ( 65536 / 8 ) ) ) ( ( ( 1UL ) << 12 ) ) - 1 ) ) / ( ( 1UL ) << 12 ) ) ] ; } 
rds_cong_map_updated void rds_cong_map_updated ( s#rds_cong_map * , t#uint64_t ) 

/* net/rds/connection.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s#rds_header struct rds_header { t#__be64 h_sequence ; t#__be64 h_ack ; t#__be32 h_len ; t#__be16 h_sport ; t#__be16 h_dport ; t#u8 h_flags ; t#u8 h_credit ; t#u8 h_padding [ 4 ] ; t#__sum16 h_csum ; t#u8 h_exthdr [ 16 ] ; } 
t#rds_rdma_cookie_t typedef t#u_int64_t rds_rdma_cookie_t 
s#rds_incoming struct rds_incoming { t#atomic_t i_refcount ; s#list_head i_item ; s#rds_connection * i_conn ; s#rds_header i_hdr ; unsigned long i_rx_jiffies ; t#__be32 i_saddr ; t#rds_rdma_cookie_t i_rdma_cookie ; } 
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##in_device
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s#rds_notifier struct rds_notifier { s#list_head n_list ; t#uint64_t n_user_token ; int n_status ; } 
s#rds_rdma_op struct rds_rdma_op { t#u32 r_key ; t#u64 r_remote_addr ; unsigned int r_write : 1 ; unsigned int r_fence : 1 ; unsigned int r_notify : 1 ; unsigned int r_recverr : 1 ; unsigned int r_mapped : 1 ; s#rds_notifier * r_notifier ; unsigned int r_bytes ; unsigned int r_nents ; unsigned int r_count ; s#scatterlist r_sg [ 0 ] ; } 
s#ib_ucontext struct ib_ucontext { s#ib_device * device ; s#list_head pd_list ; s#list_head mr_list ; s#list_head mw_list ; s#list_head cq_list ; s#list_head qp_list ; s#list_head srq_list ; s#list_head ah_list ; int closing ; } 
s#ib_uobject struct ib_uobject { t#u64 user_handle ; s#ib_ucontext * context ; void * object ; s#list_head list ; int id ; s#kref ref ; s#rw_semaphore mutex ; int live ; } 
t#ib_comp_handler typedef void ( * ib_comp_handler ) ( s#ib_cq * , void * ) 
s#ib_cq struct ib_cq { s#ib_device * device ; s#ib_uobject * uobject ; t#ib_comp_handler comp_handler ; void ( * event_handler ) ( s#ib_event * , void * ) ; void * cq_context ; int cqe ; t#atomic_t usecnt ; } 
s#ib_pd struct ib_pd { s#ib_device * device ; s#ib_uobject * uobject ; t#atomic_t usecnt ; } 
s#ib_srq struct ib_srq { s#ib_device * device ; s#ib_pd * pd ; s#ib_uobject * uobject ; void ( * event_handler ) ( s#ib_event * , void * ) ; void * srq_context ; t#atomic_t usecnt ; } 
e#ib_qp_type enum ib_qp_type { IB_QPT_SMI , IB_QPT_GSI , IB_QPT_RC , IB_QPT_UC , IB_QPT_UD , IB_QPT_RAW_IPV6 , IB_QPT_RAW_ETY } 
s#ib_qp struct ib_qp { s#ib_device * device ; s#ib_pd * pd ; s#ib_cq * send_cq ; s#ib_cq * recv_cq ; s#ib_srq * srq ; s#ib_uobject * uobject ; void ( * event_handler ) ( s#ib_event * , void * ) ; void * qp_context ; t#u32 qp_num ; e#ib_qp_type qp_type ; } 
e#ib_event_type enum ib_event_type { IB_EVENT_CQ_ERR , IB_EVENT_QP_FATAL , IB_EVENT_QP_REQ_ERR , IB_EVENT_QP_ACCESS_ERR , IB_EVENT_COMM_EST , IB_EVENT_SQ_DRAINED , IB_EVENT_PATH_MIG , IB_EVENT_PATH_MIG_ERR , IB_EVENT_DEVICE_FATAL , IB_EVENT_PORT_ACTIVE , IB_EVENT_PORT_ERR , IB_EVENT_LID_CHANGE , IB_EVENT_PKEY_CHANGE , IB_EVENT_SM_CHANGE , IB_EVENT_SRQ_ERR , IB_EVENT_SRQ_LIMIT_REACHED , IB_EVENT_QP_LAST_WQE_REACHED , IB_EVENT_CLIENT_REREGISTER } 
s#ib_event struct ib_event { s#ib_device * device ; union { s#ib_cq * cq ; s#ib_qp * qp ; s#ib_srq * srq ; t#u8 port_num ; } element ; e#ib_event_type event ; } 
s#ib_event_handler struct ib_event_handler { s#ib_device * device ; void ( * handler ) ( s#ib_event_handler * , s#ib_event * ) ; s#list_head list ; } 
s##ib_pkey_cache
s##ib_gid_cache
s#ib_cache struct ib_cache { t#rwlock_t lock ; s#ib_event_handler event_handler ; s#ib_pkey_cache * * pkey_cache ; s#ib_gid_cache * * gid_cache ; t#u8 * lmc_cache ; } 
s##iw_cm_verbs
s#ib_protocol_stats struct ib_protocol_stats { } 
s#iw_protocol_stats struct iw_protocol_stats { t#u64 ipInReceives ; t#u64 ipInHdrErrors ; t#u64 ipInTooBigErrors ; t#u64 ipInNoRoutes ; t#u64 ipInAddrErrors ; t#u64 ipInUnknownProtos ; t#u64 ipInTruncatedPkts ; t#u64 ipInDiscards ; t#u64 ipInDelivers ; t#u64 ipOutForwDatagrams ; t#u64 ipOutRequests ; t#u64 ipOutDiscards ; t#u64 ipOutNoRoutes ; t#u64 ipReasmTimeout ; t#u64 ipReasmReqds ; t#u64 ipReasmOKs ; t#u64 ipReasmFails ; t#u64 ipFragOKs ; t#u64 ipFragFails ; t#u64 ipFragCreates ; t#u64 ipInMcastPkts ; t#u64 ipOutMcastPkts ; t#u64 ipInBcastPkts ; t#u64 ipOutBcastPkts ; t#u64 tcpRtoAlgorithm ; t#u64 tcpRtoMin ; t#u64 tcpRtoMax ; t#u64 tcpMaxConn ; t#u64 tcpActiveOpens ; t#u64 tcpPassiveOpens ; t#u64 tcpAttemptFails ; t#u64 tcpEstabResets ; t#u64 tcpCurrEstab ; t#u64 tcpInSegs ; t#u64 tcpOutSegs ; t#u64 tcpRetransSegs ; t#u64 tcpInErrs ; t#u64 tcpOutRsts ; } 
u#rdma_protocol_stats union rdma_protocol_stats { s#ib_protocol_stats ib ; s#iw_protocol_stats iw ; } 
e#ib_atomic_cap enum ib_atomic_cap { IB_ATOMIC_NONE , IB_ATOMIC_HCA , IB_ATOMIC_GLOB } 
s#ib_device_attr struct ib_device_attr { t#u64 fw_ver ; t#__be64 sys_image_guid ; t#u64 max_mr_size ; t#u64 page_size_cap ; t#u32 vendor_id ; t#u32 vendor_part_id ; t#u32 hw_ver ; int max_qp ; int max_qp_wr ; int device_cap_flags ; int max_sge ; int max_sge_rd ; int max_cq ; int max_cqe ; int max_mr ; int max_pd ; int max_qp_rd_atom ; int max_ee_rd_atom ; int max_res_rd_atom ; int max_qp_init_rd_atom ; int max_ee_init_rd_atom ; e#ib_atomic_cap atomic_cap ; int max_ee ; int max_rdd ; int max_mw ; int max_raw_ipv6_qp ; int max_raw_ethy_qp ; int max_mcast_grp ; int max_mcast_qp_attach ; int max_total_mcast_qp_attach ; int max_ah ; int max_fmr ; int max_map_per_fmr ; int max_srq ; int max_srq_wr ; int max_srq_sge ; unsigned int max_fast_reg_page_list_len ; t#u16 max_pkeys ; t#u8 local_ca_ack_delay ; } 
e#ib_port_state enum ib_port_state { IB_PORT_NOP = 0 , IB_PORT_DOWN = 1 , IB_PORT_INIT = 2 , IB_PORT_ARMED = 3 , IB_PORT_ACTIVE = 4 , IB_PORT_ACTIVE_DEFER = 5 } 
e#ib_mtu enum ib_mtu { IB_MTU_256 = 1 , IB_MTU_512 = 2 , IB_MTU_1024 = 3 , IB_MTU_2048 = 4 , IB_MTU_4096 = 5 } 
s#ib_port_attr struct ib_port_attr { e#ib_port_state state ; e#ib_mtu max_mtu ; e#ib_mtu active_mtu ; int gid_tbl_len ; t#u32 port_cap_flags ; t#u32 max_msg_sz ; t#u32 bad_pkey_cntr ; t#u32 qkey_viol_cntr ; t#u16 pkey_tbl_len ; t#u16 lid ; t#u16 sm_lid ; t#u8 lmc ; t#u8 max_vl_num ; t#u8 sm_sl ; t#u8 subnet_timeout ; t#u8 init_type_reply ; t#u8 active_width ; t#u8 active_speed ; t#u8 phys_state ; } 
u#ib_gid union ib_gid { t#u8 raw [ 16 ] ; struct { t#__be64 subnet_prefix ; t#__be64 interface_id ; } global ; } 
s#ib_device_modify struct ib_device_modify { t#u64 sys_image_guid ; char node_desc [ 64 ] ; } 
s#ib_port_modify struct ib_port_modify { t#u32 set_port_cap_mask ; t#u32 clr_port_cap_mask ; t#u8 init_type ; } 
s#ib_udata struct ib_udata { void * inbuf ; void * outbuf ; t#size_t inlen ; t#size_t outlen ; } 
s#ib_ah struct ib_ah { s#ib_device * device ; s#ib_pd * pd ; s#ib_uobject * uobject ; } 
s#ib_global_route struct ib_global_route { u#ib_gid dgid ; t#u32 flow_label ; t#u8 sgid_index ; t#u8 hop_limit ; t#u8 traffic_class ; } 
s#ib_ah_attr struct ib_ah_attr { s#ib_global_route grh ; t#u16 dlid ; t#u8 sl ; t#u8 src_path_bits ; t#u8 static_rate ; t#u8 ah_flags ; t#u8 port_num ; } 
s#ib_srq_attr struct ib_srq_attr { t#u32 max_wr ; t#u32 max_sge ; t#u32 srq_limit ; } 
s#ib_srq_init_attr struct ib_srq_init_attr { void ( * event_handler ) ( s#ib_event * , void * ) ; void * srq_context ; s#ib_srq_attr attr ; } 
e#ib_srq_attr_mask enum ib_srq_attr_mask { IB_SRQ_MAX_WR = 1 << 0 , IB_SRQ_LIMIT = 1 << 1 , } 
s#ib_sge struct ib_sge { t#u64 addr ; t#u32 length ; t#u32 lkey ; } 
s#ib_recv_wr struct ib_recv_wr { s#ib_recv_wr * next ; t#u64 wr_id ; s#ib_sge * sg_list ; int num_sge ; } 
s#ib_qp_cap struct ib_qp_cap { t#u32 max_send_wr ; t#u32 max_recv_wr ; t#u32 max_send_sge ; t#u32 max_recv_sge ; t#u32 max_inline_data ; } 
e#ib_sig_type enum ib_sig_type { IB_SIGNAL_ALL_WR , IB_SIGNAL_REQ_WR } 
e#ib_qp_create_flags enum ib_qp_create_flags { IB_QP_CREATE_IPOIB_UD_LSO = 1 << 0 , IB_QP_CREATE_BLOCK_MULTICAST_LOOPBACK = 1 << 1 , } 
s#ib_qp_init_attr struct ib_qp_init_attr { void ( * event_handler ) ( s#ib_event * , void * ) ; void * qp_context ; s#ib_cq * send_cq ; s#ib_cq * recv_cq ; s#ib_srq * srq ; s#ib_qp_cap cap ; e#ib_sig_type sq_sig_type ; e#ib_qp_type qp_type ; e#ib_qp_create_flags create_flags ; t#u8 port_num ; } 
e#ib_qp_state enum ib_qp_state { IB_QPS_RESET , IB_QPS_INIT , IB_QPS_RTR , IB_QPS_RTS , IB_QPS_SQD , IB_QPS_SQE , IB_QPS_ERR } 
e#ib_mig_state enum ib_mig_state { IB_MIG_MIGRATED , IB_MIG_REARM , IB_MIG_ARMED } 
s#ib_qp_attr struct ib_qp_attr { e#ib_qp_state qp_state ; e#ib_qp_state cur_qp_state ; e#ib_mtu path_mtu ; e#ib_mig_state path_mig_state ; t#u32 qkey ; t#u32 rq_psn ; t#u32 sq_psn ; t#u32 dest_qp_num ; int qp_access_flags ; s#ib_qp_cap cap ; s#ib_ah_attr ah_attr ; s#ib_ah_attr alt_ah_attr ; t#u16 pkey_index ; t#u16 alt_pkey_index ; t#u8 en_sqd_async_notify ; t#u8 sq_draining ; t#u8 max_rd_atomic ; t#u8 max_dest_rd_atomic ; t#u8 min_rnr_timer ; t#u8 port_num ; t#u8 timeout ; t#u8 retry_cnt ; t#u8 rnr_retry ; t#u8 alt_port_num ; t#u8 alt_timeout ; } 
e#ib_wr_opcode enum ib_wr_opcode { IB_WR_RDMA_WRITE , IB_WR_RDMA_WRITE_WITH_IMM , IB_WR_SEND , IB_WR_SEND_WITH_IMM , IB_WR_RDMA_READ , IB_WR_ATOMIC_CMP_AND_SWP , IB_WR_ATOMIC_FETCH_AND_ADD , IB_WR_LSO , IB_WR_SEND_WITH_INV , IB_WR_RDMA_READ_WITH_INV , IB_WR_LOCAL_INV , IB_WR_FAST_REG_MR , } 
s#ib_fast_reg_page_list struct ib_fast_reg_page_list { s#ib_device * device ; t#u64 * page_list ; unsigned int max_page_list_len ; } 
s#ib_send_wr struct ib_send_wr { s#ib_send_wr * next ; t#u64 wr_id ; s#ib_sge * sg_list ; int num_sge ; e#ib_wr_opcode opcode ; int send_flags ; union { t#__be32 imm_data ; t#u32 invalidate_rkey ; } ex ; union { struct { t#u64 remote_addr ; t#u32 rkey ; } rdma ; struct { t#u64 remote_addr ; t#u64 compare_add ; t#u64 swap ; t#u32 rkey ; } atomic ; struct { s#ib_ah * ah ; void * header ; int hlen ; int mss ; t#u32 remote_qpn ; t#u32 remote_qkey ; t#u16 pkey_index ; t#u8 port_num ; } ud ; struct { t#u64 iova_start ; s#ib_fast_reg_page_list * page_list ; unsigned int page_shift ; unsigned int page_list_len ; t#u32 length ; int access_flags ; t#u32 rkey ; } fast_reg ; } wr ; } 
e#ib_wc_status enum ib_wc_status { IB_WC_SUCCESS , IB_WC_LOC_LEN_ERR , IB_WC_LOC_QP_OP_ERR , IB_WC_LOC_EEC_OP_ERR , IB_WC_LOC_PROT_ERR , IB_WC_WR_FLUSH_ERR , IB_WC_MW_BIND_ERR , IB_WC_BAD_RESP_ERR , IB_WC_LOC_ACCESS_ERR , IB_WC_REM_INV_REQ_ERR , IB_WC_REM_ACCESS_ERR , IB_WC_REM_OP_ERR , IB_WC_RETRY_EXC_ERR , IB_WC_RNR_RETRY_EXC_ERR , IB_WC_LOC_RDD_VIOL_ERR , IB_WC_REM_INV_RD_REQ_ERR , IB_WC_REM_ABORT_ERR , IB_WC_INV_EECN_ERR , IB_WC_INV_EEC_STATE_ERR , IB_WC_FATAL_ERR , IB_WC_RESP_TIMEOUT_ERR , IB_WC_GENERAL_ERR } 
e#ib_wc_opcode enum ib_wc_opcode { IB_WC_SEND , IB_WC_RDMA_WRITE , IB_WC_RDMA_READ , IB_WC_COMP_SWAP , IB_WC_FETCH_ADD , IB_WC_BIND_MW , IB_WC_LSO , IB_WC_LOCAL_INV , IB_WC_FAST_REG_MR , IB_WC_RECV = 1 << 7 , IB_WC_RECV_RDMA_WITH_IMM } 
s#ib_wc struct ib_wc { t#u64 wr_id ; e#ib_wc_status status ; e#ib_wc_opcode opcode ; t#u32 vendor_err ; t#u32 byte_len ; s#ib_qp * qp ; union { t#__be32 imm_data ; t#u32 invalidate_rkey ; } ex ; t#u32 src_qp ; int wc_flags ; t#u16 pkey_index ; t#u16 slid ; t#u8 sl ; t#u8 dlid_path_bits ; t#u8 port_num ; int csum_ok ; } 
e#ib_cq_notify_flags enum ib_cq_notify_flags { IB_CQ_SOLICITED = 1 << 0 , IB_CQ_NEXT_COMP = 1 << 1 , IB_CQ_SOLICITED_MASK = IB_CQ_SOLICITED | IB_CQ_NEXT_COMP , IB_CQ_REPORT_MISSED_EVENTS = 1 << 2 , } 
s#ib_mr struct ib_mr { s#ib_device * device ; s#ib_pd * pd ; s#ib_uobject * uobject ; t#u32 lkey ; t#u32 rkey ; t#atomic_t usecnt ; } 
s#ib_phys_buf struct ib_phys_buf { t#u64 addr ; t#u64 size ; } 
s#ib_mr_attr struct ib_mr_attr { s#ib_pd * pd ; t#u64 device_virt_addr ; t#u64 size ; int mr_access_flags ; t#u32 lkey ; t#u32 rkey ; } 
s#ib_mw struct ib_mw { s#ib_device * device ; s#ib_pd * pd ; s#ib_uobject * uobject ; t#u32 rkey ; } 
s#ib_mw_bind struct ib_mw_bind { s#ib_mr * mr ; t#u64 wr_id ; t#u64 addr ; t#u32 length ; int send_flags ; int mw_access_flags ; } 
s#ib_fmr struct ib_fmr { s#ib_device * device ; s#ib_pd * pd ; s#list_head list ; t#u32 lkey ; t#u32 rkey ; } 
s#ib_fmr_attr struct ib_fmr_attr { int max_pages ; int max_maps ; t#u8 page_shift ; } 
s#ib_grh struct ib_grh { t#__be32 version_tclass_flow ; t#__be16 paylen ; t#u8 next_hdr ; t#u8 hop_limit ; u#ib_gid sgid ; u#ib_gid dgid ; } 
s#ib_mad_hdr struct ib_mad_hdr { t#u8 base_version ; t#u8 mgmt_class ; t#u8 class_version ; t#u8 method ; t#__be16 status ; t#__be16 class_specific ; t#__be64 tid ; t#__be16 attr_id ; t#__be16 resv ; t#__be32 attr_mod ; } 
s#ib_mad struct ib_mad { s#ib_mad_hdr mad_hdr ; t#u8 data [ IB_MGMT_MAD_DATA ] ; } 
s#ib_dma_mapping_ops struct ib_dma_mapping_ops { int ( * mapping_error ) ( s#ib_device * , t#u64 ) ; t#u64 ( * map_single ) ( s#ib_device * , void * , t#size_t , e#dma_data_direction ) ; void ( * unmap_single ) ( s#ib_device * , t#u64 , t#size_t , e#dma_data_direction ) ; t#u64 ( * map_page ) ( s#ib_device * , s#page * , unsigned long , t#size_t , e#dma_data_direction ) ; void ( * unmap_page ) ( s#ib_device * , t#u64 , t#size_t , e#dma_data_direction ) ; int ( * map_sg ) ( s#ib_device * , s#scatterlist * , int , e#dma_data_direction ) ; void ( * unmap_sg ) ( s#ib_device * , s#scatterlist * , int , e#dma_data_direction ) ; t#u64 ( * dma_address ) ( s#ib_device * , s#scatterlist * ) ; unsigned int ( * dma_len ) ( s#ib_device * , s#scatterlist * ) ; void ( * sync_single_for_cpu ) ( s#ib_device * , t#u64 , t#size_t , e#dma_data_direction ) ; void ( * sync_single_for_device ) ( s#ib_device * , t#u64 , t#size_t , e#dma_data_direction ) ; void * ( * alloc_coherent ) ( s#ib_device * , t#size_t , t#u64 * , t#gfp_t ) ; void ( * free_coherent ) ( s#ib_device * , t#size_t , void * , t#u64 ) ; } 
s#ib_device struct ib_device { s#device * dma_device ; char name [ 64 ] ; s#list_head event_handler_list ; t#spinlock_t event_handler_lock ; s#list_head core_list ; s#list_head client_data_list ; t#spinlock_t client_data_lock ; s#ib_cache cache ; int * pkey_tbl_len ; int * gid_tbl_len ; int num_comp_vectors ; s#iw_cm_verbs * iwcm ; int ( * get_protocol_stats ) ( s#ib_device * , u#rdma_protocol_stats * ) ; int ( * query_device ) ( s#ib_device * , s#ib_device_attr * ) ; int ( * query_port ) ( s#ib_device * , t#u8 , s#ib_port_attr * ) ; int ( * query_gid ) ( s#ib_device * , t#u8 , int , u#ib_gid * ) ; int ( * query_pkey ) ( s#ib_device * , t#u8 , t#u16 , t#u16 * ) ; int ( * modify_device ) ( s#ib_device * , int , s#ib_device_modify * ) ; int ( * modify_port ) ( s#ib_device * , t#u8 , int , s#ib_port_modify * ) ; s#ib_ucontext * ( * alloc_ucontext ) ( s#ib_device * , s#ib_udata * ) ; int ( * dealloc_ucontext ) ( s#ib_ucontext * ) ; int ( * mmap ) ( s#ib_ucontext * , s#vm_area_struct * ) ; s#ib_pd * ( * alloc_pd ) ( s#ib_device * , s#ib_ucontext * , s#ib_udata * ) ; int ( * dealloc_pd ) ( s#ib_pd * ) ; s#ib_ah * ( * create_ah ) ( s#ib_pd * , s#ib_ah_attr * ) ; int ( * modify_ah ) ( s#ib_ah * , s#ib_ah_attr * ) ; int ( * query_ah ) ( s#ib_ah * , s#ib_ah_attr * ) ; int ( * destroy_ah ) ( s#ib_ah * ) ; s#ib_srq * ( * create_srq ) ( s#ib_pd * , s#ib_srq_init_attr * , s#ib_udata * ) ; int ( * modify_srq ) ( s#ib_srq * , s#ib_srq_attr * , e#ib_srq_attr_mask , s#ib_udata * ) ; int ( * query_srq ) ( s#ib_srq * , s#ib_srq_attr * ) ; int ( * destroy_srq ) ( s#ib_srq * ) ; int ( * post_srq_recv ) ( s#ib_srq * , s#ib_recv_wr * , s#ib_recv_wr * * ) ; s#ib_qp * ( * create_qp ) ( s#ib_pd * , s#ib_qp_init_attr * , s#ib_udata * ) ; int ( * modify_qp ) ( s#ib_qp * , s#ib_qp_attr * , int , s#ib_udata * ) ; int ( * query_qp ) ( s#ib_qp * , s#ib_qp_attr * , int , s#ib_qp_init_attr * ) ; int ( * destroy_qp ) ( s#ib_qp * ) ; int ( * post_send ) ( s#ib_qp * , s#ib_send_wr * , s#ib_send_wr * * ) ; int ( * post_recv ) ( s#ib_qp * , s#ib_recv_wr * , s#ib_recv_wr * * ) ; s#ib_cq * ( * create_cq ) ( s#ib_device * , int , int , s#ib_ucontext * , s#ib_udata * ) ; int ( * modify_cq ) ( s#ib_cq * , t#u16 , t#u16 ) ; int ( * destroy_cq ) ( s#ib_cq * ) ; int ( * resize_cq ) ( s#ib_cq * , int , s#ib_udata * ) ; int ( * poll_cq ) ( s#ib_cq * , int , s#ib_wc * ) ; int ( * peek_cq ) ( s#ib_cq * , int ) ; int ( * req_notify_cq ) ( s#ib_cq * , e#ib_cq_notify_flags ) ; int ( * req_ncomp_notif ) ( s#ib_cq * , int ) ; s#ib_mr * ( * get_dma_mr ) ( s#ib_pd * , int ) ; s#ib_mr * ( * reg_phys_mr ) ( s#ib_pd * , s#ib_phys_buf * , int , int , t#u64 * ) ; s#ib_mr * ( * reg_user_mr ) ( s#ib_pd * , t#u64 , t#u64 , t#u64 , int , s#ib_udata * ) ; int ( * query_mr ) ( s#ib_mr * , s#ib_mr_attr * ) ; int ( * dereg_mr ) ( s#ib_mr * ) ; s#ib_mr * ( * alloc_fast_reg_mr ) ( s#ib_pd * , int ) ; s#ib_fast_reg_page_list * ( * alloc_fast_reg_page_list ) ( s#ib_device * , int ) ; void ( * free_fast_reg_page_list ) ( s#ib_fast_reg_page_list * ) ; int ( * rereg_phys_mr ) ( s#ib_mr * , int , s#ib_pd * , s#ib_phys_buf * , int , int , t#u64 * ) ; s#ib_mw * ( * alloc_mw ) ( s#ib_pd * ) ; int ( * bind_mw ) ( s#ib_qp * , s#ib_mw * , s#ib_mw_bind * ) ; int ( * dealloc_mw ) ( s#ib_mw * ) ; s#ib_fmr * ( * alloc_fmr ) ( s#ib_pd * , int , s#ib_fmr_attr * ) ; int ( * map_phys_fmr ) ( s#ib_fmr * , t#u64 * , int , t#u64 ) ; int ( * unmap_fmr ) ( s#list_head * ) ; int ( * dealloc_fmr ) ( s#ib_fmr * ) ; int ( * attach_mcast ) ( s#ib_qp * , u#ib_gid * , t#u16 ) ; int ( * detach_mcast ) ( s#ib_qp * , u#ib_gid * , t#u16 ) ; int ( * process_mad ) ( s#ib_device * , int , t#u8 , s#ib_wc * , s#ib_grh * , s#ib_mad * , s#ib_mad * ) ; s#ib_dma_mapping_ops * dma_ops ; s#module * owner ; s#device dev ; s#kobject * ports_parent ; s#list_head port_list ; enum { IB_DEV_UNINITIALIZED , IB_DEV_REGISTERED , IB_DEV_UNREGISTERED } reg_state ; t#u64 uverbs_cmd_mask ; int uverbs_abi_ver ; char node_desc [ 64 ] ; t#__be64 node_guid ; t#u32 local_dma_lkey ; t#u8 node_type ; t#u8 phys_port_cnt ; } 
e#rdma_cm_event_type enum rdma_cm_event_type { RDMA_CM_EVENT_ADDR_RESOLVED , RDMA_CM_EVENT_ADDR_ERROR , RDMA_CM_EVENT_ROUTE_RESOLVED , RDMA_CM_EVENT_ROUTE_ERROR , RDMA_CM_EVENT_CONNECT_REQUEST , RDMA_CM_EVENT_CONNECT_RESPONSE , RDMA_CM_EVENT_CONNECT_ERROR , RDMA_CM_EVENT_UNREACHABLE , RDMA_CM_EVENT_REJECTED , RDMA_CM_EVENT_ESTABLISHED , RDMA_CM_EVENT_DISCONNECTED , RDMA_CM_EVENT_DEVICE_REMOVAL , RDMA_CM_EVENT_MULTICAST_JOIN , RDMA_CM_EVENT_MULTICAST_ERROR , RDMA_CM_EVENT_ADDR_CHANGE , RDMA_CM_EVENT_TIMEWAIT_EXIT } 
s#rdma_conn_param struct rdma_conn_param { const void * private_data ; t#u8 private_data_len ; t#u8 responder_resources ; t#u8 initiator_depth ; t#u8 flow_control ; t#u8 retry_count ; t#u8 rnr_retry_count ; t#u8 srq ; t#u32 qp_num ; } 
s#rdma_ud_param struct rdma_ud_param { const void * private_data ; t#u8 private_data_len ; s#ib_ah_attr ah_attr ; t#u32 qp_num ; t#u32 qkey ; } 
s#rdma_cm_event struct rdma_cm_event { e#rdma_cm_event_type event ; int status ; union { s#rdma_conn_param conn ; s#rdma_ud_param ud ; } param ; } 
t#rdma_cm_event_handler typedef int ( * rdma_cm_event_handler ) ( s#rdma_cm_id * , s#rdma_cm_event * ) 
e#rdma_node_type enum rdma_node_type { RDMA_NODE_IB_CA = 1 , RDMA_NODE_IB_SWITCH , RDMA_NODE_IB_ROUTER , RDMA_NODE_RNIC } 
s#rdma_dev_addr struct rdma_dev_addr { unsigned char src_dev_addr [ 32 ] ; unsigned char dst_dev_addr [ 32 ] ; unsigned char broadcast [ 32 ] ; e#rdma_node_type dev_type ; s#net_device * src_dev ; } 
s#rdma_addr struct rdma_addr { s#__kernel_sockaddr_storage src_addr ; s#__kernel_sockaddr_storage dst_addr ; s#rdma_dev_addr dev_addr ; } 
s#ib_sa_path_rec struct ib_sa_path_rec { t#__be64 service_id ; u#ib_gid dgid ; u#ib_gid sgid ; t#__be16 dlid ; t#__be16 slid ; int raw_traffic ; t#__be32 flow_label ; t#u8 hop_limit ; t#u8 traffic_class ; int reversible ; t#u8 numb_path ; t#__be16 pkey ; t#__be16 qos_class ; t#u8 sl ; t#u8 mtu_selector ; t#u8 mtu ; t#u8 rate_selector ; t#u8 rate ; t#u8 packet_life_time_selector ; t#u8 packet_life_time ; t#u8 preference ; } 
s#rdma_route struct rdma_route { s#rdma_addr addr ; s#ib_sa_path_rec * path_rec ; int num_paths ; } 
e#rdma_port_space enum rdma_port_space { RDMA_PS_SDP = 0x0001 , RDMA_PS_IPOIB = 0x0002 , RDMA_PS_TCP = 0x0106 , RDMA_PS_UDP = 0x0111 , RDMA_PS_SCTP = 0x0183 } 
s#rdma_cm_id struct rdma_cm_id { s#ib_device * device ; void * context ; s#ib_qp * qp ; t#rdma_cm_event_handler event_handler ; s#rdma_route route ; e#rdma_port_space ps ; t#u8 port_num ; } 
s##rds_info_iterator
s#rds_transport struct rds_transport { char t_name [ 16 ] ; s#list_head t_item ; s#module * t_owner ; unsigned int t_prefer_loopback : 1 ; unsigned int t_type ; int ( * laddr_check ) ( t#__be32 ) ; int ( * conn_alloc ) ( s#rds_connection * , t#gfp_t ) ; void ( * conn_free ) ( void * ) ; int ( * conn_connect ) ( s#rds_connection * ) ; void ( * conn_shutdown ) ( s#rds_connection * ) ; void ( * xmit_prepare ) ( s#rds_connection * ) ; void ( * xmit_complete ) ( s#rds_connection * ) ; int ( * xmit ) ( s#rds_connection * , s#rds_message * , unsigned int , unsigned int , unsigned int ) ; int ( * xmit_cong_map ) ( s#rds_connection * , s#rds_cong_map * , unsigned long ) ; int ( * xmit_rdma ) ( s#rds_connection * , s#rds_rdma_op * ) ; int ( * recv ) ( s#rds_connection * ) ; int ( * inc_copy_to_user ) ( s#rds_incoming * , s#iovec * , t#size_t ) ; void ( * inc_purge ) ( s#rds_incoming * ) ; void ( * inc_free ) ( s#rds_incoming * ) ; int ( * cm_handle_connect ) ( s#rdma_cm_id * , s#rdma_cm_event * ) ; int ( * cm_initiate_connect ) ( s#rdma_cm_id * ) ; void ( * cm_connect_complete ) ( s#rds_connection * , s#rdma_cm_event * ) ; unsigned int ( * stats_info_copy ) ( s#rds_info_iterator * , unsigned int ) ; void ( * exit ) ( void ) ; void * ( * get_mr ) ( s#scatterlist * , unsigned long , s#rds_sock * , t#u32 * ) ; void ( * sync_mr ) ( void * , int ) ; void ( * free_mr ) ( void * , int ) ; void ( * flush_mrs ) ( void ) ; } 
s#rds_sock struct rds_sock { s#sock rs_sk ; t#u64 rs_user_addr ; t#u64 rs_user_bytes ; s#rb_node rs_bound_node ; t#__be32 rs_bound_addr ; t#__be32 rs_conn_addr ; t#__be16 rs_bound_port ; t#__be16 rs_conn_port ; s#rds_transport * rs_transport ; s#rds_connection * rs_conn ; int rs_congested ; t#spinlock_t rs_lock ; s#list_head rs_send_queue ; t#u32 rs_snd_bytes ; int rs_rcv_bytes ; s#list_head rs_notify_queue ; t#uint64_t rs_cong_mask ; t#uint64_t rs_cong_notify ; s#list_head rs_cong_list ; unsigned long rs_cong_track ; t#rwlock_t rs_recv_lock ; s#list_head rs_recv_queue ; s#list_head rs_item ; t#spinlock_t rs_rdma_lock ; s#rb_root rs_rdma_keys ; unsigned char rs_recverr , rs_cong_monitor ; } 
s#rds_mr struct rds_mr { s#rb_node r_rb_node ; t#atomic_t r_refcount ; t#u32 r_key ; unsigned int r_use_once : 1 ; unsigned int r_invalidate : 1 ; unsigned int r_write : 1 ; unsigned long r_state ; s#rds_sock * r_sock ; s#rds_transport * r_trans ; void * r_trans_private ; } 
s#rds_message struct rds_message { t#atomic_t m_refcount ; s#list_head m_sock_item ; s#list_head m_conn_item ; s#rds_incoming m_inc ; t#u64 m_ack_seq ; t#__be32 m_daddr ; unsigned long m_flags ; t#spinlock_t m_rs_lock ; s#rds_sock * m_rs ; s#rds_rdma_op * m_rdma_op ; t#rds_rdma_cookie_t m_rdma_cookie ; s#rds_mr * m_rdma_mr ; unsigned int m_nents ; unsigned int m_count ; s#scatterlist m_sg [ 0 ] ; } 
s#rds_connection struct rds_connection { s#hlist_node c_hash_node ; t#__be32 c_laddr ; t#__be32 c_faddr ; unsigned int c_loopback : 1 ; s#rds_connection * c_passive ; s#rds_cong_map * c_lcong ; s#rds_cong_map * c_fcong ; s#mutex c_send_lock ; s#rds_message * c_xmit_rm ; unsigned long c_xmit_sg ; unsigned int c_xmit_hdr_off ; unsigned int c_xmit_data_off ; unsigned int c_xmit_rdma_sent ; t#spinlock_t c_lock ; t#u64 c_next_tx_seq ; s#list_head c_send_queue ; s#list_head c_retrans ; t#u64 c_next_rx_seq ; s#rds_transport * c_trans ; void * c_transport_data ; t#atomic_t c_state ; unsigned long c_flags ; unsigned long c_reconnect_jiffies ; s#delayed_work c_send_w ; s#delayed_work c_recv_w ; s#delayed_work c_conn_w ; s#work_struct c_down_w ; s#mutex c_cm_lock ; s#list_head c_map_item ; unsigned long c_map_queued ; unsigned long c_map_offset ; unsigned long c_map_bytes ; unsigned int c_unacked_packets ; unsigned int c_unacked_bytes ; unsigned int c_version ; } 
rds_conn_create s#rds_connection * rds_conn_create ( t#__be32 , t#__be32 , s#rds_transport * , t#gfp_t ) 
rds_conn_create_outgoing s#rds_connection * rds_conn_create_outgoing ( t#__be32 , t#__be32 , s#rds_transport * , t#gfp_t ) 
rds_conn_destroy void rds_conn_destroy ( s#rds_connection * ) 
s#rds_info_lengths struct rds_info_lengths { unsigned int nr ; unsigned int each ; } 
rds_for_each_conn_info void rds_for_each_conn_info ( s#socket * , unsigned int , s#rds_info_iterator * , s#rds_info_lengths * , int ( * ) ( s#rds_connection * , void * ) , t#size_t ) 
rds_conn_drop void rds_conn_drop ( s#rds_connection * ) 

/* net/rds/info.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s#rds_info_iterator struct rds_info_iterator { s#page * * pages ; void * addr ; unsigned long offset ; } 
t#rds_info_func typedef void ( * rds_info_func ) ( s#socket * , unsigned int , s#rds_info_iterator * , s#rds_info_lengths * ) 
rds_info_register_func void rds_info_register_func ( int , t#rds_info_func ) 
rds_info_deregister_func void rds_info_deregister_func ( int , t#rds_info_func ) 
rds_info_copy void rds_info_copy ( s#rds_info_iterator * , void * , unsigned long ) 

/* net/rds/message.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##ib_pkey_cache
s##ib_gid_cache
s##iw_cm_verbs
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##xfrm_policy
s##sec_path
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##rds_info_iterator
rds_message_addref void rds_message_addref ( s#rds_message * ) 
rds_message_put void rds_message_put ( s#rds_message * ) 
rds_message_populate_header void rds_message_populate_header ( s#rds_header * , t#__be16 , t#__be16 , t#u64 ) 
rds_message_add_extension int rds_message_add_extension ( s#rds_header * , unsigned int , const void * , unsigned int ) 
rds_message_add_rdma_dest_extension int rds_message_add_rdma_dest_extension ( s#rds_header * , t#u32 , t#u32 ) 
rds_message_unmapped void rds_message_unmapped ( s#rds_message * ) 

/* net/rds/page.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
rds_page_copy_user int rds_page_copy_user ( s#page * , unsigned long , void * , unsigned long , int ) 

/* net/rds/recv.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##ib_pkey_cache
s##ib_gid_cache
s##iw_cm_verbs
s##rds_info_iterator
rds_inc_init void rds_inc_init ( s#rds_incoming * , s#rds_connection * , t#__be32 ) 
rds_inc_addref void rds_inc_addref ( s#rds_incoming * ) 
rds_inc_put void rds_inc_put ( s#rds_incoming * ) 
e#km_type enum km_type { KM_BOUNCE_READ , KM_SKB_SUNRPC_DATA , KM_SKB_DATA_SOFTIRQ , KM_USER0 , KM_USER1 , KM_BIO_SRC_IRQ , KM_BIO_DST_IRQ , KM_PTE0 , KM_PTE1 , KM_IRQ0 , KM_IRQ1 , KM_SOFTIRQ0 , KM_SOFTIRQ1 , KM_SYNC_ICACHE , KM_SYNC_DCACHE , KM_UML_USERCOPY , KM_IRQ_PTE , KM_NMI , KM_NMI_PTE , KM_KDB , KM_TYPE_NR } 
rds_recv_incoming void rds_recv_incoming ( s#rds_connection * , t#__be32 , t#__be32 , s#rds_incoming * , t#gfp_t , e#km_type ) 

/* net/rds/send.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##ib_pkey_cache
s##ib_gid_cache
s##iw_cm_verbs
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##xfrm_policy
s##sec_path
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##rds_info_iterator
rds_rdma_send_complete void rds_rdma_send_complete ( s#rds_message * , int ) 
rds_send_get_message s#rds_message * rds_send_get_message ( s#rds_connection * , s#rds_rdma_op * ) 
t#is_acked_func typedef int ( * is_acked_func ) ( s#rds_message * , t#uint64_t ) 
rds_send_drop_acked void rds_send_drop_acked ( s#rds_connection * , t#u64 , t#is_acked_func ) 

/* net/rds/stats.o */
s#rds_statistics struct rds_statistics { t#uint64_t s_conn_reset ; t#uint64_t s_recv_drop_bad_checksum ; t#uint64_t s_recv_drop_old_seq ; t#uint64_t s_recv_drop_no_sock ; t#uint64_t s_recv_drop_dead_sock ; t#uint64_t s_recv_deliver_raced ; t#uint64_t s_recv_delivered ; t#uint64_t s_recv_queued ; t#uint64_t s_recv_immediate_retry ; t#uint64_t s_recv_delayed_retry ; t#uint64_t s_recv_ack_required ; t#uint64_t s_recv_rdma_bytes ; t#uint64_t s_recv_ping ; t#uint64_t s_send_queue_empty ; t#uint64_t s_send_queue_full ; t#uint64_t s_send_sem_contention ; t#uint64_t s_send_sem_queue_raced ; t#uint64_t s_send_immediate_retry ; t#uint64_t s_send_delayed_retry ; t#uint64_t s_send_drop_acked ; t#uint64_t s_send_ack_required ; t#uint64_t s_send_queued ; t#uint64_t s_send_rdma ; t#uint64_t s_send_rdma_bytes ; t#uint64_t s_send_pong ; t#uint64_t s_page_remainder_hit ; t#uint64_t s_page_remainder_miss ; t#uint64_t s_copy_to_user ; t#uint64_t s_copy_from_user ; t#uint64_t s_cong_update_queued ; t#uint64_t s_cong_update_received ; t#uint64_t s_cong_send_error ; t#uint64_t s_cong_send_blocked ; } 
per_cpu__rds_stats extern __attribute__ ( ( section ( ".data.percpu" "" ) ) ) __typeof__ ( s#rds_statistics ) per_cpu__rds_stats 
s##rds_info_iterator
rds_stats_info_copy void rds_stats_info_copy ( s#rds_info_iterator * , t#uint64_t * , const char * const * , t#size_t ) 

/* net/rds/threads.o */
s##workqueue_struct
rds_wq extern s#workqueue_struct * rds_wq 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##rds_rdma_op
s##ib_pkey_cache
s##ib_gid_cache
s##iw_cm_verbs
s##rds_info_iterator
s##rds_mr
rds_connect_complete void rds_connect_complete ( s#rds_connection * ) 

/* net/rds/transport.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##nameidata
s##vfsmount
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##rds_rdma_op
s##rds_mr
s##ib_pkey_cache
s##ib_gid_cache
s##iw_cm_verbs
s##rds_info_iterator
rds_trans_register int rds_trans_register ( s#rds_transport * ) 
rds_trans_unregister void rds_trans_unregister ( s#rds_transport * ) 

/* net/rfkill/core.o */
e#rfkill_type enum rfkill_type { RFKILL_TYPE_ALL = 0 , RFKILL_TYPE_WLAN , RFKILL_TYPE_BLUETOOTH , RFKILL_TYPE_UWB , RFKILL_TYPE_WIMAX , RFKILL_TYPE_WWAN , RFKILL_TYPE_GPS , NUM_RFKILL_TYPES , } 
s#rfkill_ops struct rfkill_ops { void ( * poll ) ( s#rfkill * , void * ) ; void ( * query ) ( s#rfkill * , void * ) ; int ( * set_block ) ( void * , t#bool ) ; } 
s##device_private
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##sysfs_dirent
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s#rfkill struct rfkill { t#spinlock_t lock ; const char * name ; e#rfkill_type type ; unsigned long state ; t#u32 idx ; t#bool registered ; t#bool persistent ; const s#rfkill_ops * ops ; void * data ; s#device dev ; s#list_head node ; s#delayed_work poll_work ; s#work_struct uevent_work ; s#work_struct sync_work ; } 
rfkill_set_hw_state t#bool rfkill_set_hw_state ( s#rfkill * , t#bool ) 
rfkill_set_sw_state t#bool rfkill_set_sw_state ( s#rfkill * , t#bool ) 
rfkill_init_sw_state void rfkill_init_sw_state ( s#rfkill * , t#bool ) 
rfkill_set_states void rfkill_set_states ( s#rfkill * , t#bool , t#bool ) 
rfkill_pause_polling void rfkill_pause_polling ( s#rfkill * ) 
rfkill_resume_polling void rfkill_resume_polling ( s#rfkill * ) 
rfkill_blocked t#bool rfkill_blocked ( s#rfkill * ) 
rfkill_alloc s#rfkill * rfkill_alloc ( const char * , s#device * , const e#rfkill_type , const s#rfkill_ops * , void * ) 
rfkill_register int rfkill_register ( s#rfkill * ) 
rfkill_unregister void rfkill_unregister ( s#rfkill * ) 
rfkill_destroy void rfkill_destroy ( s#rfkill * ) 

/* net/rxrpc/af_rxrpc.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s#key_construction struct key_construction { s#key * key ; s#key * authkey ; } 
t#request_key_actor_t typedef int ( * request_key_actor_t ) ( s#key_construction * , const char * , void * ) 
s#key_type struct key_type { const char * name ; t#size_t def_datalen ; int ( * instantiate ) ( s#key * , const void * , t#size_t ) ; int ( * update ) ( s#key * , const void * , t#size_t ) ; int ( * match ) ( const s#key * , const void * ) ; void ( * revoke ) ( s#key * ) ; void ( * destroy ) ( s#key * ) ; void ( * describe ) ( const s#key * , s#seq_file * ) ; long ( * read ) ( const s#key * , char * , t#size_t ) ; t#request_key_actor_t request_key ; s#list_head link ; } 
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s#sockaddr_in struct sockaddr_in { t#sa_family_t sin_family ; t#__be16 sin_port ; s#in_addr sin_addr ; unsigned char __pad [ 16 - sizeof ( short int ) - sizeof ( unsigned short int ) - sizeof ( struct in_addr ) ] ; } 
s#sockaddr_in6 struct sockaddr_in6 { unsigned short int sin6_family ; t#__be16 sin6_port ; t#__be32 sin6_flowinfo ; s#in6_addr sin6_addr ; t#__u32 sin6_scope_id ; } 
s#sockaddr_rxrpc struct sockaddr_rxrpc { t#sa_family_t srx_family ; t#u16 srx_service ; t#u16 transport_type ; t#u16 transport_len ; union { t#sa_family_t family ; s#sockaddr_in sin ; s#sockaddr_in6 sin6 ; } transport ; } 
s#rxrpc_local struct rxrpc_local { s#socket * socket ; s#work_struct destroyer ; s#work_struct acceptor ; s#work_struct rejecter ; s#list_head services ; s#list_head link ; s#rw_semaphore defrag_sem ; s#sk_buff_head accept_queue ; s#sk_buff_head reject_queue ; t#spinlock_t lock ; t#rwlock_t services_lock ; t#atomic_t usage ; int debug_id ; volatile char error_rcvd ; s#sockaddr_rxrpc srx ; } 
t#suseconds_t typedef t#__kernel_suseconds_t suseconds_t 
s#rxrpc_peer struct rxrpc_peer { s#work_struct destroyer ; s#list_head link ; s#list_head error_targets ; t#spinlock_t lock ; t#atomic_t usage ; unsigned if_mtu ; unsigned mtu ; unsigned maxdata ; unsigned short hdrsize ; int debug_id ; int net_error ; s#sockaddr_rxrpc srx ; t#suseconds_t rtt ; unsigned rtt_point ; unsigned rtt_usage ; t#suseconds_t rtt_cache [ 32 ] ; } 
s#rxrpc_transport struct rxrpc_transport { s#rxrpc_local * local ; s#rxrpc_peer * peer ; s#work_struct error_handler ; s#rb_root bundles ; s#rb_root client_conns ; s#rb_root server_conns ; s#list_head link ; s#sk_buff_head error_queue ; t#time_t put_time ; t#spinlock_t client_lock ; t#rwlock_t conn_lock ; t#atomic_t usage ; int debug_id ; unsigned int conn_idcounter ; } 
s#rxrpc_conn_bundle struct rxrpc_conn_bundle { s#rb_node node ; s#list_head unused_conns ; s#list_head avail_conns ; s#list_head busy_conns ; s#key * key ; t#wait_queue_head_t chanwait ; t#atomic_t usage ; int debug_id ; unsigned short num_conns ; t#__be16 service_id ; t#u8 security_ix ; } 
s#rxrpc_security struct rxrpc_security { s#module * owner ; s#list_head link ; const char * name ; t#u8 security_index ; int ( * init_connection_security ) ( s#rxrpc_connection * ) ; void ( * prime_packet_security ) ( s#rxrpc_connection * ) ; int ( * secure_packet ) ( const s#rxrpc_call * , s#sk_buff * , t#size_t , void * ) ; int ( * verify_packet ) ( const s#rxrpc_call * , s#sk_buff * , t#u32 * ) ; int ( * issue_challenge ) ( s#rxrpc_connection * ) ; int ( * respond_to_challenge ) ( s#rxrpc_connection * , s#sk_buff * , t#u32 * ) ; int ( * verify_response ) ( s#rxrpc_connection * , s#sk_buff * , t#u32 * ) ; void ( * clear ) ( s#rxrpc_connection * ) ; } 
s##crypto_blkcipher
s#rxrpc_crypt struct rxrpc_crypt { union { t#u8 x [ 8 ] ; t#__be32 n [ 2 ] ; } ; } 
s#rxrpc_connection struct rxrpc_connection { s#rxrpc_transport * trans ; s#rxrpc_conn_bundle * bundle ; s#work_struct processor ; s#rb_node node ; s#list_head link ; s#list_head bundle_link ; s#rb_root calls ; s#sk_buff_head rx_queue ; s#rxrpc_call * channels [ 4 ] ; s#rxrpc_security * security ; s#key * key ; s#key * server_key ; s#crypto_blkcipher * cipher ; s#rxrpc_crypt csum_iv ; unsigned long events ; t#time_t put_time ; t#rwlock_t lock ; t#spinlock_t state_lock ; t#atomic_t usage ; t#u32 real_conn_id ; enum { RXRPC_CONN_UNUSED , RXRPC_CONN_CLIENT , RXRPC_CONN_SERVER_UNSECURED , RXRPC_CONN_SERVER_CHALLENGING , RXRPC_CONN_SERVER , RXRPC_CONN_REMOTELY_ABORTED , RXRPC_CONN_LOCALLY_ABORTED , RXRPC_CONN_NETWORK_ERROR , } state ; int error ; int debug_id ; unsigned call_counter ; t#atomic_t serial ; t#atomic_t hi_serial ; t#u8 avail_calls ; t#u8 size_align ; t#u8 header_size ; t#u8 security_size ; t#u32 security_level ; t#u32 security_nonce ; t#__be32 epoch ; t#__be32 cid ; t#__be16 service_id ; t#u8 security_ix ; t#u8 in_clientflag ; t#u8 out_clientflag ; } 
t#rxrpc_interceptor_t typedef void ( * rxrpc_interceptor_t ) ( s#sock * , unsigned long , s#sk_buff * ) 
s#rxrpc_sock struct rxrpc_sock { s#sock sk ; t#rxrpc_interceptor_t interceptor ; s#rxrpc_local * local ; s#rxrpc_transport * trans ; s#rxrpc_conn_bundle * bundle ; s#rxrpc_connection * conn ; s#list_head listen_link ; s#list_head secureq ; s#list_head acceptq ; s#key * key ; s#key * securities ; s#rb_root calls ; unsigned long flags ; t#rwlock_t call_lock ; t#u32 min_sec_level ; s#sockaddr_rxrpc srx ; t#sa_family_t proto ; t#__be16 service_id ; } 
t#rxrpc_seq_t typedef t#u32 rxrpc_seq_t 
t#rxrpc_seq_net_t typedef t#__be32 rxrpc_seq_net_t 
s#rxrpc_call struct rxrpc_call { s#rxrpc_connection * conn ; s#rxrpc_sock * socket ; s#timer_list lifetimer ; s#timer_list deadspan ; s#timer_list ack_timer ; s#timer_list resend_timer ; s#work_struct destroyer ; s#work_struct processor ; s#list_head link ; s#list_head error_link ; s#list_head accept_link ; s#rb_node sock_node ; s#rb_node conn_node ; s#sk_buff_head rx_queue ; s#sk_buff_head rx_oos_queue ; s#sk_buff * tx_pending ; t#wait_queue_head_t tx_waitq ; unsigned long user_call_ID ; unsigned long creation_jif ; unsigned long flags ; unsigned long events ; t#spinlock_t lock ; t#rwlock_t state_lock ; t#atomic_t usage ; t#atomic_t sequence ; t#u32 abort_code ; enum { RXRPC_CALL_CLIENT_SEND_REQUEST , RXRPC_CALL_CLIENT_AWAIT_REPLY , RXRPC_CALL_CLIENT_RECV_REPLY , RXRPC_CALL_CLIENT_FINAL_ACK , RXRPC_CALL_SERVER_SECURING , RXRPC_CALL_SERVER_ACCEPTING , RXRPC_CALL_SERVER_RECV_REQUEST , RXRPC_CALL_SERVER_ACK_REQUEST , RXRPC_CALL_SERVER_SEND_REPLY , RXRPC_CALL_SERVER_AWAIT_ACK , RXRPC_CALL_COMPLETE , RXRPC_CALL_SERVER_BUSY , RXRPC_CALL_REMOTELY_ABORTED , RXRPC_CALL_LOCALLY_ABORTED , RXRPC_CALL_NETWORK_ERROR , RXRPC_CALL_DEAD , } state ; int debug_id ; t#u8 channel ; t#u8 acks_head ; t#u8 acks_tail ; t#u8 acks_winsz ; t#u8 acks_unacked ; int acks_latest ; t#rxrpc_seq_t acks_hard ; unsigned long * acks_window ; t#rxrpc_seq_t rx_data_expect ; t#rxrpc_seq_t rx_data_post ; t#rxrpc_seq_t rx_data_recv ; t#rxrpc_seq_t rx_data_eaten ; t#rxrpc_seq_t rx_first_oos ; t#rxrpc_seq_t ackr_win_top ; t#rxrpc_seq_net_t ackr_prev_seq ; t#u8 ackr_reason ; t#__be32 ackr_serial ; t#atomic_t ackr_not_idle ; unsigned long ackr_window [ ( ( ( 255 ) + ( 64 ) - 1 ) / ( 64 ) ) + 1 ] ; t#__be32 cid ; t#__be32 call_id ; } 
rxrpc_kernel_begin_call extern s#rxrpc_call * rxrpc_kernel_begin_call ( s#socket * , s#sockaddr_rxrpc * , s#key * , unsigned long , t#gfp_t ) 
rxrpc_kernel_end_call extern void rxrpc_kernel_end_call ( s#rxrpc_call * ) 
rxrpc_kernel_intercept_rx_messages extern void rxrpc_kernel_intercept_rx_messages ( s#socket * , t#rxrpc_interceptor_t ) 

/* net/rxrpc/ar-accept.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##crypto_blkcipher
rxrpc_kernel_accept_call extern s#rxrpc_call * rxrpc_kernel_accept_call ( s#socket * , unsigned long ) 
rxrpc_kernel_reject_call extern int rxrpc_kernel_reject_call ( s#socket * ) 

/* net/rxrpc/ar-key.o */
s##key_user
s##keyring_list
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
key_type_rxrpc extern s#key_type key_type_rxrpc 
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s##crypto_type
rxrpc_get_server_data_key extern int rxrpc_get_server_data_key ( s#rxrpc_connection * , const void * , t#time_t , t#u32 ) 
rxrpc_get_null_key extern s#key * rxrpc_get_null_key ( const char * ) 

/* net/rxrpc/ar-output.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##crypto_blkcipher
rxrpc_kernel_send_data extern int rxrpc_kernel_send_data ( s#rxrpc_call * , s#msghdr * , t#size_t ) 
rxrpc_kernel_abort_call extern void rxrpc_kernel_abort_call ( s#rxrpc_call * , t#u32 ) 

/* net/rxrpc/ar-recvmsg.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##xfrm_policy
s##sec_path
rxrpc_kernel_data_delivered extern void rxrpc_kernel_data_delivered ( s#sk_buff * ) 
rxrpc_kernel_is_data_last extern t#bool rxrpc_kernel_is_data_last ( s#sk_buff * ) 
rxrpc_kernel_get_abort_code extern t#u32 rxrpc_kernel_get_abort_code ( s#sk_buff * ) 
rxrpc_kernel_get_error_number extern int rxrpc_kernel_get_error_number ( s#sk_buff * ) 

/* net/rxrpc/ar-security.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##nameidata
s##vfsmount
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##sec_path
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s##crypto_type
rxrpc_register_security extern int rxrpc_register_security ( s#rxrpc_security * ) 
rxrpc_unregister_security extern void rxrpc_unregister_security ( s#rxrpc_security * ) 

/* net/rxrpc/ar-skbuff.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##xfrm_policy
s##sec_path
rxrpc_kernel_free_skb extern void rxrpc_kernel_free_skb ( s#sk_buff * ) 

/* net/sched/act_api.o */
s#tcf_t struct tcf_t { t#__u64 install ; t#__u64 lastuse ; t#__u64 expires ; } 
s#tcf_common struct tcf_common { s#tcf_common * tcfc_next ; t#u32 tcfc_index ; int tcfc_refcnt ; int tcfc_bindcnt ; t#u32 tcfc_capab ; int tcfc_action ; s#tcf_t tcfc_tm ; s#gnet_stats_basic_packed tcfc_bstats ; s#gnet_stats_queue tcfc_qstats ; s#gnet_stats_rate_est tcfc_rate_est ; t#spinlock_t tcfc_lock ; } 
s#tcf_hashinfo struct tcf_hashinfo { s#tcf_common * * htab ; unsigned int hmask ; t#rwlock_t * lock ; } 
tcf_hash_destroy extern void tcf_hash_destroy ( s#tcf_common * , s#tcf_hashinfo * ) 
tcf_hash_release extern int tcf_hash_release ( s#tcf_common * , int , s#tcf_hashinfo * ) 
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##vlan_group
s##wireless_dev
s##tcf_walker
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##xfrm_policy
s##sec_path
s#tc_action_ops struct tc_action_ops { s#tc_action_ops * next ; s#tcf_hashinfo * hinfo ; char kind [ 16 ] ; t#__u32 type ; t#__u32 capab ; s#module * owner ; int ( * act ) ( s#sk_buff * , s#tc_action * , s#tcf_result * ) ; int ( * get_stats ) ( s#sk_buff * , s#tc_action * ) ; int ( * dump ) ( s#sk_buff * , s#tc_action * , int , int ) ; int ( * cleanup ) ( s#tc_action * , int ) ; int ( * lookup ) ( s#tc_action * , t#u32 ) ; int ( * init ) ( s#nlattr * , s#nlattr * , s#tc_action * , int , int ) ; int ( * walk ) ( s#sk_buff * , s#netlink_callback * , int , s#tc_action * ) ; } 
s#tc_action struct tc_action { void * priv ; s#tc_action_ops * ops ; t#__u32 type ; t#__u32 order ; s#tc_action * next ; } 
tcf_generic_walker extern int tcf_generic_walker ( s#sk_buff * , s#netlink_callback * , int , s#tc_action * ) 
tcf_hash_lookup extern s#tcf_common * tcf_hash_lookup ( t#u32 , s#tcf_hashinfo * ) 
tcf_hash_new_index extern t#u32 tcf_hash_new_index ( t#u32 * , s#tcf_hashinfo * ) 
tcf_hash_search extern int tcf_hash_search ( s#tc_action * , t#u32 ) 
tcf_hash_check extern s#tcf_common * tcf_hash_check ( t#u32 , s#tc_action * , int , s#tcf_hashinfo * ) 
tcf_hash_create extern s#tcf_common * tcf_hash_create ( t#u32 , s#nlattr * , s#tc_action * , int , int , t#u32 * , s#tcf_hashinfo * ) 
tcf_hash_insert extern void tcf_hash_insert ( s#tcf_common * , s#tcf_hashinfo * ) 
tcf_register_action extern int tcf_register_action ( s#tc_action_ops * ) 
tcf_unregister_action extern int tcf_unregister_action ( s#tc_action_ops * ) 
tcf_action_exec extern int tcf_action_exec ( s#sk_buff * , s#tc_action * , s#tcf_result * ) 
tcf_action_dump_1 extern int tcf_action_dump_1 ( s#sk_buff * , s#tc_action * , int , int ) 

/* net/sched/cls_api.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##vlan_group
s##wireless_dev
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##xfrm_policy
s##sec_path
s#tcf_walker struct tcf_walker { int stop ; int skip ; int count ; int ( * fn ) ( s#tcf_proto * , unsigned long , s#tcf_walker * ) ; } 
register_tcf_proto_ops extern int register_tcf_proto_ops ( s#tcf_proto_ops * ) 
unregister_tcf_proto_ops extern int unregister_tcf_proto_ops ( s#tcf_proto_ops * ) 
s#tcf_exts struct tcf_exts { s#tc_action * action ; } 
tcf_exts_destroy extern void tcf_exts_destroy ( s#tcf_proto * , s#tcf_exts * ) 
s#tcf_ext_map struct tcf_ext_map { int action ; int police ; } 
tcf_exts_validate extern int tcf_exts_validate ( s#tcf_proto * , s#nlattr * * , s#nlattr * , s#tcf_exts * , const s#tcf_ext_map * ) 
tcf_exts_change extern void tcf_exts_change ( s#tcf_proto * , s#tcf_exts * , s#tcf_exts * ) 
tcf_exts_dump extern int tcf_exts_dump ( s#sk_buff * , s#tcf_exts * , const s#tcf_ext_map * ) 
tcf_exts_dump_stats extern int tcf_exts_dump_stats ( s#sk_buff * , s#tcf_exts * , const s#tcf_ext_map * ) 

/* net/sched/sch_api.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##xfrm_policy
s##sec_path
s##vlan_group
s##wireless_dev
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##tcf_walker
register_qdisc extern int register_qdisc ( s#Qdisc_ops * ) 
unregister_qdisc extern int unregister_qdisc ( s#Qdisc_ops * ) 
qdisc_list_del extern void qdisc_list_del ( s#Qdisc * ) 
s#tc_ratespec struct tc_ratespec { unsigned char cell_log ; unsigned char __reserved ; unsigned short overhead ; short cell_align ; unsigned short mpu ; t#__u32 rate ; } 
s#qdisc_rate_table struct qdisc_rate_table { s#tc_ratespec rate ; t#u32 data [ 256 ] ; s#qdisc_rate_table * next ; int refcnt ; } 
qdisc_get_rtab extern s#qdisc_rate_table * qdisc_get_rtab ( s#tc_ratespec * , s#nlattr * ) 
qdisc_put_rtab extern void qdisc_put_rtab ( s#qdisc_rate_table * ) 
qdisc_put_stab extern void qdisc_put_stab ( s#qdisc_size_table * ) 
qdisc_calculate_pkt_len extern void qdisc_calculate_pkt_len ( s#sk_buff * , s#qdisc_size_table * ) 
qdisc_warn_nonwc extern void qdisc_warn_nonwc ( char * , s#Qdisc * ) 
s#qdisc_watchdog struct qdisc_watchdog { s#hrtimer timer ; s#Qdisc * qdisc ; } 
qdisc_watchdog_init extern void qdisc_watchdog_init ( s#qdisc_watchdog * , s#Qdisc * ) 
t#psched_time_t typedef t#u64 psched_time_t 
qdisc_watchdog_schedule extern void qdisc_watchdog_schedule ( s#qdisc_watchdog * , t#psched_time_t ) 
qdisc_watchdog_cancel extern void qdisc_watchdog_cancel ( s#qdisc_watchdog * ) 
s#Qdisc_class_hash struct Qdisc_class_hash { s#hlist_head * hash ; unsigned int hashsize ; unsigned int hashmask ; unsigned int hashelems ; } 
qdisc_class_hash_grow extern void qdisc_class_hash_grow ( s#Qdisc * , s#Qdisc_class_hash * ) 
qdisc_class_hash_init extern int qdisc_class_hash_init ( s#Qdisc_class_hash * ) 
qdisc_class_hash_destroy extern void qdisc_class_hash_destroy ( s#Qdisc_class_hash * ) 
s#Qdisc_class_common struct Qdisc_class_common { t#u32 classid ; s#hlist_node hnode ; } 
qdisc_class_hash_insert extern void qdisc_class_hash_insert ( s#Qdisc_class_hash * , s#Qdisc_class_common * ) 
qdisc_class_hash_remove extern void qdisc_class_hash_remove ( s#Qdisc_class_hash * , s#Qdisc_class_common * ) 
qdisc_tree_decrease_qlen extern void qdisc_tree_decrease_qlen ( s#Qdisc * , unsigned int ) 
tc_classify_compat extern int tc_classify_compat ( s#sk_buff * , s#tcf_proto * , s#tcf_result * ) 
tc_classify extern int tc_classify ( s#sk_buff * , s#tcf_proto * , s#tcf_result * ) 
tcf_destroy_chain extern void tcf_destroy_chain ( s#tcf_proto * * ) 

/* net/sched/sch_fifo.o */
s##sock
s##sec_path
s##neigh_parms
s##vlan_group
s##neighbour
s##wireless_dev
s##tvec_base
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ip_conntrack_stat
s##net_generic
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##tcf_walker
pfifo_qdisc_ops extern s#Qdisc_ops pfifo_qdisc_ops 
bfifo_qdisc_ops extern s#Qdisc_ops bfifo_qdisc_ops 
fifo_set_limit extern int fifo_set_limit ( s#Qdisc * , unsigned int ) 
fifo_create_dflt extern s#Qdisc * fifo_create_dflt ( s#Qdisc * , s#Qdisc_ops * , unsigned int ) 

/* net/sched/sch_generic.o */
s##sock
s##sec_path
s##neigh_parms
s##vlan_group
s##neighbour
s##wireless_dev
s##tcf_walker
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ip_conntrack_stat
s##net_generic
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
dev_trans_start extern unsigned long dev_trans_start ( s#net_device * ) 
netif_carrier_on extern void netif_carrier_on ( s#net_device * ) 
netif_carrier_off extern void netif_carrier_off ( s#net_device * ) 
noop_qdisc extern s#Qdisc noop_qdisc 
qdisc_create_dflt extern s#Qdisc * qdisc_create_dflt ( s#net_device * , s#netdev_queue * , s#Qdisc_ops * , t#u32 ) 
qdisc_reset extern void qdisc_reset ( s#Qdisc * ) 
qdisc_destroy extern void qdisc_destroy ( s#Qdisc * ) 

/* net/socket.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##sec_path
s##tvec_base
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##eventfd_ctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
u#skb_shared_tx union skb_shared_tx { struct { t#__u8 hardware : 1 , software : 1 , in_progress : 1 ; } ; t#__u8 flags ; } 
sock_tx_timestamp extern int sock_tx_timestamp ( s#msghdr * , s#sock * , u#skb_shared_tx * ) 
__sock_recv_timestamp extern void __sock_recv_timestamp ( s#msghdr * , s#sock * , s#sk_buff * ) 
brioctl_set extern void brioctl_set ( int ( * ) ( s#net * , unsigned int , void * ) ) 
vlan_ioctl_set extern void vlan_ioctl_set ( int ( * ) ( s#net * , void * ) ) 
dlci_ioctl_set extern void dlci_ioctl_set ( int ( * ) ( unsigned int , void * ) ) 
sock_create extern int sock_create ( int , int , int , s#socket * * ) 
sock_create_kern extern int sock_create_kern ( int , int , int , s#socket * * ) 
sock_create_lite extern int sock_create_lite ( int , int , int , s#socket * * ) 
sock_map_fd extern int sock_map_fd ( s#socket * , int ) 
sock_recvmsg extern int sock_recvmsg ( s#socket * , s#msghdr * , t#size_t , int ) 
s#net_proto_family struct net_proto_family { int family ; int ( * create ) ( s#net * , s#socket * , int ) ; s#module * owner ; } 
sock_register extern int sock_register ( const s#net_proto_family * ) 
sock_release extern void sock_release ( s#socket * ) 
sock_sendmsg extern int sock_sendmsg ( s#socket * , s#msghdr * , t#size_t ) 
sock_unregister extern void sock_unregister ( int ) 
sock_wake_async extern int sock_wake_async ( s#socket * , int , int ) 
sockfd_lookup extern s#socket * sockfd_lookup ( int , int * ) 
kernel_sendmsg extern int kernel_sendmsg ( s#socket * , s#msghdr * , s#kvec * , t#size_t , t#size_t ) 
kernel_recvmsg extern int kernel_recvmsg ( s#socket * , s#msghdr * , s#kvec * , t#size_t , t#size_t , int ) 
kernel_bind extern int kernel_bind ( s#socket * , s#sockaddr * , int ) 
kernel_listen extern int kernel_listen ( s#socket * , int ) 
kernel_accept extern int kernel_accept ( s#socket * , s#socket * * , int ) 
kernel_connect extern int kernel_connect ( s#socket * , s#sockaddr * , int , int ) 
kernel_getsockname extern int kernel_getsockname ( s#socket * , s#sockaddr * , int * ) 
kernel_getpeername extern int kernel_getpeername ( s#socket * , s#sockaddr * , int * ) 
kernel_getsockopt extern int kernel_getsockopt ( s#socket * , int , int , char * , int * ) 
kernel_setsockopt extern int kernel_setsockopt ( s#socket * , int , int , char * , unsigned int ) 
kernel_sendpage extern int kernel_sendpage ( s#socket * , s#page * , int , t#size_t , int ) 
kernel_sock_ioctl extern int kernel_sock_ioctl ( s#socket * , int , unsigned long ) 
e#sock_shutdown_cmd enum sock_shutdown_cmd { SHUT_RD = 0 , SHUT_WR = 1 , SHUT_RDWR = 2 , } 
kernel_sock_shutdown extern int kernel_sock_shutdown ( s#socket * , e#sock_shutdown_cmd ) 

/* net/sunrpc/addr.o */
rpc_ntop t#size_t rpc_ntop ( const s#sockaddr * , char * , const t#size_t ) 
rpc_pton t#size_t rpc_pton ( const char * , const t#size_t , s#sockaddr * , const t#size_t ) 
rpc_sockaddr2uaddr char * rpc_sockaddr2uaddr ( const s#sockaddr * ) 
rpc_uaddr2sockaddr t#size_t rpc_uaddr2sockaddr ( const char * , const t#size_t , s#sockaddr * , const t#size_t ) 

/* net/sunrpc/auth.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##nameidata
s##vfsmount
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##workqueue_struct
s##svc_xprt
s##rpc_iostats
rpcauth_register int rpcauth_register ( const s#rpc_authops * ) 
rpcauth_unregister int rpcauth_unregister ( const s#rpc_authops * ) 
rpcauth_create s#rpc_auth * rpcauth_create ( t#rpc_authflavor_t , s#rpc_clnt * ) 
rpcauth_init_credcache int rpcauth_init_credcache ( s#rpc_auth * ) 
rpcauth_destroy_credcache void rpcauth_destroy_credcache ( s#rpc_auth * ) 
rpcauth_lookup_credcache s#rpc_cred * rpcauth_lookup_credcache ( s#rpc_auth * , s#auth_cred * , int ) 
rpcauth_init_cred void rpcauth_init_cred ( s#rpc_cred * , const s#auth_cred * , s#rpc_auth * , const s#rpc_credops * ) 
rpcauth_generic_bind_cred void rpcauth_generic_bind_cred ( s#rpc_task * , s#rpc_cred * , int ) 
put_rpccred void put_rpccred ( s#rpc_cred * ) 

/* net/sunrpc/auth_generic.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##nameidata
s##vfsmount
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##workqueue_struct
s##svc_xprt
s##rpc_iostats
rpc_lookup_cred s#rpc_cred * rpc_lookup_cred ( void ) 
rpc_lookup_machine_cred s#rpc_cred * rpc_lookup_machine_cred ( void ) 

/* net/sunrpc/auth_gss/gss_generic_token.o */
s#xdr_netobj struct xdr_netobj { unsigned int len ; t#u8 * data ; } 
g_token_size int g_token_size ( s#xdr_netobj * , unsigned int ) 
g_make_token_header void g_make_token_header ( s#xdr_netobj * , int , unsigned char * * ) 
g_verify_token_header t#u32 g_verify_token_header ( s#xdr_netobj * , int * , unsigned char * * , int ) 

/* net/sunrpc/auth_gss/gss_mech_switch.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##nameidata
s##vfsmount
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s#gss_ctx struct gss_ctx { s#gss_api_mech * mech_type ; void * internal_ctx_id ; } 
s#gss_api_ops struct gss_api_ops { int ( * gss_import_sec_context ) ( const void * , t#size_t , s#gss_ctx * ) ; t#u32 ( * gss_get_mic ) ( s#gss_ctx * , s#xdr_buf * , s#xdr_netobj * ) ; t#u32 ( * gss_verify_mic ) ( s#gss_ctx * , s#xdr_buf * , s#xdr_netobj * ) ; t#u32 ( * gss_wrap ) ( s#gss_ctx * , int , s#xdr_buf * , s#page * * ) ; t#u32 ( * gss_unwrap ) ( s#gss_ctx * , int , s#xdr_buf * ) ; void ( * gss_delete_sec_context ) ( void * ) ; } 
s#pf_desc struct pf_desc { t#u32 pseudoflavor ; t#u32 service ; char * name ; char * auth_domain_name ; } 
s#gss_api_mech struct gss_api_mech { s#list_head gm_list ; s#module * gm_owner ; s#xdr_netobj gm_oid ; char * gm_name ; const s#gss_api_ops * gm_ops ; int gm_pf_num ; s#pf_desc * gm_pfs ; } 
gss_mech_register int gss_mech_register ( s#gss_api_mech * ) 
gss_mech_unregister void gss_mech_unregister ( s#gss_api_mech * ) 
gss_mech_get s#gss_api_mech * gss_mech_get ( s#gss_api_mech * ) 
gss_mech_get_by_name s#gss_api_mech * gss_mech_get_by_name ( const char * ) 
gss_mech_get_by_pseudoflavor s#gss_api_mech * gss_mech_get_by_pseudoflavor ( t#u32 ) 
gss_svc_to_pseudoflavor t#u32 gss_svc_to_pseudoflavor ( s#gss_api_mech * , t#u32 ) 
gss_pseudoflavor_to_service t#u32 gss_pseudoflavor_to_service ( s#gss_api_mech * , t#u32 ) 
gss_service_to_auth_domain_name char * gss_service_to_auth_domain_name ( s#gss_api_mech * , t#u32 ) 
gss_mech_put void gss_mech_put ( s#gss_api_mech * ) 

/* net/sunrpc/auth_gss/svcauth_gss.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##svc_stat
s##svc_cacherep
s##knfsd_fh
svcauth_gss_flavor t#u32 svcauth_gss_flavor ( s#auth_domain * ) 
svcauth_gss_register_pseudoflavor int svcauth_gss_register_pseudoflavor ( t#u32 , char * ) 
svc_gss_principal char * svc_gss_principal ( s#svc_rqst * ) 

/* net/sunrpc/cache.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##nameidata
s##vfsmount
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s#cache_detail_procfs struct cache_detail_procfs { s#proc_dir_entry * proc_ent ; s#proc_dir_entry * flush_ent , * channel_ent , * content_ent ; } 
s#cache_detail_pipefs struct cache_detail_pipefs { s#dentry * dir ; } 
s#cache_detail struct cache_detail { s#module * owner ; int hash_size ; s#cache_head * * hash_table ; t#rwlock_t hash_lock ; t#atomic_t inuse ; char * name ; void ( * cache_put ) ( s#kref * ) ; int ( * cache_upcall ) ( s#cache_detail * , s#cache_head * ) ; int ( * cache_parse ) ( s#cache_detail * , char * , int ) ; int ( * cache_show ) ( s#seq_file * , s#cache_detail * , s#cache_head * ) ; void ( * warn_no_listener ) ( s#cache_detail * , int ) ; s#cache_head * ( * alloc ) ( void ) ; int ( * match ) ( s#cache_head * , s#cache_head * ) ; void ( * init ) ( s#cache_head * , s#cache_head * ) ; void ( * update ) ( s#cache_head * , s#cache_head * ) ; t#time_t flush_time ; s#list_head others ; t#time_t nextcheck ; int entries ; s#list_head queue ; t#atomic_t readers ; t#time_t last_close ; t#time_t last_warn ; union { s#cache_detail_procfs procfs ; s#cache_detail_pipefs pipefs ; } u ; } 
sunrpc_cache_lookup extern s#cache_head * sunrpc_cache_lookup ( s#cache_detail * , s#cache_head * , int ) 
sunrpc_cache_update extern s#cache_head * sunrpc_cache_update ( s#cache_detail * , s#cache_head * , s#cache_head * , int ) 
cache_check extern int cache_check ( s#cache_detail * , s#cache_head * , s#cache_req * ) 
cache_flush extern void cache_flush ( void ) 
cache_purge extern void cache_purge ( s#cache_detail * ) 
qword_add extern void qword_add ( char * * , int * , char * ) 
qword_addhex extern void qword_addhex ( char * * , int * , char * , int ) 
sunrpc_cache_pipe_upcall extern int sunrpc_cache_pipe_upcall ( s#cache_detail * , s#cache_head * , void ( * ) ( s#cache_detail * , s#cache_head * , char * * , int * ) ) 
qword_get extern int qword_get ( char * * , char * , int ) 
cache_register extern int cache_register ( s#cache_detail * ) 
cache_unregister extern void cache_unregister ( s#cache_detail * ) 
sunrpc_cache_register_pipefs extern int sunrpc_cache_register_pipefs ( s#dentry * , const char * , t#mode_t , s#cache_detail * ) 
sunrpc_cache_unregister_pipefs extern void sunrpc_cache_unregister_pipefs ( s#cache_detail * ) 

/* net/sunrpc/clnt.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##mnt_namespace
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##fs_struct
s##ipc_namespace
s##array_cache
s##kmem_list3
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_state
s##rtable
s##rt6_info
s##dn_route
s##xfrm_policy
s##sec_path
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##rt6_statistics
s##fib6_table
s##ip_conntrack_stat
s##net_generic
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##workqueue_struct
s##svc_cacherep
s##knfsd_fh
s#rpc_iostats struct rpc_iostats { unsigned long om_ops , om_ntrans , om_timeouts ; unsigned long long om_bytes_sent , om_bytes_recv ; unsigned long long om_queue , om_rtt , om_execute ; } 
s#rpc_create_args struct rpc_create_args { int protocol ; s#sockaddr * address ; t#size_t addrsize ; s#sockaddr * saddress ; const s#rpc_timeout * timeout ; char * servername ; s#rpc_program * program ; t#u32 prognumber ; t#u32 version ; t#rpc_authflavor_t authflavor ; unsigned long flags ; char * client_name ; s#svc_xprt * bc_xprt ; } 
rpc_create s#rpc_clnt * rpc_create ( s#rpc_create_args * ) 
rpc_clone_client s#rpc_clnt * rpc_clone_client ( s#rpc_clnt * ) 
rpc_shutdown_client void rpc_shutdown_client ( s#rpc_clnt * ) 
rpc_bind_new_program s#rpc_clnt * rpc_bind_new_program ( s#rpc_clnt * , s#rpc_program * , t#u32 ) 
s#rpc_task_setup struct rpc_task_setup { s#rpc_task * task ; s#rpc_clnt * rpc_client ; const s#rpc_message * rpc_message ; const s#rpc_call_ops * callback_ops ; void * callback_data ; s#workqueue_struct * workqueue ; unsigned short flags ; signed char priority ; } 
rpc_run_task s#rpc_task * rpc_run_task ( const s#rpc_task_setup * ) 
rpc_call_sync int rpc_call_sync ( s#rpc_clnt * , const s#rpc_message * , int ) 
rpc_call_async int rpc_call_async ( s#rpc_clnt * , const s#rpc_message * , int , const s#rpc_call_ops * , void * ) 
rpc_call_start void rpc_call_start ( s#rpc_task * ) 
rpc_peeraddr t#size_t rpc_peeraddr ( s#rpc_clnt * , s#sockaddr * , t#size_t ) 
e#rpc_display_format_t enum rpc_display_format_t { RPC_DISPLAY_ADDR = 0 , RPC_DISPLAY_PORT , RPC_DISPLAY_PROTO , RPC_DISPLAY_HEX_ADDR , RPC_DISPLAY_HEX_PORT , RPC_DISPLAY_NETID , RPC_DISPLAY_MAX , } 
rpc_peeraddr2str const char * rpc_peeraddr2str ( s#rpc_clnt * , e#rpc_display_format_t ) 
rpc_setbufsize void rpc_setbufsize ( s#rpc_clnt * , unsigned int , unsigned int ) 
rpc_max_payload t#size_t rpc_max_payload ( s#rpc_clnt * ) 
rpc_force_rebind void rpc_force_rebind ( s#rpc_clnt * ) 
rpc_restart_call_prepare void rpc_restart_call_prepare ( s#rpc_task * ) 
rpc_restart_call void rpc_restart_call ( s#rpc_task * ) 
rpc_call_null s#rpc_task * rpc_call_null ( s#rpc_clnt * , s#rpc_cred * , int ) 

/* net/sunrpc/rpc_pipe.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##mnt_namespace
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##cdev
s##posix_acl
s#rpc_pipe_msg struct rpc_pipe_msg { s#list_head list ; void * data ; t#size_t len ; t#size_t copied ; int errno ; } 
rpc_queue_upcall extern int rpc_queue_upcall ( s#inode * , s#rpc_pipe_msg * ) 
rpc_get_mount extern s#vfsmount * rpc_get_mount ( void ) 
rpc_put_mount extern void rpc_put_mount ( void ) 
s#rpc_pipe_ops struct rpc_pipe_ops { t#ssize_t ( * upcall ) ( s#file * , s#rpc_pipe_msg * , char * , t#size_t ) ; t#ssize_t ( * downcall ) ( s#file * , const char * , t#size_t ) ; void ( * release_pipe ) ( s#inode * ) ; int ( * open_pipe ) ( s#inode * ) ; void ( * destroy_msg ) ( s#rpc_pipe_msg * ) ; } 
rpc_mkpipe extern s#dentry * rpc_mkpipe ( s#dentry * , const char * , void * , const s#rpc_pipe_ops * , int ) 
rpc_unlink extern int rpc_unlink ( s#dentry * ) 

/* net/sunrpc/rpcb_clnt.o */
rpcb_getport_sync int rpcb_getport_sync ( s#sockaddr_in * , t#u32 , t#u32 , int ) 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##svc_xprt
s##rpc_iostats
s##workqueue_struct
rpcb_getport_async void rpcb_getport_async ( s#rpc_task * ) 

/* net/sunrpc/sched.o */
s##tvec_base
rpc_init_wait_queue void rpc_init_wait_queue ( s#rpc_wait_queue * , const char * ) 
rpc_destroy_wait_queue void rpc_destroy_wait_queue ( s#rpc_wait_queue * ) 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##svc_xprt
s##rpc_iostats
s##workqueue_struct
__rpc_wait_for_completion_task int __rpc_wait_for_completion_task ( s#rpc_task * , int ( * ) ( void * ) ) 
t#rpc_action typedef void ( * rpc_action ) ( s#rpc_task * ) 
rpc_sleep_on void rpc_sleep_on ( s#rpc_wait_queue * , s#rpc_task * , t#rpc_action ) 
rpc_wake_up_queued_task void rpc_wake_up_queued_task ( s#rpc_wait_queue * , s#rpc_task * ) 
rpc_wake_up_next s#rpc_task * rpc_wake_up_next ( s#rpc_wait_queue * ) 
rpc_wake_up void rpc_wake_up ( s#rpc_wait_queue * ) 
rpc_wake_up_status void rpc_wake_up_status ( s#rpc_wait_queue * , int ) 
rpc_delay void rpc_delay ( s#rpc_task * , unsigned long ) 
rpc_exit_task void rpc_exit_task ( s#rpc_task * ) 
rpc_malloc void * rpc_malloc ( s#rpc_task * , t#size_t ) 
rpc_free void rpc_free ( void * ) 
rpc_put_task void rpc_put_task ( s#rpc_task * ) 
rpc_killall_tasks void rpc_killall_tasks ( s#rpc_clnt * ) 

/* net/sunrpc/socklib.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##xfrm_policy
s##sec_path
s#xdr_skb_reader struct xdr_skb_reader { s#sk_buff * skb ; unsigned int offset ; t#size_t count ; t#__wsum csum ; } 
xdr_skb_read_bits t#size_t xdr_skb_read_bits ( s#xdr_skb_reader * , void * , t#size_t ) 
t#xdr_skb_read_actor typedef t#size_t ( * xdr_skb_read_actor ) ( s#xdr_skb_reader * , void * , t#size_t ) 
xdr_partial_copy_from_skb extern t#ssize_t xdr_partial_copy_from_skb ( s#xdr_buf * , unsigned int , s#xdr_skb_reader * , t#xdr_skb_read_actor ) 
csum_partial_copy_to_xdr extern int csum_partial_copy_to_xdr ( s#xdr_buf * , s#sk_buff * ) 

/* net/sunrpc/stats.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##svc_cacherep
s##knfsd_fh
svc_seq_show void svc_seq_show ( s#seq_file * , const s#svc_stat * ) 
s##workqueue_struct
rpc_alloc_iostats s#rpc_iostats * rpc_alloc_iostats ( s#rpc_clnt * ) 
rpc_free_iostats void rpc_free_iostats ( s#rpc_iostats * ) 
rpc_print_iostats void rpc_print_iostats ( s#seq_file * , s#rpc_clnt * ) 
rpc_proc_register s#proc_dir_entry * rpc_proc_register ( s#rpc_stat * ) 
rpc_proc_unregister void rpc_proc_unregister ( const char * ) 
svc_proc_register s#proc_dir_entry * svc_proc_register ( s#svc_stat * , const s#file_operations * ) 
svc_proc_unregister void svc_proc_unregister ( const char * ) 

/* net/sunrpc/svc.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##nameidata
s##vfsmount
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##svc_cacherep
s##knfsd_fh
svc_create s#svc_serv * svc_create ( s#svc_program * , unsigned int , void ( * ) ( s#svc_serv * ) ) 
svc_create_pooled s#svc_serv * svc_create_pooled ( s#svc_program * , unsigned int , void ( * ) ( s#svc_serv * ) , t#svc_thread_fn , s#module * ) 
svc_destroy void svc_destroy ( s#svc_serv * ) 
svc_prepare_thread s#svc_rqst * svc_prepare_thread ( s#svc_serv * , s#svc_pool * ) 
svc_set_num_threads int svc_set_num_threads ( s#svc_serv * , s#svc_pool * , int ) 
svc_exit_thread void svc_exit_thread ( s#svc_rqst * ) 
svc_process int svc_process ( s#svc_rqst * ) 
svc_max_payload extern t#u32 svc_max_payload ( const s#svc_rqst * ) 

/* net/sunrpc/svc_xprt.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##nameidata
s##vfsmount
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##svc_cacherep
s##knfsd_fh
svc_reg_xprt_class int svc_reg_xprt_class ( s#svc_xprt_class * ) 
svc_unreg_xprt_class void svc_unreg_xprt_class ( s#svc_xprt_class * ) 
svc_xprt_put void svc_xprt_put ( s#svc_xprt * ) 
svc_xprt_init void svc_xprt_init ( s#svc_xprt_class * , s#svc_xprt * , s#svc_serv * ) 
svc_create_xprt int svc_create_xprt ( s#svc_serv * , const char * , const int , const unsigned short , int ) 
svc_xprt_copy_addrs void svc_xprt_copy_addrs ( s#svc_rqst * , s#svc_xprt * ) 
svc_print_addr char * svc_print_addr ( s#svc_rqst * , char * , t#size_t ) 
svc_xprt_enqueue void svc_xprt_enqueue ( s#svc_xprt * ) 
svc_xprt_received void svc_xprt_received ( s#svc_xprt * ) 
svc_reserve void svc_reserve ( s#svc_rqst * , int ) 
svc_wake_up void svc_wake_up ( s#svc_serv * ) 
svc_recv int svc_recv ( s#svc_rqst * , long ) 
svc_drop void svc_drop ( s#svc_rqst * ) 
svc_close_xprt void svc_close_xprt ( s#svc_xprt * ) 
svc_find_xprt s#svc_xprt * svc_find_xprt ( s#svc_serv * , const char * , const t#sa_family_t , const unsigned short ) 
svc_xprt_names int svc_xprt_names ( s#svc_serv * , char * , const int ) 
svc_pool_stats_open int svc_pool_stats_open ( s#svc_serv * , s#file * ) 

/* net/sunrpc/svcauth.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##svc_stat
s##svc_cacherep
s##knfsd_fh
svc_authenticate extern int svc_authenticate ( s#svc_rqst * , t#__be32 * ) 
svc_set_client extern int svc_set_client ( s#svc_rqst * ) 
svc_auth_register extern int svc_auth_register ( t#rpc_authflavor_t , s#auth_ops * ) 
svc_auth_unregister extern void svc_auth_unregister ( t#rpc_authflavor_t ) 
auth_domain_put extern void auth_domain_put ( s#auth_domain * ) 
auth_domain_lookup extern s#auth_domain * auth_domain_lookup ( char * , s#auth_domain * ) 
auth_domain_find extern s#auth_domain * auth_domain_find ( char * ) 

/* net/sunrpc/svcauth_unix.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##nameidata
s##vfsmount
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##svc_stat
s##svc_cacherep
s##knfsd_fh
unix_domain_find extern s#auth_domain * unix_domain_find ( char * ) 
auth_unix_add_addr extern int auth_unix_add_addr ( s#in6_addr * , s#auth_domain * ) 
auth_unix_forget_old extern int auth_unix_forget_old ( s#auth_domain * ) 
auth_unix_lookup extern s#auth_domain * auth_unix_lookup ( s#in6_addr * ) 
svcauth_unix_purge extern void svcauth_unix_purge ( void ) 
svcauth_unix_set_client extern int svcauth_unix_set_client ( s#svc_rqst * ) 

/* net/sunrpc/svcsock.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##nameidata
s##vfsmount
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##svc_cacherep
s##knfsd_fh
svc_sock_names int svc_sock_names ( s#svc_serv * , char * , const t#size_t , const char * ) 
svc_sock_update_bufs void svc_sock_update_bufs ( s#svc_serv * ) 
svc_addsock int svc_addsock ( s#svc_serv * , const int , char * , const t#size_t ) 
svc_sock_create s#svc_xprt * svc_sock_create ( s#svc_serv * , int ) 
svc_sock_destroy void svc_sock_destroy ( s#svc_xprt * ) 

/* net/sunrpc/sysctl.o */
rpc_debug extern unsigned int rpc_debug 
nfs_debug extern unsigned int nfs_debug 
nfsd_debug extern unsigned int nfsd_debug 
nlm_debug extern unsigned int nlm_debug 

/* net/sunrpc/timer.o */
rpc_init_rtt extern void rpc_init_rtt ( s#rpc_rtt * , unsigned long ) 
rpc_update_rtt extern void rpc_update_rtt ( s#rpc_rtt * , unsigned , long ) 
rpc_calc_rto extern unsigned long rpc_calc_rto ( s#rpc_rtt * , unsigned ) 

/* net/sunrpc/xdr.o */
xdr_encode_netobj t#__be32 * xdr_encode_netobj ( t#__be32 * , const s#xdr_netobj * ) 
xdr_decode_netobj t#__be32 * xdr_decode_netobj ( t#__be32 * , s#xdr_netobj * ) 
xdr_encode_opaque_fixed t#__be32 * xdr_encode_opaque_fixed ( t#__be32 * , const void * , unsigned int ) 
xdr_encode_opaque t#__be32 * xdr_encode_opaque ( t#__be32 * , const void * , unsigned int ) 
xdr_encode_string t#__be32 * xdr_encode_string ( t#__be32 * , const char * ) 
xdr_decode_string_inplace t#__be32 * xdr_decode_string_inplace ( t#__be32 * , char * * , unsigned int * , unsigned int ) 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
xdr_encode_pages void xdr_encode_pages ( s#xdr_buf * , s#page * * , unsigned int , unsigned int ) 
xdr_inline_pages void xdr_inline_pages ( s#xdr_buf * , unsigned int , s#page * * , unsigned int , unsigned int ) 
xdr_shift_buf extern void xdr_shift_buf ( s#xdr_buf * , t#size_t ) 
s#xdr_stream struct xdr_stream { t#__be32 * p ; s#xdr_buf * buf ; t#__be32 * end ; s#kvec * iov ; } 
xdr_init_encode extern void xdr_init_encode ( s#xdr_stream * , s#xdr_buf * , t#__be32 * ) 
xdr_reserve_space extern t#__be32 * xdr_reserve_space ( s#xdr_stream * , t#size_t ) 
xdr_write_pages extern void xdr_write_pages ( s#xdr_stream * , s#page * * , unsigned int , unsigned int ) 
xdr_init_decode extern void xdr_init_decode ( s#xdr_stream * , s#xdr_buf * , t#__be32 * ) 
xdr_inline_decode extern t#__be32 * xdr_inline_decode ( s#xdr_stream * , t#size_t ) 
xdr_read_pages extern void xdr_read_pages ( s#xdr_stream * , unsigned int ) 
xdr_enter_page extern void xdr_enter_page ( s#xdr_stream * , unsigned int ) 
xdr_buf_from_iov extern void xdr_buf_from_iov ( s#kvec * , s#xdr_buf * ) 
xdr_buf_subsegment extern int xdr_buf_subsegment ( s#xdr_buf * , s#xdr_buf * , unsigned int , unsigned int ) 
read_bytes_from_xdr_buf extern int read_bytes_from_xdr_buf ( s#xdr_buf * , unsigned int , void * , unsigned int ) 
xdr_decode_word extern int xdr_decode_word ( s#xdr_buf * , unsigned int , t#u32 * ) 
xdr_encode_word extern int xdr_encode_word ( s#xdr_buf * , unsigned int , t#u32 ) 
xdr_buf_read_netobj extern int xdr_buf_read_netobj ( s#xdr_buf * , s#xdr_netobj * , unsigned int ) 
t#xdr_xcode_elem_t typedef int ( * xdr_xcode_elem_t ) ( s#xdr_array2_desc * , void * ) 
s#xdr_array2_desc struct xdr_array2_desc { unsigned int elem_size ; unsigned int array_len ; unsigned int array_maxlen ; t#xdr_xcode_elem_t xcode ; } 
xdr_decode_array2 extern int xdr_decode_array2 ( s#xdr_buf * , unsigned int , s#xdr_array2_desc * ) 
xdr_encode_array2 extern int xdr_encode_array2 ( s#xdr_buf * , unsigned int , s#xdr_array2_desc * ) 
xdr_process_buf extern int xdr_process_buf ( s#xdr_buf * , unsigned int , unsigned int , int ( * ) ( s#scatterlist * , void * ) , void * ) 

/* net/sunrpc/xprt.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##nameidata
s##vfsmount
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##workqueue_struct
s##svc_xprt
s#xprt_create struct xprt_create { int ident ; s#sockaddr * srcaddr ; s#sockaddr * dstaddr ; t#size_t addrlen ; s#svc_xprt * bc_xprt ; } 
s#xprt_class struct xprt_class { s#list_head list ; int ident ; s#rpc_xprt * ( * setup ) ( s#xprt_create * ) ; s#module * owner ; char name [ 32 ] ; } 
xprt_register_transport int xprt_register_transport ( s#xprt_class * ) 
xprt_unregister_transport int xprt_unregister_transport ( s#xprt_class * ) 
xprt_load_transport int xprt_load_transport ( const char * ) 
xprt_reserve_xprt int xprt_reserve_xprt ( s#rpc_task * ) 
xprt_reserve_xprt_cong int xprt_reserve_xprt_cong ( s#rpc_task * ) 
xprt_release_xprt void xprt_release_xprt ( s#rpc_xprt * , s#rpc_task * ) 
xprt_release_xprt_cong void xprt_release_xprt_cong ( s#rpc_xprt * , s#rpc_task * ) 
xprt_release_rqst_cong void xprt_release_rqst_cong ( s#rpc_task * ) 
xprt_adjust_cwnd void xprt_adjust_cwnd ( s#rpc_task * , int ) 
xprt_wake_pending_tasks void xprt_wake_pending_tasks ( s#rpc_xprt * , int ) 
xprt_wait_for_buffer_space void xprt_wait_for_buffer_space ( s#rpc_task * , t#rpc_action ) 
xprt_write_space void xprt_write_space ( s#rpc_xprt * ) 
xprt_set_retrans_timeout_def void xprt_set_retrans_timeout_def ( s#rpc_task * ) 
xprt_set_retrans_timeout_rtt void xprt_set_retrans_timeout_rtt ( s#rpc_task * ) 
xprt_disconnect_done void xprt_disconnect_done ( s#rpc_xprt * ) 
xprt_lookup_rqst s#rpc_rqst * xprt_lookup_rqst ( s#rpc_xprt * , t#__be32 ) 
xprt_update_rtt void xprt_update_rtt ( s#rpc_task * ) 
xprt_complete_rqst void xprt_complete_rqst ( s#rpc_task * , int ) 

/* net/sunrpc/xprtsock.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##nameidata
s##vfsmount
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##rpc_iostats
s##workqueue_struct
s##svc_cacherep
s##knfsd_fh
xs_swapper int xs_swapper ( s#rpc_xprt * , int ) 

/* net/sysctl_net.o */
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##pid_namespace
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##cdev
s##posix_acl
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_state
s##rtable
s##rt6_info
s##dn_route
s##xfrm_policy
s##sec_path
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##rt6_statistics
s##fib6_table
s##ip_conntrack_stat
s##net_generic
register_net_sysctl_table extern s#ctl_table_header * register_net_sysctl_table ( s#net * , const s#ctl_path * , s#ctl_table * ) 
register_net_sysctl_rotable extern s#ctl_table_header * register_net_sysctl_rotable ( const s#ctl_path * , s#ctl_table * ) 
unregister_net_sysctl_table extern void unregister_net_sysctl_table ( s#ctl_table_header * ) 

/* net/wimax/op-msg.o */
s##sock
s##neigh_parms
s##vlan_group
s##neighbour
s##wireless_dev
s##Qdisc
s##tvec_base
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ip_conntrack_stat
s##net_generic
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##rtnl_link_ops
s##sec_path
e#wimax_st enum wimax_st { __WIMAX_ST_NULL = 0 , WIMAX_ST_DOWN , __WIMAX_ST_QUIESCING , WIMAX_ST_UNINITIALIZED , WIMAX_ST_RADIO_OFF , WIMAX_ST_READY , WIMAX_ST_SCANNING , WIMAX_ST_CONNECTING , WIMAX_ST_CONNECTED , __WIMAX_ST_INVALID } 
e#wimax_rf_state enum wimax_rf_state { WIMAX_RF_OFF = 0 , WIMAX_RF_ON = 1 , WIMAX_RF_QUERY = 2 , } 
s##rfkill
s##input_dev
s#wimax_dev struct wimax_dev { s#net_device * net_dev ; s#list_head id_table_node ; s#mutex mutex ; s#mutex mutex_reset ; e#wimax_st state ; int ( * op_msg_from_user ) ( s#wimax_dev * , const char * , const void * , t#size_t , const s#genl_info * ) ; int ( * op_rfkill_sw_toggle ) ( s#wimax_dev * , e#wimax_rf_state ) ; int ( * op_reset ) ( s#wimax_dev * ) ; s#rfkill * rfkill ; s#input_dev * rfkill_input ; unsigned rf_hw ; unsigned rf_sw ; char name [ 32 ] ; s#dentry * debugfs_dentry ; } 
wimax_msg_alloc extern s#sk_buff * wimax_msg_alloc ( s#wimax_dev * , const char * , const void * , t#size_t , t#gfp_t ) 
wimax_msg_data_len extern const void * wimax_msg_data_len ( s#sk_buff * , t#size_t * ) 
wimax_msg_data extern const void * wimax_msg_data ( s#sk_buff * ) 
wimax_msg_len extern t#ssize_t wimax_msg_len ( s#sk_buff * ) 
wimax_msg_send extern int wimax_msg_send ( s#wimax_dev * , s#sk_buff * ) 
wimax_msg extern int wimax_msg ( s#wimax_dev * , const char * , const void * , t#size_t , t#gfp_t ) 

/* net/wimax/op-reset.o */
s##sock
s##sec_path
s##neigh_parms
s##vlan_group
s##neighbour
s##wireless_dev
s##Qdisc
s##tvec_base
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ip_conntrack_stat
s##net_generic
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##rtnl_link_ops
s##rfkill
s##input_dev
wimax_reset extern int wimax_reset ( s#wimax_dev * ) 

/* net/wimax/op-rfkill.o */
s##sock
s##sec_path
s##neigh_parms
s##vlan_group
s##neighbour
s##wireless_dev
s##Qdisc
s##tvec_base
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ip_conntrack_stat
s##net_generic
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##rtnl_link_ops
s##rfkill
s##input_dev
wimax_report_rfkill_hw extern void wimax_report_rfkill_hw ( s#wimax_dev * , e#wimax_rf_state ) 
wimax_report_rfkill_sw extern void wimax_report_rfkill_sw ( s#wimax_dev * , e#wimax_rf_state ) 
wimax_rfkill extern int wimax_rfkill ( s#wimax_dev * , e#wimax_rf_state ) 

/* net/wimax/stack.o */
s##sock
s##sec_path
s##neigh_parms
s##vlan_group
s##neighbour
s##wireless_dev
s##Qdisc
s##tvec_base
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ip_conntrack_stat
s##net_generic
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##rtnl_link_ops
s##rfkill
s##input_dev
wimax_state_change extern void wimax_state_change ( s#wimax_dev * , e#wimax_st ) 
wimax_state_get extern e#wimax_st wimax_state_get ( s#wimax_dev * ) 
wimax_dev_init extern void wimax_dev_init ( s#wimax_dev * ) 
wimax_dev_add extern int wimax_dev_add ( s#wimax_dev * , s#net_device * ) 
wimax_dev_rm extern void wimax_dev_rm ( s#wimax_dev * ) 

/* net/xfrm/xfrm_algo.o */
s#xfrm_algo_aead_info struct xfrm_algo_aead_info { t#u16 icv_truncbits ; } 
s#xfrm_algo_auth_info struct xfrm_algo_auth_info { t#u16 icv_truncbits ; t#u16 icv_fullbits ; } 
s#xfrm_algo_encr_info struct xfrm_algo_encr_info { t#u16 blockbits ; t#u16 defkeybits ; } 
s#xfrm_algo_comp_info struct xfrm_algo_comp_info { t#u16 threshold ; } 
s#sadb_alg struct sadb_alg { t#__u8 sadb_alg_id ; t#__u8 sadb_alg_ivlen ; t#__u16 sadb_alg_minbits ; t#__u16 sadb_alg_maxbits ; t#__u16 sadb_alg_reserved ; } 
s#xfrm_algo_desc struct xfrm_algo_desc { char * name ; char * compat ; t#u8 available : 1 ; union { s#xfrm_algo_aead_info aead ; s#xfrm_algo_auth_info auth ; s#xfrm_algo_encr_info encr ; s#xfrm_algo_comp_info comp ; } uinfo ; s#sadb_alg desc ; } 
xfrm_aalg_get_byid extern s#xfrm_algo_desc * xfrm_aalg_get_byid ( int ) 
xfrm_ealg_get_byid extern s#xfrm_algo_desc * xfrm_ealg_get_byid ( int ) 
xfrm_calg_get_byid extern s#xfrm_algo_desc * xfrm_calg_get_byid ( int ) 
xfrm_aalg_get_byname extern s#xfrm_algo_desc * xfrm_aalg_get_byname ( char * , int ) 
xfrm_ealg_get_byname extern s#xfrm_algo_desc * xfrm_ealg_get_byname ( char * , int ) 
xfrm_calg_get_byname extern s#xfrm_algo_desc * xfrm_calg_get_byname ( char * , int ) 
xfrm_aead_get_byname extern s#xfrm_algo_desc * xfrm_aead_get_byname ( char * , int , int ) 
xfrm_aalg_get_byidx extern s#xfrm_algo_desc * xfrm_aalg_get_byidx ( unsigned int ) 
xfrm_ealg_get_byidx extern s#xfrm_algo_desc * xfrm_ealg_get_byidx ( unsigned int ) 
xfrm_probe_algs extern void xfrm_probe_algs ( void ) 
xfrm_count_auth_supported extern int xfrm_count_auth_supported ( void ) 
xfrm_count_enc_supported extern int xfrm_count_enc_supported ( void ) 
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##in_device
s##dn_route
s##ip_conntrack_stat
s##net_generic
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s##crypto_type
t#icv_update_fn_t typedef int ( icv_update_fn_t ) ( s#hash_desc * , s#scatterlist * , unsigned int ) 
skb_icv_walk extern int skb_icv_walk ( const s#sk_buff * , s#hash_desc * , int , int , t#icv_update_fn_t ) 
pskb_put extern void * pskb_put ( s#sk_buff * , s#sk_buff * , int ) 

/* net/xfrm/xfrm_input.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##cdev
s##posix_acl
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##in_device
s##dn_route
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ip_conntrack_stat
s##net_generic
__secpath_destroy extern void __secpath_destroy ( s#sec_path * ) 
secpath_dup extern s#sec_path * secpath_dup ( s#sec_path * ) 
xfrm_prepare_input extern int xfrm_prepare_input ( s#xfrm_state * , s#sk_buff * ) 
xfrm_input extern int xfrm_input ( s#sk_buff * , int , t#__be32 , int ) 
xfrm_input_resume extern int xfrm_input_resume ( s#sk_buff * , int ) 

/* net/xfrm/xfrm_ipcomp.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##cdev
s##posix_acl
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##in_device
s##dn_route
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ip_conntrack_stat
s##net_generic
ipcomp_input int ipcomp_input ( s#xfrm_state * , s#sk_buff * ) 
ipcomp_output int ipcomp_output ( s#xfrm_state * , s#sk_buff * ) 
ipcomp_destroy void ipcomp_destroy ( s#xfrm_state * ) 
ipcomp_init_state int ipcomp_init_state ( s#xfrm_state * ) 

/* net/xfrm/xfrm_output.o */
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bts_context
s##pid_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##nameidata
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##in_device
s##dn_route
s##ip_conntrack_stat
s##net_generic
xfrm_output_resume extern int xfrm_output_resume ( s#sk_buff * , int ) 
xfrm_output extern int xfrm_output ( s#sk_buff * ) 
xfrm_inner_extract_output extern int xfrm_inner_extract_output ( s#xfrm_state * , s#sk_buff * ) 

/* net/xfrm/xfrm_policy.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
xfrm_cfg_mutex extern s#mutex xfrm_cfg_mutex 
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##in_device
s##dn_route
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ip_conntrack_stat
s##net_generic
xfrm_policy_alloc s#xfrm_policy * xfrm_policy_alloc ( s#net * , t#gfp_t ) 
xfrm_policy_destroy extern void xfrm_policy_destroy ( s#xfrm_policy * ) 
s#xfrmk_spdinfo struct xfrmk_spdinfo { t#u32 incnt ; t#u32 outcnt ; t#u32 fwdcnt ; t#u32 inscnt ; t#u32 outscnt ; t#u32 fwdscnt ; t#u32 spdhcnt ; t#u32 spdhmcnt ; } 
xfrm_spd_getinfo extern void xfrm_spd_getinfo ( s#xfrmk_spdinfo * ) 
xfrm_policy_insert int xfrm_policy_insert ( int , s#xfrm_policy * , int ) 
xfrm_policy_bysel_ctx s#xfrm_policy * xfrm_policy_bysel_ctx ( s#net * , t#u8 , int , s#xfrm_selector * , s#xfrm_sec_ctx * , int , int * ) 
xfrm_policy_byid s#xfrm_policy * xfrm_policy_byid ( s#net * , t#u8 , int , t#u32 , int , int * ) 
s#xfrm_audit struct xfrm_audit { t#u32 secid ; t#uid_t loginuid ; t#u32 sessionid ; } 
xfrm_policy_flush int xfrm_policy_flush ( s#net * , t#u8 , s#xfrm_audit * ) 
s#xfrm_policy_walk struct xfrm_policy_walk { s#xfrm_policy_walk_entry walk ; t#u8 type ; t#u32 seq ; } 
xfrm_policy_walk extern int xfrm_policy_walk ( s#net * , s#xfrm_policy_walk * , int ( * ) ( s#xfrm_policy * , int , int , void * ) , void * ) 
xfrm_policy_walk_init extern void xfrm_policy_walk_init ( s#xfrm_policy_walk * , t#u8 ) 
xfrm_policy_walk_done extern void xfrm_policy_walk_done ( s#xfrm_policy_walk * ) 
xfrm_policy_delete extern int xfrm_policy_delete ( s#xfrm_policy * , int ) 
__xfrm_lookup extern int __xfrm_lookup ( s#net * , s#dst_entry * * , s#flowi * , s#sock * , int ) 
xfrm_lookup extern int xfrm_lookup ( s#net * , s#dst_entry * * , s#flowi * , s#sock * , int ) 
__xfrm_decode_session extern int __xfrm_decode_session ( s#sk_buff * , s#flowi * , unsigned int , int ) 
__xfrm_policy_check extern int __xfrm_policy_check ( s#sock * , int , s#sk_buff * , unsigned short ) 
__xfrm_route_forward extern int __xfrm_route_forward ( s#sk_buff * , unsigned short ) 
xfrm_dst_ifdown extern void xfrm_dst_ifdown ( s#dst_entry * , s#net_device * ) 
s#xfrm_dst struct xfrm_dst { union { s#dst_entry dst ; s#rtable rt ; s#rt6_info rt6 ; } u ; s#dst_entry * route ; s#flowi * origin ; s#xfrm_selector * partner ; t#u32 genid ; t#u32 route_mtu_cached ; t#u32 child_mtu_cached ; t#u32 route_cookie ; t#u32 path_cookie ; } 
xfrm_bundle_ok extern int xfrm_bundle_ok ( s#xfrm_policy * , s#xfrm_dst * , s#flowi * , int , int ) 
s#xfrm_policy_afinfo struct xfrm_policy_afinfo { unsigned short family ; s#dst_ops * dst_ops ; void ( * garbage_collect ) ( s#net * ) ; s#dst_entry * ( * dst_lookup ) ( s#net * , int , t#xfrm_address_t * , t#xfrm_address_t * ) ; int ( * get_saddr ) ( s#net * , t#xfrm_address_t * , t#xfrm_address_t * ) ; s#dst_entry * ( * find_bundle ) ( s#flowi * , s#xfrm_policy * ) ; void ( * decode_session ) ( s#sk_buff * , s#flowi * , int ) ; int ( * get_tos ) ( s#flowi * ) ; int ( * init_path ) ( s#xfrm_dst * , s#dst_entry * , int ) ; int ( * fill_dst ) ( s#xfrm_dst * , s#net_device * ) ; } 
xfrm_policy_register_afinfo extern int xfrm_policy_register_afinfo ( s#xfrm_policy_afinfo * ) 
xfrm_policy_unregister_afinfo extern int xfrm_policy_unregister_afinfo ( s#xfrm_policy_afinfo * ) 
xfrm_audit_policy_add extern void xfrm_audit_policy_add ( s#xfrm_policy * , int , t#u32 , t#u32 , t#u32 ) 
xfrm_audit_policy_delete extern void xfrm_audit_policy_delete ( s#xfrm_policy * , int , t#u32 , t#u32 , t#u32 ) 
s#xfrm_migrate struct xfrm_migrate { t#xfrm_address_t old_daddr ; t#xfrm_address_t old_saddr ; t#xfrm_address_t new_daddr ; t#xfrm_address_t new_saddr ; t#u8 proto ; t#u8 mode ; t#u16 reserved ; t#u32 reqid ; t#u16 old_family ; t#u16 new_family ; } 
s#xfrm_kmaddress struct xfrm_kmaddress { t#xfrm_address_t local ; t#xfrm_address_t remote ; t#u32 reserved ; t#u16 family ; } 
xfrm_migrate extern int xfrm_migrate ( s#xfrm_selector * , t#u8 , t#u8 , s#xfrm_migrate * , int , s#xfrm_kmaddress * ) 

/* net/xfrm/xfrm_state.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##nameidata
s##vfsmount
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##in_device
s##dn_route
s##vlan_group
s##wireless_dev
s##Qdisc
s##net_bridge_port
s##macvlan_port
s##garp_port
s##device_private
s##driver_private
s##bus_type_private
s##dma_coherent_mem
s##class_private
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##xt_table
s##mfc_cache
s##vif_device
s##ip_conntrack_stat
s##net_generic
xfrm_register_type extern int xfrm_register_type ( const s#xfrm_type * , unsigned short ) 
xfrm_unregister_type extern int xfrm_unregister_type ( const s#xfrm_type * , unsigned short ) 
xfrm_register_mode extern int xfrm_register_mode ( s#xfrm_mode * , int ) 
xfrm_unregister_mode extern int xfrm_unregister_mode ( s#xfrm_mode * , int ) 
xfrm_state_alloc extern s#xfrm_state * xfrm_state_alloc ( s#net * ) 
__xfrm_state_destroy extern void __xfrm_state_destroy ( s#xfrm_state * ) 
__xfrm_state_delete extern int __xfrm_state_delete ( s#xfrm_state * ) 
xfrm_state_delete extern int xfrm_state_delete ( s#xfrm_state * ) 
xfrm_state_flush extern int xfrm_state_flush ( s#net * , t#u8 , s#xfrm_audit * ) 
s#xfrmk_sadinfo struct xfrmk_sadinfo { t#u32 sadhcnt ; t#u32 sadhmcnt ; t#u32 sadcnt ; } 
xfrm_sad_getinfo extern void xfrm_sad_getinfo ( s#xfrmk_sadinfo * ) 
xfrm_stateonly_find extern s#xfrm_state * xfrm_stateonly_find ( s#net * , t#xfrm_address_t * , t#xfrm_address_t * , unsigned short , t#u8 , t#u8 , t#u32 ) 
xfrm_state_insert extern void xfrm_state_insert ( s#xfrm_state * ) 
xfrm_state_add extern int xfrm_state_add ( s#xfrm_state * ) 
xfrm_migrate_state_find extern s#xfrm_state * xfrm_migrate_state_find ( s#xfrm_migrate * ) 
xfrm_state_migrate extern s#xfrm_state * xfrm_state_migrate ( s#xfrm_state * , s#xfrm_migrate * ) 
xfrm_state_update extern int xfrm_state_update ( s#xfrm_state * ) 
xfrm_state_check_expire extern int xfrm_state_check_expire ( s#xfrm_state * ) 
xfrm_state_lookup extern s#xfrm_state * xfrm_state_lookup ( s#net * , t#xfrm_address_t * , t#__be32 , t#u8 , unsigned short ) 
xfrm_state_lookup_byaddr extern s#xfrm_state * xfrm_state_lookup_byaddr ( s#net * , t#xfrm_address_t * , t#xfrm_address_t * , t#u8 , unsigned short ) 
xfrm_find_acq s#xfrm_state * xfrm_find_acq ( s#net * , t#u8 , t#u32 , t#u8 , t#xfrm_address_t * , t#xfrm_address_t * , int , unsigned short ) 
xfrm_tmpl_sort extern int xfrm_tmpl_sort ( s#xfrm_tmpl * * , s#xfrm_tmpl * * , int , unsigned short ) 
xfrm_state_sort extern int xfrm_state_sort ( s#xfrm_state * * , s#xfrm_state * * , int , unsigned short ) 
xfrm_find_acq_byseq extern s#xfrm_state * xfrm_find_acq_byseq ( s#net * , t#u32 ) 
xfrm_get_acqseq t#u32 xfrm_get_acqseq ( void ) 
xfrm_alloc_spi extern int xfrm_alloc_spi ( s#xfrm_state * , t#u32 , t#u32 ) 
xfrm_state_walk extern int xfrm_state_walk ( s#net * , s#xfrm_state_walk * , int ( * ) ( s#xfrm_state * , int , void * ) , void * ) 
xfrm_state_walk_init extern void xfrm_state_walk_init ( s#xfrm_state_walk * , t#u8 ) 
xfrm_state_walk_done extern void xfrm_state_walk_done ( s#xfrm_state_walk * ) 
s#km_event struct km_event { union { t#u32 hard ; t#u32 proto ; t#u32 byid ; t#u32 aevent ; t#u32 type ; } data ; t#u32 seq ; t#u32 pid ; t#u32 event ; s#net * net ; } 
km_policy_notify extern void km_policy_notify ( s#xfrm_policy * , int , s#km_event * ) 
km_state_notify extern void km_state_notify ( s#xfrm_state * , s#km_event * ) 
km_state_expired extern void km_state_expired ( s#xfrm_state * , int , t#u32 ) 
km_query extern int km_query ( s#xfrm_state * , s#xfrm_tmpl * , s#xfrm_policy * ) 
km_new_mapping extern int km_new_mapping ( s#xfrm_state * , t#xfrm_address_t * , t#__be16 ) 
km_policy_expired extern void km_policy_expired ( s#xfrm_policy * , int , int , t#u32 ) 
km_migrate extern int km_migrate ( s#xfrm_selector * , t#u8 , t#u8 , s#xfrm_migrate * , int , s#xfrm_kmaddress * ) 
km_report extern int km_report ( s#net * , t#u8 , s#xfrm_selector * , t#xfrm_address_t * ) 
xfrm_user_policy extern int xfrm_user_policy ( s#sock * , int , t#u8 * , int ) 
s#xfrm_mgr struct xfrm_mgr { s#list_head list ; char * id ; int ( * notify ) ( s#xfrm_state * , s#km_event * ) ; int ( * acquire ) ( s#xfrm_state * , s#xfrm_tmpl * , s#xfrm_policy * , int ) ; s#xfrm_policy * ( * compile_policy ) ( s#sock * , int , t#u8 * , int , int * ) ; int ( * new_mapping ) ( s#xfrm_state * , t#xfrm_address_t * , t#__be16 ) ; int ( * notify_policy ) ( s#xfrm_policy * , int , s#km_event * ) ; int ( * report ) ( s#net * , t#u8 , s#xfrm_selector * , t#xfrm_address_t * ) ; int ( * migrate ) ( s#xfrm_selector * , t#u8 , t#u8 , s#xfrm_migrate * , int , s#xfrm_kmaddress * ) ; } 
xfrm_register_km extern int xfrm_register_km ( s#xfrm_mgr * ) 
xfrm_unregister_km extern int xfrm_unregister_km ( s#xfrm_mgr * ) 
xfrm_state_register_afinfo extern int xfrm_state_register_afinfo ( s#xfrm_state_afinfo * ) 
xfrm_state_unregister_afinfo extern int xfrm_state_unregister_afinfo ( s#xfrm_state_afinfo * ) 
xfrm_state_delete_tunnel extern void xfrm_state_delete_tunnel ( s#xfrm_state * ) 
xfrm_init_state extern int xfrm_init_state ( s#xfrm_state * ) 
xfrm_audit_state_add extern void xfrm_audit_state_add ( s#xfrm_state * , int , t#u32 , t#u32 , t#u32 ) 
xfrm_audit_state_delete extern void xfrm_audit_state_delete ( s#xfrm_state * , int , t#u32 , t#u32 , t#u32 ) 
xfrm_audit_state_replay_overflow extern void xfrm_audit_state_replay_overflow ( s#xfrm_state * , s#sk_buff * ) 
xfrm_audit_state_notfound_simple extern void xfrm_audit_state_notfound_simple ( s#sk_buff * , t#u16 ) 
xfrm_audit_state_notfound extern void xfrm_audit_state_notfound ( s#sk_buff * , t#u16 , t#__be32 , t#__be32 ) 
xfrm_audit_state_icvfail extern void xfrm_audit_state_icvfail ( s#xfrm_state * , s#sk_buff * , t#u8 ) 

/* security/commoncap.o */
s##sock
s##net_device
s##sec_path
cap_netlink_recv extern int cap_netlink_recv ( s#sk_buff * , int ) 

/* security/inode.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##radix_tree_node
s##writeback_control
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##mnt_namespace
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##cdev
s##posix_acl
securityfs_create_file extern s#dentry * securityfs_create_file ( const char * , t#mode_t , s#dentry * , void * , const s#file_operations * ) 
securityfs_create_dir extern s#dentry * securityfs_create_dir ( const char * , s#dentry * ) 
securityfs_remove extern void securityfs_remove ( s#dentry * ) 

/* security/keys/key.o */
s##seq_file
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s#key_user struct key_user { s#rb_node node ; s#mutex cons_lock ; t#spinlock_t lock ; t#atomic_t usage ; t#atomic_t nkeys ; t#atomic_t nikeys ; t#uid_t uid ; s#user_namespace * user_ns ; int qnkeys ; int qnbytes ; } 
s##keyring_list
key_alloc extern s#key * key_alloc ( s#key_type * , const char * , t#uid_t , t#gid_t , const s#cred * , t#key_perm_t , unsigned long ) 
key_payload_reserve extern int key_payload_reserve ( s#key * , t#size_t ) 
key_instantiate_and_link extern int key_instantiate_and_link ( s#key * , const void * , t#size_t , s#key * , s#key * ) 
key_negate_and_link extern int key_negate_and_link ( s#key * , unsigned , s#key * , s#key * ) 
key_put extern void key_put ( s#key * ) 
s##__key_reference_with_attributes
t#key_ref_t typedef s#__key_reference_with_attributes * key_ref_t 
key_create_or_update extern t#key_ref_t key_create_or_update ( t#key_ref_t , const char * , const char * , const void * , t#size_t , t#key_perm_t , unsigned long ) 
key_update extern int key_update ( t#key_ref_t , const void * , t#size_t ) 
key_revoke extern void key_revoke ( s#key * ) 
register_key_type extern int register_key_type ( s#key_type * ) 
unregister_key_type extern void unregister_key_type ( s#key_type * ) 

/* security/keys/keyring.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s#keyring_list struct keyring_list { s#rcu_head rcu ; unsigned short maxkeys ; unsigned short nkeys ; unsigned short delkey ; s#key * keys [ 0 ] ; } 
key_type_keyring extern s#key_type key_type_keyring 
s##__key_reference_with_attributes
keyring_search extern t#key_ref_t keyring_search ( t#key_ref_t , s#key_type * , const char * ) 
key_link extern int key_link ( s#key * , s#key * ) 
key_unlink extern int key_unlink ( s#key * , s#key * ) 
keyring_clear extern int keyring_clear ( s#key * ) 

/* security/keys/permission.o */
s##__key_reference_with_attributes
s##seq_file
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##user_namespace
s##keyring_list
key_task_permission extern int key_task_permission ( const t#key_ref_t , const s#cred * , t#key_perm_t ) 
key_validate extern int key_validate ( s#key * ) 

/* security/keys/request_key.o */
s##seq_file
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##file
s##linux_binfmt
s##bts_context
s##pid_namespace
s##user_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##keyring_list
complete_request_key extern void complete_request_key ( s#key_construction * , int ) 
wait_for_key_construction extern int wait_for_key_construction ( s#key * , t#bool ) 
request_key extern s#key * request_key ( s#key_type * , const char * , const char * ) 
request_key_with_auxdata extern s#key * request_key_with_auxdata ( s#key_type * , const char * , const void * , t#size_t , void * ) 
request_key_async extern s#key * request_key_async ( s#key_type * , const char * , const void * , t#size_t ) 
request_key_async_with_auxdata extern s#key * request_key_async_with_auxdata ( s#key_type * , const char * , const void * , t#size_t , void * ) 

/* security/keys/user_defined.o */
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##file
s##linux_binfmt
s##bts_context
s##pid_namespace
s##user_namespace
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
s##keyring_list
key_type_user extern s#key_type key_type_user 
user_instantiate extern int user_instantiate ( s#key * , const void * , t#size_t ) 
user_update extern int user_update ( s#key * , const void * , t#size_t ) 
user_match extern int user_match ( const s#key * , const void * ) 
user_revoke extern void user_revoke ( s#key * ) 
user_destroy extern void user_destroy ( s#key * ) 
user_describe extern void user_describe ( const s#key * , s#seq_file * ) 
user_read extern long user_read ( const s#key * , char * , t#size_t ) 

/* security/security.o */
security_sb_copy_data int security_sb_copy_data ( char * , char * ) 
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##exec_domain
s##compat_timespec
s##pollfd
s##nameidata
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##hd_struct
s##gendisk
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##backing_dev_info
s##array_cache
s##kmem_list3
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##mtd_info
s#security_mnt_opts struct security_mnt_opts { char * * mnt_opts ; int * mnt_opts_flags ; int num_mnt_opts ; } 
security_sb_set_mnt_opts int security_sb_set_mnt_opts ( s#super_block * , s#security_mnt_opts * ) 
security_sb_clone_mnt_opts void security_sb_clone_mnt_opts ( const s#super_block * , s#super_block * ) 
security_sb_parse_opts_str int security_sb_parse_opts_str ( char * , s#security_mnt_opts * ) 
security_inode_init_security int security_inode_init_security ( s#inode * , s#inode * , char * * , void * * , t#size_t * ) 
security_path_mknod int security_path_mknod ( s#path * , s#dentry * , int , unsigned int ) 
security_inode_create int security_inode_create ( s#inode * , s#dentry * , int ) 
security_inode_mkdir int security_inode_mkdir ( s#inode * , s#dentry * , int ) 
security_inode_permission int security_inode_permission ( s#inode * , int ) 
security_inode_setattr int security_inode_setattr ( s#dentry * , s#iattr * ) 
security_task_getsecid void security_task_getsecid ( s#task_struct * , t#u32 * ) 
security_d_instantiate void security_d_instantiate ( s#dentry * , s#inode * ) 
s##sk_buff
security_netlink_recv int security_netlink_recv ( s#sk_buff * , int ) 
security_secid_to_secctx int security_secid_to_secctx ( t#u32 , char * * , t#u32 * ) 
security_secctx_to_secid int security_secctx_to_secid ( const char * , t#u32 , t#u32 * ) 
security_release_secctx void security_release_secctx ( char * , t#u32 ) 
security_inode_notifysecctx int security_inode_notifysecctx ( s#inode * , void * , t#u32 ) 
security_inode_setsecctx int security_inode_setsecctx ( s#dentry * , void * , t#u32 ) 
security_inode_getsecctx int security_inode_getsecctx ( s#inode * , void * * , t#u32 * ) 
s##socket
s##sock
security_unix_stream_connect int security_unix_stream_connect ( s#socket * , s#socket * , s#sock * ) 
security_unix_may_send int security_unix_may_send ( s#socket * , s#socket * ) 
security_sock_rcv_skb int security_sock_rcv_skb ( s#sock * , s#sk_buff * ) 
security_socket_getpeersec_dgram int security_socket_getpeersec_dgram ( s#socket * , s#sk_buff * , t#u32 * ) 
security_sk_classify_flow void security_sk_classify_flow ( s#sock * , s#flowi * ) 
s##request_sock
security_req_classify_flow void security_req_classify_flow ( const s#request_sock * , s#flowi * ) 
security_sock_graft void security_sock_graft ( s#sock * , s#socket * ) 
security_inet_conn_request int security_inet_conn_request ( s#sock * , s#sk_buff * , s#request_sock * ) 
security_tun_dev_create int security_tun_dev_create ( void ) 
security_tun_dev_post_create void security_tun_dev_post_create ( s#sock * ) 
security_tun_dev_attach int security_tun_dev_attach ( s#sock * ) 
s#xfrm_user_sec_ctx struct xfrm_user_sec_ctx { t#__u16 len ; t#__u16 exttype ; t#__u8 ctx_alg ; t#__u8 ctx_doi ; t#__u16 ctx_len ; } 
security_xfrm_policy_alloc int security_xfrm_policy_alloc ( s#xfrm_sec_ctx * * , s#xfrm_user_sec_ctx * ) 
security_xfrm_policy_free void security_xfrm_policy_free ( s#xfrm_sec_ctx * ) 
s##xfrm_state
security_xfrm_state_alloc int security_xfrm_state_alloc ( s#xfrm_state * , s#xfrm_user_sec_ctx * ) 
security_xfrm_state_delete int security_xfrm_state_delete ( s#xfrm_state * ) 
security_skb_classify_flow void security_skb_classify_flow ( s#sk_buff * , s#flowi * ) 

/* security/selinux/exports.o */
selinux_string_to_sid int selinux_string_to_sid ( char * , t#u32 * ) 
selinux_secmark_relabel_packet_permission int selinux_secmark_relabel_packet_permission ( t#u32 ) 
selinux_secmark_refcount_inc void selinux_secmark_refcount_inc ( void ) 
selinux_secmark_refcount_dec void selinux_secmark_refcount_dec ( void ) 
selinux_is_enabled t#bool selinux_is_enabled ( void ) 

/* virt/kvm/kvm_main.o */
s##array_cache
s##kmem_list3
kvm_vcpu_cache extern s#kmem_cache * kvm_vcpu_cache 
s##rq
s##cfs_rq
s##rt_rq
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##kstatfs
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##writeback_control
s##linux_binfmt
s##bts_context
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##utrace_engine
s##rt_mutex_waiter
s##bio
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##ftrace_ret_stack
s##mem_cgroup
s##exec_domain
s##compat_timespec
s##pollfd
t#gfn_t typedef unsigned long gfn_t 
s#kvm_memory_slot struct kvm_memory_slot { t#gfn_t base_gfn ; unsigned long npages ; unsigned long flags ; unsigned long * rmap ; unsigned long * dirty_bitmap ; struct { unsigned long rmap_pde ; int write_count ; } * lpage_info [ 2 - 1 ] ; unsigned long userspace_addr ; int user_alloc ; } 
s#kvm_memslots struct kvm_memslots { int nmemslots ; s#kvm_memory_slot memslots [ 32 + 4 ] ; } 
t#gpa_t typedef t#u64 gpa_t 
s#kvm_io_device_ops struct kvm_io_device_ops { int ( * read ) ( s#kvm_io_device * , t#gpa_t , int , void * ) ; int ( * write ) ( s#kvm_io_device * , t#gpa_t , int , const void * ) ; void ( * destructor ) ( s#kvm_io_device * ) ; } 
s#kvm_io_device struct kvm_io_device { const s#kvm_io_device_ops * ops ; } 
s#kvm_io_bus struct kvm_io_bus { int dev_count ; s#kvm_io_device * devs [ 6 ] ; } 
s#kvm_vm_stat struct kvm_vm_stat { t#u32 remote_tlb_flush ; } 
s#sca_entry struct sca_entry { t#atomic_t scn ; t#__u64 reserved ; t#__u64 sda ; t#__u64 reserved2 [ 2 ] ; } 
s#sca_block struct sca_block { t#__u64 ipte_control ; t#__u64 reserved [ 5 ] ; t#__u64 mcn ; t#__u64 reserved2 ; s#sca_entry cpu [ 64 ] ; } 
s#kvm_s390_local_interrupt struct kvm_s390_local_interrupt { t#spinlock_t lock ; s#list_head list ; t#atomic_t active ; s#kvm_s390_float_interrupt * float_int ; int timer_due ; t#wait_queue_head_t wq ; t#atomic_t * cpuflags ; unsigned int action_bits ; } 
s#kvm_s390_float_interrupt struct kvm_s390_float_interrupt { t#spinlock_t lock ; s#list_head list ; t#atomic_t active ; int next_rr_cpu ; unsigned long idle_mask [ ( 64 + sizeof ( long ) - 1 ) / sizeof ( long ) ] ; s#kvm_s390_local_interrupt * local_int [ 64 ] ; } 
s#kvm_arch struct kvm_arch { s#sca_block * sca ; t#debug_info_t * dbf ; s#kvm_s390_float_interrupt float_int ; } 
s#kvm struct kvm { t#spinlock_t mmu_lock ; t#spinlock_t requests_lock ; s#mutex slots_lock ; s#mm_struct * mm ; s#kvm_memslots * memslots ; s#srcu_struct srcu ; s#kvm_vcpu * vcpus [ 64 ] ; t#atomic_t online_vcpus ; s#list_head vm_list ; s#mutex lock ; s#kvm_io_bus * buses [ KVM_NR_BUSES ] ; s#kvm_vm_stat stat ; s#kvm_arch arch ; t#atomic_t users_count ; s#mutex irq_lock ; } 
s#kvm_debug_exit_arch struct kvm_debug_exit_arch { } 
s#kvm_run struct kvm_run { t#__u8 request_interrupt_window ; t#__u8 padding1 [ 7 ] ; t#__u32 exit_reason ; t#__u8 ready_for_interrupt_injection ; t#__u8 if_flag ; t#__u8 padding2 [ 2 ] ; t#__u64 cr8 ; t#__u64 apic_base ; t#__u64 psw_mask ; t#__u64 psw_addr ; union { struct { t#__u64 hardware_exit_reason ; } hw ; struct { t#__u64 hardware_entry_failure_reason ; } fail_entry ; struct { t#__u32 exception ; t#__u32 error_code ; } ex ; struct { t#__u8 direction ; t#__u8 size ; t#__u16 port ; t#__u32 count ; t#__u64 data_offset ; } io ; struct { s#kvm_debug_exit_arch arch ; } debug ; struct { t#__u64 phys_addr ; t#__u8 data [ 8 ] ; t#__u32 len ; t#__u8 is_write ; } mmio ; struct { t#__u64 nr ; t#__u64 args [ 6 ] ; t#__u64 ret ; t#__u32 longmode ; t#__u32 pad ; } hypercall ; struct { t#__u64 rip ; t#__u32 is_write ; t#__u32 pad ; } tpr_access ; struct { t#__u8 icptcode ; t#__u16 ipa ; t#__u32 ipb ; } s390_sieic ; t#__u64 s390_reset_flags ; struct { t#__u32 dcrn ; t#__u32 data ; t#__u8 is_write ; } dcr ; struct { t#__u32 suberror ; } internal ; char padding [ 256 ] ; } ; } 
s#kvm_vcpu_stat struct kvm_vcpu_stat { t#u32 exit_userspace ; t#u32 exit_null ; t#u32 exit_external_request ; t#u32 exit_external_interrupt ; t#u32 exit_stop_request ; t#u32 exit_validity ; t#u32 exit_instruction ; t#u32 instruction_lctl ; t#u32 instruction_lctlg ; t#u32 exit_program_interruption ; t#u32 exit_instr_and_program ; t#u32 deliver_emergency_signal ; t#u32 deliver_service_signal ; t#u32 deliver_virtio_interrupt ; t#u32 deliver_stop_signal ; t#u32 deliver_prefix_signal ; t#u32 deliver_restart_signal ; t#u32 deliver_program_int ; t#u32 exit_wait_state ; t#u32 instruction_stidp ; t#u32 instruction_spx ; t#u32 instruction_stpx ; t#u32 instruction_stap ; t#u32 instruction_storage_key ; t#u32 instruction_stsch ; t#u32 instruction_chsc ; t#u32 instruction_stsi ; t#u32 instruction_stfl ; t#u32 instruction_sigp_sense ; t#u32 instruction_sigp_emergency ; t#u32 instruction_sigp_stop ; t#u32 instruction_sigp_arch ; t#u32 instruction_sigp_prefix ; t#u32 instruction_sigp_restart ; t#u32 diagnose_44 ; } 
s#kvm_s390_sie_block struct kvm_s390_sie_block { t#atomic_t cpuflags ; t#__u32 prefix ; t#__u8 reserved8 [ 32 ] ; t#__u64 cputm ; t#__u64 ckc ; t#__u64 epoch ; t#__u8 reserved40 [ 4 ] ; t#__u16 lctl ; t#__s16 icpua ; t#__u32 ictl ; t#__u32 eca ; t#__u8 icptcode ; t#__u8 reserved51 ; t#__u16 ihcpu ; t#__u8 reserved54 [ 2 ] ; t#__u16 ipa ; t#__u32 ipb ; t#__u32 scaoh ; t#__u8 reserved60 ; t#__u8 ecb ; t#__u8 reserved62 [ 2 ] ; t#__u32 scaol ; t#__u8 reserved68 [ 4 ] ; t#__u32 todpr ; t#__u8 reserved70 [ 16 ] ; t#__u64 gmsor ; t#__u64 gmslm ; t#psw_t gpsw ; t#__u64 gg14 ; t#__u64 gg15 ; t#__u8 reservedb0 [ 30 ] ; t#__u16 iprcc ; t#__u8 reservedd0 [ 48 ] ; t#__u64 gcr [ 16 ] ; t#__u64 gbea ; t#__u8 reserved188 [ 24 ] ; t#__u32 fac ; t#__u8 reserved1a4 [ 92 ] ; } 
s#kvm_vcpu_arch struct kvm_vcpu_arch { s#kvm_s390_sie_block * sie_block ; unsigned long guest_gprs [ 16 ] ; t#s390_fp_regs host_fpregs ; unsigned int host_acrs [ 16 ] ; t#s390_fp_regs guest_fpregs ; unsigned int guest_acrs [ 16 ] ; s#kvm_s390_local_interrupt local_int ; s#hrtimer ckc_timer ; s#tasklet_struct tasklet ; union { s#cpuid cpu_id ; t#u64 stidp_data ; } ; } 
s#kvm_vcpu struct kvm_vcpu { s#kvm * kvm ; s#preempt_notifier preempt_notifier ; int vcpu_id ; s#mutex mutex ; int cpu ; s#kvm_run * run ; unsigned long requests ; unsigned long guest_debug ; int srcu_idx ; int fpu_active ; int guest_fpu_loaded ; t#wait_queue_head_t wq ; int sigset_active ; t#sigset_t sigset ; s#kvm_vcpu_stat stat ; s#kvm_vcpu_arch arch ; } 
kvm_vcpu_init int kvm_vcpu_init ( s#kvm_vcpu * , s#kvm * , unsigned ) 
kvm_vcpu_uninit void kvm_vcpu_uninit ( s#kvm_vcpu * ) 
kvm_get_kvm void kvm_get_kvm ( s#kvm * ) 
kvm_put_kvm void kvm_put_kvm ( s#kvm * ) 
s#kvm_userspace_memory_region struct kvm_userspace_memory_region { t#__u32 slot ; t#__u32 flags ; t#__u64 guest_phys_addr ; t#__u64 memory_size ; t#__u64 userspace_addr ; } 
__kvm_set_memory_region int __kvm_set_memory_region ( s#kvm * , s#kvm_userspace_memory_region * , int ) 
kvm_set_memory_region int kvm_set_memory_region ( s#kvm * , s#kvm_userspace_memory_region * , int ) 
kvm_disable_largepages void kvm_disable_largepages ( void ) 
is_error_page int is_error_page ( s#page * ) 
t#hfn_t typedef unsigned long hfn_t 
t#pfn_t typedef t#hfn_t pfn_t 
is_error_pfn int is_error_pfn ( t#pfn_t ) 
kvm_is_error_hva int kvm_is_error_hva ( unsigned long ) 
gfn_to_memslot_unaliased s#kvm_memory_slot * gfn_to_memslot_unaliased ( s#kvm * , t#gfn_t ) 
kvm_is_visible_gfn int kvm_is_visible_gfn ( s#kvm * , t#gfn_t ) 
gfn_to_hva unsigned long gfn_to_hva ( s#kvm * , t#gfn_t ) 
gfn_to_pfn t#pfn_t gfn_to_pfn ( s#kvm * , t#gfn_t ) 
gfn_to_page s#page * gfn_to_page ( s#kvm * , t#gfn_t ) 
kvm_release_page_clean void kvm_release_page_clean ( s#page * ) 
kvm_release_pfn_clean void kvm_release_pfn_clean ( t#pfn_t ) 
kvm_release_page_dirty void kvm_release_page_dirty ( s#page * ) 
kvm_release_pfn_dirty void kvm_release_pfn_dirty ( t#pfn_t ) 
kvm_set_page_dirty void kvm_set_page_dirty ( s#page * ) 
kvm_set_pfn_dirty void kvm_set_pfn_dirty ( t#pfn_t ) 
kvm_set_pfn_accessed void kvm_set_pfn_accessed ( t#pfn_t ) 
kvm_get_pfn void kvm_get_pfn ( t#pfn_t ) 
kvm_read_guest_page int kvm_read_guest_page ( s#kvm * , t#gfn_t , void * , int , int ) 
kvm_read_guest int kvm_read_guest ( s#kvm * , t#gpa_t , void * , unsigned long ) 
kvm_read_guest_atomic int kvm_read_guest_atomic ( s#kvm * , t#gpa_t , void * , unsigned long ) 
kvm_write_guest_page int kvm_write_guest_page ( s#kvm * , t#gfn_t , const void * , int , int ) 
kvm_clear_guest_page int kvm_clear_guest_page ( s#kvm * , t#gfn_t , int , int ) 
kvm_clear_guest int kvm_clear_guest ( s#kvm * , t#gpa_t , unsigned long ) 
kvm_resched void kvm_resched ( s#kvm_vcpu * ) 
kvm_vcpu_on_spin void kvm_vcpu_on_spin ( s#kvm_vcpu * ) 
kvm_handle_fault_on_reboot void kvm_handle_fault_on_reboot ( void ) 
kvm_init int kvm_init ( void * , unsigned int , s#module * ) 
kvm_exit void kvm_exit ( void ) 

