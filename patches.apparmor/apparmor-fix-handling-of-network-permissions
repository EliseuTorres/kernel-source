From: Jeff Mahoney <jeffm@suse.com>
Subject: apparmor: Fix handling of network permissions
Patch-mainline: Fixed in upstream apparmor already
References: bnc#654701

 aa_net_perm() was setting the error but then zeroing out the structure
 afterwards, clearing the error. This meant that AppArmor wasn't arbitrating
 network requests properly.

 Moving the error check after the clearing resolves the issue.

Signed-off-by: Jeff Mahoney <jeffm@suse.com>
---
 security/apparmor/net.c |    5 ++---
 1 file changed, 2 insertions(+), 3 deletions(-)

--- a/security/apparmor/net.c
+++ b/security/apparmor/net.c
@@ -89,7 +89,7 @@ static int aa_audit_net(struct aa_profil
 			return PROFILE_COMPLAIN(profile) ? 0 : sa->base.error;
 	}
 
-	return aa_audit(type, profile, (struct aa_audit *)sa, audit_cb);
+	return aa_audit(type, profile, &sa->base, audit_cb);
 }
 
 int aa_net_perm(struct aa_profile *profile, char *operation, int int_state,
@@ -110,11 +110,10 @@ int aa_net_perm(struct aa_profile *profi
 
 	family_mask = profile->net.allowed[family];
 
-	sa.base.error = (family_mask & (1 << type)) ? 0 : -EACCES;
-
 	memset(&sa, 0, sizeof(sa));
 	sa.base.operation = operation;
 	sa.base.gfp_mask = int_state ? GFP_ATOMIC : GFP_KERNEL;
+	sa.base.error = (family_mask & (1 << type)) ? 0 : -EACCES;
 	sa.family = family;
 	sa.type = type;
 	sa.protocol = protocol;
