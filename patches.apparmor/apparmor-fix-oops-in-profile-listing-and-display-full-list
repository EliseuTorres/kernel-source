From john.johansen@canonical.com  Tue Nov 17 11:13:49 2009
From: John Johansen <john.johansen@canonical.com>
Date: Wed, 26 Aug 2009 21:04:17 +0000 (-0700)
Subject: AppArmor: Fix OOPS in profile listing, and display full list
Git-commit: 76a750c89ed2a89efa9fcd240526e6a06b61c559
Git-Repo: git://kernel.ubuntu.com/jj/apparmor-mainline.git AppArmor-2.4

AppArmor: Fix OOPS in profile listing, and display full list

BugLink: http://bugs.launchpad.net/bugs/408454

As affects lp #408473

Listing of profiles was broken so that only the first subprofile/hat would
be displayed, and in certain profile tree arrangements cause an oops.  Fix
the listing so that all subprofiles and their subprofiles will be displayed.

Signed-off-by: John Johansen <john.johansen@canonical.com>
Signed-off-by: Tim Gardner <tim.gardner@canonical.com>
Acked-by: Jeff Mahoney <jeffm@suse.com>
---
 security/apparmor/apparmorfs.c |   34 +++++++++++++++-------------------
 1 file changed, 15 insertions(+), 19 deletions(-)

--- a/security/apparmor/apparmorfs.c
+++ b/security/apparmor/apparmorfs.c
@@ -74,34 +74,30 @@ out:
 
 static struct aa_profile *next_profile(struct aa_profile *profile)
 {
-	struct aa_profile *next = profile;
-	struct aa_namespace *ns;
+	struct aa_profile *parent;
+	struct aa_namespace *ns = profile->ns;
 
-	if (!list_empty(&profile->base.profiles)) {
-		list_for_each_entry(next, &profile->base.profiles, base.list)
-			return next;
-	}
+	if (!list_empty(&profile->base.profiles))
+		return list_first_entry(&profile->base.profiles,
+					struct aa_profile, base.list);
 
-	while (profile->parent) {
-		next = profile->parent;
-		list_for_each_entry_continue(next,
-					     &profile->parent->base.profiles,
+	parent = profile->parent;
+	while (parent) {
+		list_for_each_entry_continue(profile, &parent->base.profiles,
 					     base.list)
-			return next;
-		profile = profile->parent;
+			return profile;
+		profile = parent;
+		parent = parent->parent;
 	}
 
-	next = profile;
-	list_for_each_entry_continue(next, &profile->ns->base.profiles,
-				     base.list)
-		return next;
+	list_for_each_entry_continue(profile, &ns->base.profiles, base.list)
+		return profile;
 
-	ns = profile->ns;
 	read_unlock(&ns->base.lock);
 	list_for_each_entry_continue(ns, &ns_list, base.list) {
 		read_lock(&ns->base.lock);
-		list_for_each_entry(profile, &ns->base.profiles, base.list)
-			return profile;
+		return list_first_entry(&ns->base.profiles, struct aa_profile,
+					base.list);
 		read_unlock(&ns->base.lock);
 	}
 	return NULL;
