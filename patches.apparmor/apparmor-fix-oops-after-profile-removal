From john.johansen@canonical.com  Tue Nov 17 12:03:14 2009
From: John Johansen <john.johansen@canonical.com>
Date: Tue, 17 Nov 2009 07:01:53 +0000 (-0800)
Subject: AppArmor: Fix oops after profile removal
Git-commit: 2dcff6eb51fffae61811a05c1c63cf7960f416e0
Git-Repo: git://kernel.ubuntu.com/jj/apparmor-mainline.git AppArmor-2.4

AppArmor: Fix oops after profile removal

BugLink: http://bugs.launchpad.net/bugs/475619

This bug can cause a null pointer dereference kernel oops. This will occur
any time children profiles are attached to running processes. This can occur
when change_hat, children profiles or profile learning is used.

Note: this fix is a smaller fix than what is done upstream, as the upstream
      fix reworks the replacement code, to remove all vestiges of the
      old method of using ERR_PTR during removal.

Signed-off-by: John Johansen <john.johansen@canonical.com>
Acked-by: Jeff Mahoney <jeffm@suse.com>
---

 security/apparmor/policy.c |   12 +++---------
 1 file changed, 3 insertions(+), 9 deletions(-)

diff --git a/security/apparmor/policy.c b/security/apparmor/policy.c
index b709c30..e2bc9e5 100644
--- a/security/apparmor/policy.c
+++ b/security/apparmor/policy.c
@@ -322,7 +322,7 @@ void __aa_remove_profile(struct aa_profile *profile,
 	if (replacement)
 		profile->replacedby = aa_get_profile(replacement);
 	else
-		profile->replacedby = ERR_PTR(-EINVAL);
+		profile->replacedby = aa_get_profile(profile->ns->unconfined);
 	list_del_init(&profile->base.list);
 	if (!(profile->flags & PFLAG_NO_LIST_REF))
 		aa_put_profile(profile);
@@ -541,7 +541,7 @@ void free_aa_profile(struct aa_profile *profile)
 	aa_free_sid(profile->sid);
 	aa_match_free(profile->xmatch);
 
-	if (profile->replacedby && !PTR_ERR(profile->replacedby))
+	if (profile->replacedby)
 		aa_put_profile(profile->replacedby);
 
 	memset(profile, 0, sizeof(profile));
@@ -715,13 +715,7 @@ struct aa_profile *aa_sys_find_attach(struct aa_policy_common *base,
 struct aa_profile *aa_profile_newest(struct aa_profile *profile)
 {
 	if (unlikely(profile && profile->replacedby)) {
-		for (;profile->replacedby; profile = profile->replacedby) {
-			if (IS_ERR(profile->replacedby)) {
-				/* profile has been removed */
-				profile = NULL;
-				break;
-			}
-		} 
+		for (;profile->replacedby; profile = profile->replacedby) ;
 	}
 
 	return profile;

