From: Kees Cook <kees@ubuntu.com>
References: bnc#492961, bln#350789
Subject: apparmor: check for network in interrupt and work around
Patch-mainline: Whenever AA gets upstream

AppArmor will cause failures when socket_sendmsg is called from interrupt
context. These failures have been reported to affect bluetooth for some people
in Ubuntu Jaunty.

This patch works around the issue until the drivers can be fixed.

Signed-off-by: Brandon Philips <bphilips@suse.de>
Acked-by: Jeff Mahoney <jeffm@suse.com>
---
 security/apparmor/include/net.h |    2 +-
 security/apparmor/lsm.c         |    4 ++--
 security/apparmor/net.c         |   14 +++-----------
 3 files changed, 6 insertions(+), 14 deletions(-)

--- a/security/apparmor/include/net.h
+++ b/security/apparmor/include/net.h
@@ -29,7 +29,7 @@ struct aa_net {
 };
 
 extern int aa_net_perm(struct aa_profile *profile, char *operation,
-			int family, int type, int protocol);
+		       int int_state, int family, int type, int protocol);
 extern int aa_revalidate_sk(struct sock *sk, char *operation);
 
 static inline void aa_free_net_rules(struct aa_net *new)
--- a/security/apparmor/lsm.c
+++ b/security/apparmor/lsm.c
@@ -571,8 +571,8 @@ static int apparmor_socket_create(int fa
 
 	profile = aa_current_profile();
 	if (profile)
-		error = aa_net_perm(profile, "socket_create", family,
-							type, protocol);
+		error = aa_net_perm(profile, "socket_create", 0,
+				    family, type, protocol);
 	return error;
 }
 
--- a/security/apparmor/net.c
+++ b/security/apparmor/net.c
@@ -92,7 +92,7 @@ static int aa_audit_net(struct aa_profil
 	return aa_audit(type, profile, (struct aa_audit *)sa, audit_cb);
 }
 
-int aa_net_perm(struct aa_profile *profile, char *operation,
+int aa_net_perm(struct aa_profile *profile, char *operation, int int_state,
 		int family, int type, int protocol)
 {
 	struct aa_audit_net sa;
@@ -114,7 +114,7 @@ int aa_net_perm(struct aa_profile *profi
 
 	memset(&sa, 0, sizeof(sa));
 	sa.base.operation = operation;
-	sa.base.gfp_mask = GFP_KERNEL;
+	sa.base.gfp_mask = int_state ? GFP_ATOMIC : GFP_KERNEL;
 	sa.family = family;
 	sa.type = type;
 	sa.protocol = protocol;
@@ -128,17 +128,9 @@ int aa_revalidate_sk(struct sock *sk, ch
 	struct cred *cred;
 	int error = 0;
 
-	/* this is some debugging code to flush out the network hooks that
-	   that are called in interrupt context */
-	if (in_interrupt()) {
-		printk(KERN_WARNING "AppArmor Debug: Hook being called from interrupt context\n");
-		dump_stack();
-		return 0;
-	}
-
 	cred = aa_get_task_policy(current, &profile);
 	if (profile)
-		error = aa_net_perm(profile, operation,
+		error = aa_net_perm(profile, operation, in_interrupt(),
 				    sk->sk_family, sk->sk_type,
 				    sk->sk_protocol);
 	put_cred(cred);
