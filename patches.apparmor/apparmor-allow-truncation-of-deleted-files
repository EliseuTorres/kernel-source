From john.johansen@canonical.com  Tue Nov 17 12:03:14 2009
From: John Johansen <john.johansen@canonical.com>
Date: Tue, 17 Nov 2009 06:53:18 +0000 (-0800)
Subject: AppArmor: Allow truncation of deleted files
Git-commit: dae3fe8b3f624c5dd48716899dd45bd9a76320a9
Git-Repo: git://kernel.ubuntu.com/jj/apparmor-mainline.git AppArmor-2.4

AppArmor: AppArmor disallows truncate of deleted files.

BugLink: http://bugs.launchpad.net/bugs/451375

AppArmor forces a change in application behavior that while ugly is
long standing and thus can break existing applications without any
recourse except to disable apparmor mediation of the application.

The bug/change of behavior is as follows:
The application opens a file at /some/path, it then unlinks the
file and continues to hold a reference to the file through fd.
The application then tries to truncate the file but the
security_path_truncate doesn't identify if the path comes from
a file or not.  So we can't distinguisth between trunc("/some/path")
and trunc(fd).  Since the path no longer exists and is not
visible AppArmor denies the access, but standard semantics are to
allow the truncate of the deleted file.

Change AppArmor deleted file mediation to allow allow consideration
of the deleted path name.

Signed-off-by: John Johansen <john.johansen@canonical.com>
Acked-by: Jeff Mahoney <jeffm@suse.com>
---

 security/apparmor/path.c |    4 ++++
 1 file changed, 4 insertions(+)

diff --git a/security/apparmor/path.c b/security/apparmor/path.c
index 85897e0..2c14e1d 100644
--- a/security/apparmor/path.c
+++ b/security/apparmor/path.c
@@ -121,6 +121,10 @@ int d_namespace_path(struct path *path, char *buf, int buflen, char **name)
 		 * strip it.
 		 */
 		buf[buflen - 11] = 0;	/* - (len(" (deleted)") +\0) */
+	} else if (d_unhashed(path->dentry) && (buf + buflen) - res > 11 &&
+		   strcmp(buf + buflen - 11, " (deleted)") == 0) {
+		/* For now allow mediation of deleted paths */
+		buf[buflen - 11] = 0;	/* - (len(" (deleted)") +\0) */
 	} else if (!IS_ROOT(path->dentry) && d_unhashed(path->dentry)) {
 		error = -ENOENT;
 #if 0

