From john.johansen@canonical.com  Tue Nov 17 12:03:14 2009
From: John Johansen <john.johansen@canonical.com>
Date: Tue, 17 Nov 2009 07:23:31 +0000 (-0800)
Subject: AppArmor: Fix leak when profile transition table fails unpack
Git-commit: 65ed2e80434928de94d7ada01a6ab17d3cf3458b
Git-Repo: git://kernel.ubuntu.com/jj/apparmor-mainline.git AppArmor-2.4

Fix leak when profile transition table fails unpack

Priority: low, only should occur on corrupted policy tables, which shouldn't
          generally happen.

Fix a leak of the transition table strings when the profile transition
table unpack fails.

Signed-off-by: John Johansen <john.johansen@canonical.com>
Acked-by: Jeff Mahoney <jeffm@suse.com>
---

 security/apparmor/policy_interface.c |    7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

diff --git a/security/apparmor/policy_interface.c b/security/apparmor/policy_interface.c
index 68e87cd..7609354 100644
--- a/security/apparmor/policy_interface.c
+++ b/security/apparmor/policy_interface.c
@@ -376,6 +376,7 @@ static int aa_unpack_trans_table(struct aa_ext *e, struct aa_profile *profile)
 		if (!profile->file.trans.table)
 			goto fail;
 
+		profile->file.trans.size = size;
 		for (i = 0; i < size; i++) {
 		    char *tmp;
 			if (!aa_is_dynstring(e, &tmp, NULL))
@@ -389,11 +390,15 @@ static int aa_unpack_trans_table(struct aa_ext *e, struct aa_profile *profile)
 			goto fail;
 		if (!aa_is_nameX(e, AA_STRUCTEND, NULL))
 			goto fail;
-		profile->file.trans.size = size;
 	}
 	return 1;
 
 fail:
+	if (profile->file.trans.table) {
+		int i;
+		for (i = 0; i < profile->file.trans.size; i++)
+			kfree(profile->file.trans.table[i]);
+	}
 	e->pos = pos;
 	return 0;
 }

