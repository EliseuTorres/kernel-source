From john.johansen@canonical.com  Tue Nov 17 12:03:14 2009
From: John Johansen <john.johansen@canonical.com>
Date: Tue, 17 Nov 2009 07:05:58 +0000 (-0800)
Subject: AppArmor: Fix Oops when in apparmor_bprm_set_creds
Git-commit: f5217539d5f2dcc100a8e470f0ec407ae4bbaca3
Git-Repo: git://kernel.ubuntu.com/jj/apparmor-mainline.git AppArmor-2.4

AppArmor: Fix Oops when in apparmor_bprm_set_creds

BugLink: http://bugs.launchpad.net/bugs/437258

This can cause an oops at 000068.  This will happen to all processes confined
or unconfined when name resolution fails at exec.  This can happen in a couple
different cases, applications like psxe, and mugen munge the process during
their decrompress and set up links so that a valid name does not exist.  The
other way that this can happen is executing code from a path that has been
lazily unmounted.  This can occur with nfs and automounters, or any mount
point that gets unmounted with lazy unmount allowed.

If name resolution fails due on exec and a profile is not defined
then AppArmor will cause an oops due to a broken conditional leading to
dereferencing a profile pointer that is null.

Signed-off-by: John Johansen <john.johansen@canonical.com>
Acked-by: Jeff Mahoney <jeffm@suse.com>
---

 security/apparmor/domain.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/security/apparmor/domain.c b/security/apparmor/domain.c
index cdf9d00..b091fd9 100644
--- a/security/apparmor/domain.c
+++ b/security/apparmor/domain.c
@@ -248,7 +248,7 @@ int apparmor_bprm_set_creds(struct linux_binprm *bprm)
 	sa.base.error = aa_get_name(&bprm->file->f_path, 0, &buffer,
 				    (char **) &sa.name);
 	if (sa.base.error) {
-		if (profile || profile->flags & PFLAG_IX_ON_NAME_ERROR)
+		if (!profile || profile->flags & PFLAG_IX_ON_NAME_ERROR)
 			sa.base.error = 0;
 		sa.base.info = "Exec failed name resolution";
 		sa.name = bprm->filename;

