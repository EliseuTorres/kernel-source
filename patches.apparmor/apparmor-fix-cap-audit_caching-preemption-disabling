From john.johansen@canonical.com  Tue Nov 17 12:03:14 2009
From: John Johansen <john.johansen@canonical.com>
Date: Tue, 17 Nov 2009 07:09:04 +0000 (-0800)
Subject: AppArmor: Fix cap audit_caching preemption disabling
Git-commit: 10180dca43970cd1bebf88248c1ad63ab7521c7a
Git-Repo: git://kernel.ubuntu.com/jj/apparmor-mainline.git AppArmor-2.4

AppArmor: Fix cap audit_caching preemption disabling

BugLink: http://bugs.launchpad.net/bugs/479102

The auditing code of capabilities, has a simple cache to reduce capability
messages flooding the audit logs.  Checking and updating the cache
disables kernel preemption.  One potential exit path does not properly
put the per cpu var, thus not reenabling preemption.

Signed-off-by: John Johansen <john.johansen@canonical.com>
Acked-by: Jeff Mahoney <jeffm@suse.com>
---

 security/apparmor/capability.c |    1 +
 1 file changed, 1 insertion(+)

diff --git a/security/apparmor/capability.c b/security/apparmor/capability.c
index 65b91cf..5bb2eca 100644
--- a/security/apparmor/capability.c
+++ b/security/apparmor/capability.c
@@ -72,6 +72,7 @@ static int aa_audit_caps(struct aa_profile *profile, struct aa_audit_caps *sa)
 	/* Do simple duplicate message elimination */
 	ent = &get_cpu_var(audit_cache);
 	if (sa->base.task == ent->task && cap_raised(ent->caps, sa->cap)) {
+		put_cpu_var(audit_cache);
 		if (PROFILE_COMPLAIN(profile))
 			return 0;
 		return sa->base.error;

