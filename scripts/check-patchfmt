#!/usr/bin/perl

#############################################################################
# Copyright (c) 2015 Micro Focus
# All Rights Reserved.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of version 2 of the GNU General Public License as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, contact Novell, Inc.
#
# To contact Novell about this file by physical or electronic mail,
# you may find current contact information at www.novell.com
#############################################################################

# Check that the a patch is in the format produced by scripts/refresh_patch.sh

use strict;
use warnings;

my $errors = 0;
my %reported;
our $file;

sub err {
	return if ($reported{"$file:$_[0]"}++);
	print STDERR "$file:$.: error: @_\n";
	$errors = 1;
}

sub check_filename {
	my $filename = shift;

	if ($filename !~ m:^(/dev/null\b|[ab]/):) {
		err("Patch not in -p ab format");
	}
	if ($filename =~ /\s\S/) {
		err("Timestamp after filename");
	}
}

sub do_patch {
	my $fh = shift;
	my @prev = ("", "", "");

	while (my $cur = <$fh>) {
		chomp($cur);
		next unless ($cur =~ /^\+\+\+ /);
		next if ($prev[0] !~ /^--- /);
		(my $new = $cur) =~ s/^\+\+\+ //;
		(my $old = $prev[0]) =~ s/^--- //;
		check_filename($new);
		check_filename($old);
		if ($prev[1] =~ /^={20}/ && $prev[2] =~ /^Index: /) {
			err("Superfluous Index: line in patch");
		}
	} continue {
		unshift(@prev, $cur);
		if (scalar(@prev) > 3) {
			pop(@prev);
		}
	}
}

if (!@ARGV) {
	die "Usage: $0 <patch>...\n";
}
if ($ARGV[0] eq "--stdin") {
	shift;
	$file = "<stdin>";
	if (scalar(@ARGV)) {
		$file = $ARGV[0];
	}
	open(my $fh, '-');
	do_patch($fh);
	close($fh);
} else {
	for $file (@ARGV) {
		open(my $fh, '<', $file) or die "$file: $!\n";
		do_patch($fh);
		close($fh);
	}
}

if ($errors) {
	printf STDERR ("Please refresh the patch%s using scripts/refresh_patch.sh\n", (scalar(@ARGV) > 1 ? "es" : ""));
	exit(1);
}
exit(0);
