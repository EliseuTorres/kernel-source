From: Michal Hocko <mhocko@suse.cz>
Date: Wed, 12 Nov 2014 09:47:57 +0100
Subject: kgr: always use locked bit ops for thread_info->flags
Patch-mainline: no
References: fate#313296 bnc#904681

thread_info->flags are usually modified by {set,clear}_ti_thread_flag
resp. test_and_clear_ti_thread_flag helpers which make sure that the bit
operation is locked properly. This is mainly because flags might be
modified by other tasks as well (e.g. set_tsk_thread_flag). This means
that users that do not use the helper have to follow the same rules
otherwise the bit operation can cause RMW cycle race and overwrite the
outcome of the locked operation.

This was the case for bnc#904681 where the TIF_KGR_IN_PROGRESS flag clearing
done from the sysret, trace and int_careful arch specific asm path has
overwritten TIF_SIGPENDING set during group_exit and so a thread has missed to
process pending SIGKILL signal and ended up unkillable by SIGKILL.

Fixes: kgr: make a per-process 'in progress' flag a single bit
Signed-off-by: Michal Hocko <mhocko@suse.cz>
Signed-off-by: Jiri Kosina <jkosina@suse.cz>
Signed-off-by: Jiri Slaby <jslaby@suse.cz>
Automatically created from "patches.suse/kgr-0045-kgr-always-use-locked-bit-ops-for-thread_info-flags.patch" by xen-port-patches.py

--- sle12.orig/arch/x86/kernel/entry_64-xen.S	2014-05-26 14:28:05.000000000 +0200
+++ sle12/arch/x86/kernel/entry_64-xen.S	2014-12-08 14:06:13.000000000 +0100
@@ -670,7 +670,7 @@ sysret_check:
 	/* edx:	work, edi: workmask */
 sysret_careful:
 #if IS_ENABLED(CONFIG_KGRAFT)
-	andl $~_TIF_KGR_IN_PROGRESS,TI_flags+THREAD_INFO(%rsp,RIP-ARGOFFSET)
+	LOCK_PREFIX ; andl $~_TIF_KGR_IN_PROGRESS,TI_flags+THREAD_INFO(%rsp,RIP-ARGOFFSET)
 #endif
 	bt $TIF_NEED_RESCHED,%edx
 	jnc sysret_signal
@@ -736,7 +736,7 @@ sysret_audit:
 	/* Do syscall tracing */
 tracesys:
 #if IS_ENABLED(CONFIG_KGRAFT)
-	andl $~_TIF_KGR_IN_PROGRESS,TI_flags+THREAD_INFO(%rsp,RIP-ARGOFFSET)
+	LOCK_PREFIX ; andl $~_TIF_KGR_IN_PROGRESS,TI_flags+THREAD_INFO(%rsp,RIP-ARGOFFSET)
 #endif
 #ifdef CONFIG_AUDITSYSCALL
 	testl $(_TIF_WORK_SYSCALL_ENTRY & ~_TIF_SYSCALL_AUDIT),TI_flags+THREAD_INFO(%rsp,RIP-ARGOFFSET)
@@ -789,7 +789,7 @@ GLOBAL(int_with_check)
 	/* edx:	work, edi: workmask */
 int_careful:
 #if IS_ENABLED(CONFIG_KGRAFT)
-	andl $~_TIF_KGR_IN_PROGRESS,TI_flags(%rcx)
+	LOCK_PREFIX ; andl $~_TIF_KGR_IN_PROGRESS,TI_flags(%rcx)
 #endif
 	bt $TIF_NEED_RESCHED,%edx
 	jnc  int_very_careful
