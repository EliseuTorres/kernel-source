From: Christoph Hellwig <hch@lst.de>
Date: Wed, 10 Nov 2010 14:54:09 +0100
Subject: [PATCH] block: remove REQ_HARDBARRIER
References: FATE#311692
Patch-Mainline: 2.6.34

REQ_HARDBARRIER is dead now, so remove the leftovers.  What's left
at this point is:

 - various checks inside the block layer.
 - sanity checks in bio based drivers.
 - now unused bio_empty_barrier helper.
 - Xen blockfront use of BLKIF_OP_WRITE_BARRIER - it's dead for a while,
   but Xen really needs to sort out it's barrier situaton.
 - setting of ordered tags in uas - dead code copied from old scsi
   drivers.
 - scsi different retry for barriers - it's dead and should have been
   removed when flushes were converted to FS requests.
 - blktrace handling of barriers - removed.  Someone who knows blktrace
   better should add support for REQ_FLUSH and REQ_FUA, though.

hare: Not modifying Xen blkfront, as Dom0 implementation might
      rely on it.

Signed-off-by: Christoph Hellwig <hch@lst.de>
Signed-off-by: Jens Axboe <jaxboe@fusionio.com>
Signed-off-by: Hannes Reinecke <hare@suse.de>

Automatically created from "patches.suse/block-remove-REQ_HARDBARRIER.patch" by xen-port-patches.py

--- sle11sp2-2011-06-28.orig/drivers/xen/blkfront/blkfront.c	2011-06-28 13:57:28.000000000 +0200
+++ sle11sp2-2011-06-28/drivers/xen/blkfront/blkfront.c	2011-06-28 13:57:34.000000000 +0200
@@ -695,7 +695,7 @@ static int blkif_queue_request(struct re
 
 	ring_req->operation = rq_data_dir(req) ?
 		BLKIF_OP_WRITE : BLKIF_OP_READ;
-	if (req->cmd_flags & REQ_HARDBARRIER)
+	if (req->cmd_flags & (REQ_FLUSH | REQ_FUA))
 		ring_req->operation = BLKIF_OP_WRITE_BARRIER;
 
 	ring_req->nr_segments = blk_rq_map_sg(req->q, req, info->sg);
--- sle11sp2-2011-06-28.orig/drivers/xen/blktap2/device.c	2010-11-22 13:25:54.000000000 +0100
+++ sle11sp2-2011-06-28/drivers/xen/blktap2/device.c	2011-06-15 12:24:58.000000000 +0200
@@ -844,7 +844,7 @@ blktap_device_run_queue(struct blktap *t
 			continue;
 		}
 
-		if (req->cmd_flags & REQ_HARDBARRIER) {
+		if (req->cmd_flags & (REQ_FLUSH | REQ_FUA)) {
 			blk_start_request(req);
 			__blk_end_request_all(req, -EOPNOTSUPP);
 			continue;
