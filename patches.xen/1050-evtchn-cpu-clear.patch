From: http://xenbits.xensource.com/linux-2.6.18-xen.hg?rev/7de7453dee36
# HG changeset patch
# User Keir Fraser <keir@xen.org>
# Date 1289907079 0
# Node ID 7de7453dee36455d418f8bb8092a329c662b126a
# Parent  f7dde31efff3be20157ea08bb15126aee7a8d4c2
Subject: xen/evtchn: clear secondary CPUs' cpu_evtchn_mask[] after restore
Patch-mainline: n/a
References: bnc#651626

To bind all event channels to CPU#0, it is not sufficient to set all
of its cpu_evtchn_mask[] bits; all other CPUs also need to get their
bits cleared. Otherwise, evtchn_do_upcall() will start handling
interrupts on CPUs they're not intended to run on, which can be
particularly bad for per-CPU ones.

Signed-off-by: Jan Beulich <jbeulich@novell.com>
Signed-off-by: Keir Fraser <keir@xen.org>

--- sle11sp1-2010-11-19.orig/drivers/xen/core/evtchn.c	2010-09-22 14:20:02.000000000 +0200
+++ sle11sp1-2010-11-19/drivers/xen/core/evtchn.c	2010-11-19 11:27:18.000000000 +0100
@@ -161,7 +161,10 @@ static void init_evtchn_cpu_bindings(voi
 		set_native_irq_info(i, cpumask_of_cpu(0));
 
 	memset(cpu_evtchn, 0, sizeof(cpu_evtchn));
-	memset(cpu_evtchn_mask[0], ~0, sizeof(cpu_evtchn_mask[0]));
+	for_each_possible_cpu(i)
+		memset(cpu_evtchn_mask[i],
+		       (i == 0) ? ~0 : 0,
+		       sizeof(cpu_evtchn_mask[i]));
 }
 
 static inline unsigned int cpu_from_evtchn(unsigned int evtchn)
