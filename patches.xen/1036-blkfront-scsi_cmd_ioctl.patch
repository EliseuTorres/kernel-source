From: http://xenbits.xensource.com/linux-2.6.18-xen.hg?rev/f5635e334aa5
# HG changeset patch
# User Keir Fraser <keir.fraser@citrix.com>
# Date 1285142186 -3600
# Node ID f5635e334aa5e778a65f01339a63849eb17f6dc3
# Parent  7c7efaea8b54cc05d53ca4a23d9fad0da619bd23
Subject: xen/blkfront: forward unknown IOCTLs to scsi_cmd_ioctl() for /dev/sdX
Patch-mainline: n/a
References: bnc#639944

Certain utilities (here: parted) expect certain SCSI IOCTLs (here:
SCSI_IOCTL_GET_IDLUN) to not fail on /dev/sdX devices. Rather than
handling them one-by-one, just forward control to scsi_cmd_ioctl().

Signed-off-by: Jan Beulich <jbeulich@novell.com>

--- sle11sp1-2010-09-22.orig/drivers/xen/blkfront/blkfront.c	2010-03-22 12:00:53.000000000 +0100
+++ sle11sp1-2010-09-22/drivers/xen/blkfront/blkfront.c	2010-09-22 14:17:28.000000000 +0200
@@ -532,6 +532,7 @@ int blkif_release(struct inode *inode, s
 int blkif_ioctl(struct inode *inode, struct file *filep,
 		unsigned command, unsigned long argument)
 {
+	struct blkfront_info *info = inode->i_bdev->bd_disk->private_data;
 	int i;
 
 	DPRINTK_IOCTL("command: 0x%x, argument: 0x%lx, dev: 0x%04x\n",
@@ -567,14 +568,23 @@ int blkif_ioctl(struct inode *inode, str
 		return 0;
 
 	case CDROM_GET_CAPABILITY: {
-		struct blkfront_info *info =
-			inode->i_bdev->bd_disk->private_data;
 		struct gendisk *gd = info->gd;
 		if (gd->flags & GENHD_FL_CD)
 			return 0;
 		return -EINVAL;
 	}
 	default:
+		if (info->mi && info->gd) {
+			switch (info->mi->major) {
+			case SCSI_DISK0_MAJOR:
+			case SCSI_DISK1_MAJOR ... SCSI_DISK7_MAJOR:
+		        case SCSI_DISK8_MAJOR ... SCSI_DISK15_MAJOR:
+		        case SCSI_CDROM_MAJOR:
+				return scsi_cmd_ioctl(filep, info->gd, command,
+						      (void __user *)argument);
+			}
+		}
+
 		/*printk(KERN_ALERT "ioctl %08x not supported by Xen blkdev\n",
 		  command);*/
 		return -EINVAL; /* same return as native Linux */
