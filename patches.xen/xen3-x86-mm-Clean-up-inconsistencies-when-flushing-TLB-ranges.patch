From: Mel Gorman <mgorman@suse.de>
Date: Wed, 11 Dec 2013 12:00:32 +0000
Subject: [PATCH] x86: mm: Clean up inconsistencies when flushing TLB ranges

References: VM Performance
Patch-mainline: No (expected v3.14)

NR_TLB_LOCAL_FLUSH_ALL is not always accounted for correctly and the
comparison with total_vm is done before taking tlb_flushall_shift into
account. Clean it up.

Signed-off-by: Mel Gorman <mgorman@suse.de>
Reviewed-by: Alex Shi <alex.shi@linaro.org>
Automatically created from "patches.suse/x86-mm-Clean-up-inconsistencies-when-flushing-TLB-ranges.patch" by xen-port-patches.py

--- sle12.orig/arch/x86/mm/tlb-xen.c	2014-01-09 12:02:13.000000000 +0100
+++ sle12/arch/x86/mm/tlb-xen.c	2014-01-09 12:09:36.000000000 +0100
@@ -40,6 +40,7 @@ void flush_tlb_mm_range(struct mm_struct
 {
 	unsigned long addr;
 	unsigned act_entries, tlb_entries = 0;
+	unsigned long nr_base_pages;
 	const cpumask_t *mask = mm_cpumask(mm);
 	cpumask_var_t temp;
 
@@ -65,13 +66,14 @@ void flush_tlb_mm_range(struct mm_struct
 		tlb_entries = tlb_lli_4k[ENTRIES];
 	else
 		tlb_entries = tlb_lld_4k[ENTRIES];
+
 	/* Assume all of TLB entries was occupied by this task */
-	act_entries = mm->total_vm > tlb_entries ? tlb_entries : mm->total_vm;
+	act_entries = tlb_entries >> tlb_flushall_shift;
+	act_entries = mm->total_vm > act_entries ? act_entries : mm->total_vm;
+	nr_base_pages = (end - start) >> PAGE_SHIFT;
 
 	/* tlb_flushall_shift is on balance point, details in commit log */
-	if (((end - start) >> PAGE_SHIFT)
-	    <= (act_entries >> tlb_flushall_shift)
-	    && !has_large_page(mm, start, end)) {
+	if (nr_base_pages <= act_entries && !has_large_page(mm, start, end)) {
 		/* flush range by one by one 'invlpg' */
 		for (addr = start; addr < end; addr += PAGE_SIZE) {
 			count_vm_tlb_event(NR_TLB_LOCAL_FLUSH_ONE);
