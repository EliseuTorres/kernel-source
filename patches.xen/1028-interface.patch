From: http://xenbits.xensource.com/linux-2.6.18-xen.hg?rev/6f7bda25a4de
# HG changeset patch
# User Keir Fraser <keir.fraser@citrix.com>
# Date 1282809042 -3600
# Node ID 6f7bda25a4de7a4186d65bc0e8e816b1c3664b71
# Parent  53705d74a41b4d86238e6b275893fba95fd13550
Subject: Update Xen public headers.
Patch-mainline: n/a

Signed-off-by: Keir Fraser <keir.fraser@citrix.com>

jb: Reduced to the changes from 4.0.0 to 4.0.1 (2010-12-02).

From: http://xenbits.xensource.com/linux-2.6.18-xen.hg?rev/9b1adfb8b0b3
# HG changeset patch
# User Keir Fraser <keir.fraser@citrix.com>
# Date 1282818445 -3600
# Node ID 9b1adfb8b0b3b37c13f06c0adb8dd17b2a0a077d
# Parent  6f7bda25a4de7a4186d65bc0e8e816b1c3664b71
Subject: Fix build after c/s 1028

Signed-off-by: Jan Beulich <jbeulich@novell.com>

--- sle11sp1-2010-11-30.orig/drivers/xen/blktap2/ring.c	2010-08-17 10:03:23.000000000 +0200
+++ sle11sp1-2010-11-30/drivers/xen/blktap2/ring.c	2010-12-02 13:10:00.000000000 +0100
@@ -360,7 +360,7 @@ blktap_ring_set_message(struct blktap *t
 
 	down_read(&tap->tap_sem);
 	if (ring->ring.sring)
-		ring->ring.sring->pad[0] = msg;
+		ring->ring.sring->private.tapif_user.msg = msg;
 	up_read(&tap->tap_sem);
 }
 
@@ -470,7 +470,7 @@ static unsigned int blktap_ring_poll(str
 	struct blktap_ring *ring = &tap->ring;
 
 	poll_wait(filp, &ring->poll_wait, wait);
-	if (ring->ring.sring->pad[0] != 0 ||
+	if (ring->ring.sring->private.tapif_user.msg ||
 	    ring->ring.req_prod_pvt != ring->ring.sring->req_prod) {
 		RING_PUSH_REQUESTS(&ring->ring);
 		return POLLIN | POLLRDNORM;
--- sle11sp1-2010-11-30.orig/include/xen/interface/features.h	2009-12-04 10:44:50.000000000 +0100
+++ sle11sp1-2010-11-30/include/xen/interface/features.h	2010-12-02 13:10:00.000000000 +0100
@@ -68,6 +68,12 @@
  */
 #define XENFEAT_gnttab_map_avail_bits      7
 
+/* x86: Does this Xen host support the HVM callback vector type? */
+#define XENFEAT_hvm_callback_vector        8
+
+/* x86: pvclock algorithm is safe to use on HVM */
+#define XENFEAT_hvm_safe_pvclock           9
+
 #define XENFEAT_NR_SUBMAPS 1
 
 #endif /* __XEN_PUBLIC_FEATURES_H__ */
--- sle11sp1-2010-11-30.orig/include/xen/interface/hvm/hvm_op.h	2009-11-06 10:26:58.000000000 +0100
+++ sle11sp1-2010-11-30/include/xen/interface/hvm/hvm_op.h	2010-12-02 13:10:00.000000000 +0100
@@ -127,6 +127,16 @@ struct xen_hvm_set_mem_type {
 typedef struct xen_hvm_set_mem_type xen_hvm_set_mem_type_t;
 DEFINE_XEN_GUEST_HANDLE(xen_hvm_set_mem_type_t);
 
+/* Hint from PV drivers for pagetable destruction. */
+#define HVMOP_pagetable_dying        9
+struct xen_hvm_pagetable_dying {
+    /* Domain with a pagetable about to be destroyed. */
+    domid_t  domid;
+    /* guest physical address of the toplevel pagetable dying */
+    uint64_aligned_t gpa;
+};
+typedef struct xen_hvm_pagetable_dying xen_hvm_pagetable_dying_t;
+DEFINE_XEN_GUEST_HANDLE(xen_hvm_pagetable_dying_t);
 
 #endif /* defined(__XEN__) || defined(__XEN_TOOLS__) */
 
--- sle11sp1-2010-11-30.orig/include/xen/interface/hvm/params.h	2009-11-06 10:26:58.000000000 +0100
+++ sle11sp1-2010-11-30/include/xen/interface/hvm/params.h	2010-12-02 13:10:00.000000000 +0100
@@ -33,6 +33,9 @@
  * val[63:56] == 1: val[55:0] is a delivery PCI INTx line, as follows:
  *                  Domain = val[47:32], Bus  = val[31:16],
  *                  DevFn  = val[15: 8], IntX = val[ 1: 0]
+ * val[63:56] == 2: val[7:0] is a vector number, check for
+ *                  XENFEAT_hvm_callback_vector to know if this delivery
+ *                  method is available.
  * If val == 0 then CPU0 event-channel notifications are not delivered.
  */
 #define HVM_PARAM_CALLBACK_IRQ 0
--- sle11sp1-2010-11-30.orig/include/xen/interface/io/ring.h	2010-03-01 14:03:37.000000000 +0100
+++ sle11sp1-2010-11-30/include/xen/interface/io/ring.h	2010-12-02 13:10:00.000000000 +0100
@@ -103,8 +103,16 @@ union __name##_sring_entry {            
 struct __name##_sring {                                                 \
     RING_IDX req_prod, req_event;                                       \
     RING_IDX rsp_prod, rsp_event;                                       \
-    uint8_t  netfront_smartpoll_active;                                 \
-    uint8_t  pad[47];                                                   \
+    union {                                                             \
+        struct {                                                        \
+            uint8_t smartpoll_active;                                   \
+        } netif;                                                        \
+        struct {                                                        \
+            uint8_t msg;                                                \
+        } tapif_user;                                                   \
+        uint8_t pvt_pad[4];                                             \
+    } private;                                                          \
+    uint8_t __pad[44];                                                  \
     union __name##_sring_entry ring[1]; /* variable-length */           \
 };                                                                      \
                                                                         \
@@ -148,7 +156,8 @@ typedef struct __name##_back_ring __name
 #define SHARED_RING_INIT(_s) do {                                       \
     (_s)->req_prod  = (_s)->rsp_prod  = 0;                              \
     (_s)->req_event = (_s)->rsp_event = 1;                              \
-    (void)memset((_s)->pad, 0, sizeof((_s)->pad));                      \
+    (void)memset((_s)->private.pvt_pad, 0, sizeof((_s)->private.pvt_pad)); \
+    (void)memset((_s)->__pad, 0, sizeof((_s)->__pad));                  \
 } while(0)
 
 #define FRONT_RING_INIT(_r, _s, __size) do {                            \
--- sle11sp1-2010-11-30.orig/include/xen/interface/mem_event.h	2010-01-18 15:18:17.000000000 +0100
+++ sle11sp1-2010-11-30/include/xen/interface/mem_event.h	2010-12-02 13:10:00.000000000 +0100
@@ -40,14 +40,14 @@
 
 
 typedef struct mem_event_shared_page {
-    int port;
+    uint32_t port;
 } mem_event_shared_page_t;
 
 typedef struct mem_event_st {
-    unsigned long gfn;
-    unsigned long offset;
-    unsigned long p2mt;
-    int vcpu_id;
+    uint64_t gfn;
+    uint64_t offset;
+    uint32_t p2mt;
+    int32_t vcpu_id;
     uint64_t flags;
 } mem_event_request_t, mem_event_response_t;
 
--- sle11sp1-2010-11-30.orig/include/xen/interface/sched.h	2009-12-04 10:44:50.000000000 +0100
+++ sle11sp1-2010-11-30/include/xen/interface/sched.h	2010-12-02 13:10:00.000000000 +0100
@@ -99,6 +99,13 @@ typedef struct sched_remote_shutdown sch
 DEFINE_XEN_GUEST_HANDLE(sched_remote_shutdown_t);
 
 /*
+ * Latch a shutdown code, so that when the domain later shuts down it
+ * reports this code to the control tools.
+ * @arg == as for SCHEDOP_shutdown.
+ */
+#define SCHEDOP_shutdown_code 5
+
+/*
  * Reason codes for SCHEDOP_shutdown. These may be interpreted by control
  * software to determine the appropriate action. For the most part, Xen does
  * not care about the shutdown code.
@@ -107,5 +114,6 @@ DEFINE_XEN_GUEST_HANDLE(sched_remote_shu
 #define SHUTDOWN_reboot     1  /* Clean up, kill, and then restart.          */
 #define SHUTDOWN_suspend    2  /* Clean up, save suspend info, kill.         */
 #define SHUTDOWN_crash      3  /* Tell controller we've crashed.             */
+#define SHUTDOWN_watchdog   4  /* Restart because watchdog time expired.     */
 
 #endif /* __XEN_PUBLIC_SCHED_H__ */
--- sle11sp1-2010-11-30.orig/include/xen/interface/trace.h	2010-08-06 16:38:28.000000000 +0200
+++ sle11sp1-2010-11-30/include/xen/interface/trace.h	2010-12-02 13:10:00.000000000 +0100
@@ -79,6 +79,7 @@
 #define TRC_SCHED_DOM_TIMER_FN   (TRC_SCHED_VERBOSE + 13)
 #define TRC_SCHED_SWITCH_INFPREV (TRC_SCHED_VERBOSE + 14)
 #define TRC_SCHED_SWITCH_INFNEXT (TRC_SCHED_VERBOSE + 15)
+#define TRC_SCHED_SHUTDOWN_CODE  (TRC_SCHED_VERBOSE + 16)
 
 #define TRC_MEM_PAGE_GRANT_MAP      (TRC_MEM + 1)
 #define TRC_MEM_PAGE_GRANT_UNMAP    (TRC_MEM + 2)
