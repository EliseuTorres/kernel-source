From: Avi Kivity <avi@redhat.com>
Subject: [PATCH] x86: Eliminate TS_XSAVE
References: FATE#311768
Patch-mainline: v2.6.35-rc1

The fpu code currently uses current->thread_info->status & TS_XSAVE as
a way to distinguish between XSAVE capable processors and older processors.
The decision is not really task specific; instead we use the task status to
avoid a global memory reference - the value should be the same across all
threads.

Eliminate this tie-in into the task structure by using an alternative
instruction keyed off the XSAVE cpu feature; this results in shorter and
faster code, without introducing a global memory reference.

[ hpa: in the future, this probably should use an asm jmp ]

Signed-off-by: Avi Kivity <avi@redhat.com>
Acked-by: Suresh Siddha <suresh.b.siddha@intel.com>
LKML-Reference: <1273135546-29690-2-git-send-email-avi@redhat.com>
Signed-off-by: H. Peter Anvin <hpa@zytor.com>
Acked-by: Bruce Rogers <brogers@suse.com>
Automatically created from "patches.arch/x86-Eliminate-TS_XSAVE.patch" by xen-port-patches.py

--- sle11sp2-2011-06-28.orig/arch/x86/kernel/cpu/common-xen.c	2011-05-25 15:47:35.000000000 +0200
+++ sle11sp2-2011-06-28/arch/x86/kernel/cpu/common-xen.c	2011-06-28 13:12:20.000000000 +0200
@@ -1329,10 +1329,7 @@ void __cpuinit cpu_init(void)
 	/*
 	 * Force FPU initialization:
 	 */
-	if (cpu_has_xsave)
-		current_thread_info()->status = TS_XSAVE;
-	else
-		current_thread_info()->status = 0;
+	current_thread_info()->status = 0;
 	clear_used_math();
 	mxcsr_feature_mask_init();
 
