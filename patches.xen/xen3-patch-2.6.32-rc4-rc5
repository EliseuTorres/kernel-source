From: Linux Kernel Mailing List <linux-kernel@vger.kernel.org>
Subject: Linux: 2.6.32-rc5
Patch-mainline: 2.6.32-rc5

 This patch contains the differences between 2.6.32-rc4 and -rc5.

Acked-by: Jeff Mahoney <jeffm@suse.com>
Automatically created from "patches.kernel.org/patch-2.6.32-rc4-rc5" by xen-port-patches.py

--- head-2009-11-06.orig/arch/x86/kernel/irq-xen.c	2009-11-06 10:52:22.000000000 +0100
+++ head-2009-11-06/arch/x86/kernel/irq-xen.c	2009-11-06 11:04:38.000000000 +0100
@@ -65,10 +65,10 @@ static int show_other_interrupts(struct 
 	for_each_online_cpu(j)
 		seq_printf(p, "%10u ", irq_stats(j)->irq_spurious_count);
 	seq_printf(p, "  Spurious interrupts\n");
-	seq_printf(p, "%*s: ", prec, "CNT");
+	seq_printf(p, "%*s: ", prec, "PMI");
 	for_each_online_cpu(j)
 		seq_printf(p, "%10u ", irq_stats(j)->apic_perf_irqs);
-	seq_printf(p, "  Performance counter interrupts\n");
+	seq_printf(p, "  Performance monitoring interrupts\n");
 	seq_printf(p, "%*s: ", prec, "PND");
 	for_each_online_cpu(j)
 		seq_printf(p, "%10u ", irq_stats(j)->apic_pending_irqs);
@@ -251,7 +251,6 @@ unsigned int __irq_entry do_IRQ(struct p
 				__func__, smp_processor_id(), vector, irq);
 	}
 
-	run_local_timers();
 	irq_exit();
 
 	set_irq_regs(old_regs);
@@ -276,7 +275,6 @@ void smp_generic_interrupt(struct pt_reg
 	if (generic_interrupt_extension)
 		generic_interrupt_extension();
 
-	run_local_timers();
 	irq_exit();
 
 	set_irq_regs(old_regs);
--- head-2009-11-06.orig/arch/x86/kernel/pci-dma-xen.c	2009-11-06 10:52:22.000000000 +0100
+++ head-2009-11-06/arch/x86/kernel/pci-dma-xen.c	2009-11-06 11:04:38.000000000 +0100
@@ -392,7 +392,7 @@ void pci_iommu_shutdown(void)
 	amd_iommu_shutdown();
 }
 /* Must execute after PCI subsystem */
-fs_initcall(pci_iommu_init);
+rootfs_initcall(pci_iommu_init);
 
 #ifdef CONFIG_PCI
 /* Many VIA bridges seem to corrupt data for DAC. Disable it here */
--- head-2009-11-06.orig/arch/x86/kernel/smp-xen.c	2009-11-06 10:52:23.000000000 +0100
+++ head-2009-11-06/arch/x86/kernel/smp-xen.c	2009-11-06 11:04:38.000000000 +0100
@@ -180,7 +180,6 @@ void xen_smp_send_stop(void)
 irqreturn_t smp_reschedule_interrupt(int irq, void *dev_id)
 {
 	inc_irq_stat(irq_resched_count);
-	run_local_timers();
 	return IRQ_HANDLED;
 }
 
--- head-2009-11-06.orig/drivers/net/Kconfig	2009-11-06 10:51:07.000000000 +0100
+++ head-2009-11-06/drivers/net/Kconfig	2009-11-06 11:36:52.000000000 +0100
@@ -3235,7 +3235,7 @@ config VIRTIO_NET
 
 config VMXNET3
        tristate "VMware VMXNET3 ethernet driver"
-       depends on PCI && X86 && INET
+       depends on PCI && X86 && !XEN && INET
        help
          This driver supports VMware's vmxnet3 virtual ethernet NIC.
          To compile this driver as a module, choose M here: the
--- head-2009-11-06.orig/drivers/xen/core/evtchn.c	2009-11-06 10:52:23.000000000 +0100
+++ head-2009-11-06/drivers/xen/core/evtchn.c	2009-11-06 11:04:38.000000000 +0100
@@ -331,7 +331,6 @@ asmlinkage void __irq_entry evtchn_do_up
 		percpu_write(upcall_count, 0);
 	} while (unlikely(count != 1));
 
-	run_local_timers();
 	irq_exit();
 	set_irq_regs(old_regs);
 }
