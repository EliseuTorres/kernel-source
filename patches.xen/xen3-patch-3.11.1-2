From: Jiri Slaby <jslaby@suse.cz>
Subject: Linux 3.11.2
Patch-mainline: 3.11.2

Signed-off-by: Jiri Slaby <jslaby@suse.cz>
Automatically created from "patches.kernel.org/patch-3.11.1-2" by xen-port-patches.py

--- head.orig/arch/x86/include/mach-xen/asm/mmu_context.h	2012-06-14 11:23:26.000000000 +0200
+++ head/arch/x86/include/mach-xen/asm/mmu_context.h	2013-09-26 15:33:39.000000000 +0200
@@ -105,9 +105,7 @@ static inline void switch_mm(struct mm_s
 		op++;
 #endif
 
-		/*
-		 * load the LDT, if the LDT is different:
-		 */
+		/* Load the LDT, if the LDT is different: */
 		if (unlikely(prev->context.ldt != next->context.ldt)) {
 			/* load_LDT_nolock(&next->context) */
 			op->cmd = MMUEXT_SET_LDT;
@@ -118,7 +116,7 @@ static inline void switch_mm(struct mm_s
 
 		BUG_ON(HYPERVISOR_mmuext_op(_op, op-_op, NULL, DOMID_SELF));
 
-		/* stop TLB flushes for the previous mm */
+		/* Stop TLB flushes for the previous mm */
 		cpumask_clear_cpu(cpu, mm_cpumask(prev));
 	}
 #if defined(CONFIG_SMP) && !defined(CONFIG_XEN) /* XEN: no lazy tlb */
@@ -126,8 +124,16 @@ static inline void switch_mm(struct mm_s
 		this_cpu_write(cpu_tlbstate.state, TLBSTATE_OK);
 		BUG_ON(this_cpu_read(cpu_tlbstate.active_mm) != next);
 
-		if (!cpumask_test_and_set_cpu(cpu, mm_cpumask(next))) {
-			/* We were in lazy tlb mode and leave_mm disabled
+		if (!cpumask_test_cpu(cpu, mm_cpumask(next))) {
+			/*
+			 * On established mms, the mm_cpumask is only changed
+			 * from irq context, from ptep_clear_flush() while in
+			 * lazy tlb mode, and here. Irqs are blocked during
+			 * schedule, protecting us from simultaneous changes.
+			 */
+			cpumask_set_cpu(cpu, mm_cpumask(next));
+			/*
+			 * We were in lazy tlb mode and leave_mm disabled
 			 * tlb flush IPI delivery. We must reload CR3
 			 * to make sure to use no freed page tables.
 			 */
