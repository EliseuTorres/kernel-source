From: Len Brown <len.brown@intel.com>
Subject: cpuidle: fail to register if !CONFIG_CPU_IDLE
References: fate#311818,fate#311942
Patch-Mainline: yes

Signed-off-by: Thomas Renninger <trenn@suse.de>

upstream: 6b2c676bf32be91f43215d5874c07c1becaba013

Signed-off-by: Len Brown <len.brown@intel.com>

Automatically created from "patches.arch/001-cpuidle__fail_to_register_if_CONFIG_CPU_IDLE.patch" by xen-port-patches.py

--- sle11sp2-2011-08-08.orig/drivers/acpi/processor_idle.c	2011-05-06 14:36:57.000000000 +0200
+++ sle11sp2-2011-08-08/drivers/acpi/processor_idle.c	2011-08-08 18:09:31.000000000 +0200
@@ -1164,13 +1164,6 @@ static int acpi_processor_setup_cpuidle(
 
 	return 0;
 }
-
-#else /* CONFIG_PROCESSOR_EXTERNAL_CONTROL */
-static inline int acpi_processor_setup_cpuidle(struct acpi_processor *pr)
-{
-	(void)us_to_pm_timer_ticks;
-	return 0;
-}
 #endif /* CONFIG_PROCESSOR_EXTERNAL_CONTROL */
 
 int acpi_processor_cst_has_changed(struct acpi_processor *pr)
@@ -1201,10 +1194,12 @@ int acpi_processor_cst_has_changed(struc
 	cpuidle_pause_and_lock();
 	cpuidle_disable_device(&pr->power.dev);
 	acpi_processor_get_power_info(pr);
+#ifndef CONFIG_PROCESSOR_EXTERNAL_CONTROL
 	if (pr->flags.power) {
 		acpi_processor_setup_cpuidle(pr);
 		ret = cpuidle_enable_device(&pr->power.dev);
 	}
+#endif
 	cpuidle_resume_and_unlock();
 
 	return ret;
@@ -1256,6 +1251,7 @@ int __cpuinit acpi_processor_power_init(
 	acpi_processor_get_power_info(pr);
 	pr->flags.power_setup_done = 1;
 
+#ifndef CONFIG_PROCESSOR_EXTERNAL_CONTROL
 	/*
 	 * Install the idle handler if processor power management is supported.
 	 * Note that we use previously set idle handler will be used on
@@ -1266,6 +1262,9 @@ int __cpuinit acpi_processor_power_init(
 		if (cpuidle_register_device(&pr->power.dev))
 			return -EIO;
 	}
+#else /* avoid compiler warning */
+	(void)us_to_pm_timer_ticks;
+#endif
 
 	if (processor_pm_external())
 		processor_notify_external(pr,
