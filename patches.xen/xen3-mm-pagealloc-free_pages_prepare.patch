From: Mel Gorman <mgorman@suse.de>
Date: Wed, 18 May 2011 13:59:05 +0100
Subject: [PATCH] mm: introduce free_pages_prepare()
References: Page allocator enhancements suitable for THP(fate #311931)
Patch-mainline: yes
Patch.name: patches.suse/mm-pagealloc-free_pages_prepare.patch

free_hot_cold_page() and __free_pages_ok() have very similar freeing
preparation.  Consolidate them.

[akpm@linux-foundation.org: fix busted coding style]
Signed-off-by: KOSAKI Motohiro <kosaki.motohiro@jp.fujitsu.com>
Acked-by: Mel Gorman <mgorman@suse.de>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
Signed-off-by: Mel Gorman <mgorman@suse.de>

Automatically created from "patches.suse/mm-pagealloc-free_pages_prepare.patch" by xen-port-patches.py

--- sle11sp2-2011-08-12.orig/mm/page_alloc.c	2011-08-12 11:30:15.000000000 +0200
+++ sle11sp2-2011-08-12/mm/page_alloc.c	2011-08-12 11:31:06.000000000 +0200
@@ -615,9 +615,8 @@ static bool free_pages_prepare(struct pa
 
 #ifdef CONFIG_XEN
 	if (PageForeign(page)) {
-		WARN_ON(wasMlocked);
 		PageForeignDestructor(page, order);
-		return;
+		return false;
 	}
 #endif
 
@@ -647,6 +646,9 @@ static void __free_pages_ok(struct page 
 	unsigned long flags;
 	int wasMlocked = __TestClearPageMlocked(page);
 
+#ifdef CONFIG_XEN
+	WARN_ON(PageForeign(page) && wasMlocked);
+#endif
 	if (!free_pages_prepare(page, order))
 		return;
 
@@ -1137,6 +1139,9 @@ void free_hot_cold_page(struct page *pag
 	int migratetype;
 	int wasMlocked = __TestClearPageMlocked(page);
 
+#ifdef CONFIG_XEN
+	WARN_ON(PageForeign(page) && wasMlocked);
+#endif
 	if (!free_pages_prepare(page, 0))
 		return;
 
