From: Andy Lutomirski <luto@amacapital.net>
Date: Wed, 23 Jul 2014 08:34:11 -0700
Subject: x86_64/entry/xen: Do not invoke espfix64 on Xen
Patch-mainline: v3.16
References: bsc#907818,CVE-2014-9090

This moves the espfix64 logic into native_iret.  To make this work,
it gets rid of the native patch for INTERRUPT_RETURN:
INTERRUPT_RETURN on native kernels is now 'jmp native_iret'.

This changes the 16-bit SS behavior on Xen from OOPSing to leaking
some bits of the Xen hypervisor's RSP (I think).

[ hpa: this is a nonzero cost on native, but probably not enough to
  measure. Xen needs to fix this in their own code, probably doing
  something equivalent to espfix64. ]

Signed-off-by: Andy Lutomirski <luto@amacapital.net>
Link: http://lkml.kernel.org/r/7b8f1d8ef6597cb16ae004a43c56980a7de3cf94.1406129132.git.luto@amacapital.net
Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
Cc: <stable@vger.kernel.org>

Acked-by: Borislav Petkov <bp@suse.de>
Automatically created from "patches.fixes/x86_64-entry-xen-do-not-invoke-espfix64-on-xen.patch" by xen-port-patches.py

--- sle11sp3.orig/arch/x86/kernel/entry_64-xen.S	2014-08-06 12:39:46.000000000 +0200
+++ sle11sp3/arch/x86/kernel/entry_64-xen.S	2014-08-06 12:39:46.000000000 +0200
@@ -1330,7 +1330,7 @@ error_sti:
 error_kernelspace:
 	CFI_REL_OFFSET rcx, RCX+8
 	incl %ebx
-	leaq irq_return_iret(%rip),%rcx
+	leaq native_irq_return_iret(%rip),%rcx
 	cmpq %rcx,RIP+8(%rsp)
 	je error_swapgs
 	movl %ecx,%eax	/* zero extend */
