From: Jean Delvare <khali@linux-fr.org>
Date: Fri, 16 Sep 2011 21:24:02 +0200
Subject: [PATCH] hwmon: (coretemp) Let the user force TjMax
References: bnc#698797, FATE#311941
Patch-mainline: 3.1
Git-commit: a45a8c8571c0be6a6bd72ae5a14255c26b14b504

On old CPUs (and even some recent Atom CPUs) TjMax can't be read from
the CPU registers, so it is guessed by the driver using a complex
heuristic which isn't reliable. So let users who know their CPU's
TjMax pass it as a module parameter.

Signed-off-by: Jean Delvare <khali@linux-fr.org>
Cc: Fenghua Yu <fenghua.yu@intel.com>
Cc: "R, Durgadoss" <durgadoss.r@intel.com>
Cc: Guenter Roeck <guenter.roeck@ericsson.com>
Cc: Alexander Stein <alexander.stein@systec-electronic.com>
Acked-by: Fenghua Yu <fenghua.yu@intel.com>
Signed-off-by: Guenter Roeck <guenter.roeck@ericsson.com>
Acked-by: Jean Delvare <jdelvare@suse.de>

Automatically created from "patches.drivers/hwmon-coretemp-04-let-the-user-force-tjmax.patch" by xen-port-patches.py

--- sle11sp2-2011-10-17.orig/drivers/hwmon/coretemp-xen.c	2011-10-17 12:35:58.000000000 +0200
+++ sle11sp2-2011-10-17/drivers/hwmon/coretemp-xen.c	2011-10-17 12:36:53.000000000 +0200
@@ -35,12 +35,21 @@
 #include <linux/platform_device.h>
 #include <linux/pci.h>
 #include <linux/smp.h>
+#include <linux/moduleparam.h>
 #include <asm/msr.h>
 #include <xen/pcpu.h>
 #include "../xen/core/domctl.h"
 
 #define DRVNAME	"coretemp"
 
+/*
+ * force_tjmax only matters when TjMax can't be read from the CPU itself.
+ * When set, it replaces the driver's suboptimal heuristic.
+ */
+static int force_tjmax;
+module_param_named(tjmax, force_tjmax, int, 0444);
+MODULE_PARM_DESC(tjmax, "TjMax value in degrees Celsius");
+
 #define BASE_SYSFS_ATTR_NO	2	/* Sysfs Base attr no for coretemp */
 #define NUM_REAL_CORES		16	/* Number of Real cores per cpu */
 #define CORETEMP_NAME_LENGTH	17	/* String Length of attrs */
@@ -413,6 +422,12 @@ static int get_tjmax(struct platform_dat
 		}
 	}
 
+	if (force_tjmax) {
+		dev_notice(dev, "TjMax forced to %d degrees C by user\n",
+			   force_tjmax);
+		return force_tjmax * 1000;
+	}
+
 	/*
 	 * An assumption is made for early CPUs and unreadable MSR.
 	 * NOTE: the calculated value may not be correct.
