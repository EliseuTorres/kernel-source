From: Len Brown <len.brown@intel.com>
Subject: ACPI: allow a native cpuidle driver to displace ACPI
References: fate#311818,fate#311942
Patch-Mainline: yes


Signed-off-by: Thomas Renninger <trenn@suse.de>

upstream: 541adf7cd937b3895c7645406a9b060504df453b

The ACPI driver would fail probe when it found that
another driver had previously registered with cpuidle.

But this is a natural situation, as a native hardware
cpuidle driver should be able to bind instead of ACPI,
and the ACPI processor driver should be able to handle
yielding control of C-states while still handling
P-states and T-states.

Add a KERN_DEBUG line showing when acpi_idle
does successfully register.

Signed-off-by: Len Brown <len.brown@intel.com>
Automatically created from "patches.arch/004-ACPI__allow_a_native_cpuidle_driver_to_displace_ACPI.patch" by xen-port-patches.py

--- sle11sp2-2011-07-22.orig/drivers/acpi/processor_core.c	2011-07-22 11:34:11.000000000 +0200
+++ sle11sp2-2011-07-22/drivers/acpi/processor_core.c	2011-07-21 09:10:11.000000000 +0200
@@ -801,7 +801,8 @@ static int __cpuinit acpi_processor_star
 		acpi_processor_get_limit_info(pr);
 	}
 
-	if (cpuidle_get_driver() == &acpi_idle_driver)
+	if (cpuidle_get_driver() == &acpi_idle_driver
+	    || processor_pm_external())
 		acpi_processor_power_init(pr, device);
 
 	result = processor_extcntl_prepare(pr);
