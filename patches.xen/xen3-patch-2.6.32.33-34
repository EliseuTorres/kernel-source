From: Jiri Slaby <jslaby@suse.cz>
Subject: Linux 2.6.32.34
Patch-mainline: Linux 2.6.32.34
References: bnc#558740

Signed-off-by: Jiri Slaby <jslaby@suse.cz>
Automatically created from "patches.kernel.org/patch-2.6.32.33-34" by xen-port-patches.py

--- sle11sp2-2011-08-10.orig/arch/x86/include/mach-xen/asm/pgtable-3level.h	2011-05-05 14:04:27.000000000 +0200
+++ sle11sp2-2011-08-10/arch/x86/include/mach-xen/asm/pgtable-3level.h	2011-05-05 15:54:37.000000000 +0200
@@ -63,8 +63,6 @@ static inline void xen_pmd_clear(pmd_t *
 
 static inline void pud_clear(pud_t *pudp)
 {
-	pgdval_t pgd;
-
 	set_pud(pudp, __pud(0));
 
 	/*
@@ -73,13 +71,10 @@ static inline void pud_clear(pud_t *pudp
 	 * section 8.1: in PAE mode we explicitly have to flush the
 	 * TLB via cr3 if the top-level pgd is changed...
 	 *
-	 * Make sure the pud entry we're updating is within the
-	 * current pgd to avoid unnecessary TLB flushes.
+	 * Currently all places where pud_clear() is called either have
+	 * flush_tlb_mm() followed or don't need TLB flush (x86_64 code or
+	 * pud_clear_bad()), so we don't need TLB flush here.
 	 */
-	pgd = read_cr3();
-	if (__pa(pudp) >= pgd && __pa(pudp) <
-	    (pgd + sizeof(pgd_t)*PTRS_PER_PGD))
-		xen_tlb_flush();
 }
 
 #ifdef CONFIG_SMP
--- sle11sp2-2011-08-10.orig/arch/x86/kernel/e820-xen.c	2009-12-04 11:31:40.000000000 +0100
+++ sle11sp2-2011-08-10/arch/x86/kernel/e820-xen.c	2011-04-05 13:44:13.000000000 +0200
@@ -1341,15 +1341,23 @@ static int __init parse_memopt(char *p)
 	if (!p)
 		return -EINVAL;
 
-#ifdef CONFIG_X86_32
+#ifndef CONFIG_XEN
 	if (!strcmp(p, "nopentium")) {
+#ifdef CONFIG_X86_32
 		setup_clear_cpu_cap(X86_FEATURE_PSE);
 		return 0;
+#else
+		printk(KERN_WARNING "mem=nopentium ignored! (only supported on x86_32)\n");
+		return -EINVAL;
+#endif
 	}
 #endif
 
 	userdef = 1;
 	mem_size = memparse(p, &p);
+	/* don't remove all of memory when handling "mem={invalid}" param */
+	if (mem_size == 0)
+		return -EINVAL;
 	e820_remove_range(mem_size, ULLONG_MAX - mem_size, E820_RAM, 1);
 
 	i = e820.nr_map - 1;
--- sle11sp2-2011-08-10.orig/arch/x86/mm/fault-xen.c	2011-08-10 13:54:05.000000000 +0200
+++ sle11sp2-2011-08-10/arch/x86/mm/fault-xen.c	2011-08-10 13:54:14.000000000 +0200
@@ -851,6 +851,13 @@ mm_fault_error(struct pt_regs *regs, uns
 	       unsigned long address, unsigned int fault)
 {
 	if (fault & VM_FAULT_OOM) {
+		/* Kernel mode? Handle exceptions or die: */
+		if (!(error_code & PF_USER)) {
+			up_read(&current->mm->mmap_sem);
+			no_context(regs, error_code, address);
+			return;
+		}
+
 		out_of_memory(regs, error_code, address);
 	} else {
 		if (fault & (VM_FAULT_SIGBUS|VM_FAULT_HWPOISON))
--- sle11sp2-2011-08-10.orig/arch/x86/mm/pgtable-xen.c	2010-09-22 16:19:06.000000000 +0200
+++ sle11sp2-2011-08-10/arch/x86/mm/pgtable-xen.c	2011-04-05 13:44:13.000000000 +0200
@@ -519,8 +519,7 @@ void pud_populate(struct mm_struct *mm, 
 	 * section 8.1: in PAE mode we explicitly have to flush the
 	 * TLB via cr3 if the top-level pgd is changed...
 	 */
-	if (mm == current->active_mm)
-		xen_tlb_flush();
+	flush_tlb_mm(mm);
 }
 #else  /* !CONFIG_X86_PAE */
 
