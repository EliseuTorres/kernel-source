From: jbeulich@novell.com
Subject: use kzalloc() in favor of kmalloc()+memset()
Patch-mainline: n/a

Also use clear_page() in favor of memset(, 0, PAGE_SIZE).

--- sle11sp2-2011-09-22.orig/arch/x86/mm/init_32-xen.c	2011-08-22 11:25:03.000000000 +0200
+++ sle11sp2-2011-09-22/arch/x86/mm/init_32-xen.c	2011-07-04 12:15:21.000000000 +0200
@@ -725,7 +725,7 @@ unsigned long __init extend_init_mapping
 		if (pmd_none(*pmd)) {
 			unsigned long pa = start_pfn++ << PAGE_SHIFT;
 
-			memset(__va(pa), 0, PAGE_SIZE);
+			clear_page(__va(pa));
 			make_lowmem_page_readonly(__va(pa),
 						  XENFEAT_writable_page_tables);
 			xen_l2_entry_update(pmd, __pmd(pa | _KERNPG_TABLE));
--- sle11sp2-2011-09-22.orig/arch/x86/mm/init_64-xen.c	2011-08-22 11:25:03.000000000 +0200
+++ sle11sp2-2011-09-22/arch/x86/mm/init_64-xen.c	2011-08-09 11:16:50.000000000 +0200
@@ -214,7 +214,7 @@ static __ref void *spp_getpage(void)
 	else if (pgt_buf_end < pgt_buf_top) {
 		ptr = __va(pgt_buf_end << PAGE_SHIFT);
 		pgt_buf_end++;
-		memset(ptr, 0, PAGE_SIZE);
+		clear_page(ptr);
 	} else
 		ptr = alloc_bootmem_pages(PAGE_SIZE);
 
--- sle11sp2-2011-09-22.orig/drivers/xen/core/gnttab.c	2011-04-14 17:19:31.000000000 +0200
+++ sle11sp2-2011-09-22/drivers/xen/core/gnttab.c	2011-02-02 15:10:16.000000000 +0100
@@ -546,7 +546,7 @@ int gnttab_copy_grant_page(grant_ref_t r
 
 	new_addr = page_address(new_page);
 	addr = page_address(page);
-	memcpy(new_addr, addr, PAGE_SIZE);
+	copy_page(new_addr, addr);
 
 	pfn = page_to_pfn(page);
 	mfn = pfn_to_mfn(pfn);
--- sle11sp2-2011-09-22.orig/drivers/xen/core/machine_reboot.c	2011-07-04 10:25:00.000000000 +0200
+++ sle11sp2-2011-09-22/drivers/xen/core/machine_reboot.c	2011-04-14 17:32:26.000000000 +0200
@@ -98,7 +98,7 @@ static void post_suspend(int suspend_can
 		BUG();
 	HYPERVISOR_shared_info = (shared_info_t *)fix_to_virt(FIX_SHARED_INFO);
 
-	memset(empty_zero_page, 0, PAGE_SIZE);
+	clear_page(empty_zero_page);
 
 	fpp = PAGE_SIZE/sizeof(unsigned long);
 	for (i = 0, j = 0, k = -1; i < max_pfn; i += fpp, j++) {
--- sle11sp2-2011-09-22.orig/drivers/xen/core/smpboot.c	2011-02-07 12:28:20.000000000 +0100
+++ sle11sp2-2011-09-22/drivers/xen/core/smpboot.c	2011-02-02 15:10:16.000000000 +0100
@@ -176,17 +176,12 @@ static void __cpuinit cpu_initialize_con
 	ctxt.flags = VGCF_IN_KERNEL;
 	ctxt.user_regs.ds = __USER_DS;
 	ctxt.user_regs.es = __USER_DS;
-	ctxt.user_regs.fs = 0;
-	ctxt.user_regs.gs = 0;
 	ctxt.user_regs.ss = __KERNEL_DS;
 	ctxt.user_regs.eip = (unsigned long)cpu_bringup_and_idle;
 	ctxt.user_regs.eflags = X86_EFLAGS_IF | 0x1000; /* IOPL_RING1 */
 
-	memset(&ctxt.fpu_ctxt, 0, sizeof(ctxt.fpu_ctxt));
-
 	smp_trap_init(ctxt.trap_ctxt);
 
-	ctxt.ldt_ents = 0;
 	ctxt.gdt_frames[0] = arbitrary_virt_to_mfn(get_cpu_gdt_table(cpu));
 	ctxt.gdt_ents = GDT_SIZE / 8;
 
--- sle11sp2-2011-09-22.orig/drivers/xen/netback/interface.c	2011-07-04 15:01:14.000000000 +0200
+++ sle11sp2-2011-09-22/drivers/xen/netback/interface.c	2011-09-22 15:03:37.000000000 +0200
@@ -193,7 +193,6 @@ netif_t *netif_alloc(struct device *pare
 	SET_NETDEV_DEV(dev, parent);
 
 	netif = netdev_priv(dev);
-	memset(netif, 0, sizeof(*netif));
 	netif->domid  = domid;
 	netif->handle = handle;
 	netif->can_sg = 1;
--- sle11sp2-2011-09-22.orig/drivers/xen/sfc_netutil/accel_cuckoo_hash.c	2011-02-01 15:03:03.000000000 +0100
+++ sle11sp2-2011-09-22/drivers/xen/sfc_netutil/accel_cuckoo_hash.c	2011-02-02 15:10:16.000000000 +0100
@@ -77,7 +77,7 @@ int cuckoo_hash_init(cuckoo_hash_table *
 	BUG_ON(length_bits >= sizeof(unsigned) * 8);
 	BUG_ON(key_length > sizeof(cuckoo_hash_key));
 
-	table_mem = kmalloc(sizeof(cuckoo_hash_entry) * 2 * length, GFP_KERNEL);
+	table_mem = kzalloc(sizeof(cuckoo_hash_entry) * 2 * length, GFP_KERNEL);
 
 	if (table_mem == NULL)
 		return -ENOMEM;
@@ -93,9 +93,6 @@ int cuckoo_hash_init(cuckoo_hash_table *
 
 	set_hash_parameters(hashtab);
 
-	/* Zero the table */
-	memset(hashtab->table0, 0, length * 2 * sizeof(cuckoo_hash_entry));
-
 	return 0;
 }
 EXPORT_SYMBOL_GPL(cuckoo_hash_init);
--- sle11sp2-2011-09-22.orig/drivers/xen/tpmback/interface.c	2011-04-11 15:00:49.000000000 +0200
+++ sle11sp2-2011-09-22/drivers/xen/tpmback/interface.c	2011-04-13 16:54:02.000000000 +0200
@@ -94,7 +94,7 @@ int tpmif_map(tpmif_t *tpmif, grant_ref_
 	tpmif->tx_area = area;
 
 	tpmif->tx = (tpmif_tx_interface_t *)area->addr;
-	memset(tpmif->tx, 0, PAGE_SIZE);
+	clear_page(tpmif->tx);
 
 	err = bind_interdomain_evtchn_to_irqhandler(
 		tpmif->domid, evtchn, tpmif_be_int, 0, tpmif->devname, tpmif);
