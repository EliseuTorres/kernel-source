From: Yong Wang <yong.y.wang@linux.intel.com>
Date: Wed, 16 Dec 2009 04:58:46 +0000 (+0800)
Subject: revert: x86: Under BIOS control,
 restore AP's APIC_LVTTHMR to the BSP value
Patch-mainline: 2.6.32.2

x86: Under BIOS control, restore AP's APIC_LVTTHMR to the BSP value

Upstream commit a2202aa29289db64ca7988b12343158b67b27f10.

On platforms where bios handles the thermal monitor interrupt,
APIC_LVTTHMR on each logical CPU is programmed to generate a SMI and OS
can't touch it.

Unfortunately AP bringup sequence using INIT-SIPI-SIPI clear all
the LVT entries except the mask bit. Essentially this results in
all LVT entries including the thermal monitoring interrupt set to masked
(clearing the bios programmed value for APIC_LVTTHMR).

And this leads to kernel take over the thermal monitoring interrupt
on AP's but not on BSP (leaving the bios programmed value only on BSP).

As a result of this, we have seen system hangs when the thermal
monitoring interrupt is generated.

Fix this by reading the initial value of thermal LVT entry on BSP
and if bios has taken over the control, then program the same value
on all AP's and leave the thermal monitoring interrupt control
on all the logical cpu's to the bios.

Signed-off-by: Yong Wang <yong.y.wang@intel.com>
Reviewed-by: Suresh Siddha <suresh.b.siddha@intel.com>
Cc: Borislav Petkov <borislav.petkov@amd.com>
Cc: Arjan van de Ven <arjan@infradead.org>
LKML-Reference: <20091110013824.GA24940@ywang-moblin2.bj.intel.com>
Signed-off-by: Ingo Molnar <mingo@elte.hu>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
+--

 arch/x86/include/asm/mce.h               |    6 ------
 arch/x86/kernel/cpu/mcheck/therm_throt.c |   29 +----------------------------
 arch/x86/kernel/setup.c                  |    3 ---
 3 files changed, 1 insertion(+), 37 deletions(-)

Automatically created from "patches.suse/revert-x86-under-bios-control-restore-ap-s-apic_lvtthmr-to-the-bsp-value" by xen-port-patches.py

--- sle11sp2-2011-07-15.orig/arch/x86/kernel/setup-xen.c	2011-06-20 11:08:56.000000000 +0200
+++ sle11sp2-2011-07-15/arch/x86/kernel/setup-xen.c	2011-07-15 14:15:25.000000000 +0200
@@ -109,7 +109,6 @@
 #ifdef CONFIG_X86_64
 #include <asm/numa_64.h>
 #endif
-#include <asm/mce.h>
 
 #ifdef CONFIG_XEN
 #include <asm/hypervisor.h>
@@ -1302,8 +1301,6 @@ void __init setup_arch(char **cmdline_p)
 #endif
 #endif
 	x86_init.oem.banner();
-
-	mcheck_intel_therm_init();
 }
 
 #ifdef CONFIG_X86_32
