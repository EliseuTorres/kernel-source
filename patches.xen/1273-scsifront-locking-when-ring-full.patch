From http://xenbits.xen.org/hg/linux-2.6.18-xen.hg/rev/3015a92b2b53
From: xen-devel@lists.xenproject.org
Patch-mainline: n/a
Subject: scsifront: avoid acquiring same lock twice if ring is full

The locking in scsifront_dev_reset_handler() as introduced by c/s
1209:4d1471ca031e is obviously wrong. In case of a full ring the host
lock is acquired twice.

Fixing this issue enables to get rid of the endless fo loop with an
explicit break statement.

Signed-off-by: Juergen Gross <jgross@suse.com>
Committed-by: Jan Beulich <jbeulich@suse.com>

--- sle12.orig/drivers/xen/scsifront/scsifront.c	2015-01-30 14:33:57.000000000 +0100
+++ sle12/drivers/xen/scsifront/scsifront.c	2015-01-16 14:57:44.000000000 +0100
@@ -447,12 +447,10 @@ static int scsifront_dev_reset_handler(s
 	uint16_t rqid;
 	int err = 0;
 
-	for (;;) {
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,12)
-		spin_lock_irq(host->host_lock);
+	spin_lock_irq(host->host_lock);
 #endif
-		if (!RING_FULL(&info->ring))
-			break;
+	while (RING_FULL(&info->ring)) {
 		if (err) {
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,12)
 			spin_unlock_irq(host->host_lock);
