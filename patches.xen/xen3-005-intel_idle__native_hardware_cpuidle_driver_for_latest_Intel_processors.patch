From: Len Brown <len.brown@intel.com>
Subject: intel_idle: native hardware cpuidle driver for latest Intel processors
References: fate#311818,fate#311942
Patch-Mainline: yes

Signed-off-by: Thomas Renninger <trenn@suse.de>

upstream: 2671717265ae6e720a9ba5f13fbec3a718983b65

This EXPERIMENTAL driver supersedes acpi_idle on
Intel Atom Processors, Intel Core i3/i5/i7 Processors
and associated Intel Xeon processors.

It does not support the Intel Core2 processor or earlier.

For kernels configured with ACPI, CONFIG_INTEL_IDLE=y
allows intel_idle to probe before the ACPI processor driver.
Booting with "intel_idle.max_cstate=0" disables intel_idle
and the system will fall back on ACPI's "acpi_idle".

Typical Linux distributions load ACPI processor module early,
making CONFIG_INTEL_IDLE=m not easily useful on ACPI platforms.

intel_idle probes all processors at module_init time.
Processors that are hot-added later will be limited
to using C1 in idle.

Signed-off-by: Len Brown <len.brown@intel.com>

Automatically created from "patches.arch/005-intel_idle__native_hardware_cpuidle_driver_for_latest_Intel_processors.patch" by xen-port-patches.py

--- sle11sp2-2011-08-08.orig/drivers/acpi/processor_core.c	2011-07-21 09:10:11.000000000 +0200
+++ sle11sp2-2011-08-08/drivers/acpi/processor_core.c	2011-08-08 17:59:23.000000000 +0200
@@ -1273,6 +1273,7 @@ static int __init acpi_processor_init(vo
 	 */
 	dmi_check_system(processor_idle_dmi_table);
 
+#ifdef CONFIG_CPU_IDLE
 	if (!cpuidle_register_driver(&acpi_idle_driver)) {
 		printk(KERN_DEBUG "ACPI: %s registered with cpuidle\n",
 			acpi_idle_driver.name);
@@ -1280,6 +1281,7 @@ static int __init acpi_processor_init(vo
 		printk(KERN_DEBUG "ACPI: acpi_idle yielding to %s\n",
 			cpuidle_get_driver()->name);
 	}
+#endif
 
 	result = acpi_bus_register_driver(&acpi_processor_driver);
 	if (result < 0)
