From: Martin Schwidefsky <schwidefsky@de.ibm.com>
Subject: kernel: fix kernel oops with load of fpc register
Patch-mainline: v3.17
Git-commit: 9f86745722d95bc7f855069bd82285bd10dc97ff
References: bnc#888623, LTC#113596

Description:  kernel: fix kernel oops with load of fpc register
Symptom:      Kernel oops after signal return with an invalid fpc register
Problem:      The test load of the floating-point-control register to see
              if it is valid can cause a specification exception. The label
              to intercept this exception is placed incorrectly, as the
              specification exception is suppressing the label needs to
              be placed after the lfpc instruction.
Solution:     Correct the position of the fixup label.
Reproduction: Return from a aignal handler invocation with an invalid
              floating-point-control register on the signal frame.

Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
Acked-by: John Jolly <jjolly@suse.de>
---
 arch/s390/include/asm/switch_to.h |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

--- a/arch/s390/include/asm/switch_to.h
+++ b/arch/s390/include/asm/switch_to.h
@@ -51,8 +51,8 @@ static inline int restore_fp_ctl(u32 *fp
 		return 0;
 
 	asm volatile(
-		"0:	lfpc    %1\n"
-		"	la	%0,0\n"
+		"	lfpc    %1\n"
+		"0:	la	%0,0\n"
 		"1:\n"
 		EX_TABLE(0b,1b)
 		: "=d" (rc) : "Q" (*fpc), "0" (-EINVAL));
