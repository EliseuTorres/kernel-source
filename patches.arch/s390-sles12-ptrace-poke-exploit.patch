From: Martin Schwidefsky <schwidefsky@de.ibm.com>
Subject: ptrace: fix PSW mask check
Patch-mainline: v3.16-rc7
Git-commit: dab6cf55f81a6e16b8147aed9a843e1691dcd318
References: CVE-2014-3534,bnc#885460

Description:  kernel: ptrace local root exploit
Symptom:      Privilege escalation by a non-priviledged user space program.
Problem:      The PSW mask check of the PTRACE_POKEUSR_AREA command is
              incorrect. The PSW_MASK_USER define contains the PSW_MASK_ASC
              bits, the ptrace interface accepts all combinations for the
              address-space-control bits.
Solution:     To protect the kernel space the PSW mask check in ptrace
              needs to reject the address-space-control bit combination
              for the kernel space.
Reproduction: Use gdb to modify the PSW of the inferior to point to the
              home space and let the inferior continue with a write
              instruction to a kernel address.

Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
Acked-by: John Jolly <jjolly@suse.de>
---
 arch/s390/kernel/ptrace.c |    9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

--- a/arch/s390/kernel/ptrace.c
+++ b/arch/s390/kernel/ptrace.c
@@ -321,7 +321,9 @@ static int __poke_user(struct task_struc
 		 * psw and gprs are stored on the stack
 		 */
 		if (addr == (addr_t) &dummy->regs.psw.mask &&
-		    ((data & ~PSW_MASK_USER) != PSW_USER_BITS ||
+		    (((data^PSW_USER_BITS) & ~PSW_MASK_USER) ||
+		     (((data^PSW_USER_BITS) & PSW_MASK_ASC) &&
+		      ((data|PSW_USER_BITS) & PSW_MASK_ASC) == PSW_MASK_ASC) ||
 		     ((data & PSW_MASK_EA) && !(data & PSW_MASK_BA))))
 			/* Invalid psw mask. */
 			return -EINVAL;
@@ -654,7 +656,10 @@ static int __poke_user_compat(struct tas
 		 */
 		if (addr == (addr_t) &dummy32->regs.psw.mask) {
 			/* Build a 64 bit psw mask from 31 bit mask. */
-			if ((tmp & ~PSW32_MASK_USER) != PSW32_USER_BITS)
+			if (((tmp^PSW32_USER_BITS) & ~PSW32_MASK_USER) ||
+			    (((tmp^PSW32_USER_BITS) & PSW32_MASK_ASC) &&
+			     ((tmp|PSW32_USER_BITS) & PSW32_MASK_ASC)
+			     == PSW32_MASK_ASC))
 				/* Invalid psw mask. */
 				return -EINVAL;
 			regs->psw.mask = (regs->psw.mask & ~PSW_MASK_USER) |
