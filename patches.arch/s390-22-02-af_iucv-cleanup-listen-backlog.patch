From: Hendrik Brueckner <brueckner@linux.vnet.ibm.com>
Subject: af_iucv: correct cleanup if listen backlog is full
Patch-mainline: v3.16-rc1
Git-commit: 4d520f62e0f4fd310a2307d0244ef184ce9200ba
References: bnc#885262, LTC#111728

Description:  af_iucv: correct cleanup if listen backlog is full
Symptom:      User perceives the "Attempt to release alive iucv socket" kernel
              log message.
Problem:      In case of transport HIPER a sock struct is allocated for an
              incoming connect request. If the backlog queue is full this
              socket is not needed, but is left in the list of af_iucv
              sockets. Final socket release posts console message "Attempt to
              release alive iucv socket".
Solution:     Ensure the new created socket is cleaned up correctly if the
              backlog queue is full.
Reproduction: Run an af_iucv client/server stress test on Linux instances
              in LPAR mode (using the af_iucv HiperSockets transport).

Signed-off-by: Hendrik Brueckner <brueckner@linux.vnet.ibm.com>
Acked-by: John Jolly <jjolly@suse.de>
---
 net/iucv/af_iucv.c |    3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

--- a/net/iucv/af_iucv.c
+++ b/net/iucv/af_iucv.c
@@ -1964,11 +1964,10 @@ static int afiucv_hs_callback_syn(struct
 	    sk_acceptq_is_full(sk) ||
 	    !nsk) {
 		/* error on server socket - connection refused */
-		if (nsk)
-			sk_free(nsk);
 		afiucv_swap_src_dest(skb);
 		trans_hdr->flags = AF_IUCV_FLAG_SYN | AF_IUCV_FLAG_FIN;
 		err = dev_queue_xmit(skb);
+		iucv_sock_kill(nsk);
 		bh_unlock_sock(sk);
 		goto out;
 	}
