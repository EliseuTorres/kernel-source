From: Michael Holzheu <holzheu@linux.vnet.ibm.com>
Subject: kdump: Add PM notifier for kdump
Patch-mainline: not yet
Git-commit: -
References: bnc#813708, LTC#91616

Description:  kdump: Add PM notifier for kdump
Symptom:      When kdump is triggered after suspend/resume it crashes
              with a kernel panic.
Problem:      For s390 the page table mapping for the crashkernel memory
              is removed to protect the pre-loaded kdump kernel and ramdisk.
              Because the crashkernel memory is not included in the page
              tables for suspend/resume it is not included in the suspend
              image. Therefore after resume the resumed system does no longer
              contain the pre-loaded kdump kernel and when kdump is triggered
              it fails.
Solution:     This patch adds a PM notifier that creates the page tables
              before suspend is done and removes them for resume. This
              ensures that the kdump kernel is included in the suspend image.
Reproduction: 1. Add a swap disk
                 $ mkswap /dev/dasdb1
                 $ swapon -d /dev/dasdb1
              2. Add kernel boot parameter entry to /etc/zipl.conf
                 "resume=/dev/dasdb1 no_console_suspend"
              3. Add swap disk entry in /etc/fstab
                 /dev/dasdb1 swap swap defaults   0  0
              4. run mkinitrd
              5. $ zipl -V
              6. $ reboot
              7. After system boots suspend it
                 $ echo disk > /sys/power/state
              8. Now resume it by IPL of the boot DASD
              9. Trigger panic
                 $ echo c > /proc/sysrq-trigger

Signed-off-by: Michael Holzheu <holzheu@linux.vnet.ibm.com>
Acked-by: John Jolly <jjolly@suse.de>
---
 arch/s390/kernel/machine_kexec.c |   30 ++++++++++++++++++++++++++++++
 1 file changed, 30 insertions(+)

--- a/arch/s390/kernel/machine_kexec.c
+++ b/arch/s390/kernel/machine_kexec.c
@@ -14,6 +14,7 @@
 #include <linux/delay.h>
 #include <linux/reboot.h>
 #include <linux/ftrace.h>
+#include <linux/suspend.h>
 #include <asm/cio.h>
 #include <asm/setup.h>
 #include <asm/pgtable.h>
@@ -99,6 +100,35 @@ void setup_regs(void)
 	memcpy((void *) SAVE_AREA_BASE, (void *) sa, sizeof(struct save_area));
 }
 
+/*
+ * PM notifier callback for kdump
+ */
+static int machine_kdump_pm_cb(struct notifier_block *nb, unsigned long action,
+			       void *ptr)
+{
+	switch (action) {
+	case PM_SUSPEND_PREPARE:
+	case PM_HIBERNATION_PREPARE:
+		if (crashk_res.start)
+			crash_map_reserved_pages();
+		break;
+	case PM_POST_SUSPEND:
+	case PM_POST_HIBERNATION:
+		if (crashk_res.start)
+			crash_unmap_reserved_pages();
+		break;
+	default:
+		return NOTIFY_DONE;
+	}
+	return NOTIFY_OK;
+}
+
+static int __init machine_kdump_pm_init(void)
+{
+	pm_notifier(machine_kdump_pm_cb, 0);
+	return 0;
+}
+arch_initcall(machine_kdump_pm_init);
 #endif
 
 /*
