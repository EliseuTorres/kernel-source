From: Stefan Weinhuber <wein@de.ibm.com>
Subject: [PATCH] [BZ 88366] dasd: oops when DASD modules are unloaded and loaded
Patch-mainline: not yet
Git-commit: -
References: bnc#801772, LTC#88366

Description:  dasd: oops when DASD modules are unloaded and loaded
Symptom:      When unlaoding the DASD modules and loading the modules
              egain a kernel oops due to an invalid address is
              triggered.
Problem:      When the modules are unloaded and the devices are
              detached from the driver, the DASD specific sysfs
              attributes are not removed properly. When the ECKD
              module is loaded again, the devices are reassigned to
              the DASD device driver, which tries to create the
              sysfs attributes again and the stale pointers cause
              an oops.
Solution:     Make sure that dasd_generic_remove removes the sysfs
              attributes in any case.
Reproduction: In a system with at least one DASD device attached, but
              no DASD in use, do the following:
              modprobe dasd_mod
              modprobe dasd_eckd_mod
              modprobe -r dasd_eckd_mod
              modprobe dasd_eckd_mod

Signed-off-by: Stefan Weinhuber <wein@de.ibm.com>
Acked-by: John Jolly <jjolly@suse.de>
---
 drivers/s390/block/dasd.c |    5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

--- a/drivers/s390/block/dasd.c
+++ b/drivers/s390/block/dasd.c
@@ -3152,12 +3152,15 @@ void dasd_generic_remove(struct ccw_devi
 	cdev->handler = NULL;
 
 	device = dasd_device_from_cdev(cdev);
-	if (IS_ERR(device))
+	if (IS_ERR(device)) {
+		dasd_remove_sysfs_files(cdev);
 		return;
+	}
 	if (test_and_set_bit(DASD_FLAG_OFFLINE, &device->flags) &&
 	    !test_bit(DASD_FLAG_SAFE_OFFLINE_RUNNING, &device->flags)) {
 		/* Already doing offline processing */
 		dasd_put_device(device);
+		dasd_remove_sysfs_files(cdev);
 		return;
 	}
 	/*
