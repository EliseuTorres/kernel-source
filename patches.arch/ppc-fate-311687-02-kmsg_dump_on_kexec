From 0f4bd46ec252887f44f1f065b41867cac8f70dfb Mon Sep 17 00:00:00 2001
From: KOSAKI Motohiro <kosaki.motohiro@jp.fujitsu.com>
Date: Tue, 22 Dec 2009 03:15:43 +0000
Subject: [PATCH] kmsg_dump: Dump on crash_kexec as well
References: bnc#701198, FATE#311687
Patch-mainline: to-be-detemined

crash_kexec gets called before kmsg_dump(KMSG_DUMP_OOPS) if
panic_on_oops is set, so the kernel log buffer is not stored
for this case.

This patch adds a KMSG_DUMP_KEXEC dump type which gets called
when crash_kexec() is invoked. To avoid getting double dumps,
the old KMSG_DUMP_PANIC is moved below crash_kexec(). The
mtdoops driver is modified to handle KMSG_DUMP_KEXEC in the
same way as a panic.

Signed-off-by: KOSAKI Motohiro <kosaki.motohiro@jp.fujitsu.com>
Acked-by: Simon Kagstrom <simon.kagstrom@netinsight.net>
Signed-off-by: David Woodhouse <David.Woodhouse@intel.com>

[This patch was adjusted to apply cleanly on SLES11 SP2 kotd.]

Acked-by: Torsten Duwe <duwe@suse.de>

---
 kernel/kexec.c            |    4 ++++
 kernel/panic.c            |    3 ++-
 kernel/printk.c           |    1 +
 4 files changed, 8 insertions(+), 1 deletions(-)

Index: linux-2.6.32-SLE11-SP2/kernel/kexec.c
===================================================================
--- linux-2.6.32-SLE11-SP2.orig/kernel/kexec.c
+++ linux-2.6.32-SLE11-SP2/kernel/kexec.c
@@ -32,6 +32,7 @@
 #include <linux/console.h>
 #include <linux/vmalloc.h>
 #include <linux/sysctl.h>
+#include <linux/kmsg_dump.h>
 
 #include <asm/page.h>
 #include <asm/uaccess.h>
@@ -1128,6 +1129,8 @@ void crash_kexec(struct pt_regs *regs)
 		if (kexec_crash_image) {
 			struct pt_regs fixed_regs;
 
+			kmsg_dump(KMSG_DUMP_KEXEC);
+
 			crash_setup_regs(&fixed_regs, regs);
 			crash_save_vmcoreinfo();
 			/*
Index: linux-2.6.32-SLE11-SP2/kernel/panic.c
===================================================================
--- linux-2.6.32-SLE11-SP2.orig/kernel/panic.c
+++ linux-2.6.32-SLE11-SP2/kernel/panic.c
@@ -79,8 +79,6 @@ NORET_TYPE void panic(const char * fmt,
 	dump_stack();
 #endif
 
-	kmsg_dump(KMSG_DUMP_PANIC);
-
 #ifdef CONFIG_KDB_KDUMP
 	if (kdb_kdump_state == KDB_KDUMP_RESET) {
 		(void)kdb(KDB_REASON_OOPS, 999, get_irq_regs());
@@ -94,6 +92,8 @@ NORET_TYPE void panic(const char * fmt,
 	if (!dump_after_notifier)
 		crash_kexec(NULL);
 
+	kmsg_dump(KMSG_DUMP_PANIC);
+
 	/*
 	 * Note smp_send_stop is the usual smp shutdown function, which
 	 * unfortunately means it may not be hardened to work in a panic
Index: linux-2.6.32-SLE11-SP2/kernel/printk.c
===================================================================
--- linux-2.6.32-SLE11-SP2.orig/kernel/printk.c
+++ linux-2.6.32-SLE11-SP2/kernel/printk.c
@@ -1629,6 +1629,7 @@ EXPORT_SYMBOL_GPL(kmsg_dump_unregister);
 static const char const *kmsg_reasons[] = {
 	[KMSG_DUMP_OOPS]	= "oops",
 	[KMSG_DUMP_PANIC]	= "panic",
+	[KMSG_DUMP_KEXEC]	= "kexec",
 };
 
 static const char *kmsg_to_str(enum kmsg_dump_reason reason)
