From ae8e9060a3ecfd22bd5059e39f81547613ae376c Mon Sep 17 00:00:00 2001
From: Roy Franz <roy.franz@linaro.org>
Date: Sun, 22 Sep 2013 15:45:37 -0700
Subject: [PATCH] efi: use efi_get_memory_map() to get final map for x86

Git-commit: ae8e9060a3ecfd22bd5059e39f81547613ae376c
Patch-mainline: v3.13-rc1
Reference: bnc#876046
Target: sle12

Replace the open-coded memory map getting with the
efi_get_memory_map() that is now general enough to use.

Signed-off-by: Roy Franz <roy.franz@linaro.org>
Signed-off-by: Matt Fleming <matt.fleming@intel.com>
Acked-by: Lee, Chun-Yi <jlee@suse.com>

---
 arch/x86/boot/compressed/eboot.c |   22 +++++-----------------
 1 files changed, 5 insertions(+), 17 deletions(-)

Index: linux-3.12-SLE12/arch/x86/boot/compressed/eboot.c
===================================================================
--- linux-3.12-SLE12.orig/arch/x86/boot/compressed/eboot.c
+++ linux-3.12-SLE12/arch/x86/boot/compressed/eboot.c
@@ -590,25 +590,12 @@ static efi_status_t exit_boot(struct boo
 	u8 nr_entries;
 	int i;
 
-	size = sizeof(*mem_map) * 32;
-
-again:
-	size += sizeof(*mem_map) * 2;
-	_size = size;
-	status = efi_low_alloc(sys_table, size, 1, (unsigned long *)&mem_map);
-	if (status != EFI_SUCCESS)
-		return status;
-
 get_map:
-	status = efi_call_phys5(sys_table->boottime->get_memory_map, &size,
-				mem_map, &key, &desc_size, &desc_version);
-	if (status == EFI_BUFFER_TOO_SMALL) {
-		efi_free(sys_table, _size, (unsigned long)mem_map);
-		goto again;
-	}
+	status = efi_get_memory_map(sys_table, &mem_map, &size, &desc_size,
+				    &desc_version, &key);
 
 	if (status != EFI_SUCCESS)
-		goto free_mem_map;
+		return status;
 
 	memcpy(&efi->efi_loader_signature, EFI_LOADER_SIGNATURE, sizeof(__u32));
 	efi->efi_systab = (unsigned long)sys_table;
@@ -637,6 +624,7 @@ get_map:
 			goto free_mem_map;
 
 		called_exit = true;
+		efi_call_phys1(sys_table->boottime->free_pool, mem_map);
 		goto get_map;
 	}
 
@@ -705,7 +693,7 @@ get_map:
 	return EFI_SUCCESS;
 
 free_mem_map:
-	efi_free(sys_table, _size, (unsigned long)mem_map);
+	efi_call_phys1(sys_table->boottime->free_pool, mem_map);
 	return status;
 }
 
