From: Len Brown <len.brown@intel.com>
Subject: intel_idle: initial C8, C9, C10 support
References: bnc#820948
Patch-Mainline: v3.10-rc1
Git-commit: 86239ceb33b0d8480b0f0ca0eec08e7f7a807374


Signed-off-by: Thomas Renninger <trenn@suse.de>

Allow intel_idle and cpuidle to utilize C8, C9, C10
when they are present on...
"Fourth Generation Intel(R) Core(TM) Processors",
which are based on Intel(R) microarchitecture code name Haswell.

Signed-off-by: Len Brown <len.brown@intel.com>

Index: linux-3.0-SLE11-SP3/include/linux/cpuidle.h
===================================================================
--- linux-3.0-SLE11-SP3.orig/include/linux/cpuidle.h
+++ linux-3.0-SLE11-SP3/include/linux/cpuidle.h
@@ -17,7 +17,7 @@
 #include <linux/kobject.h>
 #include <linux/completion.h>
 
-#define CPUIDLE_STATE_MAX	8
+#define CPUIDLE_STATE_MAX	10
 #define CPUIDLE_NAME_LEN	16
 #define CPUIDLE_DESC_LEN	32
 
Index: linux-3.0-SLE11-SP3/drivers/idle/intel_idle.c
===================================================================
--- linux-3.0-SLE11-SP3.orig/drivers/idle/intel_idle.c
+++ linux-3.0-SLE11-SP3/drivers/idle/intel_idle.c
@@ -238,6 +238,30 @@ static struct cpuidle_state hsw_cstates[
 		.exit_latency = 166,
 		.target_residency = 500,
 		.enter = &intel_idle },
+	{
+		.name = "C8-HSW",
+		.desc = "MWAIT 0x40",
+		.driver_data = (void *) 0x40,
+		.flags = CPUIDLE_FLAG_TIME_VALID | CPUIDLE_FLAG_TLB_FLUSHED,
+		.exit_latency = 300,
+		.target_residency = 900,
+		.enter = &intel_idle },
+	{
+		.name = "C9-HSW",
+		.desc = "MWAIT 0x50",
+		.driver_data = (void *) 0x50,
+		.flags = CPUIDLE_FLAG_TIME_VALID | CPUIDLE_FLAG_TLB_FLUSHED,
+		.exit_latency = 600,
+		.target_residency = 1800,
+		.enter = &intel_idle },
+	{
+		.name = "C10-HSW",
+		.desc = "MWAIT 0x60",
+		.driver_data = (void *) 0x60,
+		.flags = CPUIDLE_FLAG_TIME_VALID | CPUIDLE_FLAG_TLB_FLUSHED,
+		.exit_latency = 2600,
+		.target_residency = 7700,
+		.enter = &intel_idle },
 };
 
 static struct cpuidle_state atom_cstates[MWAIT_MAX_NUM_CSTATES] = {
