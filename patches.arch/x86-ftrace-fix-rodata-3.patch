From: Suresh Siddha <suresh.b.siddha@intel.com>
References: bnc#581940
Git-commit: e7d23dde9b7ebb575e2bcee2abefc9ec1e4adde9
Subject: x86_64, cpa: Use only text section in set_kernel_text_rw/ro
Patch-mainline: v2.6.34-rc1

    set_kernel_text_rw()/set_kernel_text_ro() are marking pages
    starting from _text to __start_rodata as RW or RO.
    
    With CONFIG_DEBUG_RODATA, there might be free pages (associated
    with padding the sections to 2MB large page boundary) between
    text and rodata sections that are given back to page allocator.
    So we should use only use the start (__text) and end
    (__stop___ex_table) of the text section in
    set_kernel_text_rw()/set_kernel_text_ro().
    
    Signed-off-by: Suresh Siddha <suresh.b.siddha@intel.com>
    Acked-by: Steven Rostedt <rostedt@goodmis.org>
    Tested-by: Steven Rostedt <rostedt@goodmis.org>
    LKML-Reference: <20091029024821.164525222@sbs-t61.sc.intel.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>
Acked-by: Nick Piggin <npiggin@suse.de>

Index: linux-2.6.27/arch/x86/mm/init_64.c
===================================================================
 arch/x86/mm/init_64.c |   12 ++++++++++--
 1 file changed, 10 insertions(+), 2 deletions(-)

--- linux-2.6.27.orig/arch/x86/mm/init_64.c
+++ linux-2.6.27/arch/x86/mm/init_64.c
@@ -699,7 +699,7 @@ int kernel_set_to_readonly;
 void set_kernel_text_rw(void)
 {
 	unsigned long start = PFN_ALIGN(_text);
-	unsigned long end = PFN_ALIGN(__start_rodata);
+	unsigned long end = PFN_ALIGN(__stop___ex_table);
 
 	if (!kernel_set_to_readonly)
 		return;
@@ -707,13 +707,18 @@ void set_kernel_text_rw(void)
 	pr_debug("Set kernel text: %lx - %lx for read write\n",
 		 start, end);
 
+	/*
+	 * Make the kernel identity mapping for text RW. Kernel text
+	 * mapping will always be RO. Refer to the comment in
+	 * static_protections() in pageattr.c
+	 */
 	set_memory_rw(start, (end - start) >> PAGE_SHIFT);
 }
 
 void set_kernel_text_ro(void)
 {
 	unsigned long start = PFN_ALIGN(_text);
-	unsigned long end = PFN_ALIGN(__start_rodata);
+	unsigned long end = PFN_ALIGN(__stop___ex_table);
 
 	if (!kernel_set_to_readonly)
 		return;
@@ -721,6 +726,9 @@ void set_kernel_text_ro(void)
 	pr_debug("Set kernel text: %lx - %lx for read only\n",
 		 start, end);
 
+	/*
+	 * Set the kernel identity mapping for text RO.
+	 */
 	set_memory_ro(start, (end - start) >> PAGE_SHIFT);
 }
 

