From: Gerald Schaefer <geraldsc@de.ibm.com>
Subject: dasd: fix expiration handling for recovery requests
Patch-mainline: not yet
References: bnc#737328,bnc#735543,LTC#77273

Symptom:     A request on a DASD device is blocked and does never finish
Problem:     The 'expires' value of a ccw requests defines how long the
             device driver should wait for a response from the evice after
             the request has been submitted to the channel subsystem. After
             the expiration time (e.g. 30 seconds) the waiting request will
             be cancelled and started again. This protects the DASD devices
             from beeing blocked by errors that cause the answering I/O
             interrupt to be lost.
             In case of error recovery requests, this 'expires' value used
             to be set to 0, so in case of a lost interrupt, such a recovery
             request would never expire and block the device.
Solution:    To prevent this kind of problem, all recovery requests need to
             have an expires value > 0 as well. If not specified otherwise,
             this should be the same expires value as for the original request.

Signed-off-by: Stefan Weinhuber <wein@de.ibm.com>
Acked-by: Hannes Reinecke <hare@suse.de> 
Acked-by: John Jolly <jjolly@suse.de>
---
 drivers/s390/block/dasd_3990_erp.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

--- a/drivers/s390/block/dasd_3990_erp.c
+++ b/drivers/s390/block/dasd_3990_erp.c
@@ -1718,7 +1718,7 @@ dasd_3990_erp_action_1B_32(struct dasd_c
 	erp->startdev = device;
 	erp->memdev = device;
 	erp->magic = default_erp->magic;
-	erp->expires = 0;
+	erp->expires = default_erp->expires;
 	erp->retries = 256;
 	erp->buildclk = get_clock();
 	erp->status = DASD_CQR_FILLED;
@@ -2363,7 +2363,7 @@ static struct dasd_ccw_req *dasd_3990_er
 	erp->memdev   = device;
 	erp->block    = cqr->block;
 	erp->magic    = cqr->magic;
-	erp->expires  = 0;
+	erp->expires  = cqr->expires;
 	erp->retries  = 256;
 	erp->buildclk = get_clock();
 	erp->status = DASD_CQR_FILLED;
