From: Stefan Haberland <stefan.haberland@de.ibm.com>
Subject: dasd: Fix device having no paths after suspend/resume.
Patch-mainline: v4.1-rc1
Git-commit: df3044f1ef002c2269b11cb76a1b2bec629732b4
References: bnc#927308, LTC#123896

Description:  dasd: Fix device having no paths after suspend/resume.
Symptom:      DASD device does not have channel paths available after
              suspend resume cycle and therefor it is not responsive.
Problem:      The DASD device driver prevents I/O from being started
              on stopped devices. This also prevented channel paths to
              be verified and so the device was unable to be resumed.
Solution:     Fix by allowing path verification requests on stopped
              devices.
Reproduction: Do suspend/resume cycles and switch channel paths on and
              off.

Signed-off-by: Stefan Haberland <stefan.haberland@de.ibm.com>
Acked-by: John Jolly <jjolly@suse.de>
---
 drivers/s390/block/dasd.c |   28 ++++++++++++++++------------
 1 file changed, 16 insertions(+), 12 deletions(-)

--- a/drivers/s390/block/dasd.c
+++ b/drivers/s390/block/dasd.c
@@ -2184,18 +2184,22 @@ static int _dasd_sleep_on(struct dasd_cc
 			cqr->intrc = -ENOLINK;
 			continue;
 		}
-		/* Don't try to start requests if device is stopped */
-		if (interruptible) {
-			rc = wait_event_interruptible(
-				generic_waitq, !(device->stopped));
-			if (rc == -ERESTARTSYS) {
-				cqr->status = DASD_CQR_FAILED;
-				maincqr->intrc = rc;
-				continue;
-			}
-		} else
-			wait_event(generic_waitq, !(device->stopped));
-
+		/*
+		 * Don't try to start requests if device is stopped
+		 * except path verification requests
+		 */
+		if (!test_bit(DASD_CQR_VERIFY_PATH, &cqr->flags)) {
+			if (interruptible) {
+				rc = wait_event_interruptible(
+					generic_waitq, !(device->stopped));
+				if (rc == -ERESTARTSYS) {
+					cqr->status = DASD_CQR_FAILED;
+					maincqr->intrc = rc;
+					continue;
+				}
+			} else
+				wait_event(generic_waitq, !(device->stopped));
+		}
 		if (!cqr->callback)
 			cqr->callback = dasd_wakeup_cb;
 
