From: Eugene Crosser <Eugene.Crosser@ru.ibm.com>
Subject: iucv: fix kernel panic at reboot
Patch-mainline: v3.9-rc1
Git-commit: c0048de29d207fe3407360c28a9025891506dd6a
References: bnc#825037, LTC#93803

Description:  iucv: fix kernel panic at reboot
Symptom:      With hvc_iucv=0, orderly reboot causes kernel panic
Problem:      The iucv base layer is initialized during the registration
              of the first iucv handler.  If no handler is registered and
              the iucv_reboot_event() notifier is called, a missing check
              can cause a kernel panic in iucv_block_cpu().
Solution:     Check the IRQ masks invoke iucv_block_cpu() for enabled
              CPUs only.
Reproduction: Boot with the kernel parameter "hvc_iucv=0" and initiate
              reboot.

Signed-off-by: Eugene Crosser <Eugene.Crosser@ru.ibm.com>
Acked-by: John Jolly <jjolly@suse.de>
---
 net/iucv/iucv.c |    5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

--- a/net/iucv/iucv.c
+++ b/net/iucv/iucv.c
@@ -831,8 +831,11 @@ static int iucv_reboot_event(struct noti
 {
 	int i;
 
+	if (cpumask_empty(&iucv_irq_cpumask))
+		return NOTIFY_DONE;
+
 	get_online_cpus();
-	on_each_cpu(iucv_block_cpu, NULL, 1);
+	on_each_cpu_mask(&iucv_irq_cpumask, iucv_block_cpu, NULL, 1);
 	preempt_disable();
 	for (i = 0; i < iucv_max_pathid; i++) {
 		if (iucv_path_table[i])
