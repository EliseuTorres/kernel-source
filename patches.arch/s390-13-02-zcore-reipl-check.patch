From: Gerald Schaefer <geraldsc@de.ibm.com>
Subject: zcore: Fix reipl device detection
References: bnc#598553
Patch-mainline: Upstream submission made

Symptom:     zfcpdump fails and no kernel dump is created.
Problem:     The reipl device information is passed from the kernel to zfcpdump
             using a pointer in the lowcore (0xe00) that points to the reipl
             information. Currently if that pointer is not zero, we copy the
             reipl information. If the pointer is not initialized and points
             outside the accessible memory, it can happen that the memory copy
             fails. In that case we currently stop the initialization of zcore
             which leads to a failing kernel dump.
Solution:    Disable reipl after dump and continue with zcore intialization.

Acked-by: John Jolly <jjolly@suse.de>
---
 drivers/s390/char/zcore.c |    6 +-----
 1 file changed, 1 insertion(+), 5 deletions(-)

--- a/drivers/s390/char/zcore.c
+++ b/drivers/s390/char/zcore.c
@@ -673,11 +673,7 @@ static int __init zcore_reipl_init(void)
 		rc = memcpy_hsa_kernel(ipl_block, ipib_info.ipib, PAGE_SIZE);
 	else
 		rc = memcpy_real(ipl_block, (void *) ipib_info.ipib, PAGE_SIZE);
-	if (rc) {
-		free_page((unsigned long) ipl_block);
-		return rc;
-	}
-	if (csum_partial(ipl_block, ipl_block->hdr.len, 0) !=
+	if (rc || csum_partial(ipl_block, ipl_block->hdr.len, 0) !=
 	    ipib_info.checksum) {
 		TRACE("Checksum does not match\n");
 		free_page((unsigned long) ipl_block);
