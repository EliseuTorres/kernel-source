From: Ekaterina Tumanova <tumanova@linux.vnet.ibm.com>
Subject: s390/kernel: Update /proc/sysinfo file with Extended Name and UUID
Patch-mainline: v4.0-rc1
Git-commit: f3d0bd6c7f07d2be4b429230386d49f1b1b14f1c
References: bsc#934384,FATE#318060,LTC#VS1409

Summary:     s390/kernel: Update /proc/sysinfo with Extended Name and UUID 
Description: A new architecture extends STSI 3.2.2 with UUID and long names.
             With this patch additional data fields (Extended Name and UUID)
             are read from the 4KB block returned by the STSI 3.2.2 command
             and reflected in /proc/sysinfo file accordingly.

Upstream-Description:

             s390/kernel: Update /proc/sysinfo file with Extended Name and UUID

             A new architecture extends STSI 3.2.2 with UUID and long names. KVM
             will provide the first implementation. This patch adds the additional
             data  fields (Extended Name and UUID) from the 4KB block returned by
             the STSI 3.2.2 command and reflect this information in the
             /proc/sysinfo file accordingly.

             Signed-off-by: Ekaterina Tumanova <tumanova@linux.vnet.ibm.com>
             Reviewed-by: David Hildenbrand <dahi@linux.vnet.ibm.com>
             Reviewed-by: Cornelia Huck <cornelia.huck@de.ibm.com>
             Acked-by: Heiko Carstens <heiko.carstens@de.ibm.com>
             Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>


Signed-off-by: Ekaterina Tumanova <tumanova@linux.vnet.ibm.com>
Acked-by: John Jolly <jjolly@suse.de>
---
 arch/s390/include/asm/sysinfo.h |   10 +++++++---
 arch/s390/kernel/sysinfo.c      |   29 +++++++++++++++++++++++++++++
 2 files changed, 36 insertions(+), 3 deletions(-)

--- a/arch/s390/include/asm/sysinfo.h
+++ b/arch/s390/include/asm/sysinfo.h
@@ -15,6 +15,7 @@
 #define __ASM_S390_SYSINFO_H
 
 #include <asm/bitsperlong.h>
+#include <linux/uuid.h>
 
 struct sysinfo_1_1_1 {
 	unsigned char p:1;
@@ -116,10 +117,13 @@ struct sysinfo_3_2_2 {
 		char name[8];
 		unsigned int caf;
 		char cpi[16];
-		char reserved_1[24];
-
+		char reserved_1[3];
+		char ext_name_encoding;
+		unsigned int reserved_2;
+		uuid_be uuid;
 	} vm[8];
-	char reserved_544[3552];
+	char reserved_3[1504];
+	char ext_names[8][256];
 };
 
 extern int topology_max_mnest;
--- a/arch/s390/kernel/sysinfo.c
+++ b/arch/s390/kernel/sysinfo.c
@@ -204,6 +204,33 @@ static void stsi_2_2_2(struct seq_file *
 	}
 }
 
+static void print_ext_name(struct seq_file *m, int lvl,
+			   struct sysinfo_3_2_2 *info)
+{
+	if (info->vm[lvl].ext_name_encoding == 0)
+		return;
+	if (info->ext_names[lvl][0] == 0)
+		return;
+	switch (info->vm[lvl].ext_name_encoding) {
+	case 1: /* EBCDIC */
+		EBCASC(info->ext_names[lvl], sizeof(info->ext_names[lvl]));
+		break;
+	case 2:	/* UTF-8 */
+		break;
+	default:
+		return;
+	}
+	seq_printf(m, "VM%02d Extended Name:   %-.256s\n", lvl,
+		   info->ext_names[lvl]);
+}
+
+static void print_uuid(struct seq_file *m, int i, struct sysinfo_3_2_2 *info)
+{
+	if (!memcmp(&info->vm[i].uuid, &NULL_UUID_BE, sizeof(uuid_be)))
+		return;
+	seq_printf(m, "VM%02d UUID:            %pUb\n", i, &info->vm[i].uuid);
+}
+
 static void stsi_3_2_2(struct seq_file *m, struct sysinfo_3_2_2 *info)
 {
 	int i;
@@ -221,6 +248,8 @@ static void stsi_3_2_2(struct seq_file *
 		seq_printf(m, "VM%02d CPUs Configured: %d\n", i, info->vm[i].cpus_configured);
 		seq_printf(m, "VM%02d CPUs Standby:    %d\n", i, info->vm[i].cpus_standby);
 		seq_printf(m, "VM%02d CPUs Reserved:   %d\n", i, info->vm[i].cpus_reserved);
+		print_ext_name(m, i, info);
+		print_uuid(m, i, info);
 	}
 }
 
