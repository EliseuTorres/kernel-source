From e5d8fafe4d47af14fd292e287b2936700839a6fa Mon Sep 17 00:00:00 2001
From: Nadav Amit <namit@cs.technion.ac.il>
Date: Thu, 18 Sep 2014 22:39:37 +0300
Subject: KVM: x86: Fix wrong masking on relative jump/call
Patch-mainline: not yet
References: CVE-2014-3647 bnc#899192

Relative jumps and calls do the masking according to the operand size, and not
according to the address size as the KVM emulator does today.

This patch fixes KVM behavior.

Signed-off-by: Nadav Amit <namit@cs.technion.ac.il>
Signed-off-by: Bruce Rogers <brogers@suse.com>
---
 arch/x86/kvm/emulate.c | 19 ++++++++++++++++++-
 1 file changed, 18 insertions(+), 1 deletion(-)

diff --git a/arch/x86/kvm/emulate.c b/arch/x86/kvm/emulate.c
index f55aad3..879e155 100644
--- a/arch/x86/kvm/emulate.c
+++ b/arch/x86/kvm/emulate.c
@@ -477,9 +477,26 @@ register_address_increment(struct decode_cache *c, unsigned long *reg, int inc)
 		*reg = (*reg & ~ad_mask(c)) | ((*reg + inc) & ad_mask(c));
 }
 
+static inline void assign_eip_near(struct decode_cache *c, ulong dst)
+{
+	switch (c->ad_bytes) {
+	case 2:
+		c->eip = (u16)dst;
+		break;
+	case 4:
+		c->eip = (u32)dst;
+		break;
+	case 8:
+		c->eip = dst;
+		break;
+	default:
+		WARN(1, "unsupported eip assignment size\n");
+	}
+}
+
 static inline void jmp_rel(struct decode_cache *c, int rel)
 {
-	register_address_increment(c, &c->eip, rel);
+	assign_eip_near(c, c->eip + rel);
 }
 
 static u32 desc_limit_scaled(struct desc_struct *desc)

