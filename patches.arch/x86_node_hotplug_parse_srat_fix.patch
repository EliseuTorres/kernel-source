From: Haicheng Li <haicheng.li@linux.intel.com>
Subject: x86/mm/srat_64.c: nodes_parsed should include all nodes detected by ACPI
References: bnc#567140
Patch-Mainline: not yet, only submitted

http://lkml.org/lkml/2010/1/15/9

CC: Thomas Gleixner <tglx@linutronix.de>
CC: Ingo Molnar <mingo@redhat.com>
CC: H. Peter Anvin <hpa@zytor.com>
CC: Andi Kleen <andi@firstfloor.org>
Signed-off-by: Haicheng Li <haicheng.li@linux.intel.com>

Signed-off-by: Thomas Renninger <trenn@suse.de>
---
Index: linux-2.6.32-master/arch/x86/mm/srat_64.c
===================================================================
--- linux-2.6.32-master.orig/arch/x86/mm/srat_64.c
+++ linux-2.6.32-master/arch/x86/mm/srat_64.c
@@ -240,7 +240,7 @@ update_nodes_add(int node, unsigned long
 void __init
 acpi_numa_memory_affinity_init(struct acpi_srat_mem_affinity *ma)
 {
-	struct bootnode *nd, oldnode;
+	struct bootnode *nd;
 	unsigned long start, end;
 	int node, pxm;
 	int i;
@@ -281,7 +281,6 @@ acpi_numa_memory_affinity_init(struct ac
 		return;
 	}
 	nd = &nodes[node];
-	oldnode = *nd;
 	if (!node_test_and_set(node, nodes_parsed)) {
 		nd->start = start;
 		nd->end = end;
@@ -297,13 +296,8 @@ acpi_numa_memory_affinity_init(struct ac
 	e820_register_active_regions(node, start >> PAGE_SHIFT,
 				     end >> PAGE_SHIFT);
 
-	if (ma->flags & ACPI_SRAT_MEM_HOT_PLUGGABLE) {
+	if (ma->flags & ACPI_SRAT_MEM_HOT_PLUGGABLE)
 		update_nodes_add(node, start, end);
-		/* restore nodes[node] */
-		*nd = oldnode;
-		if ((nd->start | nd->end) == 0)
-			node_clear(node, nodes_parsed);
-	}
 
 	node_memblk_range[num_node_memblks].start = start;
 	node_memblk_range[num_node_memblks].end = end;
