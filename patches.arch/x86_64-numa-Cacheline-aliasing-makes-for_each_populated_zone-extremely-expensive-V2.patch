From: Jack Steiner <steiner@sgi.com>
Subject: x86_64 / NUMA: Cacheline aliasing makes for_each_populated_zone extremely expensive -V2.
References: bnc#632975, FATE#306952
Patch-Mainline: No

While testing on a 256 node, 4096 cpus system, Jack Steiner noticed
that we would use between 0.08% average and 0.8% max of every second
in vmstat_update.  This could be tuned using sysctl's stat_interval,
but that was simply reducing the impact of the problem.

When I investigated, I noticed that all the zone_data[] structures are
allocated precisely at the beginning of the individual node's physical
memory.  By simply staggering based upon nodeid, I reduced the average
down to 0.0006% of every second.

With this patch, the max value did not change.  I believe that is a
combination of cacheline contention updating the zone's vmstat information
combined with round_jiffies_common spattering unrelated cpus onto the same
jiffie for their next update.  I will investigate those issues seperately.

Signed-off-by: Rafael J. Wysocki <rjw@suse.de>
---
 arch/x86/mm/numa.c |    6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

Index: linux-3.0-SLE11-SP2-3.0/arch/x86/mm/numa.c
===================================================================
--- linux-3.0-SLE11-SP2-3.0.orig/arch/x86/mm/numa.c
+++ linux-3.0-SLE11-SP2-3.0/arch/x86/mm/numa.c
@@ -194,7 +194,8 @@ static void __init setup_node_data(int n
 {
 	const u64 nd_low = PFN_PHYS(MAX_DMA_PFN);
 	const u64 nd_high = PFN_PHYS(max_pfn_mapped);
-	const size_t nd_size = roundup(sizeof(pg_data_t), PAGE_SIZE);
+	const size_t cache_alias_offset = nid * SMP_CACHE_BYTES;
+	size_t nd_size = roundup(sizeof(pg_data_t) + cache_alias_offset, PAGE_SIZE);
 	bool remapped = false;
 	u64 nd_pa;
 	void *nd;
@@ -238,6 +239,9 @@ static void __init setup_node_data(int n
 		nd = __va(nd_pa);
 	}
 
+	nd += cache_alias_offset;
+	nd_pa += cache_alias_offset;
+
 	/* report and initialize */
 	printk(KERN_INFO "  NODE_DATA [%016Lx - %016Lx]%s\n",
 	       nd_pa, nd_pa + nd_size - 1, remapped ? " (remapped)" : "");
