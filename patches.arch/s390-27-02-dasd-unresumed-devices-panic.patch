From: Gerald Schaefer <geraldsc@de.ibm.com>
Subject: dasd: prevent panic with unresumed devices
References: bnc#671296,LTC#69816
Patch-mainline: Yes

Symptom:     A kernel panic may occur when an unresumed device is set offline.
Problem:     During suspend we deregister the device from alias handling and
             on resume we register it again to assure that we have the correct
             alias device combination set.
             During offline processing we also deregister devices from
             alias handling an so we may refer to structures that are
             not available at present.
Solution:    Check if the appropriate lcu structure is available. If
             it is not, skip the deregistration process since the
             device is already removed.

Acked-by: John Jolly <jjolly@suse.de>
---
 drivers/s390/block/dasd_alias.c |    6 ++++++
 1 file changed, 6 insertions(+)

--- a/drivers/s390/block/dasd_alias.c
+++ b/drivers/s390/block/dasd_alias.c
@@ -316,6 +316,9 @@ void dasd_alias_disconnect_device_from_l
 
 	private = (struct dasd_eckd_private *) device->private;
 	lcu = private->lcu;
+	/* nothing to do if already disconnected */
+	if (!lcu)
+		return;
 	spin_lock_irqsave(&lcu->lock, flags);
 	list_del_init(&device->alias_list);
 	/* make sure that the workers don't use this device */
@@ -649,6 +652,9 @@ int dasd_alias_remove_device(struct dasd
 
 	private = (struct dasd_eckd_private *) device->private;
 	lcu = private->lcu;
+	/* nothing to do if already removed */
+	if (!lcu)
+		return 0;
 	spin_lock_irqsave(&lcu->lock, flags);
 	_remove_device_from_lcu(lcu, device);
 	spin_unlock_irqrestore(&lcu->lock, flags);
