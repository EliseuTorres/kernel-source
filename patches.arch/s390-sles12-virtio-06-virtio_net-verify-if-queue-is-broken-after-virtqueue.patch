From: David Hildenbrand <dahi@linux.vnet.ibm.com>
Subject: virtio_net: verify if queue is broken after virtqueue_get_buf()
Patch-mainline: v3.13-rc1
Git-commit: 047b9b94951dba2e93c65a582ae2bce25c960b86
References: bnc#931860, LTC#VS1256

Summary:     s390/virtio: Performance enhanced paravirtualized I/O drivers
Description: This feature enhances performance of the paravirtualized I/O
             drivers on s390 with focus on virtio and virtio-ccw.

Upstream-Description:

             virtio_net: verify if queue is broken after virtqueue_get_buf()

             If a virtqueue_get_buf() call returns a NULL pointer a possibly endless while
             loop should be avoided by checking for a broken virtqueue.

             Signed-off-by: Heinz Graalfs <graalfs@linux.vnet.ibm.com>
             Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>


Signed-off-by: David Hildenbrand <dahi@linux.vnet.ibm.com>
Acked-by: John Jolly <jjolly@suse.de>
---
 drivers/net/virtio_net.c |    3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

--- a/drivers/net/virtio_net.c
+++ b/drivers/net/virtio_net.c
@@ -867,7 +867,8 @@ static bool virtnet_send_command(struct
 	/* Spin for a response, the kick causes an ioport write, trapping
 	 * into the hypervisor, so the request should be handled immediately.
 	 */
-	while (!virtqueue_get_buf(vi->cvq, &tmp))
+	while (!virtqueue_get_buf(vi->cvq, &tmp) &&
+	       !virtqueue_is_broken(vi->cvq))
 		cpu_relax();
 
 	return status == VIRTIO_NET_OK;
