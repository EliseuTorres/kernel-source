From: Martin Schwidefsky <schwidefsky@de.ibm.com>
Subject: s390: reintroduce diag 44 calls for cpu_relax()
Patch-mainline: v4.0-rc1
Git-commit: 4d92f50249eb3ed1c066276e214e8cc7be81e96d
References: bsc#934387,FATE#318041,LTC#KRN1216

Summary:     s390: add multi-threading support
Description: With this feature, the Linux kernel can make use of the
             multi-threading facility. With the multi-threading facility
             enabled a single core will surface multiple CPUs. In Linux
             terms this is called SMT or Hyperthreading support.

Upstream-Description:

             s390: reintroduce diag 44 calls for cpu_relax()

             Christian Borntraeger reported that the now missing diag 44 calls (voluntary
             time slice end) does cause a performance regression for stop_machine() calls
             if a machine has more virtual cpus than the host has physical cpus.

             This patch mainly reverts 57f2ffe14fd125c2 ("s390: remove diag 44 calls from
             cpu_relax()") with the exception that we still do not issue diag 44 calls if
             running with smt enabled. Due to group scheduling algorithms when running in
             LPAR this would lead to significant latencies.
             However, when running in LPAR we do not have more virtual than physical cpus.

             Reported-and-tested-by: Christian Borntraeger <borntraeger@de.ibm.com>
             Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
             Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>


Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
Acked-by: John Jolly <jjolly@suse.de>
---
 arch/s390/include/asm/processor.h |    5 +----
 arch/s390/kernel/processor.c      |    8 ++++++++
 2 files changed, 9 insertions(+), 4 deletions(-)

--- a/arch/s390/include/asm/processor.h
+++ b/arch/s390/include/asm/processor.h
@@ -190,10 +190,7 @@ static inline unsigned short stap(void)
 /*
  * Give up the time slice of the virtual PU.
  */
-static inline void cpu_relax(void)
-{
-	barrier();
-}
+void cpu_relax(void);
 
 #define arch_mutex_cpu_relax()  barrier()
 
--- a/arch/s390/kernel/processor.c
+++ b/arch/s390/kernel/processor.c
@@ -18,6 +18,14 @@
 
 static DEFINE_PER_CPU(struct cpuid, cpu_id);
 
+void cpu_relax(void)
+{
+	if (!smp_cpu_mtid && MACHINE_HAS_DIAG44)
+		asm volatile("diag 0,0,0x44");
+	barrier();
+}
+EXPORT_SYMBOL(cpu_relax);
+
 /*
  * cpu_init - initializes state that is per-CPU.
  */
