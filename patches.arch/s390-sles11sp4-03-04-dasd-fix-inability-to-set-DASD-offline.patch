From: Stefan Haberland <stefan.haberland@de.ibm.com>
Subject: dasd: Fix inability to set a DASD device offline.
Patch-mainline: not yet
Git-commit: -
References: bnc#927287, LTC#123905

Description:  dasd: Fix inability to set a DASD device offline.
Symptom:      DASD device can not be set offline.
Problem:      Before a worker is scheduled the DASD device driver
              takes a reference to the device. If the worker was
              already scheduled this reference was never freed.
Solution:     Fix by giving the reference to the DASD device free when
              schedule_work() returns false.
Reproduction: Set DASD device offline after channel paths where set
              online and offline multiple times.

Signed-off-by: Stefan Haberland <stefan.haberland@de.ibm.com>
Acked-by: John Jolly <jjolly@suse.de>
---
 drivers/s390/block/dasd.c      |    9 ++++++---
 drivers/s390/block/dasd_eckd.c |    3 ++-
 2 files changed, 8 insertions(+), 4 deletions(-)

--- a/drivers/s390/block/dasd.c
+++ b/drivers/s390/block/dasd.c
@@ -573,7 +573,8 @@ void dasd_kick_device(struct dasd_device
 {
 	dasd_get_device(device);
 	/* queue call to dasd_kick_device to the kernel event daemon. */
-	schedule_work(&device->kick_work);
+	if (!schedule_work(&device->kick_work))
+		dasd_put_device(device);
 }
 
 /*
@@ -592,7 +593,8 @@ void dasd_reload_device(struct dasd_devi
 {
 	dasd_get_device(device);
 	/* queue call to dasd_reload_device to the kernel event daemon. */
-	schedule_work(&device->reload_device);
+	if (!schedule_work(&device->reload_device))
+		dasd_put_device(device);
 }
 EXPORT_SYMBOL(dasd_reload_device);
 
@@ -612,7 +614,8 @@ void dasd_restore_device(struct dasd_dev
 {
 	dasd_get_device(device);
 	/* queue call to dasd_restore_device to the kernel event daemon. */
-	schedule_work(&device->restore_device);
+	if (!schedule_work(&device->restore_device))
+		dasd_put_device(device);
 }
 
 /*
--- a/drivers/s390/block/dasd_eckd.c
+++ b/drivers/s390/block/dasd_eckd.c
@@ -1597,7 +1597,8 @@ static void dasd_eckd_kick_validate_serv
 		return;
 	}
 	/* queue call to do_validate_server to the kernel event daemon. */
-	schedule_work(&device->kick_validate);
+	if (!schedule_work(&device->kick_validate))
+		dasd_put_device(device);
 }
 
 static u32 get_fcx_max_data(struct dasd_device *device)
