From: Anton Blanchard <anton@samba.org>
Date: Sun May 16 20:28:35 2010 +0000
Subject: powerpc/numa: Use ibm,architecture-vec-5 to detect form 1 affinity
Git-commit: bc8449cc57898bc9cf1ffc4619d026f77bf327c1
References: FATE#311725, bnc#695067

    I've been told that the architected way to determine we are in form 1
    affinity mode is by reading the ibm,architecture-vec-5 property which
    mirrors the layout of the fifth vector of the ibm,client-architecture
    structure.
    
    Eventually we may want to parse the ibm,architecture-vec-5 and create
    FW_FEATURE_* bits.
    
Signed-off-by: Anton Blanchard <anton@samba.org>
Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
Acked-by: Torsten Duwe <duwe@suse.de>

diff --git a/arch/powerpc/mm/numa.c b/arch/powerpc/mm/numa.c
index a6282de..0406c98 100644
--- a/arch/powerpc/mm/numa.c
+++ b/arch/powerpc/mm/numa.c
@@ -246,7 +246,8 @@ static int __init find_min_common_depth(void)
 	const unsigned int *ref_points;
 	struct device_node *rtas_root;
 	unsigned int len;
-	struct device_node *options;
+	struct device_node *chosen;
+	const char *vec5;
 
 	rtas_root = of_find_node_by_path("/rtas");
 
@@ -264,14 +265,17 @@ static int __init find_min_common_depth(void)
 			"ibm,associativity-reference-points", &len);
 
 	/*
-	 * For type 1 affinity information we want the first field
+	 * For form 1 affinity information we want the first field
 	 */
-	options = of_find_node_by_path("/options");
-	if (options) {
-		const char *str;
-		str = of_get_property(options, "ibm,associativity-form", NULL);
-		if (str && !strcmp(str, "1"))
-                        index = 0;
+#define VEC5_AFFINITY_BYTE	5
+#define VEC5_AFFINITY		0x80
+	chosen = of_find_node_by_path("/chosen");
+	if (chosen) {
+		vec5 = of_get_property(chosen, "ibm,architecture-vec-5", NULL);
+		if (vec5 && (vec5[VEC5_AFFINITY_BYTE] & VEC5_AFFINITY)) {
+			dbg("Using form 1 affinity\n");
+			index = 0;
+		}
 	}
 
 	if ((len >= 2 * sizeof(unsigned int)) && ref_points) {
