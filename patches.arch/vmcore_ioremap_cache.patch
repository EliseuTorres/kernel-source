From: Cliff Wickman <cpw@sgi.com>
Subject: x86, kdump: Change copy_oldmem_page() to use cached addressing
References: bnc#640878
Patch-Mainline: yes
Git-commit: 37a2f9f30a360fb03522d15c85c78265ccd80287
Signed-off-by: Nikanth Karthikesan <knikanth@suse.de>

commit 37a2f9f30a360fb03522d15c85c78265ccd80287
Author: Cliff Wickman <cpw@sgi.com>
Date:   Wed Sep 8 10:14:27 2010 -0500

    x86, kdump: Change copy_oldmem_page() to use cached addressing
    
    The copy of /proc/vmcore to a user buffer proceeds much faster
    if the kernel addresses memory as cached.
    
    With this patch we have seen an increase in transfer rate from
    less than 15MB/s to 80-460MB/s, depending on size of the
    transfer. This makes a big difference in time needed to save a
    system dump.
    
    Signed-off-by: Cliff Wickman <cpw@sgi.com>
    Acked-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Cc: kexec@lists.infradead.org
    Cc: <stable@kernel.org> # as far back as it would apply
    LKML-Reference: <E1OtMLz-0001yp-Ia@eag09.americas.sgi.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

---

Index: linux-2.6.32-SLE11-SP1/arch/x86/kernel/crash_dump_64.c
===================================================================
--- linux-2.6.32-SLE11-SP1.orig/arch/x86/kernel/crash_dump_64.c
+++ linux-2.6.32-SLE11-SP1/arch/x86/kernel/crash_dump_64.c
@@ -34,7 +34,7 @@ ssize_t copy_oldmem_page(unsigned long p
 	if (!csize)
 		return 0;
 
-	vaddr = ioremap(pfn << PAGE_SHIFT, PAGE_SIZE);
+	vaddr = ioremap_cache(pfn << PAGE_SHIFT, PAGE_SIZE);
 	if (!vaddr)
 		return -ENOMEM;
 
