From: Michael Neuling <mikey@neuling.org>
Subject: powerpc: only call start-cpu when a CPU is stopped
Patch-mainline: 2.6.35
References: bnc#602208

Currently we always call start-cpu irrespective of if the CPU is
stopped or not. Unfortunatley on POWER7, firmware seems to not like
start-cpu being called when a cpu already been started.  This was not
the case on POWER6 and earlier.

This patch checks to see if the CPU is stopped or not via an
query-cpu-stopped-state call, and only calls start-cpu on CPUs which
are stopped.

This fixes a bug with kexec on POWER7 on PHYP where only the primary
thread would make it to the second kernel.

Signed-off-by: Michael Neuling <mikey@neuling.org>
Acked-by: Torsten Duwe <duwe@suse.de>

--- linux-2.6.32.12-0.3.99.15.69e7ee6/arch/powerpc/platforms/pseries/smp.c	2010-05-03 19:34:21.000000000 -0500
+++ linux-2.6.32.12-0.3.99.15.69e7ee6-patch/arch/powerpc/platforms/pseries/smp.c	2010-05-03 19:25:44.000000000 -0500
@@ -104,6 +104,12 @@ static inline int __devinit smp_startup_
 
 	pcpu = get_hard_smp_processor_id(lcpu);
 
+	/* Check to see if the CPU out of FW already for kexec */
+	if (smp_query_cpu_stopped(pcpu) == QCSS_NOT_STOPPED){
+		cpu_set(lcpu, of_spin_map);
+		return 1;
+	}
+
 	/* Fixup atomic count: it exited inside IRQ handler. */
 	task_thread_info(paca[lcpu].__current)->preempt_count	= 0;
 
