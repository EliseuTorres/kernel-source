From: Mel Gorman <mgorman@suse.de>
Date: Fri, 2 Dec 2011 09:50:13 +0000
Subject: [PATCH] mm: Avoid putting a bad page back on the LRU fix
References: 415829
Patch-mainline: Never, only necessary because of patches.arch/ia64-page-migration

With commit [57fc4a5e: mm: when migrate_pages returns 0, all pages must
have been released] we can infinite loop on migrating a page with a
memory error. Fix it.

Signed-off-by: Mel Gorman <mgorman@suse.de>
---
 mm/migrate.c |    7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

--- a/mm/migrate.c
+++ b/mm/migrate.c
@@ -866,6 +866,8 @@ out:
 		 * restored.
 		 */
 		list_del(&page->lru);
+		dec_zone_page_state(page, NR_ISOLATED_ANON +
+				page_is_file_cache(page));
 		if (PageMemError(page)) {
 			if (rc == 0)
 				/*
@@ -873,7 +875,7 @@ out:
 				 * been migrated will not be moved to
 				 * the LRU.
 				 */
-				goto move_newpage;
+				goto drop_ref;
 			else
 				/*
 				 * The page failed to migrate and will not
@@ -885,10 +887,9 @@ out:
 				ClearPageMemError(page);
 		}
 
-		dec_zone_page_state(page, NR_ISOLATED_ANON +
-				page_is_file_cache(page));
 		putback_lru_page(page);
 	}
+drop_ref:
 	/*
 	 * Move the new page to the LRU. If migration was not successful
 	 * then this will free the page.
