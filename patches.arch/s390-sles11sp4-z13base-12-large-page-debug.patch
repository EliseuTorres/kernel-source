From: Martin Schwidefsky <schwidefsky@de.ibm.com>
Subject: s390: enable large page support with CONFIG_DEBUG_PAGEALLOC
Patch-mainline: v3.7-rc1
Git-commit: 648609e3f24599a5ad8d53df2ec13fbc37810bcc
References: bnc#926797, LTC#KRN1514

Summary:     s390: z13 base performance
Description: Provide the backport of a minimum set of upstream patches
             to optimize the base performance of the IBM z13 machine.

Upstream-Description:

             s390: enable large page support with CONFIG_DEBUG_PAGEALLOC

             So far, large page support was completely disabled with
             CONFIG_DEBUG_PAGEALLOC, although it would be sufficient if only the
             large page kernel mapping was disabled. This patch enables large page
             support with CONFIG_DEBUG_PAGEALLOC, while it prevents the large kernel
             mapping in that case.

             Signed-off-by: Gerald Schaefer <gerald.schaefer@de.ibm.com>
             Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>


Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
Acked-by: John Jolly <jjolly@suse.de>
---
 arch/s390/kernel/early.c |    2 --
 arch/s390/mm/vmem.c      |    2 +-
 2 files changed, 1 insertion(+), 3 deletions(-)

--- a/arch/s390/kernel/early.c
+++ b/arch/s390/kernel/early.c
@@ -269,12 +269,10 @@ static noinline __init void setup_facili
 
 static noinline __init void setup_hpage(void)
 {
-#ifndef CONFIG_DEBUG_PAGEALLOC
 	if (!test_facility(2) || !test_facility(8))
 		return;
 	S390_lowcore.machine_flags |= MACHINE_FLAG_HPAGE;
 	__ctl_set_bit(0, 23);
-#endif
 }
 
 static __init void detect_mvpg(void)
--- a/arch/s390/mm/vmem.c
+++ b/arch/s390/mm/vmem.c
@@ -109,7 +109,7 @@ static int vmem_add_mem(unsigned long st
 		pte = mk_pte_phys(address, __pgprot(ro ? _PAGE_RO : 0));
 		pm_dir = pmd_offset(pu_dir, address);
 
-#ifdef __s390x__
+#if defined(__s390x__) && !defined(CONFIG_DEBUG_PAGEALLOC)
 		if (MACHINE_HAS_HPAGE && !(address & ~HPAGE_MASK) &&
 		    (address + HPAGE_SIZE <= start + size) &&
 		    (address >= HPAGE_SIZE)) {
