From: Jack Steiner <steiner@sgi.com>
Subject: x86: SGI UV: Map low MMR ranges
References: bnc#561939, fate#306952
Patch-mainline: 2.6.33-rc1
Git-commit: 918bc960dc630b1a79c0d2991a81985812ff69f5

Explicitly mmap the UV chipset MMR address ranges used to
access blade-local registers. Although these same MMRs are also
mmaped at higher addresses, the low range is more
convenient when accessing blade-local registers.

The low range addresses always alias to the local blade
regardless of the blade id.

Signed-off-by: Jack Steiner <steiner@sgi.com>
Signed-off-by: Rafael J. Wysocki <rjw@suse.de>
---
 arch/x86/kernel/apic/x2apic_uv_x.c |    8 ++++++++
 1 file changed, 8 insertions(+)

Index: linux-2.6.32-master/arch/x86/kernel/apic/x2apic_uv_x.c
===================================================================
--- linux-2.6.32-master.orig/arch/x86/kernel/apic/x2apic_uv_x.c
+++ linux-2.6.32-master/arch/x86/kernel/apic/x2apic_uv_x.c
@@ -426,6 +426,12 @@ static __init void map_mmioh_high(int ma
 		map_high("MMIOH", mmioh.s.base, shift, max_pnode, map_uc);
 }
 
+static __init void map_low_mmrs(void)
+{
+	init_extra_mapping_uc(UV_GLOBAL_MMR32_BASE, UV_GLOBAL_MMR32_SIZE);
+	init_extra_mapping_uc(UV_LOCAL_MMR_BASE, UV_LOCAL_MMR_SIZE);
+}
+
 static __init void uv_rtc_init(void)
 {
 	long status;
@@ -567,6 +573,8 @@ void __init uv_system_init(void)
 	unsigned long mmr_base, present, paddr;
 	unsigned short pnode_mask;
 
+	map_low_mmrs();
+
 	m_n_config.v = uv_read_local_mmr(UVH_SI_ADDR_MAP_CONFIG);
 	m_val = m_n_config.s.m_skt;
 	n_val = m_n_config.s.n_skt;
