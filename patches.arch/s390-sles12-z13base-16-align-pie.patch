From: Martin Schwidefsky <schwidefsky@de.ibm.com>
Subject: s390/mm: align 64-bit PIE binaries to 4GB
Patch-mainline: v4.0-rc1
Git-commit: 4ba2815d3bf38d6a959d2d11b08cf862550dcfcc
References: bnc#929879, LTC#KRN1514

Summary:     s390: z13 base performance
Description: Provide the backport of a minimum set of upstream patches
             to optimize the base performance of the IBM z13 machine.

Upstream-Description:

             s390/mm: align 64-bit PIE binaries to 4GB

             The base address (STACK_TOP / 3 * 2) for a 64-bit program is two thirds
             into the 4GB segment at 0x2aa00000000. The randomization added on z13
             can eat another 1GB of the remaining 1.33GB to the next 4GB boundary.
             In the worst case 300MB are left for the executable + bss which may
             cross into the next 4GB segment. This is bad for branch prediction,
             therefore align the base address to 4GB to give the program more room
             before it crosses the 4GB boundary.

             Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>


Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
Acked-by: John Jolly <jjolly@suse.de>
---
 arch/s390/mm/mmap.c |    5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

--- a/arch/s390/mm/mmap.c
+++ b/arch/s390/mm/mmap.c
@@ -178,7 +178,10 @@ unsigned long randomize_et_dyn(void)
 {
 	unsigned long base;
 
-	base = (STACK_TOP / 3 * 2) & (~mmap_align_mask << PAGE_SHIFT);
+	base = STACK_TOP / 3 * 2;
+	if (!is_32bit_task())
+		/* Align to 4GB */
+		base &= ~((1UL << 32) - 1);
 	return base + mmap_rnd();
 }
 
