From: Petr Tesarik <ptesarik@suse.cz>
Subject: ia64: Merge overlapping reserved regions
Patch-mainline: 3.3
Git-commit: 76d71ebddf23e8195dd5f7889cb2844530689907
References: bnc#73149
 
Panic kernel fails early during boot on ia64, because the initial register
backing store gets overwritten with zeroes.

Further investigation revealed that rsvd_region[] contains overlapping 
entries: find_memmap_space() returns a pointer which lies between KERNEL_START 
and _end. This is correct with the EFI memmap as patched by the kexec 
purgatory code. That code removes vmlinux LOAD segments from the usable map, 
but there is a pretty large hole between the gate section and the per-cpu 
section.

With the following patch, the panic kernel can boot and save the crash dump.

Signed-off-by: Petr Tesarik <ptesarik@suse.cz>

 setup.c |   19 +++++++++++++++++++
 1 file changed, 19 insertions(+)

--- a/arch/ia64/kernel/setup.c
+++ b/arch/ia64/kernel/setup.c
@@ -225,6 +225,23 @@
 	}
 }
 
+/* merge overlaps */
+static int __init
+merge_regions (struct rsvd_region *rsvd_region, int max)
+{
+	int i;
+	for (i = 1; i < max; ++i) {
+		if (rsvd_region[i].start >= rsvd_region[i-1].end)
+			continue;
+		if (rsvd_region[i].end > rsvd_region[i-1].end)
+			rsvd_region[i-1].end = rsvd_region[i].end;
+		--max;
+		memmove(&rsvd_region[i], &rsvd_region[i+1],
+			(max - i) * sizeof(struct rsvd_region));
+	}
+	return max;
+}
+
 /*
  * Request address space for all standard resources
  */
@@ -275,6 +292,7 @@
 	if (ret == 0 && size > 0) {
 		if (!base) {
 			sort_regions(rsvd_region, *n);
+			*n = merge_regions(rsvd_region, *n);
 			base = kdump_find_rsvd_region(size,
 					rsvd_region, *n);
 		}
@@ -392,6 +410,7 @@
 	BUG_ON(IA64_MAX_RSVD_REGIONS + 1 < n);
 
 	sort_regions(rsvd_region, num_rsvd_regions);
+	num_rsvd_regions = merge_regions(rsvd_region, num_rsvd_regions);
 }
 
 
