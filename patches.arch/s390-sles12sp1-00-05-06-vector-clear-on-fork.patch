From: Martin Schwidefsky <schwidefsky@de.ibm.com>
Subject: s390/simd: clear vector register pointer on fork/clone
Patch-mainline: v3.19-rc1
Git-commit: 4b4ee3ee0beb4f39efe5eb9581f07bddc4201240
References: bsc#934391,FATE#318028,LTC#KRN1207

Summary:     s390: vector facility support
Description: With this feature, Linux user space applications will be
             able to utilize the vector extension facility.

             The vector extension facility is introduced with the z13
             processor family. The facility adds vector registers to the
             CPU and instructions to operate on the vector register.

Upstream-Description:

             s390/simd: clear vector register pointer on fork/clone

             The copy_thread function fails to reset the p->thread.vxrs pointer.
             This causes the child to use the same vector register save area,
             causing both data corruptions and multiple frees of the memory for
             the save area after the tasks sharing the save area terminate.

             Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>


Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
Acked-by: John Jolly <jjolly@suse.de>
---
 arch/s390/kernel/process.c |    1 +
 1 file changed, 1 insertion(+)

--- a/arch/s390/kernel/process.c
+++ b/arch/s390/kernel/process.c
@@ -177,6 +177,7 @@ int copy_thread(unsigned long clone_flag
 	save_fp_ctl(&p->thread.fp_regs.fpc);
 	save_fp_regs(p->thread.fp_regs.fprs);
 	p->thread.fp_regs.pad = 0;
+	p->thread.vxrs = NULL;
 	/* Set a new TLS ?  */
 	if (clone_flags & CLONE_SETTLS) {
 		unsigned long tls = frame->childregs.gprs[6];
