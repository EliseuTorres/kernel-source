From: Eugene Crosser <Eugene.Crosser@ru.ibm.com>
Subject: af_iucv: fix AF_IUCV sendmsg() errno
Patch-mainline: v4.0-rc7
Git-commit: ed4ac4221776a5103faf71a4032ca00178d6e66b
References: bnc#927287, LTC#123304

Description:  af_iucv: fix AF_IUCV sendmsg() errno
Symptom:      When data is sent over AF_IUCV socket faster than the peer can
              accept it, sendmsg() eventually starts returning -1 with
              errno=ENOMEM, while the correct behavior is errno=EAGAIN.
Problem:      When sending over AF_IUCV socket, errno was incorrectly set to
              ENOMEM even when other values where appropriate, notably EAGAIN.
Solution:     With this patch, error indicator returned by
              sock_alloc_send_skb() is passed to the caller, rather than being
              overwritten with ENOMEM.
Reproduction: Use a program that sends data over AF_IUCV socket without
              waiting for response. Make the receiving program stop receiving,
              e.g. by halting it with SIGSTOP or under gdb. Observe errors
              on the sending side.

Signed-off-by: Eugene Crosser <Eugene.Crosser@ru.ibm.com>
Acked-by: John Jolly <jjolly@suse.de>
---
 net/iucv/af_iucv.c |    4 +---
 1 file changed, 1 insertion(+), 3 deletions(-)

--- a/net/iucv/af_iucv.c
+++ b/net/iucv/af_iucv.c
@@ -1139,10 +1139,8 @@ static int iucv_sock_sendmsg(struct kioc
 			noblock, &err);
 	else
 		skb = sock_alloc_send_skb(sk, len, noblock, &err);
-	if (!skb) {
-		err = -ENOMEM;
+	if (!skb)
 		goto out;
-	}
 	if (iucv->transport == AF_IUCV_TRANS_HIPER)
 		skb_reserve(skb, sizeof(struct af_iucv_trans_hdr) + ETH_HLEN);
 	if (memcpy_fromiovec(skb_put(skb, len), msg->msg_iov, len)) {
