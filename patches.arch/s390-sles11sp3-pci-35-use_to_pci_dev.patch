From: Sebastian Ott <sebott@linux.vnet.ibm.com>
Subject: s390/pci: use to_pci_dev
Patch-mainline: v3.11-rc1
Git-commit: 9294896e974eec9630cf9f81eb9a38d3869db105
References: bnc#848335,FATE#83037,LTC#94737

Use the to_pci_dev macro to fetch a pci_dev from a struct device
pointer.

Reviewed-by: Gerald Schaefer <gerald.schaefer@de.ibm.com>
Signed-off-by: Sebastian Ott <sebott@linux.vnet.ibm.com>
Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
Acked-by: John Jolly <jjolly@suse.de>
---
 arch/s390/pci/pci_dma.c   |    6 +++---
 arch/s390/pci/pci_sysfs.c |    8 ++++----
 2 files changed, 7 insertions(+), 7 deletions(-)

--- a/arch/s390/pci/pci_dma.c
+++ b/arch/s390/pci/pci_dma.c
@@ -261,7 +261,7 @@ static dma_addr_t s390_dma_map_pages(str
 				     enum dma_data_direction direction,
 				     struct dma_attrs *attrs)
 {
-	struct zpci_dev *zdev = get_zdev(container_of(dev, struct pci_dev, dev));
+	struct zpci_dev *zdev = get_zdev(to_pci_dev(dev));
 	unsigned long nr_pages, iommu_page_index;
 	unsigned long pa = page_to_phys(page) + offset;
 	int flags = ZPCI_PTE_VALID;
@@ -302,7 +302,7 @@ static void s390_dma_unmap_pages(struct
 				 size_t size, enum dma_data_direction direction,
 				 struct dma_attrs *attrs)
 {
-	struct zpci_dev *zdev = get_zdev(container_of(dev, struct pci_dev, dev));
+	struct zpci_dev *zdev = get_zdev(to_pci_dev(dev));
 	unsigned long iommu_page_index;
 	int npages;
 
@@ -320,7 +320,7 @@ static void s390_dma_unmap_pages(struct
 static void *s390_dma_alloc(struct device *dev, size_t size,
 			    dma_addr_t *dma_handle, gfp_t flag)
 {
-	struct zpci_dev *zdev = get_zdev(container_of(dev, struct pci_dev, dev));
+	struct zpci_dev *zdev = get_zdev(to_pci_dev(dev));
 	struct page *page;
 	unsigned long pa;
 	dma_addr_t map;
--- a/arch/s390/pci/pci_sysfs.c
+++ b/arch/s390/pci/pci_sysfs.c
@@ -15,7 +15,7 @@
 static ssize_t show_fid(struct device *dev, struct device_attribute *attr,
 			char *buf)
 {
-	struct zpci_dev *zdev = get_zdev(container_of(dev, struct pci_dev, dev));
+	struct zpci_dev *zdev = get_zdev(to_pci_dev(dev));
 
 	sprintf(buf, "0x%08x\n", zdev->fid);
 	return strlen(buf);
@@ -25,7 +25,7 @@ static DEVICE_ATTR(function_id, S_IRUGO,
 static ssize_t show_fh(struct device *dev, struct device_attribute *attr,
 		       char *buf)
 {
-	struct zpci_dev *zdev = get_zdev(container_of(dev, struct pci_dev, dev));
+	struct zpci_dev *zdev = get_zdev(to_pci_dev(dev));
 
 	sprintf(buf, "0x%08x\n", zdev->fh);
 	return strlen(buf);
@@ -35,7 +35,7 @@ static DEVICE_ATTR(function_handle, S_IR
 static ssize_t show_pchid(struct device *dev, struct device_attribute *attr,
 			  char *buf)
 {
-	struct zpci_dev *zdev = get_zdev(container_of(dev, struct pci_dev, dev));
+	struct zpci_dev *zdev = get_zdev(to_pci_dev(dev));
 
 	sprintf(buf, "0x%04x\n", zdev->pchid);
 	return strlen(buf);
@@ -45,7 +45,7 @@ static DEVICE_ATTR(pchid, S_IRUGO, show_
 static ssize_t show_pfgid(struct device *dev, struct device_attribute *attr,
 			  char *buf)
 {
-	struct zpci_dev *zdev = get_zdev(container_of(dev, struct pci_dev, dev));
+	struct zpci_dev *zdev = get_zdev(to_pci_dev(dev));
 
 	sprintf(buf, "0x%02x\n", zdev->pfgid);
 	return strlen(buf);
