From: Alexander Graf <agraf@suse.de>
Date: Mon, 23 Aug 2010 16:22:28 +0200
Subject: [PATCH 1/2] S390: take a full byte as ext_param indicator
Git-commit: fc678d67fee1acccf21322318dd833b892a572e4
References: bnc#671274
Patch-mainline: v2.6.37-rc1

Currenty the ext_param field only distinguishes between "config change" and
"vring interrupt". We can do a lot more with it though, so let's enable a
full byte of possible values and constants to #defines while at it.

Signed-off-by: Alexander Graf <agraf@suse.de>
Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>

---
 arch/s390/include/asm/kvm_virtio.h |    6 ++++++
 drivers/s390/kvm/kvm_virtio.c      |   19 +++++++++++++------
 2 files changed, 19 insertions(+), 6 deletions(-)

Index: linux-2.6.32-SLE11-SP1/arch/s390/include/asm/kvm_virtio.h
===================================================================
--- linux-2.6.32-SLE11-SP1.orig/arch/s390/include/asm/kvm_virtio.h
+++ linux-2.6.32-SLE11-SP1/arch/s390/include/asm/kvm_virtio.h
@@ -54,4 +54,10 @@ struct kvm_vqconfig {
  * This is pagesize for historical reasons. */
 #define KVM_S390_VIRTIO_RING_ALIGN	4096
 
+
+/* These values are supposed to be in ext_params on an interrupt */
+#define VIRTIO_PARAM_MASK		0xff
+#define VIRTIO_PARAM_VRING_INTERRUPT	0x0
+#define VIRTIO_PARAM_CONFIG_CHANGED	0x1
+
 #endif
Index: linux-2.6.32-SLE11-SP1/drivers/s390/kvm/kvm_virtio.c
===================================================================
--- linux-2.6.32-SLE11-SP1.orig/drivers/s390/kvm/kvm_virtio.c
+++ linux-2.6.32-SLE11-SP1/drivers/s390/kvm/kvm_virtio.c
@@ -333,7 +333,7 @@ static void kvm_extint_handler(u16 code)
 {
 	struct virtqueue *vq;
 	u16 subcode;
-	int config_changed;
+	u32 param;
 
 	subcode = S390_lowcore.cpu_addr;
 	if ((subcode & 0xff00) != VIRTIO_SUBCODE_64)
@@ -342,18 +342,25 @@ static void kvm_extint_handler(u16 code)
 	/* The LSB might be overloaded, we have to mask it */
 	vq = (struct virtqueue *) ((*(long *) __LC_PFAULT_INTPARM) & ~1UL);
 
-	/* We use the LSB of extparam, to decide, if this interrupt is a config
-	 * change or a "standard" interrupt */
-	config_changed =  (*(int *)  __LC_EXT_PARAMS & 1);
+	/* We use ext_params to decide what this interrupt means */
+	param = (*(int *)  __LC_EXT_PARAMS) & VIRTIO_PARAM_MASK;
 
-	if (config_changed) {
+	switch (param) {
+	case VIRTIO_PARAM_CONFIG_CHANGED:
+	{
 		struct virtio_driver *drv;
 		drv = container_of(vq->vdev->dev.driver,
 				   struct virtio_driver, driver);
 		if (drv->config_changed)
 			drv->config_changed(vq->vdev);
-	} else
+
+		break;
+	}
+	case VIRTIO_PARAM_VRING_INTERRUPT:
+	default:
 		vring_interrupt(0, vq);
+		break;
+	}
 }
 
 /*
