From: Cliff Wickman <cpw@sgi.com>
Subject: x86, UV: Correct failed topology memory leak
Patch-mainline: Yes
Git-commit: bbd270e6f45a5ca30e1d3b6133c516a9dc9dd6c0
References: bnc#743212

Fix a memory leak in init_per_cpu() when the topology checks fail.

The leak should never occur in practice.  It would only occur in an
unexpected topology that would make the BAU unuseable as a result.  

Diffed against 3.0.0-rc3

Signed-off-by: Cliff Wickman <cpw@sgi.com>
Signed-off-by: Rafael J. Wysocki <rjw@suse.de>
---
 arch/x86/platform/uv/tlb_uv.c |    9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

Index: linux-3.0-SLE11-SP2/arch/x86/platform/uv/tlb_uv.c
===================================================================
--- linux-3.0-SLE11-SP2.orig/arch/x86/platform/uv/tlb_uv.c
+++ linux-3.0-SLE11-SP2/arch/x86/platform/uv/tlb_uv.c
@@ -1794,15 +1794,20 @@ static int __init init_per_cpu(int nuvhu
 	uvhub_mask = kzalloc((nuvhubs+7)/8, GFP_KERNEL);
 
 	if (get_cpu_topology(base_part_pnode, uvhub_descs, uvhub_mask))
-		return 1;
+		goto fail;
 
 	if (summarize_uvhub_sockets(nuvhubs, uvhub_descs, uvhub_mask))
-		return 1;
+		goto fail;
 
 	kfree(uvhub_descs);
 	kfree(uvhub_mask);
 	init_per_cpu_tunables();
 	return 0;
+
+fail:
+	kfree(uvhub_descs);
+	kfree(uvhub_mask);
+	return 1;
 }
 
 /*
