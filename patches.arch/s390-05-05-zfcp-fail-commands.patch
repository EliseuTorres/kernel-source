Subject: zfcp: Don't fail SCSI commands when transitioning to blocked fc_rport
References: BNC#565612,LTC#58541
From: Gerald Schaefer <geraldsc@de.ibm.com>

Symptom: After adapter shutdown, the SCSI midlayer error recovery
             tries to recover failed commands, this fails and leads to
             offlined SCSI devices.
Problem: With the delay between calling scsi_done in softirq
             context and the call to fc_remote_port_delete from the
             workqueue, there is a window where zfcp returns DID_ERROR
             which leads to SCSI error recovery which then leads to
             offline SCSI devices since all recovery actions will fail
             with the rport now being blocked.
Solution: In this window, return DID_IMM_RETRY just as the FC
             transport class would do in fc_remote_port_chkready for
             the blocked fc_rport. As soon as the fc_rport is BLOCKED,
             fc_remote_port_chkready will do the right thing.
Acked-by: John Jolly <jjolly@suse.de>

---

 drivers/s390/scsi/zfcp_scsi.c |   18 ++++++++++++++++--
 1 file changed, 16 insertions(+), 2 deletions(-)

--- a/drivers/s390/scsi/zfcp_scsi.c	2009-12-09 15:59:07.000000000 +0100
+++ b/drivers/s390/scsi/zfcp_scsi.c	2009-12-09 15:59:10.000000000 +0100
@@ -99,12 +99,26 @@ static int zfcp_scsi_queuecommand(struct
 	}
 
 	status = atomic_read(&unit->status);
-	if (unlikely((status & ZFCP_STATUS_COMMON_ERP_FAILED) ||
-		     !(status & ZFCP_STATUS_COMMON_RUNNING))) {
+	if (unlikely(status & ZFCP_STATUS_COMMON_ERP_FAILED) &&
+		     !(atomic_read(&unit->port->status) &
+		       ZFCP_STATUS_COMMON_ERP_FAILED)) {
+		/* only unit access denied, but port is good
+		 * not covered by FC transport, have to fail here */
 		zfcp_scsi_command_fail(scpnt, DID_ERROR);
 		return 0;
 	}
 
+	if (unlikely(!(status & ZFCP_STATUS_COMMON_UNBLOCKED))) {
+		/* This could be either
+		 * open unit pending: this is temporary, will result in
+		 * 	open unit or ERP_FAILED, so retry command
+		 * call to rport_delete pending: mimic retry from
+		 * 	fc_remote_port_chkready until rport is BLOCKED
+		 */
+		zfcp_scsi_command_fail(scpnt, DID_IMM_RETRY);
+		return 0;
+	}
+
 	ret = zfcp_fsf_send_fcp_command_task(unit, scpnt);
 	if (unlikely(ret == -EBUSY))
 		return SCSI_MLQUEUE_DEVICE_BUSY;
