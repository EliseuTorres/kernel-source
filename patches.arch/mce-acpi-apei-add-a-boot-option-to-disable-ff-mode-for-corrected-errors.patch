From: "Naveen N. Rao" <naveen.n.rao@linux.vnet.ibm.com>
Date: Mon, 1 Jul 2013 21:08:54 +0530
Subject: mce: acpi/apei: Add a boot option to disable ff mode for corrected
 errors
Git-commit: 9ad95879cd1b22ed016c804f8d686ff83a41a9d4
Patch-mainline: v3.12-rc1
References: fate#317438

Add a boot option to disable firmware first mode for corrected errors.

Signed-off-by: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
Acked-by: Borislav Petkov <bp@suse.de>
Signed-off-by: Tony Luck <tony.luck@intel.com>
---
 Documentation/x86/x86_64/boot-options.txt | 5 +++++
 arch/x86/include/asm/acpi.h               | 2 ++
 arch/x86/kernel/acpi/boot.c               | 5 +++++
 drivers/acpi/apei/hest.c                  | 3 ++-
 4 files changed, 14 insertions(+), 1 deletion(-)

Index: kernel/Documentation/x86/x86_64/boot-options.txt
===================================================================
--- kernel.orig/Documentation/x86/x86_64/boot-options.txt	2014-11-14 16:24:01.664365224 +0100
+++ kernel/Documentation/x86/x86_64/boot-options.txt	2014-11-25 15:27:57.856393170 +0100
@@ -194,6 +194,11 @@ ACPI
 
   acpi=noirq	Don't route interrupts
 
+  acpi=nocmcff	Disable firmware first mode for corrected errors. This
+		disables parsing the HEST CMC error source to check if
+		firmware has set the FF flag. This may result in
+		duplicate corrected error reports.
+
 PCI
 
   pci=off		Don't use PCI
Index: kernel/arch/x86/include/asm/acpi.h
===================================================================
--- kernel.orig/arch/x86/include/asm/acpi.h	2014-11-14 16:30:42.228358235 +0100
+++ kernel/arch/x86/include/asm/acpi.h	2014-11-25 15:27:57.856393170 +0100
@@ -94,6 +94,7 @@ extern int acpi_pci_disabled;
 extern int acpi_skip_timer_override;
 extern int acpi_use_timer_override;
 extern int acpi_fix_pin2_polarity;
+extern int acpi_disable_cmcff;
 
 extern u8 acpi_sci_flags;
 extern int acpi_sci_override_gsi;
@@ -205,6 +206,7 @@ static inline void arch_acpi_set_pdc_bit
 
 #define acpi_lapic 0
 #define acpi_ioapic 0
+#define acpi_disable_cmcff 0
 static inline void acpi_noirq_set(void) { }
 static inline void acpi_disable_pci(void) { }
 static inline void disable_acpi(void) { }
Index: kernel/arch/x86/kernel/acpi/boot.c
===================================================================
--- kernel.orig/arch/x86/kernel/acpi/boot.c	2014-11-14 16:24:09.360365090 +0100
+++ kernel/arch/x86/kernel/acpi/boot.c	2014-11-25 15:27:57.856393170 +0100
@@ -67,6 +67,7 @@ EXPORT_SYMBOL(acpi_pci_disabled);
 int acpi_lapic;
 int acpi_ioapic;
 int acpi_strict;
+int acpi_disable_cmcff;
 
 u8 acpi_sci_flags __initdata;
 int acpi_sci_override_gsi __initdata;
@@ -1667,6 +1668,10 @@ static int __init parse_acpi(char *arg)
 	/* "acpi=copy_dsdt" copys DSDT */
 	else if (strcmp(arg, "copy_dsdt") == 0) {
 		acpi_gbl_copy_dsdt_locally = 1;
+	}
+	/* "acpi=nocmcff" disables FF mode for corrected errors */
+	else if (strcmp(arg, "nocmcff") == 0) {
+		acpi_disable_cmcff = 1;
 	} else {
 		/* Core will printk when we return error. */
 		return -EINVAL;
Index: kernel/drivers/acpi/apei/hest.c
===================================================================
--- kernel.orig/drivers/acpi/apei/hest.c	2014-11-25 13:50:01.064403572 +0100
+++ kernel/drivers/acpi/apei/hest.c	2014-11-25 15:27:57.856393170 +0100
@@ -265,7 +265,8 @@ void __init acpi_hest_init(void)
 		goto err;
 	}
 
-	apei_hest_parse(hest_parse_cmc, NULL);
+	if (!acpi_disable_cmcff)
+		apei_hest_parse(hest_parse_cmc, NULL);
 
 	if (!ghes_disable) {
 		rc = apei_hest_parse(hest_parse_ghes_count, &ghes_count);
