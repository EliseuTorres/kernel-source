From: Jan Glauber <jang@linux.vnet.ibm.com>
Subject: s390/pci: no msleep in potential IRQ context
Patch-mainline: v3.8-rc1
Git-commit: c59b9f92653f102856ca7802af551788c143a3a3
References: bnc#848335,FATE#83037,LTC#94737

The PCI instructions may be used in IRQ context so scheduling is forbidden.
Use udelay and shorten the delay since we are now polling.

Signed-off-by: Jan Glauber <jang@linux.vnet.ibm.com>
Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
Acked-by: John Jolly <jjolly@suse.de>
---
 arch/s390/include/asm/pci_insn.h |   10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

--- a/arch/s390/include/asm/pci_insn.h
+++ b/arch/s390/include/asm/pci_insn.h
@@ -3,7 +3,7 @@
 
 #include <linux/delay.h>
 
-#define ZPCI_INSN_BUSY_DELAY	1	/* 1 millisecond */
+#define ZPCI_INSN_BUSY_DELAY	1	/* 1 microsecond */
 
 /* Load/Store status codes */
 #define ZPCI_PCI_ST_FUNC_NOT_ENABLED		4
@@ -138,7 +138,7 @@ static inline int rpcit_instr(u64 fn, u6
 	do {
 		cc = __rpcit(fn, addr, range, &status);
 		if (cc == 2)
-			msleep(ZPCI_INSN_BUSY_DELAY);
+			udelay(ZPCI_INSN_BUSY_DELAY);
 	} while (cc == 2);
 
 	if (cc)
@@ -198,7 +198,7 @@ static inline int pcilg_instr(u64 *data,
 	do {
 		cc = __pcilg(data, req, offset, &status);
 		if (cc == 2)
-			msleep(ZPCI_INSN_BUSY_DELAY);
+			udelay(ZPCI_INSN_BUSY_DELAY);
 	} while (cc == 2);
 
 	if (cc) {
@@ -236,7 +236,7 @@ static inline int pcistg_instr(u64 data,
 	do {
 		cc = __pcistg(data, req, offset, &status);
 		if (cc == 2)
-			msleep(ZPCI_INSN_BUSY_DELAY);
+			udelay(ZPCI_INSN_BUSY_DELAY);
 	} while (cc == 2);
 
 	if (cc)
@@ -268,7 +268,7 @@ static inline int pcistb_instr(const u64
 	do {
 		cc = __pcistb(data, req, offset, &status);
 		if (cc == 2)
-			msleep(ZPCI_INSN_BUSY_DELAY);
+			udelay(ZPCI_INSN_BUSY_DELAY);
 	} while (cc == 2);
 
 	if (cc)
