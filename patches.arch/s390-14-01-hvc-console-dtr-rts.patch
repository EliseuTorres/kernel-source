From: Hendrik Brueckner <brueckner@linux.vnet.ibm.com>
Subject: [PATCH] [BZ 97595] tty/hvc_console: Add DTR/RTS callback to handle HUPCL control
Patch-mainline: v3.12-rc1
GIT-commit: 33e745a192c272130b02b86d5dea5b577a291ed7
References: bnc#839973,LTC#97595

Description:  hvc_iucv: iucvconn disconnects after entering a user name
Symptom:      When iucvconn is connected to a HVC terminal device, a
              disconnect occurs after entering the user name.
Problem:      The problem is caused getty or login programs that close
              all file descriptors before calling vhangup().
              The hvc_console which manages the TTY open/close for HVC
              terminal devices does not notify its back-ends to hold
              the network connection up.  Because all file descriptors are
              closed, the hvc_iucv device driver disconnects the established
              terminal connection.
              This problem occurs in combination with recent login or
              getty programs that changed the vhangup() behavior as
              outlined in https://lkml.org/lkml/2012/6/5/145
Solution:     To solve this problem, add RTS/DTR notifications to the
              hvc_console layer to inform HVC back-ends to keep connections
              established even if all file descriptors are closed.  This is
              controlled by the hangup-on-close (HUPCL) termios setting.
              This notification requires a change in the hvc_console layer,
              as well as, a change in the hvc_iucv device driver.
Reproduction: 1. Pre-req is a login or getty program that closes all
                 file descriptors before calling vhangup().  This login
                 program must be installed on the target system.
              2. Use iucvconn to connect to a HVC terminal device on that
                 target system.
              3. After entering the user name, a disconnect occurs.
Upstream-ID:  33e745a192c272130b02b86d5dea5b577a291ed7
Problem-ID:   97595

Upstream-Description:
              commit 33e745a192c272130b02b86d5dea5b577a291ed7
              Author: Hendrik Brueckner <brueckner@linux.vnet.ibm.com>
              Date:   Tue Jul 2 17:07:14 2013 +0200

                  tty/hvc_console: Add DTR/RTS callback to handle HUPCL control

                  Introduce a new callback to explicitly handle the HUPCL termios control flag.
                  This prepares for a follow-up commit for the hvc_iucv device driver to
                  improve handling when to drop an established network connection.

                  The callback naming is based on the recently added tty_port interface to
                  facilitate a potential refactoring of the hvc_console to use tty_port
                  functions.

                  Signed-off-by: Hendrik Brueckner <brueckner@linux.vnet.ibm.com>
                  Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>


Signed-off-by: Hendrik Brueckner <brueckner@linux.vnet.ibm.com>
Acked-by: John Jolly <jjolly@suse.de>
---
 drivers/tty/hvc/hvc_console.c |   11 ++++++++++-
 drivers/tty/hvc/hvc_console.h |    3 +++
 2 files changed, 13 insertions(+), 1 deletion(-)

--- a/drivers/tty/hvc/hvc_console.c
+++ b/drivers/tty/hvc/hvc_console.c
@@ -344,7 +344,12 @@ static int hvc_open(struct tty_struct *t
 		tty->driver_data = NULL;
 		kref_put(&hp->kref, destroy_hvc_struct);
 		printk(KERN_ERR "hvc_open: request_irq failed with rc %d.\n", rc);
-	}
+	} else
+		/* We are ready... raise DTR/RTS */
+		if (C_BAUD(tty))
+			if (hp->ops->dtr_rts)
+				hp->ops->dtr_rts(hp, 1);
+
 	/* Force wakeup of the polling thread */
 	hvc_kick();
 
@@ -376,6 +381,10 @@ static void hvc_close(struct tty_struct
 		hp->tty = NULL;
 		spin_unlock_irqrestore(&hp->lock, flags);
 
+		if (C_HUPCL(tty))
+			if (hp->ops->dtr_rts)
+				hp->ops->dtr_rts(hp, 0);
+
 		if (hp->ops->notifier_del)
 			hp->ops->notifier_del(hp, hp->data);
 
--- a/drivers/tty/hvc/hvc_console.h
+++ b/drivers/tty/hvc/hvc_console.h
@@ -73,6 +73,9 @@ struct hv_ops {
 	int (*notifier_add)(struct hvc_struct *hp, int irq);
 	void (*notifier_del)(struct hvc_struct *hp, int irq);
 	void (*notifier_hangup)(struct hvc_struct *hp, int irq);
+
+	/* Callbacks to handle tty ports */
+	void (*dtr_rts)(struct hvc_struct *hp, int raise);
 };
 
 /* Register a vterm and a slot index for use as a console (console_init) */
