From: Frank Blaschka <frank.blaschka@de.ibm.com>
Subject: qeth: l3 add large_send and checksumming sysfs attributes again
Patch-mainline: never
References: bnc#718149

From: Frank Blaschka <frank.blaschka@de.ibm.com>

Since kernel 3.0.0 large_send and checksumming attributes are not present in
sysfs anymore. This causes distro. configuration mechanism like udev rules and
yast to fail. This patch adds the attributes again. The patch will not go
upstream. SuSE agreed to change yast and udev with next distro and use common
ethtool interface.

Note, this is ONLY needed for SLE11, for SLE12, we will have fixed up our
userspace code to be sane and work properly for all network interfaces instead
of relying on non-standard sysfs files for these s390 devices.

Signed-off-by: Frank Blaschka <frank.blaschka@de.ibm.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
---
 drivers/s390/net/qeth_core.h    |    2 
 drivers/s390/net/qeth_l3_main.c |    8 ++
 drivers/s390/net/qeth_l3_sys.c  |  140 ++++++++++++++++++++++++++++++++++++++++
 3 files changed, 149 insertions(+), 1 deletion(-)

--- a/drivers/s390/net/qeth_core.h
+++ b/drivers/s390/net/qeth_core.h
@@ -677,6 +677,8 @@ struct qeth_card_options {
 	struct qeth_ipa_info adp; /*Adapter parameters*/
 	struct qeth_routing_info route6;
 	struct qeth_ipa_info ipa6;
+	int rxcsum;
+	int tso;
 	int broadcast_mode;
 	int macaddr_mode;
 	int fake_broadcast;
--- a/drivers/s390/net/qeth_l3_main.c
+++ b/drivers/s390/net/qeth_l3_main.c
@@ -3324,7 +3324,11 @@ static int qeth_l3_setup_netdev(struct q
 				card->dev->hw_features = NETIF_F_SG |
 					NETIF_F_RXCSUM | NETIF_F_IP_CSUM |
 					NETIF_F_TSO;
-				card->dev->features = NETIF_F_RXCSUM;
+				if (card->options.rxcsum)
+					card->dev->features |= NETIF_F_RXCSUM;
+				if (card->options.tso)
+					card->dev->features |= NETIF_F_TSO |
+						NETIF_F_IP_CSUM | NETIF_F_SG;
 			}
 		}
 	} else if (card->info.type == QETH_CARD_TYPE_IQD) {
@@ -3360,6 +3364,8 @@ static int qeth_l3_probe_device(struct c
 
 	qeth_l3_create_device_attributes(&gdev->dev);
 	card->options.layer2 = 0;
+	card->options.rxcsum = 1;
+	card->options.tso = 0;
 	card->info.hwtrap = 0;
 	card->discipline.start_poll = qeth_qdio_start_poll;
 	card->discipline.input_handler = (qdio_handler_t *)
--- a/drivers/s390/net/qeth_l3_sys.c
+++ b/drivers/s390/net/qeth_l3_sys.c
@@ -285,6 +285,77 @@ out:
 static DEVICE_ATTR(canonical_macaddr, 0644, qeth_l3_dev_canonical_macaddr_show,
 		   qeth_l3_dev_canonical_macaddr_store);
 
+static ssize_t qeth_l3_dev_checksum_show(struct device *dev,
+			struct device_attribute *attr, char *buf)
+{
+	struct qeth_card *card = dev_get_drvdata(dev);
+	char sw[] = "sw checksumming\n";
+	char hw[] = "hw checksumming\n";
+	char *res;
+
+	if (!card)
+		return -EINVAL;
+
+	if (card->dev) {
+		if (card->dev->features & NETIF_F_RXCSUM)
+			res = hw;
+		else
+			res = sw;
+	} else {
+		if (card->options.rxcsum)
+			res = hw;
+		else
+			res = sw;
+	}
+	return sprintf(buf, res);
+}
+
+static ssize_t qeth_l3_dev_checksum_store(struct device *dev,
+		struct device_attribute *attr, const char *buf, size_t count)
+{
+	struct qeth_card *card = dev_get_drvdata(dev);
+	char *tmp;
+	int rc = 0;
+
+	if (!card)
+		return -EINVAL;
+
+	mutex_lock(&card->conf_mutex);
+	if ((card->state != CARD_STATE_DOWN) &&
+	    (card->state != CARD_STATE_RECOVER)) {
+		rc = -EPERM;
+		goto out;
+	}
+
+	tmp = strsep((char **) &buf, "\n");
+	if (!strcmp(tmp, "sw_checksumming")) {
+		if (!card->dev)
+			card->options.rxcsum = 0;
+		else {
+			rtnl_lock();
+			card->dev->wanted_features &= ~NETIF_F_RXCSUM;
+			netdev_update_features(card->dev);
+			rtnl_unlock();
+		}
+	} else if (!strcmp(tmp, "hw_checksumming")) {
+		if (!card->dev)
+			card->options.rxcsum = 1;
+		else {
+			rtnl_lock();
+			card->dev->wanted_features |= NETIF_F_RXCSUM;
+			netdev_update_features(card->dev);
+			rtnl_unlock();
+		}
+	} else
+		rc = -EINVAL;
+out:
+	mutex_unlock(&card->conf_mutex);
+	return rc ? rc : count;
+}
+
+static DEVICE_ATTR(checksumming, 0644, qeth_l3_dev_checksum_show,
+		qeth_l3_dev_checksum_store);
+
 static ssize_t qeth_l3_dev_sniffer_show(struct device *dev,
 		struct device_attribute *attr, char *buf)
 {
@@ -349,6 +420,73 @@ out:
 static DEVICE_ATTR(sniffer, 0644, qeth_l3_dev_sniffer_show,
 		qeth_l3_dev_sniffer_store);
 
+static ssize_t qeth_l3_dev_large_send_show(struct device *dev,
+				struct device_attribute *attr, char *buf)
+{
+	struct qeth_card *card = dev_get_drvdata(dev);
+	char tso[] = "TSO\n";
+	char no[] = "no\n";
+	char *res;
+
+	if (!card)
+		return -EINVAL;
+
+	if (card->dev) {
+		if (card->dev->features & NETIF_F_TSO)
+			res = tso;
+		else
+			res = no;
+	} else {
+		if (card->options.tso)
+			res = tso;
+		else
+			res = no;
+
+	}
+	return sprintf(buf, res);
+}
+
+static ssize_t qeth_l3_dev_large_send_store(struct device *dev,
+		struct device_attribute *attr, const char *buf, size_t count)
+{
+	struct qeth_card *card = dev_get_drvdata(dev);
+	int rc = 0;
+	char *tmp;
+
+	if (!card)
+		return -EINVAL;
+
+	mutex_lock(&card->conf_mutex);
+	tmp = strsep((char **) &buf, "\n");
+	if (!strcmp(tmp, "no")) {
+		if (!card->dev)
+			card->options.tso = 0;
+		else {
+			rtnl_lock();
+			card->dev->wanted_features &= ~(NETIF_F_TSO |
+				NETIF_F_SG | NETIF_F_IP_CSUM);
+			netdev_update_features(card->dev);
+			rtnl_unlock();
+		}
+	} else if (!strcmp(tmp, "TSO")) {
+		if (!card->dev)
+			card->options.tso = 1;
+		else {
+			rtnl_lock();
+			card->dev->wanted_features |= (NETIF_F_TSO |
+				NETIF_F_SG | NETIF_F_IP_CSUM);
+			netdev_update_features(card->dev);
+			rtnl_unlock();
+		}
+	} else
+		rc = -EINVAL;
+
+	mutex_unlock(&card->conf_mutex);
+	return rc ? rc : count;
+}
+
+static DEVICE_ATTR(large_send, 0644, qeth_l3_dev_large_send_show,
+		   qeth_l3_dev_large_send_store);
 
 static ssize_t qeth_l3_dev_hsuid_show(struct device *dev,
 		struct device_attribute *attr, char *buf)
@@ -460,7 +598,9 @@ static struct attribute *qeth_l3_device_
 	&dev_attr_fake_broadcast.attr,
 	&dev_attr_broadcast_mode.attr,
 	&dev_attr_canonical_macaddr.attr,
+	&dev_attr_checksumming.attr,
 	&dev_attr_sniffer.attr,
+	&dev_attr_large_send.attr,
 	&dev_attr_hsuid.attr,
 	NULL,
 };
