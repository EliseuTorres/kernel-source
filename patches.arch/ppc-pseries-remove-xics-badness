From: Brian King <brking@linux.vnet.ibm.com>
Subject: powerpc: Remove redundant xics badness warning
Patch-mainline: e9ae9dabfc1df26d5eff0102c4d359f534e11087
References: bnc#707094

    While testing cpu offlining, we are regularly seeing the WARN_ON go off
    in xics_ipi_dispatch. It can occur when an IPI gets sent to the CPU while
    it is going offline. There is already a similar WARN_ON in the handlers
    for PPC_MSG_CALL_FUNCTION and PPC_MSG_CALL_FUNC_SINGLE, so the warning
    is not needed in that path. The debugger handler handles this case by
    simply ignoring IPIs for offline CPUs, so no warning is needed there.
    And the reschedule IPI, which is what is occurring in our test environment,
    can be safely ignored, so we can simply remove the WARN_ON from xics_ipi_dispatch.
    
Signed-off-by: Brian King <brking@linux.vnet.ibm.com>
Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
Acked-by: Torsten Duwe <duwe@suse.de>

diff -up linux-2.6.32/arch/powerpc/platforms/pseries/xics.c.orig linux-2.6.32/arch/powerpc/platforms/pseries/xics.c
--- linux-2.6.32/arch/powerpc/platforms/pseries/xics.c.orig	2011-07-20 16:57:25.000000000 +0000
+++ linux-2.6.32/arch/powerpc/platforms/pseries/xics.c	2011-07-20 16:57:50.000000000 +0000
@@ -508,8 +508,6 @@ void smp_xics_message_pass(int target, i
 
 static irqreturn_t xics_ipi_dispatch(int cpu)
 {
-	WARN_ON(cpu_is_offline(cpu));
-
 	mb();	/* order mmio clearing qirr */
 	while (xics_ipi_message[cpu].value) {
 		if (test_and_clear_bit(PPC_MSG_CALL_FUNCTION,
