From: Martin Schwidefsky <schwidefsky@de.ibm.com>
Subject: s390/ftrace: fix crashes when switching tracers / add notrace to cpu_relax()
Patch-mainline: v4.0-rc4
Git-commit: a9ca8eb7afb4f1c90d8e43092e94c4e86785efbc
References: bsc#934387,FATE#318041,LTC#KRN1216

Summary:     s390: add multi-threading support
Description: With this feature, the Linux kernel can make use of the
             multi-threading facility. With the multi-threading facility
             enabled a single core will surface multiple CPUs. In Linux
             terms this is called SMT or Hyperthreading support.

Upstream-Description:

             s390/ftrace: fix crashes when switching tracers / add notrace to cpu_relax()

             With git commit 4d92f50249eb ("s390: reintroduce diag 44 calls for
             cpu_relax()") I reintroduced a non-trivial cpu_relax() variant on s390.

             The difference to the previous variant however is that the new version is
             an out-of-line function, which will be traced if function tracing is enabled.

             Switching to different tracers includes instruction patching. Therefore this
             is done within stop_machine() "context" to prevent that any function tracing
             is going on while instructions are being patched.
             With the new out-of-line variant of cpu_relax() this is not true anymore,
             since cpu_relax() gets called in a busy loop by all waiting cpus within
             stop_machine() until function patching is finished.
             Therefore cpu_relax() must be marked notrace.

             This fixes kernel crashes when frequently switching between "function" and
             "function_graph" tracers.

             Moving cpu_relax() to a header file again, doesn't work because of header
             include order dependencies.

             Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
             Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>


Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
Acked-by: John Jolly <jjolly@suse.de>
---
 arch/s390/kernel/processor.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

--- a/arch/s390/kernel/processor.c
+++ b/arch/s390/kernel/processor.c
@@ -18,7 +18,7 @@
 
 static DEFINE_PER_CPU(struct cpuid, cpu_id);
 
-void cpu_relax(void)
+void notrace cpu_relax(void)
 {
 	if (!smp_cpu_mtid && MACHINE_HAS_DIAG44)
 		asm volatile("diag 0,0,0x44");
