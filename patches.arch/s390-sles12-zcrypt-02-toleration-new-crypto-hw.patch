From: Ingo Tuchscherer <ingo.tuchscherer@de.ibm.com>
Subject: zcrypt: toleration of new crypto adapter hardware
Patch-mainline: v3.18-rc1
Git-commit: 42f4dd613fe808676126472bbe1283e452201148
References: bnc#894057, LTC#117041

Description:  zcrypt: toleration of new crypto adapter hardware
Symptom:      The zcrypt device driver does not detect new crypto adapters.
Problem:      The new crypto adapter has a different hardware type
              that is currently unkown to the device driver.
Solution:     Map the new hardware type to an already known
              existing type that is functional compatible.
Reproduction: plugin new crypto adapter and configure eihter as
              Accelerator, CCA or EP11 coprocessor. Load the zcrypt device
              driver and check the appearance of the adapter with lszcrypt.
              The new adapter should appear as a known compatible type.

Signed-off-by: Ingo Tuchscherer <ingo.tuchscherer@de.ibm.com>
Acked-by: John Jolly <jjolly@suse.de>
---
 drivers/s390/crypto/ap_bus.c |   16 ++++++++++++++++
 drivers/s390/crypto/ap_bus.h |    1 +
 2 files changed, 17 insertions(+)

--- a/drivers/s390/crypto/ap_bus.c
+++ b/drivers/s390/crypto/ap_bus.c
@@ -669,6 +669,17 @@ static ssize_t ap_hwtype_show(struct dev
 }
 
 static DEVICE_ATTR(hwtype, 0444, ap_hwtype_show, NULL);
+
+static ssize_t ap_raw_hwtype_show(struct device *dev,
+			      struct device_attribute *attr, char *buf)
+{
+	struct ap_device *ap_dev = to_ap_dev(dev);
+
+	return snprintf(buf, PAGE_SIZE, "%d\n", ap_dev->raw_hwtype);
+}
+
+static DEVICE_ATTR(raw_hwtype, 0444, ap_raw_hwtype_show, NULL);
+
 static ssize_t ap_depth_show(struct device *dev, struct device_attribute *attr,
 			     char *buf)
 {
@@ -739,6 +750,7 @@ static DEVICE_ATTR(ap_functions, 0444, a
 
 static struct attribute *ap_dev_attrs[] = {
 	&dev_attr_hwtype.attr,
+	&dev_attr_raw_hwtype.attr,
 	&dev_attr_depth.attr,
 	&dev_attr_request_count.attr,
 	&dev_attr_requestq_count.attr,
@@ -1422,9 +1434,13 @@ static void ap_scan_bus(struct work_stru
 				continue;
 			}
 			break;
+		case 11:
+			ap_dev->device_type = 10;
+			break;
 		default:
 			ap_dev->device_type = device_type;
 		}
+		ap_dev->raw_hwtype = device_type;
 
 		rc = ap_query_functions(qid, &device_functions);
 		if (!rc)
--- a/drivers/s390/crypto/ap_bus.h
+++ b/drivers/s390/crypto/ap_bus.h
@@ -162,6 +162,7 @@ struct ap_device {
 	ap_qid_t qid;			/* AP queue id. */
 	int queue_depth;		/* AP queue depth.*/
 	int device_type;		/* AP device type. */
+	int raw_hwtype;			/* AP raw hardware type. */
 	unsigned int functions;		/* AP device function bitfield. */
 	int unregistered;		/* marks AP device as unregistered */
 	struct timer_list timeout;	/* Timer for request timeouts. */
