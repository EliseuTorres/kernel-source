From dc791f88117290edb7951868c69f01dea7033167 Mon Sep 17 00:00:00 2001
From: Tomasz Nowicki <tomasz.nowicki@linaro.org>
Date: Mon, 3 Nov 2014 18:22:09 +0100
Subject: [PATCH 115/131] ACPI: IORT specific structure definitions, NOT FOR
 UPSTREAM !
Git-commit: 99d3001922f7d8287b5bd73863b9a574c0b90bfb
Patch-mainline: Queued in subsystem maintainer repository
Git-repo: git://git.kernel.org/pub/scm/linux/kernel/git/rric/linux.git thunder/master-v4.1

Signed-off-by: Tomasz Nowicki <tomasz.nowicki@linaro.org>

Signed-off-by: Matthias Brugger <mbrugger@suse.com>

---
 include/acpi/actbl2.h | 93 +++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 93 insertions(+)

diff --git a/include/acpi/actbl2.h b/include/acpi/actbl2.h
index cafdeb5..f5a4a6f 100644
--- a/include/acpi/actbl2.h
+++ b/include/acpi/actbl2.h
@@ -69,6 +69,7 @@
 #define ACPI_SIG_DMAR           "DMAR"	/* DMA Remapping table */
 #define ACPI_SIG_HPET           "HPET"	/* High Precision Event Timer table */
 #define ACPI_SIG_IBFT           "IBFT"	/* iSCSI Boot Firmware Table */
+#define ACPI_SIG_IORT           "IORT"  /* IO Remapping table */
 #define ACPI_SIG_IVRS           "IVRS"	/* I/O Virtualization Reporting Structure */
 #define ACPI_SIG_LPIT           "LPIT"	/* Low Power Idle Table */
 #define ACPI_SIG_MCFG           "MCFG"	/* PCI Memory Mapped Configuration table */
@@ -650,6 +651,98 @@ struct acpi_ibft_target {
 
 /*******************************************************************************
  *
+ * IORT - I/O Remapping Structure
+ *
+ ******************************************************************************/
+
+struct acpi_table_iort
+{
+	struct acpi_table_header	header;             /* Common ACPI table header */
+	u32				iort_nodes_number;
+
+};
+
+struct acpi_table_iort_node_header {
+	u8	type;
+	u16	length;
+	u8	revision;
+	u32	reserved;
+
+	u32	number_of_ids;
+	u32	ref_to_ids;
+};
+
+/* Values for IORT subtable type above */
+
+enum acpi_iort_type {
+	ACPI_IORT_TYPE_SMMU_V12 = 0,
+	ACPI_IORT_TYPE_SMMU_V3 = 1,
+	ACPI_IORT_TYPE_ITS_GROUP = 2,
+	ACPI_IORT_TYPE_NAMED_NODE = 3,
+	ACPI_IORT_TYPE_ROOT_COMPLEX = 4,
+	ACPI_IORT_TYPE_RESERVED = 5 /* 5 and greater are reserved */
+};
+
+struct acpi_table_iort_node_id {
+	u16	length;
+	u16	flags;
+	u32	input_base;
+	u32	output_base;
+	u32	output_ref;
+};
+
+#define IORT_ID_SINGLE_MAPPING	(1 << 0ULL)
+
+struct acpi_table_iort_node_smmu_v12 {
+	u64	base_address;
+	u64	span;
+	u32	model;
+	u32	flags;
+
+	u32	ref_glob_irq_array;
+	u32	context_irq_number;
+	u32	ref_context_irq_number;
+	u32	pmu_irq_number;
+	u32	ref_pmu_irq_number;
+
+	u32	smmu_nsg_irpt;
+	u32	smmu_nsg_irpt_flags;
+
+	u32	smmu_nsg_cfg_irpt;
+	u32	smmu_nsg_cfg_irpt_flags;
+};
+
+struct acpi_table_iort_node_smmu_v3 {
+	u64	base_address;
+	u64	span;
+	u32	model;
+	u32	event;
+	u32	event_flags;
+	u32	pri;
+	u32	pri_flags;
+	u32	gerr;
+	u32	gerr_flags;
+	u32	sync;
+	u32	sync_flags;
+};
+
+struct acpi_table_iort_node_its {
+	u32	number_of_its;
+	u32	its_id[1];
+};
+
+struct acpi_table_iort_node_named_component {
+	u32	coherency_attribute;
+	char	device_name[1];
+};
+
+struct acpi_table_iort_node_root_complex {
+	u32	ats_attribute;
+	u32	segment;
+};
+
+/*******************************************************************************
+ *
  * IVRS - I/O Virtualization Reporting Structure
  *        Version 1
  *
-- 
1.7.12.4

