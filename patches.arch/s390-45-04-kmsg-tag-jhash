From: geraldsc@de.ibm.com
Subject: incorrect kernel message tags
Patch-mainline: no
References: bnc#744795

Symptom: The id of the message tag <component.id> for printk messages
             documented in the kernel message catalog is incorrect. The
             message description can not be found with the incorrect
             message tag.
Problem: The jhash implementation in the kernel changed with kernel
             version 2.6.38. The script to generate the message catalog
             still uses the older jhash algorithm. This causes a mismatch
             between the hash used in the message catalog and the hash that
             gets printed on the console.
Solution: Add an custom jhash implementation specifically for printk_hash.
             It uses the old style jhash algorithm.

Signed-off-by: Gerald Schaefer <geraldsc@de.ibm.com>
Acked-by: Torsten Duwe <duwe@suse.de>

---
 kernel/printk.c |   39 ++++++++++++++++++++++++++++++++++++++-
 1 file changed, 38 insertions(+), 1 deletion(-)

--- a/kernel/printk.c
+++ b/kernel/printk.c
@@ -48,6 +48,7 @@
 #include <linux/rculist.h>
 #include <linux/jhash.h>
 #include <linux/device.h>
+#include <linux/unaligned/le_byteshift.h>
 
 #include <asm/uaccess.h>
 
@@ -1758,6 +1759,42 @@ void kmsg_dump(enum kmsg_dump_reason rea
 
 #if defined CONFIG_PRINTK && defined CONFIG_KMSG_IDS
 
+static inline u32 __printk_jhash(const void *key, u32 length)
+{
+	u32 a, b, c, len;
+	const u8 *k;
+	u8 zpad[12];
+
+	a = b = 0x9e3779b9;
+	c = 0;
+	for (len = length + 12, k = key; len >= 12; len -= 12, k += 12) {
+		if (len >= 24) {
+			a += __get_unaligned_le32(k);
+			b += __get_unaligned_le32(k + 4);
+			c += __get_unaligned_le32(k + 8);
+		} else {
+			memset(zpad, 0, 12);
+			memcpy(zpad, k, len - 12);
+			a += __get_unaligned_le32(zpad);
+			b += __get_unaligned_le32(zpad + 4);
+			c += (u32) zpad[8] << 8;
+			c += (u32) zpad[9] << 16;
+			c += (u32) zpad[10] << 24;
+			c += length;
+		}
+		a -= b + c; a ^= (c>>13);
+		b -= a + c; b ^= (a<<8);
+		c -= a + b; c ^= (b>>13);
+		a -= b + c; a ^= (c>>12);
+		b -= a + c; b ^= (a<<16);
+		c -= a + b; c ^= (b>>5);
+		a -= b + c; a ^= (c>>3);
+		b -= a + c; b ^= (a<<10);
+		c -= a + b; c ^= (b>>15);
+	}
+	return c;
+}
+
 /**
  * printk_hash - print a kernel message include a hash over the message
  * @prefix: message prefix including the ".%06x" for the hash
@@ -1768,7 +1805,7 @@ asmlinkage int printk_hash(const char *p
 	va_list args;
 	int r;
 
-	r = printk(prefix, jhash(fmt, strlen(fmt), 0) & 0xffffff);
+	r = printk(prefix, __printk_jhash(fmt, strlen(fmt)) & 0xffffff);
 	va_start(args, fmt);
 	r += vprintk(fmt, args);
 	va_end(args);
