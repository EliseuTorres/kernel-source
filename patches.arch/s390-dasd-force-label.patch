From: Alexander Graf <agraf@suse.de>
Date: Wed, 30 Mar 2011 11:37:13 +0200
Subject: [PATCH] s390x: Add force flag for dasd style partition label detection
References: bnc#684085
Patch-mainline: Not yet

Currently we can only use the DASD partition label on DASD disks. When running
a VM in KVM, we only have virtio disks available though. In order to still be
able to use DASD formatted disks, we need a flag that allows us to force enable
detection of the DASD partition label. This patch implements parameters to
achieve this.

For example, to activate the label code to force devices "vda" and "vdb" to be
detected as CDL style label, add "ibm.dasd_force_cdl=vda,vdb" to your kernel
command line. A respective parameter is also added for the LDL label type.

Signed-off-by: Alexander Graf <agraf@suse.de>
---
 fs/partitions/ibm.c |   49 +++++++++++++++++++++++++++++++++++++++++++++++--
 1 file changed, 47 insertions(+), 2 deletions(-)

--- a/fs/partitions/ibm.c
+++ b/fs/partitions/ibm.c
@@ -17,6 +17,30 @@
 #include "check.h"
 #include "ibm.h"
 
+static char *dasd_force_ldl[4];
+static char *dasd_force_cdl[4];
+
+module_param_array(dasd_force_ldl, charp, NULL, 0);
+MODULE_PARM_DESC(dasd_force_ldl, "force a block device to be detected as DASD "
+                                 "(LDL format)");
+module_param_array(dasd_force_cdl, charp, NULL, 0);
+MODULE_PARM_DESC(dasd_force_cdl, "force a block device to be detected as DASD "
+                                 "(CDL format)");
+
+static inline bool match_array(char **arr, const char *match)
+{
+	if (!arr)
+		return false;
+
+	while (*arr) {
+		if (!strcmp(*arr, match))
+			return true;
+		arr++;
+	}
+
+	return false;
+}
+
 /*
  * compute the block number from a
  * cyl-cyl-head-head structure
@@ -75,6 +99,7 @@ int ibm_partition(struct parsed_partitio
 	unsigned char *data;
 	Sector sect;
 	sector_t labelsect;
+	bool fake_cdl = false;
 	char tmp[64];
 
 	res = 0;
@@ -95,9 +120,29 @@ int ibm_partition(struct parsed_partitio
 	if (label == NULL)
 		goto out_nolab;
 
-	if (ioctl_by_bdev(bdev, BIODASDINFO2, (unsigned long)info) != 0 ||
-	    ioctl_by_bdev(bdev, HDIO_GETGEO, (unsigned long)geo) != 0)
+	if (match_array(dasd_force_ldl, bdev->bd_disk->disk_name)) {
+		memset(info, 0, sizeof(dasd_information2_t));
+		info->format = DASD_FORMAT_LDL;
+		info->label_block = 2;
+	} else if (match_array(dasd_force_cdl, bdev->bd_disk->disk_name)) {
+		memset(info, 0, sizeof(dasd_information2_t));
+		info->format = DASD_FORMAT_CDL;
+		info->label_block = 2;
+		fake_cdl = true;
+	} else if (ioctl_by_bdev(bdev, BIODASDINFO2, (unsigned long)info) != 0) {
 		goto out_freeall;
+	}
+
+	if (ioctl_by_bdev(bdev, HDIO_GETGEO, (unsigned long)geo) != 0)
+		goto out_freeall;
+
+	if (fake_cdl) {
+		/* CDL disks always are on 15/12 layout, so calculate over */
+		geo->cylinders = (geo->heads * geo->sectors * geo->cylinders)
+				/ (15 * 12);
+		geo->heads = 15;
+		geo->sectors = 12;
+	}
 
 	/*
 	 * Special case for FBA disks: label sector does not depend on
