From: David Hildenbrand <dahi@linux.vnet.ibm.com>
Subject: s390/sclp_vt220: Fix kernel panic due to early terminal input
Patch-mainline: v3.15-rc2
Git-commit: e106e4ea44699cc940a919924f2834b91f426d9f
References: bsc#935410,FATE#318050,LTC#VS1256

Summary:     s390/virtio: Performance enhanced paravirtualized I/O drivers
Description: This feature enhances performance of the paravirtualized I/O
             drivers on s390 with focus on virtio and virtio-ccw.

Upstream-Description:

             s390/sclp_vt220: Fix kernel panic due to early terminal input

             A kernel panic might occur when there is terminal input available via
             the SCLP VT220 interface at an early time during the boot process.

             The processing of terminal input requires prior initialization which is
             done via an early_initcall function (init_workqueues) while the SCLP
             VT220 driver registers for terminal input during a console_initcall
             function (sclp_vt220_con_init). When there is terminal input available
             via the SCLP interface between console_initcall and early_initcall, a
             null pointer dereference occurs (system_wq is null).

             Fix this problem by moving the registration for terminal input to a
             device_initcall function (sclp_vt220_tty_init).

             Reported-by: Christian Borntraeger <borntraeger@de.ibm.com>
             Tested-by: Christian Borntraeger <borntraeger@de.ibm.com>
             Signed-off-by: Peter Oberparleiter <oberpar@linux.vnet.ibm.com>
             Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>


Signed-off-by: David Hildenbrand <dahi@linux.vnet.ibm.com>
Acked-by: John Jolly <jjolly@suse.de>
---
 drivers/s390/char/sclp_vt220.c |   14 +++++++++++---
 1 file changed, 11 insertions(+), 3 deletions(-)

--- a/drivers/s390/char/sclp_vt220.c
+++ b/drivers/s390/char/sclp_vt220.c
@@ -97,13 +97,16 @@ static void sclp_vt220_pm_event_fn(struc
 static int __sclp_vt220_emit(struct sclp_vt220_request *request);
 static void sclp_vt220_emit_current(void);
 
-/* Registration structure for our interest in SCLP event buffers */
+/* Registration structure for SCLP output event buffers */
 static struct sclp_register sclp_vt220_register = {
 	.send_mask		= EVTYP_VT220MSG_MASK,
+	.pm_event_fn		= sclp_vt220_pm_event_fn,
+};
+
+/* Registration structure for SCLP input event buffers */
+static struct sclp_register sclp_vt220_register_input = {
 	.receive_mask		= EVTYP_VT220MSG_MASK,
-	.state_change_fn	= NULL,
 	.receiver_fn		= sclp_vt220_receiver_fn,
-	.pm_event_fn		= sclp_vt220_pm_event_fn,
 };
 
 
@@ -715,9 +718,14 @@ static int __init sclp_vt220_tty_init(vo
 	rc = tty_register_driver(driver);
 	if (rc)
 		goto out_init;
+	rc = sclp_register(&sclp_vt220_register_input);
+	if (rc)
+		goto out_reg;
 	sclp_vt220_driver = driver;
 	return 0;
 
+out_reg:
+	tty_unregister_driver(driver);
 out_init:
 	__sclp_vt220_cleanup();
 out_driver:
