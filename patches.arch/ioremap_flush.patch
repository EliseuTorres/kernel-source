From: Cliff Wickman <cpw@sgi.com>
Subject: mm, x86: Saving vmcore with non-lazy freeing of vmas
References: bnc#640878
Patch-Mainline: yes
Git-commit: 3ee48b6af49cf534ca2f481ecc484b156a41451d
Signed-off-by: Nikanth Karthikesan <knikanth@suse.de>

commit 3ee48b6af49cf534ca2f481ecc484b156a41451d
Author: Cliff Wickman <cpw@sgi.com>
Date:   Thu Sep 16 11:44:02 2010 -0500

    mm, x86: Saving vmcore with non-lazy freeing of vmas
    
    During the reading of /proc/vmcore the kernel is doing
    ioremap()/iounmap() repeatedly. And the buildup of un-flushed
    vm_area_struct's is causing a great deal of overhead. (rb_next()
    is chewing up most of that time).
    
    This solution is to provide function set_iounmap_nonlazy(). It
    causes a subsequent call to iounmap() to immediately purge the
    vma area (with try_purge_vmap_area_lazy()).
    
    With this patch we have seen the time for writing a 250MB
    compressed dump drop from 71 seconds to 44 seconds.
    
    Signed-off-by: Cliff Wickman <cpw@sgi.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: kexec@lists.infradead.org
    Cc: <stable@kernel.org>
    LKML-Reference: <E1OwHZ4-0005WK-Tw@eag09.americas.sgi.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

---

Index: linux-2.6.32-SLE11-SP1/arch/x86/include/asm/io.h
===================================================================
--- linux-2.6.32-SLE11-SP1.orig/arch/x86/include/asm/io.h
+++ linux-2.6.32-SLE11-SP1/arch/x86/include/asm/io.h
@@ -172,6 +172,7 @@ static inline void __iomem *ioremap(reso
 
 extern void iounmap(volatile void __iomem *addr);
 
+extern void set_iounmap_nonlazy(void);
 
 #ifdef CONFIG_X86_32
 # include "io_32.h"
Index: linux-2.6.32-SLE11-SP1/arch/x86/kernel/crash_dump_64.c
===================================================================
--- linux-2.6.32-SLE11-SP1.orig/arch/x86/kernel/crash_dump_64.c
+++ linux-2.6.32-SLE11-SP1/arch/x86/kernel/crash_dump_64.c
@@ -46,6 +46,7 @@ ssize_t copy_oldmem_page(unsigned long p
 	} else
 		memcpy(buf, vaddr + offset, csize);
 
+	set_iounmap_nonlazy();
 	iounmap(vaddr);
 	return csize;
 }
Index: linux-2.6.32-SLE11-SP1/mm/vmalloc.c
===================================================================
--- linux-2.6.32-SLE11-SP1.orig/mm/vmalloc.c
+++ linux-2.6.32-SLE11-SP1/mm/vmalloc.c
@@ -513,6 +513,15 @@ static atomic_t vmap_lazy_nr = ATOMIC_IN
 static void purge_fragmented_blocks_allcpus(void);
 
 /*
+ * called before a call to iounmap() if the caller wants vm_area_struct's
+ * immediately freed.
+ */
+void set_iounmap_nonlazy(void)
+{
+	atomic_set(&vmap_lazy_nr, lazy_max_pages()+1);
+}
+
+/*
  * Purges all lazily-freed vmap areas.
  *
  * If sync is 0 then don't purge if there is already a purge in progress.
