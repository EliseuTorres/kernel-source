From: Sebastian Ott <sebott@linux.vnet.ibm.com>
Subject: s390/pci: do not read data after failed load
Patch-mainline: v3.10-rc1
Git-commit: b170bad40dab1a1684d629b37cb65a5281d35bd8
References: bnc#848335,FATE#83037,LTC#94737

If a pci load instruction fails the content of the register where the
data is stored is possibly unchanged. Fix the inline assembly wrapper
__pcilg to not return stale data. Additionally fix the callers of this
function who access uninitialized variables.

Reviewed-by: Gerald Schaefer <gerald.schaefer@de.ibm.com>
Signed-off-by: Sebastian Ott <sebott@linux.vnet.ibm.com>
Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
Acked-by: John Jolly <jjolly@suse.de>
---
 arch/s390/include/asm/pci_io.h |    4 ++++
 arch/s390/pci/pci.c            |    8 ++++----
 arch/s390/pci/pci_insn.c       |    4 +++-
 3 files changed, 11 insertions(+), 5 deletions(-)

--- a/arch/s390/include/asm/pci_io.h
+++ b/arch/s390/include/asm/pci_io.h
@@ -92,6 +92,9 @@ static inline int zpci_read_single(u64 r
 	int cc;
 
 	cc = s390pci_load(&data, req, offset);
+	if (cc)
+		goto out;
+
 	switch (len) {
 	case 1:
 		*((u8 *) dst) = (u8) data;
@@ -106,6 +109,7 @@ static inline int zpci_read_single(u64 r
 		*((u64 *) dst) = (u64) data;
 		break;
 	}
+out:
 	return cc;
 }
 
--- a/arch/s390/pci/pci.c
+++ b/arch/s390/pci/pci.c
@@ -279,11 +279,11 @@ static int zpci_cfg_load(struct zpci_dev
 	int rc;
 
 	rc = s390pci_load(&data, req, offset);
-	data = data << ((8 - len) * 8);
-	data = le64_to_cpu(data);
-	if (!rc)
+	if (!rc) {
+		data = data << ((8 - len) * 8);
+		data = le64_to_cpu(data);
 		*val = (u32) data;
-	else
+	} else
 		*val = 0xffffffff;
 	return rc;
 }
--- a/arch/s390/pci/pci_insn.c
+++ b/arch/s390/pci/pci_insn.c
@@ -103,7 +103,9 @@ static inline int __pcilg(u64 *data, u64
 		:  "d" (__offset)
 		: "cc");
 	*status = __req >> 24 & 0xff;
-	*data = __data;
+	if (!cc)
+		*data = __data;
+
 	return cc;
 }
 
