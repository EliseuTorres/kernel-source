From: Gerald Schaefer <geraldsc@de.ibm.com>
Subject: zfcp: Use forced_reopen in terminate_rport_io callback
References: bnc#617464,LTC#65800
Patch-mainline: Yes

Symptom:     When using the fast_io_fail_tmo in non-NPIV mode, the
             rport is set to online, although the actual port is not
             available in the SAN.
Problem:     When the port connection is shared with another operating
             system in non-NPIV mode, the other OS can keep the port
             connection open, and thus the reopen can succeed when the
             port is not in the SAN.
Solution:    Use the forced_reopen operation to force a logout. The
             following "open" has to login to the remote port and
             can only succeed when the remote port is active in the SAN.

Acked-by: John Jolly <jjolly@suse.de>
---
 drivers/s390/scsi/zfcp_scsi.c |    8 +++++---
 1 file changed, 5 insertions(+), 3 deletions(-)

--- a/drivers/s390/scsi/zfcp_scsi.c	2010-07-06 11:13:08.000000000 +0200
+++ b/drivers/s390/scsi/zfcp_scsi.c	2010-07-06 11:13:10.000000000 +0200
@@ -515,8 +515,10 @@ static void zfcp_set_rport_dev_loss_tmo(
  * @rport: The FC rport where to teminate I/O
  *
  * Abort all pending SCSI commands for a port by closing the
- * port. Using a reopen for avoids a conflict with a shutdown
- * overwriting a reopen.
+ * port. Using a reopen avoids a conflict with a shutdown
+ * overwriting a reopen. The "forced" ensures that a disappeared port
+ * is not opened again as valid due to the cached plogi data in
+ * non-NPIV mode.
  */
 static void zfcp_scsi_terminate_rport_io(struct fc_rport *rport)
 {
@@ -532,7 +534,7 @@ static void zfcp_scsi_terminate_rport_io
 	write_unlock_irq(&zfcp_data.config_lock);
 
 	if (port) {
-		zfcp_erp_port_reopen(port, 0, "sctrpi1", NULL);
+		zfcp_erp_port_forced_reopen(port, 0, "sctrpi1", NULL);
 		zfcp_port_put(port);
 	}
 }
