From: Borislav Petkov <borislav.petkov@amd.com>
Subject: x86, MCE, AMD: Hide interrupt_enable sysfs node
Date: Mon Apr 16 18:20:36 2012 +0200
Git-commit: d26ecc4894464318dce51d709e19dd9d88916bee
Patch-mainline: v3.5-rc1
References: fate#314150

Author:

    x86, MCE, AMD: Hide interrupt_enable sysfs node
    
    Depending on whether the box supports the APIC LVT interrupt for
    thresholding, we want to show the 'interrupt_enable' sysfs node or not.
    Make that the case by adding it to the default sysfs attributes only if
    it is supported.
    
    Signed-off-by: Borislav Petkov <borislav.petkov@amd.com>

[refreshed for SLE11-SP3]
Acked-by: Raymund Will <rw@suse.de>

---
 arch/x86/kernel/cpu/mcheck/mce_amd.c |    9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

--- a/arch/x86/kernel/cpu/mcheck/mce_amd.c
+++ b/arch/x86/kernel/cpu/mcheck/mce_amd.c
@@ -423,10 +423,10 @@ RW_ATTR(threshold_limit);
 RW_ATTR(error_count);
 
 static struct attribute *default_attrs[] = {
-	&interrupt_enable.attr,
 	&threshold_limit.attr,
 	&error_count.attr,
-	NULL
+	NULL,	/* possibly interrupt_enable if supported, see below */
+	NULL,
 };
 
 #define to_block(k)	container_of(k, struct threshold_block, kobj)
@@ -503,6 +503,11 @@ static __cpuinit int allocate_threshold_blocks(unsigned int cpu,
 	b->interrupt_capable	= lvt_interrupt_supported(bank, high);
 	b->threshold_limit	= THRESHOLD_MAX;
 
+	if (b->interrupt_capable)
+		threshold_ktype.default_attrs[2] = &interrupt_enable.attr;
+	else
+		threshold_ktype.default_attrs[2] = NULL;
+
 	INIT_LIST_HEAD(&b->miscj);
 
 	if (per_cpu(threshold_banks, cpu)[bank]->blocks) {
