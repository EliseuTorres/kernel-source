From: Hendrik Brueckner <brueckner@linux.vnet.ibm.com>
Subject: mm: Fix crst upgrade of mmap with MAP_FIXED
Patch-mainline: Post v3.8-rc7
Git-commit: 486c0a0bc80d370471b21662bf03f04fbb37cdc6
References: bnc#805052, LTC#88797

Description:  mm: Fix crst upgrade of mmap with MAP_FIXED
Symptom:      Using mmap() with an address above 4TB fails if MAP_FIXED
              is specified.
Problem:      A missing check in the mmap() implementation for MAP_FIXED
              leads to a  missing upgrade of the address space.
Solution:     Enhance the s390_mmap_check() function for the MAP_FIXED
              case, check the size of the address space, and, optionally,
              upgrade the address space.
Reproduction: Invoke mmap(), for example,
                mmap((void *) (1UL << 43), 1024, PROT_READ|PROT_WRITE,
                     MAP_PRIVATE|MAP_ANONYMOUS|MAP_FIXED, -1, 0);

Signed-off-by: Hendrik Brueckner <brueckner@linux.vnet.ibm.com>
Acked-by: John Jolly <jjolly@suse.de>
---
 arch/s390/include/asm/mman.h |    4 ++--
 arch/s390/mm/mmap.c          |   10 +++++++---
 2 files changed, 9 insertions(+), 5 deletions(-)

--- a/arch/s390/include/asm/mman.h
+++ b/arch/s390/include/asm/mman.h
@@ -12,8 +12,8 @@
 #include <asm-generic/mman.h>
 
 #if defined(__KERNEL__) && !defined(__ASSEMBLY__) && defined(CONFIG_64BIT)
-int s390_mmap_check(unsigned long addr, unsigned long len);
-#define arch_mmap_check(addr,len,flags)	s390_mmap_check(addr,len)
+int s390_mmap_check(unsigned long addr, unsigned long len, unsigned long flags);
+#define arch_mmap_check(addr, len, flags) s390_mmap_check(addr, len, flags)
 #endif
 
 #endif /* __S390_MMAN_H__ */
--- a/arch/s390/mm/mmap.c
+++ b/arch/s390/mm/mmap.c
@@ -26,6 +26,7 @@
 
 #include <linux/personality.h>
 #include <linux/mm.h>
+#include <linux/mman.h>
 #include <linux/module.h>
 #include <linux/random.h>
 #include <linux/compat.h>
@@ -103,12 +104,15 @@ EXPORT_SYMBOL_GPL(arch_pick_mmap_layout)
 
 #else
 
-int s390_mmap_check(unsigned long addr, unsigned long len)
+int s390_mmap_check(unsigned long addr, unsigned long len, unsigned long flags)
 {
 	int rc;
 
-	if (!is_compat_task() &&
-	    len >= TASK_SIZE && TASK_SIZE < (1UL << 53)) {
+	if (is_compat_task() || (TASK_SIZE >= (1UL << 53)))
+		return 0;
+	if (!(flags & MAP_FIXED))
+		addr = 0;
+	if ((addr + len) >= TASK_SIZE) {
 		rc = crst_table_upgrade(current->mm, 1UL << 53);
 		if (rc)
 			return rc;
