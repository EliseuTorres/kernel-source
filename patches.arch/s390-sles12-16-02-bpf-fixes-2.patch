Subject: s390/bpf: Fix JMP_JGE_X (A > X) and JMP_JGT_X (A >= X)
From: Michael Holzheu <holzheu@linux.vnet.ibm.com>
Patch-mainline: v3.19-rc5
Git-commit: ae750974591bb9431b1f84b1323dc2fb7d8fe360
References: bnc#917125,LTC#121759

Description:  s390/bpf: Fix several corner cases
Symptom:      In rare cases BPF filters may return wrong results or you
              even can get a kernel panic.
Problem:      The s390x BPF JIT code generation has several bugs.
Solution:     Fix the following bugs:
              - Zero extend parameters before calling C function
              - Fix sk_load_byte_msh()
              - Fix offset parameter for skb_copy_bits()
              - Fix skb_copy_bits() parameter passing
              - Fix JMP_JGE_K (A >= K) and JMP_JGT_K (A > K)
              - Fix JMP_JGE_X (A > X) and JMP_JGT_X (A >= X)
              - Fix ALU_NEG (A = -A)
Reproduction: Use tcpdump and generate network traffic to trigger
              the corner cases.

Upstream-Description:

              s390/bpf: Fix JMP_JGE_X (A > X) and JMP_JGT_X (A >= X)

              Currently the signed COMPARE (cr) instruction is used to compare "A"
              with "X". This is not correct because "A" and "X" are both unsigned.
              To fix this use the unsigned COMPARE LOGICAL (clr) instruction instead.

              Signed-off-by: Michael Holzheu <holzheu@linux.vnet.ibm.com>
              Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>


Signed-off-by: Michael Holzheu <holzheu@linux.vnet.ibm.com>
Acked-by: John Jolly <jjolly@suse.de>
---
 arch/s390/net/bpf_jit_comp.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

--- a/arch/s390/net/bpf_jit_comp.c
+++ b/arch/s390/net/bpf_jit_comp.c
@@ -536,8 +536,8 @@ branch:		if (filter->jt == filter->jf) {
 xbranch:	/* Emit compare if the branch targets are different */
 		if (filter->jt != filter->jf) {
 			jit->seen |= SEEN_XREG;
-			/* cr %r5,%r12 */
-			EMIT2(0x195c);
+			/* clr %r5,%r12 */
+			EMIT2(0x155c);
 		}
 		goto branch;
 	case BPF_S_JMP_JSET_X: /* ip += (A & X) ? jt : jf */
