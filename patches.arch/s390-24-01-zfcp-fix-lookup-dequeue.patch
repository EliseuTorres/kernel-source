From: Gerald Schaefer <geraldsc@de.ibm.com>
Subject: zfcp: Cancel gid_pn work when removing port
References: bnc#653266,LTC#68146
Patch-mainline: Yes

Symptom:     The system can deadlock in the zfcp workqueue.
Problem:     zfcp_port_dequeue waits for the port reference count to
             drop to zero. When the gid_pn work is scheduled, the
             scheduled work holds a reference to the port. Since
             zfcp_port_dequeue already blocks the workqueue while
             waiting, the gid_pn work cannot run, resulting in this
             deadlock.
Solution:    zfcp_port_dequeue already calls cancel_work_sync for the
             other two port work_structs that can be pending on the zfcp
             workqueue. Add a call to cancel_work_sync for the
             gid_pn work and drop the reference count if the work
             has been cancelled successfully.
             With upstream commit f3450c7b917201bb49d67032e9f60d5125675d6a,
             the reference counting has been changed; there is no need for
             cancelling and waiting in zfcp_port_dequeue in the newer code.

Acked-by: John Jolly <jjolly@suse.de>
---
 drivers/s390/scsi/zfcp_aux.c |    2 ++
 1 file changed, 2 insertions(+)

--- a/drivers/s390/scsi/zfcp_aux.c
+++ b/drivers/s390/scsi/zfcp_aux.c
@@ -719,6 +719,8 @@ void zfcp_port_dequeue(struct zfcp_port
 	write_lock_irq(&zfcp_data.config_lock);
 	list_del(&port->list);
 	write_unlock_irq(&zfcp_data.config_lock);
+	if (cancel_work_sync(&port->gid_pn_work))
+		zfcp_port_put(port);
 	if (cancel_work_sync(&port->rport_work))
 		zfcp_port_put(port);
 	if (cancel_work_sync(&port->test_link_work))
