From: David Hildenbrand <dahi@linux.vnet.ibm.com>
Subject: virtio_scsi: verify if queue is broken after virtqueue_get_buf()
Patch-mainline: v3.13-rc1
Git-commit: 2bf4fd31394a3f875ea093ee8a209f30b378cbf3
References: bsc#935410,FATE#318050,LTC#VS1256

Summary:     s390/virtio: Performance enhanced paravirtualized I/O drivers
Description: This feature enhances performance of the paravirtualized I/O
             drivers on s390 with focus on virtio and virtio-ccw.

Upstream-Description:

             virtio_scsi: verify if queue is broken after virtqueue_get_buf()

             If virtqueue_get_buf() returned with a NULL pointer avoid a possibly
             endless loop by checking for a broken virtqueue.

             Signed-off-by: Heinz Graalfs <graalfs@linux.vnet.ibm.com>
             Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>


Signed-off-by: David Hildenbrand <dahi@linux.vnet.ibm.com>
Acked-by: John Jolly <jjolly@suse.de>
---
 drivers/scsi/virtio_scsi.c |    3 +++
 1 file changed, 3 insertions(+)

--- a/drivers/scsi/virtio_scsi.c
+++ b/drivers/scsi/virtio_scsi.c
@@ -224,6 +224,9 @@ static void virtscsi_vq_done(struct virt
 		virtqueue_disable_cb(vq);
 		while ((buf = virtqueue_get_buf(vq, &len)) != NULL)
 			fn(vscsi, buf);
+
+		if (unlikely(virtqueue_is_broken(vq)))
+			break;
 	} while (!virtqueue_enable_cb(vq));
 	spin_unlock_irqrestore(&virtscsi_vq->vq_lock, flags);
 }
