From: Michael Holzheu <holzheu@linux.vnet.ibm.com>
Subject: ipl: Implement diag308 loop for zfcpdump
Patch-mainline: not yet
Git-commit: -
References: bnc#801772, LTC#88197

Description:  ipl: Implement diag308 loop for zfcpdump
Symptom:      When a zfcpdump is triggered and a second dump on the same
              CEC is already in progress for another LPAR, diagnose 308
              returns with an error code until the first dump is finished.
              Currently the second Linux stops with a disabled wait PSW in
              that case.
Problem:      Linux should not stop in that case.
Solution:     This is improved now by by triggering diag 308 in a loop
              until it works.
Reproduction: Trigger two parallel zfcpdumps on two LPARs on the same CEC.

Signed-off-by: Michael Holzheu <holzheu@linux.vnet.ibm.com>
Acked-by: John Jolly <jjolly@suse.de>
---
 arch/s390/kernel/ipl.c |   16 ++++++++++++----
 1 file changed, 12 insertions(+), 4 deletions(-)

--- a/arch/s390/kernel/ipl.c
+++ b/arch/s390/kernel/ipl.c
@@ -1413,6 +1413,16 @@ static struct kobj_attribute dump_type_a
 
 static struct kset *dump_kset;
 
+static void diag308_dump(void *dump_block)
+{
+	diag308(DIAG308_SET, dump_block);
+	while (1) {
+		if (diag308(DIAG308_DUMP, NULL) != 0x302)
+			break;
+		udelay_simple(USEC_PER_SEC);
+	}
+}
+
 static void __dump_run(void *unused)
 {
 	struct ccw_dev_id devid;
@@ -1431,12 +1441,10 @@ static void __dump_run(void *unused)
 		__cpcmd(buf, NULL, 0, NULL);
 		break;
 	case DUMP_METHOD_CCW_DIAG:
-		diag308(DIAG308_SET, dump_block_ccw);
-		diag308(DIAG308_DUMP, NULL);
+		diag308_dump(dump_block_ccw);
 		break;
 	case DUMP_METHOD_FCP_DIAG:
-		diag308(DIAG308_SET, dump_block_fcp);
-		diag308(DIAG308_DUMP, NULL);
+		diag308_dump(dump_block_fcp);
 		break;
 	default:
 		break;
