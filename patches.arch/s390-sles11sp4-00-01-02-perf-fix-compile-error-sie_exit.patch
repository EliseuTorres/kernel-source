From: Hendrik Brueckner <brueckner@linux.vnet.ibm.com>
Subject: s390/perf: fix compile error (undefined reference sie_exit)
Patch-mainline: v3.11-rc5
Git-commit: 198b1bf8c3a06de42a88ad7f9d664f18d740a418
References: bnc#900899, FATE#317698, LTC#110510

Summary:     s390/perf: add support for the CPU-measurement sampling facility
Description: Use the CPU-measurement sampling facility to obtain performance
             data for Linux in LPAR mode.  You can use the perf tool on Linux
             to access the hardware sample data of the CPU-measurement
             sampling facility.

Upstream-Description:

             s390/perf: fix compile error (undefined reference sie_exit)

             The perf_event code references sie_exit even if KVM is not available.
             So add proper ifdefs to fix this one:

             arch/s390/built-in.o: In function `sys_call_table_emu':
             (.rodata+0x2b98): undefined reference to `sie_exit'
             arch/s390/built-in.o: In function `sys_call_table_emu':
             (.rodata+0x2ba0): undefined reference to `sie_exit'
             make: *** [vmlinux] Error 1

             Reported-by: Zhouping Liu <zliu@redhat.com>
             Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
             Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>


Signed-off-by: Hendrik Brueckner <brueckner@linux.vnet.ibm.com>
Acked-by: John Jolly <jjolly@suse.de>
---
 arch/s390/kernel/perf_event.c |    9 +++++----
 1 file changed, 5 insertions(+), 4 deletions(-)

--- a/arch/s390/kernel/perf_event.c
+++ b/arch/s390/kernel/perf_event.c
@@ -53,12 +53,13 @@ static struct kvm_s390_sie_block *sie_bl
 
 static bool is_in_guest(struct pt_regs *regs)
 {
-	unsigned long ip = instruction_pointer(regs);
-
 	if (user_mode(regs))
 		return false;
-
-	return ip == (unsigned long) &sie_exit;
+#if defined(CONFIG_KVM) || defined(CONFIG_KVM_MODULE)
+	return instruction_pointer(regs) == (unsigned long) &sie_exit;
+#else
+	return false;
+#endif
 }
 
 static unsigned long guest_is_user_mode(struct pt_regs *regs)
