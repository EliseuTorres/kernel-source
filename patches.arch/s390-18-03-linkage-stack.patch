From: Martin Schwidefsky <schwidefsky@de.ibm.com>
Subject: kernel: oops due to linkage stack instructions
Patch-mainline: not yet
Git-commit: -
References: bnc#862796, LTC#103860

Description:  kernel: oops due to linkage stack instructions
Symptom:      Kernel oops due to a low address protection exception
Problem:      If the address mode for user space programs has been switched
              to primary mode a user space process can cause a low adddress
              protection exception by executing an instruction that uses
              the linkage stack. The kernel crashes with an oops error
              messages and causes a panic if panic_on_oops is set.
Solution:     Set the base-ASTE origin and the subspace-ASTE origin of the
              dispatchable-unit-control table to pointer to a dummy ASTE
              and set up control register 15 to point to an empty linkage
              stack with no room left.
Reproduction: Use a linkage stack instruction in a user space program
              with the user space running in primary space.

Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
Acked-by: John Jolly <jjolly@suse.de>
---
 arch/s390/kernel/head64.S |    7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

--- a/arch/s390/kernel/head64.S
+++ b/arch/s390/kernel/head64.S
@@ -61,7 +61,7 @@ startup_continue:
 	.quad	0			# cr12: tracing off
 	.quad	0			# cr13: home space segment table
 	.quad	0xc0000000		# cr14: machine check handling off
-	.quad	0			# cr15: linkage stack operations
+	.quad	.Llinkage_stack		# cr15: linkage stack operations
 .Lpcmsk:.quad	0x0000000180000000
 .L4malign:.quad 0xffffffffffc00000
 .Lscan2g:.quad	0x80000000 + 0x20000 - 8	# 2GB + 128K - 8
@@ -69,12 +69,15 @@ startup_continue:
 .Lparmaddr:
 	.quad	PARMAREA
 	.align	64
-.Lduct: .long	0,0,0,0,.Lduald,0,0,0
+.Lduct: .long	0,.Laste,.Laste,0,.Lduald,0,0,0
 	.long	0,0,0,0,0,0,0,0
+.Laste:	.quad	0,0xffffffffffffffff,0,0,0,0,0,0
 	.align	128
 .Lduald:.rept	8
 	.long	0x80000000,0,0,0	# invalid access-list entries
 	.endr
+.Llinkage_stack:
+	.long	0,0,0x89000000,0,0,0,0x8a000000,0
 
 	.globl	_ehead
 _ehead:
