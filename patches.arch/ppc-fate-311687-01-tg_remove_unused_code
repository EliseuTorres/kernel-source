Gitweb: http://git.kernel.org/linus/ae7dd0208f62f1d6db4c49b85e54fa7bbed0ea4e
Commit: ae7dd0208f62f1d6db4c49b85e54fa7bbed0ea4e
Parent: 0682d6c1044e8a54aafdc6282d44c0c436da208f
Author: Thomas Gleixner <tglx@linutronix.de>
Authordate: Wed Oct 14 22:54:36 2009 +0000
Committer: Benjamin Herrenschmidt <benh@kernel.crashing.org>
Commitdate: Fri Oct 30 17:21:28 2009 +1100
References: bnc#701198, FATE#311687
Subject: IBM powerpc feature
Patch-mainline: v2.6.33-rc1
From: bugproxy@us.ibm.com
Git-commit: ae7dd0208f62f1d6db4c49b85e54fa7bbed0ea4e

    powerpc/nvram_64: Remove unused code
    
    nvram_find_partition() has no user. The call site was removed in the
    arch/powerpc move, but the function stayed. Remove it.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: linuxppc-dev@ozlabs.org
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>

Acked-by: Torsten Duwe <duwe@suse.de>

---
 arch/powerpc/include/asm/nvram.h |    1 -
 arch/powerpc/kernel/nvram_64.c   |   25 -------------------------
 2 files changed, 0 insertions(+), 26 deletions(-)

Index: linux-2.6.32-SLE11-SP2/arch/powerpc/include/asm/nvram.h
===================================================================
--- linux-2.6.32-SLE11-SP2.orig/arch/powerpc/include/asm/nvram.h
+++ linux-2.6.32-SLE11-SP2/arch/powerpc/include/asm/nvram.h
@@ -35,7 +35,6 @@ extern int nvram_write_error_log(char *
 extern int nvram_read_error_log(char * buff, int length,
 					 unsigned int * err_type, unsigned int *err_seq);
 extern int nvram_clear_error_log(void);
-extern struct nvram_partition *nvram_find_partition(int sig, const char *name);
 
 extern int pSeries_nvram_init(void);
 
Index: linux-2.6.32-SLE11-SP2/arch/powerpc/kernel/nvram_64.c
===================================================================
--- linux-2.6.32-SLE11-SP2.orig/arch/powerpc/kernel/nvram_64.c
+++ linux-2.6.32-SLE11-SP2/arch/powerpc/kernel/nvram_64.c
@@ -247,31 +247,6 @@ static unsigned char nvram_checksum(stru
 	return c_sum;
 }
 
-
-/*
- * Find an nvram partition, sig can be 0 for any
- * partition or name can be NULL for any name, else
- * tries to match both
- */
-struct nvram_partition *nvram_find_partition(int sig, const char *name)
-{
-	struct nvram_partition * part;
-	struct list_head * p;
-
-	list_for_each(p, &nvram_part->partition) {
-		part = list_entry(p, struct nvram_partition, partition);
-
-		if (sig && part->header.signature != sig)
-			continue;
-		if (name && 0 != strncmp(name, part->header.name, 12))
-			continue;
-		return part; 
-	}
-	return NULL;
-}
-EXPORT_SYMBOL(nvram_find_partition);
-
-
 static int nvram_remove_os_partition(void)
 {
 	struct list_head *i;


