From: Gerald Schaefer <geraldsc@de.ibm.com>
Subject: kernel: fix interrupt accounting
Patch-mainline: yes
References: bnc#735369,LTC#77186

Symptom:     The number of external call and emergency signal interrupts
             as reported in /proc/interrupts are unexpectedly distributed.
Problem:     When the decision is made if an external interrupt is an
             external call or emergency signal interrupt the code should
             consider the lower two bytes of the extint_code parameter that
             gets passed to the external interrupt handler. However it
             compared the whole value with the external call interruption
             code which might even if it should since the whole parameter
             was looked at.
             As a consquence external call interrupts are accounted as
             emergency signal interrupts.
Solution:    Mask the extint_code parameter before comparison.

Acked-by: John Jolly <jjolly@suse.de>
---
 arch/s390/kernel/smp.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

--- a/arch/s390/kernel/smp.c
+++ b/arch/s390/kernel/smp.c
@@ -161,7 +161,7 @@ static void do_ext_call_interrupt(unsign
 {
 	unsigned long bits;
 
-	if (ext_int_code == 0x1202)
+	if ((ext_int_code &0xffff) == 0x1202)
 		kstat_cpu(smp_processor_id()).irqs[EXTINT_EXC]++;
 	else
 		kstat_cpu(smp_processor_id()).irqs[EXTINT_EMS]++;
