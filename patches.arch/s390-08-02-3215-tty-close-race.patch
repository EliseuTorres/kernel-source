From: Martin Schwidefsky <schwidefsky@de.ibm.com>
Subject: kernel: 3215 console crash
Patch-mainline: not yet
Git-commit: -
References: bnc#825037, LTC#94302

Description:  kernel: 3215 console crash
Symptom:      Null-pointer dereference in __wake_up.
Problem:      The close of a tty disconnects the tty structure from
              the 3215 device. The clearing of the tty pointer in the
              raw3215_info structure is done after the tasklet_kill call.
              If an interrupt occurs while the tty pointer is still valid,
              raw3215_next_io can schedule another tasklet call. Before
              the new tasklet can be run the tty pointer is cleared and
              raw3215_wakeup will call tty_wakeup with a NULL pointer.
Solution:     Clear the tty pointer in the raw3215_info before the call
              to tasklet_kill and add a check in raw3215_wakeup for the
              tty pointer against NULL.
Reproduction: The race can be hit every time a console login is quitted.

Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
Acked-by: John Jolly <jjolly@suse.de>
---
 drivers/s390/char/con3215.c |    5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

--- a/drivers/s390/char/con3215.c
+++ b/drivers/s390/char/con3215.c
@@ -340,7 +340,8 @@ static inline void raw3215_try_io(struct
 static void raw3215_wakeup(unsigned long data)
 {
 	struct raw3215_info *raw = (struct raw3215_info *) data;
-	tty_wakeup(raw->tty);
+	if (raw->tty)
+		tty_wakeup(raw->tty);
 }
 
 /*
@@ -973,9 +974,9 @@ static void tty3215_close(struct tty_str
 	tty->closing = 1;
 	/* Shutdown the terminal */
 	raw3215_shutdown(raw);
+	raw->tty = NULL;
 	tasklet_kill(&raw->tlet);
 	tty->closing = 0;
-	raw->tty = NULL;
 }
 
 /*
