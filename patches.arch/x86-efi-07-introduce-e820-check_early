From: Raymund Will <rw@suse.de>
Subject: x86, e820: introduce check_early()
Patch-mainline: N/A
References: bnc#568848, bnc#655434, bnc#681242

...and increase MAX_EARLY_RES (to match upstream 2.6.33-rc2, 6a1e008a)
while we're at it.

This 'check_early()' is needed by the backport of
7d68dc3f1003a38948c55c803c32d1989dd49198
(in patches.arch/x86-efi-08-reserve_early-only-unreserved-regions)
as we're lacking the migration of 'lib/lmb.c' to 'mm/memblock.c' with
all subsequent fixes & improvements.

[v2]
- double MAX_EARLY_RES as a first machine hit 35 early reservations
- don't open-code check_early() and adapt (i.e. invert) return values
  to match expectations (clarified by comment)

Signed-off-by: Raymund Will <rw@suse.de>

---
 arch/x86/include/asm/e820.h |    1 +
 arch/x86/kernel/e820.c      |   17 ++++++++++++++++-
 2 files changed, 17 insertions(+), 1 deletion(-)

--- a/arch/x86/include/asm/e820.h
+++ b/arch/x86/include/asm/e820.h
@@ -108,6 +108,7 @@ extern u64 find_e820_area(u64 start, u64
 extern u64 find_e820_area_size(u64 start, u64 *sizep, u64 align);
 extern void reserve_early(u64 start, u64 end, char *name);
 extern void reserve_early_overlap_ok(u64 start, u64 end, char *name);
+extern int check_early(u64 start, u64 end);
 extern void free_early(u64 start, u64 end);
 extern void early_res_to_bootmem(u64 start, u64 end);
 extern u64 early_reserve_e820(u64 startt, u64 sizet, u64 align);
--- a/arch/x86/kernel/e820.c
+++ b/arch/x86/kernel/e820.c
@@ -729,7 +729,7 @@ core_initcall(e820_mark_nvs_memory);
 /*
  * Early reserved memory areas.
  */
-#define MAX_EARLY_RES 20
+#define MAX_EARLY_RES 64
 
 struct early_res {
 	u64 start, end;
@@ -905,6 +905,21 @@ void __init reserve_early(u64 start, u64
 	__reserve_early(start, end, name, 0);
 }
 
+/*
+ * Check whether given range would be early reservable.
+ */
+int __init check_early(u64 start, u64 end)
+{
+	int i;
+	struct early_res *r;
+
+	i = find_overlapped_early(start, end);
+	r = &early_res[i];
+	if (i >= MAX_EARLY_RES || r->end)
+		return 0;
+	return 1;
+}
+
 void __init free_early(u64 start, u64 end)
 {
 	struct early_res *r;
