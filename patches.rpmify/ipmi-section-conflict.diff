From: Jeff Mahoney <jeffm@suse.com>
Subject: [PATCH] ipmi: Fix section type conflicts

 Module parameters can't be static since the module macros explicitly
 put those symbols in the __param section. It causes a section conflict
 on ia64. This doesn't occur with standard types, since they are global
 and exported.

Signed-off-by: Jeff Mahoney <jeffm@suse.com>
---

 drivers/char/ipmi/ipmi_si_intf.c  |    4 ++--
 drivers/char/ipmi/ipmi_watchdog.c |   10 +++++-----
 2 files changed, 7 insertions(+), 7 deletions(-)

--- a/drivers/char/ipmi/ipmi_si_intf.c
+++ b/drivers/char/ipmi/ipmi_si_intf.c
@@ -1150,7 +1150,7 @@ static unsigned int num_slave_addrs;
 #define IPMI_MEM_ADDR_SPACE 1
 static char *addr_space_to_str[] = { "i/o", "mem" };
 
-static int hotmod_handler(const char *val, struct kernel_param *kp);
+int hotmod_handler(const char *val, struct kernel_param *kp);
 
 module_param_call(hotmod, hotmod_handler, NULL, NULL, 0200);
 MODULE_PARM_DESC(hotmod, "Add and remove interfaces.  See"
@@ -1572,7 +1572,7 @@ static int check_hotmod_int_op(const cha
 	return 0;
 }
 
-static int hotmod_handler(const char *val, struct kernel_param *kp)
+int hotmod_handler(const char *val, struct kernel_param *kp)
 {
 	char *str = kstrdup(val, GFP_KERNEL);
 	int  rv;
--- a/drivers/char/ipmi/ipmi_watchdog.c
+++ b/drivers/char/ipmi/ipmi_watchdog.c
@@ -196,7 +196,7 @@ static void ipmi_unregister_watchdog(int
  */
 static int start_now;
 
-static int set_param_int(const char *val, struct kernel_param *kp)
+int set_param_int(const char *val, struct kernel_param *kp)
 {
 	char *endp;
 	int  l;
@@ -215,7 +215,7 @@ static int set_param_int(const char *val
 	return rv;
 }
 
-static int get_param_int(char *buffer, struct kernel_param *kp)
+int get_param_int(char *buffer, struct kernel_param *kp)
 {
 	return sprintf(buffer, "%i", *((int *)kp->arg));
 }
@@ -227,7 +227,7 @@ static int preaction_op(const char *inva
 static int preop_op(const char *inval, char *outval);
 static void check_parms(void);
 
-static int set_param_str(const char *val, struct kernel_param *kp)
+int set_param_str(const char *val, struct kernel_param *kp)
 {
 	action_fn  fn = (action_fn) kp->arg;
 	int        rv = 0;
@@ -251,7 +251,7 @@ static int set_param_str(const char *val
 	return rv;
 }
 
-static int get_param_str(char *buffer, struct kernel_param *kp)
+int get_param_str(char *buffer, struct kernel_param *kp)
 {
 	action_fn fn = (action_fn) kp->arg;
 	int       rv;
@@ -263,7 +263,7 @@ static int get_param_str(char *buffer, s
 }
 
 
-static int set_param_wdog_ifnum(const char *val, struct kernel_param *kp)
+int set_param_wdog_ifnum(const char *val, struct kernel_param *kp)
 {
 	int rv = param_set_int(val, kp);
 	if (rv)
