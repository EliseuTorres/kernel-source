From: Jiri Slaby <jslaby@suse.cz>
Subject: kABI: protect struct trace_iterator
Patch-mainline: never, kabi

In 3.0.91, commit c63eea737793f3562cc62d1395b6b1d325804d27 (tracing:
Fix fields of struct trace_iterator that are zeroed by mistake),
upstream commit ed5467da0e369e65b247b99eb6403cb79172bcda, moved
started member in struct trace_iterator.  It indeed changed layout of
that structure.

But this is only an internal structure to tracers, so just ignore
that.

Signed-off-by: Jiri Slaby <jslaby@suse.cz>
---
 include/linux/ftrace_event.h |    7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

--- a/include/linux/ftrace_event.h
+++ b/include/linux/ftrace_event.h
@@ -70,9 +70,9 @@ struct trace_iterator {
 
 	/* trace_seq for __print_flags() and __print_symbolic() etc. */
 	struct trace_seq	tmp_seq;
-
+#ifndef __GENKSYMS__
 	cpumask_var_t		started;
-
+#endif
 	/* The below is zeroed out in pipe_read */
 	struct trace_seq	seq;
 	struct trace_entry	*ent;
@@ -85,6 +85,9 @@ struct trace_iterator {
 	long			idx;
 
 	/* All new field here will be zeroed out in pipe_read */
+#ifdef __GENKSYMS__
+	cpumask_var_t		started;
+#endif
 };
 
 
