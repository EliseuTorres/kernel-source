From: Jiri Slaby <jslaby@suse.cz>
Date: Thu, 1 Mar 2012 17:01:46 +0100
Subject: Revert "i387: math_state_restore() isn't called from asm"
Patch-mainline: never

This reverts commit 454d147172263d0b022f32b86336f92243f89158, upstream
be98c2cdb15ba26148cd2bd58a857d4f7759ed38.

It removed asmlinkage from math_state_restore. Very likely, we don't
need it tagged that way. IOW nobody should call that from out-of-tree
modules from assembler. But what if not?

Conflicts:

	arch/x86/include/asm/i387.h

Signed-off-by: Jiri Slaby <jslaby@suse.cz>
---
 arch/x86/include/asm/i387.h |    2 +-
 arch/x86/kernel/traps.c     |    6 +++---
 2 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/arch/x86/include/asm/i387.h b/arch/x86/include/asm/i387.h
index a850b4d..a5b1c40 100644
--- a/arch/x86/include/asm/i387.h
+++ b/arch/x86/include/asm/i387.h
@@ -30,7 +30,7 @@ extern void fpu_init(void);
 extern void mxcsr_feature_mask_init(void);
 extern int init_fpu(struct task_struct *child);
 extern void __math_state_restore(struct task_struct *);
-extern void math_state_restore(void);
+extern asmlinkage void math_state_restore(void);
 extern int dump_fpu(struct pt_regs *, struct user_i387_struct *);
 
 extern user_regset_active_fn fpregs_active, xfpregs_active;
diff --git a/arch/x86/kernel/traps.c b/arch/x86/kernel/traps.c
index 1b26e01..5562fdb 100644
--- a/arch/x86/kernel/traps.c
+++ b/arch/x86/kernel/traps.c
@@ -754,10 +754,10 @@ void __math_state_restore(struct task_struct *tsk)
  * Careful.. There are problems with IBM-designed IRQ13 behaviour.
  * Don't touch unless you *really* know how it works.
  *
- * Must be called with kernel preemption disabled (eg with local
- * local interrupts as in the case of do_device_not_available).
+ * Must be called with kernel preemption disabled (in this case,
+ * local interrupts are disabled at the call-site in entry.S).
  */
-void math_state_restore(void)
+asmlinkage void math_state_restore(void)
 {
 	struct task_struct *tsk = current;
 
-- 
1.7.9.2

