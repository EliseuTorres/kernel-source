From: Jiri Slaby <jslaby@suse.cz>
Subject: kABI: protect thread_struct
Patch-mainline: never, kABI

In 3.0.44, commit 64ac72f81b1b41819dab (sched: Fix race in
task_group()), upstream commit 8323f26ce34254607, added
sched_task_group to thread_struct. It indeed changed the layout of the
structure.

Let's move the newly added member at the end and use suse_kabi_padding
space for that.

Signed-off-by: Jiri Slaby <jslaby@suse.cz>
---
 include/linux/sched.h |    9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

--- a/include/linux/sched.h
+++ b/include/linux/sched.h
@@ -1237,9 +1237,6 @@ struct task_struct {
 	const struct sched_class *sched_class;
 	struct sched_entity se;
 	struct sched_rt_entity rt;
-#ifdef CONFIG_CGROUP_SCHED
-	struct task_group *sched_task_group;
-#endif
 
 #ifdef CONFIG_PREEMPT_NOTIFIERS
 	/* list of struct preempt_notifier: */
@@ -1579,7 +1576,13 @@ struct task_struct {
 #ifdef CONFIG_HAVE_HW_BREAKPOINT
 	atomic_t ptrace_bp_refcnt;
 #endif
+#ifdef __GENKSYMS__
 	void *suse_kabi_padding;
+#else
+#ifdef CONFIG_CGROUP_SCHED
+	struct task_group *sched_task_group;
+#endif
+#endif
 };
 
 /* Future-safe accessor for struct task_struct's cpus_allowed. */
