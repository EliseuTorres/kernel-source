From: Jeff Mahoney <jeffm@suse.com>
Subject: KABI: Workaround drm_ioctl_desc->cmd_drv addition
Patch-mainline: Never

 This patch makes the drm_ioctl_desc->cmd_drv structure member optional,
 flagged by a new flag in drm_ioctl_desc. Users without the flag will
 simply revert to the old behavior which could corrupt userspace if
 the caller supplies a buffer that is too small.

Signed-off-by: Jeff Mahoney <jeffm@suse.com>
---
 drivers/gpu/drm/drm_drv.c |   13 +++++++++----
 include/drm/drmP.h        |    9 ++++++++-
 2 files changed, 17 insertions(+), 5 deletions(-)

--- a/drivers/gpu/drm/drm_drv.c
+++ b/drivers/gpu/drm/drm_drv.c
@@ -434,12 +434,17 @@ int drm_ioctl(struct inode *inode, struc
 		goto err_i1;
 	if ((nr >= DRM_COMMAND_BASE) && (nr < DRM_COMMAND_END) &&
 	    (nr < DRM_COMMAND_BASE + dev->driver->num_ioctls)) {
-		u32 drv_size;
 		ioctl = &dev->driver->ioctls[nr - DRM_COMMAND_BASE];
-		drv_size = _IOC_SIZE(ioctl->cmd_drv);
 		usize = asize = _IOC_SIZE(cmd);
-		if (drv_size > asize)
-			asize = drv_size;
+
+		/* The flag check enables a workaround for modules built
+		 * against the initial kernel source that did not contain
+		 * ioctl->cmd_drv */
+		if (ioctl->flags & DRM_HAS_CMD_DRV) {
+			u32 drv_size = _IOC_SIZE(ioctl->cmd_drv);
+			if (drv_size > asize)
+				asize = drv_size;
+		}
 	}
 	else if ((nr >= DRM_COMMAND_END) || (nr < DRM_COMMAND_BASE)) {
 		ioctl = &drm_ioctls[nr];
--- a/include/drm/drmP.h
+++ b/include/drm/drmP.h
@@ -327,11 +327,18 @@ typedef int drm_ioctl_compat_t(struct fi
 #define DRM_ROOT_ONLY	0x4
 #define DRM_CONTROL_ALLOW 0x8
 
+/* This should never be used directly. It is to keep the fix to write to
+ * underallocated buffers from userspace without breaking modules that
+ * were built against kernel sources without the fix. */
+#define DRM_HAS_CMD_DRV 0x40000000
+
 struct drm_ioctl_desc {
 	unsigned int cmd;
 	int flags;
 	drm_ioctl_t *func;
+#ifndef __GENKSYMS__
 	unsigned int cmd_drv;
+#endif
 };
 
 /**
@@ -340,7 +347,7 @@ struct drm_ioctl_desc {
  */
 
 #define DRM_IOCTL_DEF_DRV(ioctl, _func, _flags)			\
-	[DRM_IOCTL_NR(DRM_##ioctl)] = {.cmd = DRM_##ioctl, .func = _func, .flags = _flags, .cmd_drv = DRM_IOCTL_##ioctl}
+	[DRM_IOCTL_NR(DRM_##ioctl)] = {.cmd = DRM_##ioctl, .func = _func, .flags = _flags|DRM_HAS_CMD_DRV, .cmd_drv = DRM_IOCTL_##ioctl}
 
 struct drm_magic_entry {
 	struct list_head head;
