From: Michal Kubecek <mkubecek@suse.cz>
Date: Mon, 14 May 2012 16:54:00 +0200
Subject: netfilter: additional kABI fix after making event callback registration per-netns
Patch-mainline: never - kABI fix
References: bnc#758540

Original kABI fix in commit a0a5ba2e2dfeb4ee2a25f3196ae5dd4f142366a6
was insufficient. Hide all changes into a __GENKSYMS__ ifdef.

Signed-off-by: Michal Kubecek <mkubecek@suse.cz>
---
 include/net/netfilter/nf_conntrack_ecache.h |   12 ++++++++++++
 include/net/netns/conntrack.h               |    3 +++
 net/netfilter/nf_conntrack_ecache.c         |   24 ++++++++++++++++++++++++
 net/netfilter/nf_conntrack_standalone.c     |    3 +++
 4 files changed, 42 insertions(+), 0 deletions(-)

diff --git a/include/net/netfilter/nf_conntrack_ecache.h b/include/net/netfilter/nf_conntrack_ecache.h
index 3b0d064..a3ae6ea 100644
--- a/include/net/netfilter/nf_conntrack_ecache.h
+++ b/include/net/netfilter/nf_conntrack_ecache.h
@@ -70,8 +70,14 @@ struct nf_ct_event_notifier {
 	int (*fcn)(unsigned int events, struct nf_ct_event *item);
 };
 
+#ifdef __GENKSYMS__
+extern struct nf_ct_event_notifier __rcu *nf_conntrack_event_cb;
+extern int nf_conntrack_register_notifier(struct nf_ct_event_notifier *nb);
+extern void nf_conntrack_unregister_notifier(struct nf_ct_event_notifier *nb);
+#else
 extern int nf_conntrack_register_notifier(struct net *net, struct nf_ct_event_notifier *nb);
 extern void nf_conntrack_unregister_notifier(struct net *net, struct nf_ct_event_notifier *nb);
+#endif
 
 extern void nf_ct_deliver_cached_events(struct nf_conn *ct);
 
@@ -170,8 +176,14 @@ struct nf_exp_event_notifier {
 	int (*fcn)(unsigned int events, struct nf_exp_event *item);
 };
 
+#ifdef __GENKSYMS__
+extern struct nf_exp_event_notifier __rcu *nf_expect_event_cb;
+extern int nf_ct_expect_register_notifier(struct nf_exp_event_notifier *nb);
+extern void nf_ct_expect_unregister_notifier(struct nf_exp_event_notifier *nb);
+#else
 extern int nf_ct_expect_register_notifier(struct net *net, struct nf_exp_event_notifier *nb);
 extern void nf_ct_expect_unregister_notifier(struct net *net, struct nf_exp_event_notifier *nb);
+#endif
 
 static inline void
 nf_ct_expect_event_report(enum ip_conntrack_expect_events event,
diff --git a/include/net/netns/conntrack.h b/include/net/netns/conntrack.h
index 41c9e3d..1968725 100644
--- a/include/net/netns/conntrack.h
+++ b/include/net/netns/conntrack.h
@@ -33,6 +33,7 @@ struct netns_ct {
 	char			*slabname;
 };
 
+#ifndef __GENKSYMS__
 #ifdef CONFIG_NF_CONNTRACK_EVENTS
 struct netns_ct_exp {
 	struct nf_ct_event_notifier __rcu *nf_conntrack_event_cb;
@@ -40,3 +41,5 @@ struct netns_ct_exp {
 };
 #endif
 #endif
+
+#endif
diff --git a/net/netfilter/nf_conntrack_ecache.c b/net/netfilter/nf_conntrack_ecache.c
index 535aceb..1e89d59 100644
--- a/net/netfilter/nf_conntrack_ecache.c
+++ b/net/netfilter/nf_conntrack_ecache.c
@@ -26,6 +26,14 @@
 
 static DEFINE_MUTEX(nf_ct_ecache_mutex);
 
+#ifdef __GENKSYMS__
+struct nf_ct_event_notifier __rcu *nf_conntrack_event_cb __read_mostly;
+EXPORT_SYMBOL_GPL(nf_conntrack_event_cb);
+
+struct nf_exp_event_notifier __rcu *nf_expect_event_cb __read_mostly;
+EXPORT_SYMBOL_GPL(nf_expect_event_cb);
+#endif
+
 /* deliver cached events and clear cache entry - must be called with locally
  * disabled softirqs */
 void nf_ct_deliver_cached_events(struct nf_conn *ct)
@@ -78,8 +86,12 @@ out_unlock:
 }
 EXPORT_SYMBOL_GPL(nf_ct_deliver_cached_events);
 
+#ifdef __GENKSYMS__
+int nf_conntrack_register_notifier(struct nf_ct_event_notifier *new)
+#else
 int nf_conntrack_register_notifier(struct net *net,
 				   struct nf_ct_event_notifier *new)
+#endif
 {
 	int ret = 0;
 	struct nf_ct_event_notifier *notify;
@@ -102,8 +114,12 @@ out_unlock:
 }
 EXPORT_SYMBOL_GPL(nf_conntrack_register_notifier);
 
+#ifdef __GENKSYMS__
+void nf_conntrack_unregister_notifier(struct nf_ct_event_notifier *new)
+#else
 void nf_conntrack_unregister_notifier(struct net *net,
 				      struct nf_ct_event_notifier *new)
+#endif
 {
 	struct nf_ct_event_notifier *notify;
 	struct netns_ct_exp *net_ct = get_netns_ct_exp(net);
@@ -117,8 +133,12 @@ void nf_conntrack_unregister_notifier(struct net *net,
 }
 EXPORT_SYMBOL_GPL(nf_conntrack_unregister_notifier);
 
+#ifdef __GENKSYMS__
+int nf_ct_expect_register_notifier(struct nf_exp_event_notifier *new)
+#else
 int nf_ct_expect_register_notifier(struct net *net,
 				   struct nf_exp_event_notifier *new)
+#endif
 {
 	int ret = 0;
 	struct nf_exp_event_notifier *notify;
@@ -141,8 +161,12 @@ out_unlock:
 }
 EXPORT_SYMBOL_GPL(nf_ct_expect_register_notifier);
 
+#ifdef __GENKSYMS__
+void nf_ct_expect_unregister_notifier(struct nf_exp_event_notifier *new)
+#else
 void nf_ct_expect_unregister_notifier(struct net *net,
 				      struct nf_exp_event_notifier *new)
+#endif
 {
 	struct nf_exp_event_notifier *notify;
 	struct netns_ct_exp *net_ct = get_netns_ct_exp(net);
diff --git a/net/netfilter/nf_conntrack_standalone.c b/net/netfilter/nf_conntrack_standalone.c
index 8bac70a..087e276 100644
--- a/net/netfilter/nf_conntrack_standalone.c
+++ b/net/netfilter/nf_conntrack_standalone.c
@@ -17,6 +17,9 @@
 #include <linux/netdevice.h>
 #include <linux/security.h>
 #include <net/net_namespace.h>
+#ifndef __GENKSYMS__
+#include <net/netns/generic.h>
+#endif
 #ifdef CONFIG_SYSCTL
 #include <linux/sysctl.h>
 #endif
-- 
1.7.7

