From: Michal Hocko <mhocko@suse.cz>
Subject: powerpc, kabi: reintroduce __cputime_msec_factor
Patch-mainline: never
References: bnc#771242

__cputime_msec_factor is exported for symbols so we cannot get rid of it.

Signed-off-by: Michal Hocko <mhocko@suse.cz>


---
 arch/powerpc/include/asm/cputime.h |    6 ++++++
 arch/powerpc/kernel/time.c         |    4 ++++
 2 files changed, 10 insertions(+)

--- a/arch/powerpc/include/asm/cputime.h
+++ b/arch/powerpc/include/asm/cputime.h
@@ -128,6 +128,12 @@ static inline u64 cputime64_to_jiffies64
  */
 extern u64 __cputime_usec_factor;
 
+/*
+ * this one is deprecated and kept here only because of the kABI
+ * compatibility.
+ */
+extern u64 __cputime_msec_factor;
+
 static inline unsigned long cputime_to_usecs(const cputime_t ct)
 {
 	return mulhdu(ct, __cputime_usec_factor);
--- a/arch/powerpc/kernel/time.c
+++ b/arch/powerpc/kernel/time.c
@@ -175,6 +175,8 @@ u64 __cputime_jiffies_factor;
 EXPORT_SYMBOL(__cputime_jiffies_factor);
 u64 __cputime_usec_factor;
 EXPORT_SYMBOL(__cputime_usec_factor);
+u64 __cputime_msec_factor;
+EXPORT_SYMBOL(__cputime_msec_factor);
 u64 __cputime_sec_factor;
 EXPORT_SYMBOL(__cputime_sec_factor);
 u64 __cputime_clockt_factor;
@@ -194,6 +196,8 @@ static void calc_cputime_factors(void)
 	__cputime_jiffies_factor = res.result_low;
 	div128_by_32(1000000, 0, tb_ticks_per_sec, &res);
 	__cputime_usec_factor = res.result_low;
+	div128_by_32(1000, 0, tb_ticks_per_sec, &res);
+	__cputime_msec_factor = res.result_low;
 	div128_by_32(1, 0, tb_ticks_per_sec, &res);
 	__cputime_sec_factor = res.result_low;
 	div128_by_32(USER_HZ, 0, tb_ticks_per_sec, &res);
