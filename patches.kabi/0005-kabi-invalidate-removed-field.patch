From: Michal Hocko <mhocko@suse.cz>
Subject: kabi: invalidate removed sys_elem_dir::children
Patch-mainline: never, kabi fixup
References: bnc#919589

sys_elem_dir::children has been removed from the code but we have
to preserve it to preserve the kabi (size of the structure). Let's
change the type to void* and abuse LIST_POISON1 to catch a potential
abuse both in compile time and runtime.

Signed-off-by: Michal Hocko <mhocko@suse.cz>

---
 fs/sysfs/dir.c   |    2 ++
 fs/sysfs/mount.c |    2 ++
 fs/sysfs/sysfs.h |    5 +++++
 3 files changed, 9 insertions(+)

--- a/fs/sysfs/dir.c
+++ b/fs/sysfs/dir.c
@@ -22,6 +22,7 @@
 #include <linux/mutex.h>
 #include <linux/slab.h>
 #include <linux/security.h>
+#include <linux/poison.h>
 #include "sysfs.h"
 
 DEFINE_MUTEX(sysfs_mutex);
@@ -349,6 +350,7 @@ struct sysfs_dirent *sysfs_new_dirent(co
 	sd->s_name = name;
 	sd->s_mode = mode;
 	sd->s_flags = type;
+	sd->s_dir.children_unused = LIST_POISON1;
 
 	return sd;
 
--- a/fs/sysfs/mount.c
+++ b/fs/sysfs/mount.c
@@ -19,6 +19,7 @@
 #include <linux/module.h>
 #include <linux/magic.h>
 #include <linux/slab.h>
+#include <linux/poison.h>
 
 #include "sysfs.h"
 
@@ -35,6 +36,7 @@ static const struct super_operations sys
 struct sysfs_dirent sysfs_root = {
 	.s_name		= "",
 	.s_count	= ATOMIC_INIT(1),
+	.s_dir		= { .children_unused = LIST_POISON1 },
 	.s_flags	= SYSFS_DIR | (KOBJ_NS_TYPE_NONE << SYSFS_NS_TYPE_SHIFT),
 	.s_mode		= S_IFDIR | S_IRWXU | S_IRUGO | S_IXUGO,
 	.s_ino		= 1,
--- a/fs/sysfs/sysfs.h
+++ b/fs/sysfs/sysfs.h
@@ -19,7 +19,12 @@ struct sysfs_open_dirent;
 struct sysfs_elem_dir {
 	struct kobject		*kobj;
 
+#ifdef __GENKSYMS__
 	struct sysfs_dirent	*children;	/* No longer used */
+#else
+	/* Make sure the compilation fails if somebody still needs it */
+	void			*children_unused;
+#endif
 
 	unsigned long		subdirs;
 };
