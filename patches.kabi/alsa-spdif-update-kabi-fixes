From: Takashi Iwai <tiwai@suse.de>
Subject: Fix kABI breakage due to HD-audio HDMI updates
Patch-mainline: Never
References: bnc#780977

Signed-off-by: Takashi Iwai <tiwai@suse.de>

---
 sound/pci/hda/hda_codec.c      |    7 +++++++
 sound/pci/hda/hda_codec.h      |   10 ++++++++--
 sound/pci/hda/hda_local.h      |    3 +--
 sound/pci/hda/patch_analog.c   |    1 -
 sound/pci/hda/patch_ca0110.c   |    3 +--
 sound/pci/hda/patch_cmedia.c   |    1 -
 sound/pci/hda/patch_conexant.c |    1 -
 sound/pci/hda/patch_hdmi.c     |    1 -
 sound/pci/hda/patch_via.c      |    1 -
 9 files changed, 17 insertions(+), 11 deletions(-)

--- a/sound/pci/hda/hda_local.h
+++ b/sound/pci/hda/hda_local.h
@@ -215,8 +215,7 @@ int snd_hda_mixer_bind_tlv(struct snd_kc
 int snd_hda_create_dig_out_ctls(struct hda_codec *codec,
 				hda_nid_t associated_nid,
 				hda_nid_t cvt_nid, int type);
-#define snd_hda_create_spdif_out_ctls(codec, anid, cnid) \
-	snd_hda_create_dig_out_ctls(codec, anid, cnid, HDA_PCM_TYPE_SPDIF)
+int snd_hda_create_spdif_out_ctls(struct hda_codec *codec, hda_nid_t nid);
 int snd_hda_create_spdif_in_ctls(struct hda_codec *codec, hda_nid_t nid);
 
 /*
--- a/sound/pci/hda/patch_analog.c
+++ b/sound/pci/hda/patch_analog.c
@@ -214,7 +214,6 @@ static int ad198x_build_controls(struct
 	}
 	if (spec->multiout.dig_out_nid) {
 		err = snd_hda_create_spdif_out_ctls(codec,
-						    spec->multiout.dig_out_nid,
 						    spec->multiout.dig_out_nid);
 		if (err < 0)
 			return err;
--- a/sound/pci/hda/patch_ca0110.c
+++ b/sound/pci/hda/patch_ca0110.c
@@ -240,8 +240,7 @@ static int ca0110_build_controls(struct
 	}
 
 	if (spec->dig_out) {
-		err = snd_hda_create_spdif_out_ctls(codec, spec->dig_out,
-						    spec->dig_out);
+		err = snd_hda_create_spdif_out_ctls(codec, spec->dig_out);
 		if (err < 0)
 			return err;
 		err = snd_hda_create_spdif_share_sw(codec, &spec->multiout);
--- a/sound/pci/hda/patch_cmedia.c
+++ b/sound/pci/hda/patch_cmedia.c
@@ -328,7 +328,6 @@ static int cmi9880_build_controls(struct
 	}
 	if (spec->multiout.dig_out_nid) {
 		err = snd_hda_create_spdif_out_ctls(codec,
-						    spec->multiout.dig_out_nid,
 						    spec->multiout.dig_out_nid);
 		if (err < 0)
 			return err;
--- a/sound/pci/hda/patch_conexant.c
+++ b/sound/pci/hda/patch_conexant.c
@@ -524,7 +524,6 @@ static int conexant_build_controls(struc
 	}
 	if (spec->multiout.dig_out_nid) {
 		err = snd_hda_create_spdif_out_ctls(codec,
-						    spec->multiout.dig_out_nid,
 						    spec->multiout.dig_out_nid);
 		if (err < 0)
 			return err;
--- a/sound/pci/hda/patch_hdmi.c
+++ b/sound/pci/hda/patch_hdmi.c
@@ -1335,7 +1335,6 @@ static int simple_playback_build_control
 
 	for (i = 0; i < codec->num_pcms; i++) {
 		err = snd_hda_create_spdif_out_ctls(codec,
-						    spec->cvts[i].cvt_nid,
 						    spec->cvts[i].cvt_nid);
 		if (err < 0)
 			return err;
--- a/sound/pci/hda/patch_via.c
+++ b/sound/pci/hda/patch_via.c
@@ -1511,7 +1511,6 @@ static int via_build_controls(struct hda
 
 	if (spec->multiout.dig_out_nid) {
 		err = snd_hda_create_spdif_out_ctls(codec,
-						    spec->multiout.dig_out_nid,
 						    spec->multiout.dig_out_nid);
 		if (err < 0)
 			return err;
--- a/sound/pci/hda/hda_codec.c
+++ b/sound/pci/hda/hda_codec.c
@@ -2899,6 +2899,13 @@ int snd_hda_create_dig_out_ctls(struct h
 }
 EXPORT_SYMBOL_HDA(snd_hda_create_dig_out_ctls);
 
+/* just for compatibility */
+int snd_hda_create_spdif_out_ctls(struct hda_codec *codec, hda_nid_t nid)
+{
+	return snd_hda_create_dig_out_ctls(codec, nid, nid, HDA_PCM_TYPE_SPDIF);
+}
+EXPORT_SYMBOL_HDA(snd_hda_create_spdif_out_ctls);
+
 struct hda_spdif_out *snd_hda_spdif_out_of_nid(struct hda_codec *codec,
 					       hda_nid_t nid)
 {
--- a/sound/pci/hda/hda_codec.h
+++ b/sound/pci/hda/hda_codec.h
@@ -835,9 +835,10 @@ struct hda_codec {
 
 	struct mutex spdif_mutex;
 	struct mutex control_mutex;
-	struct snd_array spdif_out;
+	/* two spdif_* below are just place holders */
+	unsigned int spdif_status;	/* IEC958 status bits */
+	unsigned short spdif_ctls;	/* SPDIF control bits */
 	unsigned int spdif_in_enable;	/* SPDIF input enable? */
-	int primary_dig_out_type;	/* primary digital out PCM type */
 	const hda_nid_t *slave_dig_outs; /* optional digital out slave widgets */
 	struct snd_array init_pins;	/* initial (BIOS) pin configurations */
 	struct snd_array driver_pins;	/* pin configs set by codec parser */
@@ -879,6 +880,11 @@ struct hda_codec {
 	/* jack detection */
 	struct snd_array jacks;
 #endif
+
+#ifndef __GENKSYMS__
+	struct snd_array spdif_out;
+	int primary_dig_out_type;	/* primary digital out PCM type */
+#endif
 };
 
 /* direction */
