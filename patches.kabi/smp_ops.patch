From: Jiri Slaby <jslaby@suse.cz>
Subject: Revert "x86, kexec: Make sure to stop all CPUs before exiting the kernel" kabi changes
Patch-mainline: never

This reverts kabi changes introduced in commit
ae832c21a08514fd11d2d1d6e217c8a537764bb0. smp_ops should not be
defined outside the kernel, so add the new member as stop_other_cpus,
but leave smp_send_stop as is. It is because there is an inline which
does smp_ops.smp_send_stop without any parameter and hence be called
from anywhere.

Further, call smp_send_stop from .smp_send_stop of all defined smp_ops
(native+xen) appropriately. Despite smp_send_stop is inline, it's no
problem, according to C specs, compilar shall create a local copy, if
referenced otherwise than call.

Signed-off-by: Jiri Slaby <jslaby@suse.cz>
---
 arch/x86/include/asm/smp.h |    5 ++++-
 arch/x86/kernel/smp.c      |    1 +
 arch/x86/xen/smp.c         |    1 +
 3 files changed, 6 insertions(+), 1 deletion(-)

--- a/arch/x86/include/asm/smp.h
+++ b/arch/x86/include/asm/smp.h
@@ -50,7 +50,7 @@ struct smp_ops {
 	void (*smp_prepare_cpus)(unsigned max_cpus);
 	void (*smp_cpus_done)(unsigned max_cpus);
 
-	void (*stop_other_cpus)(int wait);
+	void (*smp_send_stop)(void);
 	void (*smp_send_reschedule)(int cpu);
 
 	int (*cpu_up)(unsigned cpu);
@@ -60,6 +60,9 @@ struct smp_ops {
 
 	void (*send_call_func_ipi)(const struct cpumask *mask);
 	void (*send_call_func_single_ipi)(int cpu);
+#ifndef __GENKSYMS__
+	void (*stop_other_cpus)(int wait);
+#endif
 };
 
 /* Globals due to paravirt */
--- a/arch/x86/kernel/smp.c
+++ b/arch/x86/kernel/smp.c
@@ -229,6 +229,7 @@ struct smp_ops smp_ops = {
 	.smp_prepare_cpus	= native_smp_prepare_cpus,
 	.smp_cpus_done		= native_smp_cpus_done,
 
+	.smp_send_stop		= smp_send_stop,
 	.stop_other_cpus	= native_stop_other_cpus,
 	.smp_send_reschedule	= native_smp_send_reschedule,
 
--- a/arch/x86/xen/smp.c
+++ b/arch/x86/xen/smp.c
@@ -466,6 +466,7 @@ static const struct smp_ops xen_smp_ops
 	.cpu_disable = xen_cpu_disable,
 	.play_dead = xen_play_dead,
 
+	.smp_send_stop = smp_send_stop,
 	.stop_other_cpus = xen_stop_other_cpus,
 	.smp_send_reschedule = xen_smp_send_reschedule,
 
