From 8f35b576b57235c3f989b7d9d36dd240f2509a10 Mon Sep 17 00:00:00 2001
From: Jiri Slaby <jslaby@suse.cz>
Date: Mon, 10 Jan 2011 14:03:56 +0100
Subject: kabi fix for "block: Deprecate QUEUE_FLAG_CLUSTER and use queue_limits instead"
Patch-mainline: never

This reverts commit dce52eace914029693bdc2ceed5c71d6690f67a4 kABI changes.

cluster is renamed back to no_cluster and the logic inverted.

Signed-off-by: Jiri Slaby <jslaby@suse.cz>
---
 block/blk-settings.c    |    4 ++--
 drivers/md/md.c         |    2 ++
 drivers/scsi/scsi_lib.c |    2 +-
 include/linux/blkdev.h  |    5 +++--
 4 files changed, 8 insertions(+), 5 deletions(-)

--- a/block/blk-settings.c
+++ b/block/blk-settings.c
@@ -103,7 +103,7 @@ void blk_set_default_limits(struct queue
 	lim->alignment_offset = 0;
 	lim->io_opt = 0;
 	lim->misaligned = 0;
-	lim->cluster = 1;
+	lim->no_cluster = 0;
 }
 EXPORT_SYMBOL(blk_set_default_limits);
 
@@ -552,7 +552,7 @@ int blk_stack_limits(struct queue_limits
 	t->io_min = max(t->io_min, b->io_min);
 	t->io_opt = lcm(t->io_opt, b->io_opt);
 
-	t->cluster &= b->cluster;
+	t->no_cluster |= b->no_cluster;
 
 	/* Physical block size a multiple of the logical block size? */
 	if (t->physical_block_size & (t->logical_block_size - 1)) {
--- a/drivers/md/md.c
+++ b/drivers/md/md.c
@@ -3959,6 +3959,8 @@ static int md_alloc(dev_t dev, char *nam
 		goto abort;
 	mddev->queue->queuedata = mddev;
 
+	mddev->queue->limits.no_cluster = 0;
+
 	blk_queue_make_request(mddev->queue, md_make_request);
 
 	disk = alloc_disk(1 << shift);
--- a/drivers/scsi/scsi_lib.c
+++ b/drivers/scsi/scsi_lib.c
@@ -1637,7 +1637,7 @@ struct request_queue *__scsi_alloc_queue
 	blk_queue_max_segment_size(q, dma_get_max_seg_size(dev));
 
 	if (!shost->use_clustering)
-		q->limits.cluster = 0;
+		q->limits.no_cluster = 1;
 
 	/*
 	 * set a reasonable default alignment on word boundaries: the
--- a/include/linux/blkdev.h
+++ b/include/linux/blkdev.h
@@ -318,7 +318,7 @@ struct queue_limits {
 	unsigned short		max_phys_segments;
 
 	unsigned char		misaligned;
-	unsigned char		cluster;
+	unsigned char		no_cluster;
 };
 
 struct request_queue
@@ -440,6 +440,7 @@ struct request_queue
 #endif
 };
 
+#define QUEUE_FLAG_CLUSTER	0	/* cluster several segments into 1 */
 #define QUEUE_FLAG_QUEUED	1	/* uses generic tag queueing */
 #define QUEUE_FLAG_STOPPED	2	/* queue is stopped */
 #define	QUEUE_FLAG_SYNCFULL	3	/* read queue has been filled */
@@ -627,7 +628,7 @@ enum {
 
 static inline unsigned int blk_queue_cluster(struct request_queue *q)
 {
-	return q->limits.cluster;
+	return !q->limits.no_cluster;
 }
 
 /*
