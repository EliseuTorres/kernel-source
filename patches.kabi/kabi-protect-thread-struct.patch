From: Jiri Slaby <jslaby@suse.cz>
Subject: kABI: protect thread_struct
Patch-mainline: never

In 3.0.23, commit 0a9d89d976531b (i387: move TS_USEDFPU flag from
thread_info to task_struct), upstream commit f94edacf99851, added
has_fpu to a CPU-specific (x86) thread_struct. It is ulong and it
changed layout of that structure and also of struct task_struct and
others.

Let's fix it using the gap in task_struct which was added for theses
purposes.

Signed-off-by: Jiri Slaby <jslaby@suse.cz>
---
 arch/x86/include/asm/i387.h      |    6 +++---
 arch/x86/include/asm/processor.h |    1 -
 arch/x86/kernel/traps.c          |    4 ++--
 include/linux/sched.h            |    8 ++++++++
 4 files changed, 13 insertions(+), 6 deletions(-)

--- a/arch/x86/include/asm/i387.h
+++ b/arch/x86/include/asm/i387.h
@@ -279,19 +279,19 @@ static inline int restore_fpu_checking(s
  */
 static inline int __thread_has_fpu(struct task_struct *tsk)
 {
-	return tsk->thread.has_fpu;
+	return tsk->has_fpu;
 }
 
 /* Must be paired with an 'stts' after! */
 static inline void __thread_clear_has_fpu(struct task_struct *tsk)
 {
-	tsk->thread.has_fpu = 0;
+	tsk->has_fpu = 0;
 }
 
 /* Must be paired with a 'clts' before! */
 static inline void __thread_set_has_fpu(struct task_struct *tsk)
 {
-	tsk->thread.has_fpu = 1;
+	tsk->has_fpu = 1;
 }
 
 /*
--- a/arch/x86/include/asm/processor.h
+++ b/arch/x86/include/asm/processor.h
@@ -454,7 +454,6 @@ struct thread_struct {
 	unsigned long		trap_no;
 	unsigned long		error_code;
 	/* floating point and extended processor state */
-	unsigned long		has_fpu;
 	struct fpu		fpu;
 #ifdef CONFIG_X86_32
 	/* Virtual 86 mode info */
--- a/arch/x86/kernel/traps.c
+++ b/arch/x86/kernel/traps.c
@@ -724,8 +724,8 @@ asmlinkage void __attribute__((weak)) sm
 void __math_state_restore(struct task_struct *tsk)
 {
 	/* We need a safe address that is cheap to find and that is already
-	   in L1. We've just brought in "tsk->thread.has_fpu", so use that */
-#define safe_address (tsk->thread.has_fpu)
+	   in L1. We've just brought in "tsk->has_fpu", so use that */
+#define safe_address (tsk->has_fpu)
 
 	/* AMD K7/K8 CPUs don't save/restore FDP/FIP/FOP unless an exception
 	   is pending.  Clear the x87 state here by setting it to fixed
--- a/include/linux/sched.h
+++ b/include/linux/sched.h
@@ -1572,7 +1572,15 @@ struct task_struct {
 #ifdef CONFIG_HAVE_HW_BREAKPOINT
 	atomic_t ptrace_bp_refcnt;
 #endif
+#ifdef __GENKSYMS__
 	void *suse_kabi_padding;
+#else
+	/*
+	 * this belongs to thread_struct, but we don't have the
+	 * padding there :)
+	 */
+	unsigned long has_fpu;
+#endif
 };
 
 /* Future-safe accessor for struct task_struct's cpus_allowed. */
