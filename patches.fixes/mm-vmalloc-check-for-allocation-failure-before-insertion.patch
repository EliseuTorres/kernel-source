From: Mel Gorman <mgorman@suse.de>
Date: Fri, 18 Nov 2011 17:57:00 +0000
Subject: [PATCH] mm: vmalloc: Check for page allocation failure before insertion
References: Fix crash in get_vmalloc_info (bnc#730854)
Patch-mainline: no, should be pushed upstream

Commit [f5252e00: mm: avoid null pointer access in vm_struct via
/proc/vmallocinfo] adds newly allocated vm_structs to the vmlist
after it is fully initialised. Unfortunately, it did not check that
__vmalloc_area_node() successfully populated the area. In the event of
allocation failure, the vmalloc area has been freed but it still gets
inserted into the vmlist and a pointer to freed memory is returned
leading to a a crash later in get_vmalloc_info()

This patch adds a check for ____vmalloc_area_node() failure within
__vmalloc_node_range.

Reported-by: Luciano Chavez <lnx1138@linux.vnet.ibm.com>
Signed-off-by: Mel Gorman <mgorman@suse.de>
---
 mm/vmalloc.c |    2 ++
 1 files changed, 2 insertions(+), 0 deletions(-)

diff --git a/mm/vmalloc.c b/mm/vmalloc.c
index 9e36d17..1977b47 100644
--- a/mm/vmalloc.c
+++ b/mm/vmalloc.c
@@ -1668,6 +1668,8 @@ void *__vmalloc_node_range(unsigned long size, unsigned long align,
 		return NULL;
 
 	addr = __vmalloc_area_node(area, gfp_mask, prot, node, caller);
+	if (!addr)
+		return NULL;
 
 	/*
 	 * In this function, newly allocated vm_struct is not added
