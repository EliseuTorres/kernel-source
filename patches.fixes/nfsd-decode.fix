From: NeilBrown <neilb@suse.com>
Subject: NFSD: Fix nfsv4 opcode decoding error.
Patch-mainline: see below
Reference: bsc#935906

When we decode a piece on an NFSD request - apart from the data in a
write - that crosses a page boundary, then the pointer gets messed up
and future decoding is all wrong.

This bug entered through -stable as
  247500820ebd ("nfsd4: fix decoding of compounds across page boundaries")

which was simply wrong.  It was subsequently fixed by

  365da4adebb1 ("nfsd4: fix xdr decoding of large non-write compounds")

but that was too late for 3.0-stable.

This patch simply reverts the error - there was nothing to fix.

Signed-off-by: NeilBrown <neilb@suse.com>

---
 fs/nfsd/nfs4xdr.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

--- a/fs/nfsd/nfs4xdr.c
+++ b/fs/nfsd/nfs4xdr.c
@@ -159,8 +159,8 @@ static __be32 *read_buf(struct nfsd4_com
 	 */
 	memcpy(p, argp->p, avail);
 	/* step to next page */
-	argp->pagelist++;
 	argp->p = page_address(argp->pagelist[0]);
+	argp->pagelist++;
 	if (argp->pagelen < PAGE_SIZE) {
 		argp->end = argp->p + (argp->pagelen>>2);
 		argp->pagelen = 0;
