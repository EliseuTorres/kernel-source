From: Stephen M. Cameron <scameron@beardog.cce.hp.com>
Subject: [SCSI] hpsa: do readl after writel in main i/o path to ensure commands don't get lost.
References: bnc#683107
Patch-mainline: Submitted for 2.6.40
Git-repo: git://git.kernel.org/pub/scm/linux/kernel/git/jejb/storage-tree/.git
Git-commit: d0be5ec8693944c2e2fc0de70fda9dbc1b93bd7d

    [SCSI] hpsa: do readl after writel in main i/o path to ensure commands don't get lost.

    Apparently we've been doin it rong for a decade, but only lately do we
    run into problems.

    Signed-off-by: Stephen M. Cameron <scameron@beardog.cce.hp.com>
    Signed-off-by: James Bottomley <jbottomley@parallels.com>
    Signed-off-by: James Bottomley <James.Bottomley@suse.de>

Acked-by: Hannes Reinecke <hare@suse.de>
Acked-by: Ankit Jain <jankit@suse.de>

---
 drivers/scsi/hpsa.h |    1 +
 1 file changed, 1 insertion(+)

Index: linux-2.6.32-sle11-sp1/drivers/scsi/hpsa.h
===================================================================
--- linux-2.6.32-sle11-sp1.orig/drivers/scsi/hpsa.h
+++ linux-2.6.32-sle11-sp1/drivers/scsi/hpsa.h
@@ -209,6 +209,7 @@ static void SA5_submit_command(struct ct
 	dev_dbg(&h->pdev->dev, "Sending %x, tag = %x\n", c->busaddr,
 		c->Header.Tag.lower);
 	writel(c->busaddr, h->vaddr + SA5_REQUEST_PORT_OFFSET);
+	(void) readl(h->vaddr + SA5_REQUEST_PORT_OFFSET);
 	h->commands_outstanding++;
 	if (h->commands_outstanding > h->max_outstanding)
 		h->max_outstanding = h->commands_outstanding;
