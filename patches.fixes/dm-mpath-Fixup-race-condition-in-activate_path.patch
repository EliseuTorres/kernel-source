From: Hannes Reinecke <hare@suse.de>
Date: Wed, 13 Nov 2013 09:58:41 +0100
Subject: dm-mpath: Fixup race condition in activate_path()
References: bnc#708296
Patch-Mainline: posted to linux-scsi

When a path becomes inactive after activate_path() has been
scheduled we need to call pg_init_done(), otherwise the
pg_init_in_progress counter will never be decreased and
I/O to the multipath device will hang.

Signed-off-by: Hannes Reinecke <hare@suse.de>
---
 drivers/md/dm-mpath.c | 7 +++----
 1 file changed, 3 insertions(+), 4 deletions(-)

diff --git a/drivers/md/dm-mpath.c b/drivers/md/dm-mpath.c
index e68a4b8..de5944b 100644
--- a/drivers/md/dm-mpath.c
+++ b/drivers/md/dm-mpath.c
@@ -284,9 +284,6 @@ static void __pg_init_all_paths(struct multipath *m)
 		pg_init_delay = msecs_to_jiffies(m->pg_init_delay_msecs != DM_PG_INIT_DELAY_DEFAULT ?
 						 m->pg_init_delay_msecs : DM_PG_INIT_DELAY_MSECS);
 	list_for_each_entry(pgpath, &m->current_pg->pgpaths, list) {
-		/* Skip disabled paths or failed paths */
-		if (!pgpath->path.dev || !pgpath->is_active)
-			continue;
 		if (queue_delayed_work(kmpath_handlerd, &pgpath->activate_path,
 				       pg_init_delay))
 			m->pg_init_in_progress++;
@@ -1335,9 +1332,11 @@ static void activate_path(struct work_struct *work)
 	struct pgpath *pgpath =
 		container_of(work, struct pgpath, activate_path.work);
 
-	if (pgpath->path.dev)
+	if (pgpath->path.dev && pgpath->is_active)
 		scsi_dh_activate(bdev_get_queue(pgpath->path.dev->bdev),
 				 pg_init_done, pgpath);
+	else
+		pg_init_done(pgpath, SCSI_DH_IO);
 }
 
 /*
-- 
1.7.12.4

