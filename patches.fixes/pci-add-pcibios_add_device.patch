From:       Matthew Garrett <mjg@redhat.com>
Date:       Wed Dec 5 14:33:27 2012 -0700
Subject:    PCI: Add pcibios_add_device
Patch-mainline: v3.8-rc1
Git-commit: eca0d4676d8e29c209ddce0c0c1755472ffc70a6
References: bnc#848335,LTC#94737

    
    Platforms may want to provide architecture-specific functionality during
    PCI enumeration. Add a pcibios_add_device() call that architectures can
    override to do so.
    
    Signed-off-by: Matthew Garrett <mjg@redhat.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Tested-by: Seth Forshee <seth.forshee@canonical.com>
Acked-by: John Jolly <jjolly@suse.de>

diff --git a/drivers/pci/bus.c b/drivers/pci/bus.c
index 6241fd0..4f22fa1 100644
--- a/drivers/pci/bus.c
+++ b/drivers/pci/bus.c
@@ -170,6 +170,11 @@ int pci_bus_add_device(struct pci_dev *dev)
 int pci_bus_add_device(struct pci_dev *dev)
 {
 	int retval;
+
+	retval = pcibios_add_device(dev);
+	if (retval)
+		return retval;
+
 	retval = device_add(&dev->dev);
 	if (retval)
 		return retval;
diff --git a/drivers/pci/pci.c b/drivers/pci/pci.c
index 5485883..fa0ddd5 100644
--- a/drivers/pci/pci.c
+++ b/drivers/pci/pci.c
@@ -1333,6 +1333,19 @@ void pcim_pin_device(struct pci_dev *pdev)
 		dr->pinned = 1;
 }
 
+/*
+ * pcibios_add_device - provide arch specific hooks when adding device dev
+ * @dev: the PCI device being added
+ *
+ * Permits the platform to provide architecture specific functionality when
+ * devices are added. This is the default implementation. Architecture
+ * implementations can override this.
+ */
+int __weak pcibios_add_device (struct pci_dev *dev)
+{
+	return 0;
+}
+
 /**
  * pcibios_disable_device - disable arch specific PCI resources for device dev
  * @dev: the PCI device to disable
diff --git a/include/linux/pci.h b/include/linux/pci.h
index ee21795..195c259 100644
--- a/include/linux/pci.h
+++ b/include/linux/pci.h
@@ -1592,6 +1592,7 @@ void pcibios_disable_device(struct pci_dev *dev);
 void pcibios_disable_device(struct pci_dev *dev);
 int pcibios_set_pcie_reset_state(struct pci_dev *dev,
 				 enum pcie_reset_state state);
+int pcibios_add_device(struct pci_dev *dev);
 
 #ifdef CONFIG_PCI_MMCONFIG
 extern void __init pci_mmcfg_early_init(void);
