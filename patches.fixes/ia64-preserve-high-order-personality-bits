From: Tony Luck <tony.luck@intel.com>
Date: 2010-02-11 21:19:56 UTC
Subject: [ia64] preserve high order personality bits across exec(2).
Patch-mainline: soon
References: bnc#565124

In its <asm/elf.h> ia64 defines SET_PERSONALITY in a way that unconditionally
sets the personality of the current process to PER_LINUX, losing any flag bits
from the upper 3 bytes of current->personality.  This is wrong. Those bits are
intended to be inherited across exec (other code takes care of ensuring that
security sensitive bits like ADDR_NO_RANDOMIZE are not passed to unsuspecting
setuid/setgid applications).

Signed-off-by: Tony Luck <tony.luck@intel.com>
Acked-by: Raymund Will <rw@suse.de>

---
Technically elf32_set_personality() should have this same fix applied,
but the whole of arch/ia64/ia32/ is going to be deleted in the next
merge window, so there seems little point.

[For SLES it's nevertheless worthwile, I guess. --rw]

---
 arch/ia64/ia32/binfmt_elf32.c |    2 +-
 arch/ia64/include/asm/elf.h   |    4 +++-
 2 files changed, 4 insertions(+), 2 deletions(-)

--- a/arch/ia64/include/asm/elf.h
+++ b/arch/ia64/include/asm/elf.h
@@ -202,7 +202,9 @@ extern void ia64_elf_core_copy_regs (str
    relevant until we have real hardware to play with... */
 #define ELF_PLATFORM	NULL
 
-#define SET_PERSONALITY(ex)	set_personality(PER_LINUX)
+#define SET_PERSONALITY(ex)	\
+	set_personality((current->personality & ~PER_MASK) | PER_LINUX)
+
 #define elf_read_implies_exec(ex, executable_stack)					\
 	((executable_stack!=EXSTACK_DISABLE_X) && ((ex).e_flags & EF_IA_64_LINUX_EXECUTABLE_STACK) != 0)
 
--- a/arch/ia64/ia32/binfmt_elf32.c
+++ b/arch/ia64/ia32/binfmt_elf32.c
@@ -217,7 +217,7 @@ ia32_setup_arg_pages (struct linux_binpr
 static void
 elf32_set_personality (void)
 {
-	set_personality(PER_LINUX32);
+	set_personality((current->personality & ~PER_MASK) | PER_LINUX32);
 	current->thread.map_base  = IA32_PAGE_OFFSET/3;
 }
 
