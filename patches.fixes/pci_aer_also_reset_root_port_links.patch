From: Betty Dall <betty.dall@hp.com>
Subject: PCI/AER: Reset link for devices below Root Port or Downstream Port
References: bnc#828886 bnc#824568
Patch-Mainline: v3.11-rc1
Git-commit: 081d0fe0ef60c258b67428a8fdf2d14f8ce392ef


Signed-off-by: Thomas Renninger <trenn@suse.de>

When a PCIe device reports a fatal error, we reset the link leading
to it.  Previously we only did this for devices below Downstream Ports,
not for devices directly below Root Ports.

This patch changes that so we reset the link leading to devices below
Root Ports just like we do for those below Downstream Ports.

[bhelgaas: changelog, keep dev_printk(KERN_DEBUG)]
Signed-off-by: Betty Dall <betty.dall@hp.com>
Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
Index: linux-3.0-SLE11-SP3/drivers/pci/pcie/aer/aerdrv_core.c
===================================================================
--- linux-3.0-SLE11-SP3.orig/drivers/pci/pcie/aer/aerdrv_core.c
+++ linux-3.0-SLE11-SP3/drivers/pci/pcie/aer/aerdrv_core.c
@@ -407,16 +407,16 @@ void aer_do_secondary_bus_reset(struct p
 }
 
 /**
- * default_downstream_reset_link - default reset function for Downstream Port
- * @dev: pointer to downstream port's pci_dev data structure
+ * default_reset_link - default reset function
+ * @dev: pointer to pci_dev data structure
  *
- * Invoked when performing link reset at Downstream Port w/ no aer driver.
+ * Invoked when performing link reset on a Downstream Port or a
+ * Root Port with no aer driver.
  */
-static pci_ers_result_t default_downstream_reset_link(struct pci_dev *dev)
+static pci_ers_result_t default_reset_link(struct pci_dev *dev)
 {
 	aer_do_secondary_bus_reset(dev);
-	dev_printk(KERN_DEBUG, &dev->dev,
-		"Downstream Port link has been reset\n");
+	dev_printk(KERN_DEBUG, &dev->dev, "downstream link has been reset\n");
 	return PCI_ERS_RESULT_RECOVERED;
 }
 
@@ -465,8 +465,9 @@ static pci_ers_result_t reset_link(struc
 
 	if (driver && driver->reset_link) {
 		status = driver->reset_link(udev);
-	} else if (udev->pcie_type == PCI_EXP_TYPE_DOWNSTREAM) {
-		status = default_downstream_reset_link(udev);
+	} else if (udev->pcie_type == PCI_EXP_TYPE_DOWNSTREAM ||
+		udev->pcie_type == PCI_EXP_TYPE_ROOT_PORT) {
+		status = default_reset_link(udev);
 	} else {
 		dev_printk(KERN_DEBUG, &dev->dev,
 			"no link-reset support at upstream device %s\n",
