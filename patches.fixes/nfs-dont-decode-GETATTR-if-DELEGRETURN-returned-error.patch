From: Jeff Layton <jlayton@redhat.com>
Subject: NFS: don't try to decode GETATTR if DELEGRETURN returned error
Patch-mainline: 2.6.35
References: bnc#624850
Git:  556ae3bb32cabe483375b857dda1322384c57b65
Date: Sun Mar 21 12:10:36 2010 -0400

    NFS: don't try to decode GETATTR if DELEGRETURN returned error
    
    The reply parsing code attempts to decode the GETATTR response even if
    the DELEGRETURN portion of the compound returned an error. The GETATTR
    response won't actually exist if that's the case and we're asking the
    parser to read past the end of the response.
    
    This bug is fairly benign. The parser catches this without reading past
    the end of the response and decode_getfattr returns -EIO. Earlier
    kernels however had decode_op_hdr using the READ_BUF macro, and this
    bug would make this printk pop any time the client got an error from
    a delegreturn:
    
    kernel: decode_op_hdr: reply buffer overflowed in line XXXX
    
    More recent kernels seem to have replaced this printk with a dprintk.
    
    Signed-off-by: Jeff Layton <jlayton@redhat.com>
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

Acked-by:  Neil Brown <neilb@suse.de>
Signed-off-by: Neil Brown <neilb@suse.de>

---
 fs/nfs/nfs4xdr.c |    2 ++
 1 file changed, 2 insertions(+)

--- linux-2.6.32-SLE11-SP1.orig/fs/nfs/nfs4xdr.c
+++ linux-2.6.32-SLE11-SP1/fs/nfs/nfs4xdr.c
@@ -5467,6 +5467,8 @@ static int nfs4_xdr_dec_delegreturn(stru
 	if (status != 0)
 		goto out;
 	status = decode_delegreturn(&xdr);
+	if (status != 0)
+		goto out;
 	decode_getfattr(&xdr, res->fattr, res->server,
 			!RPC_IS_ASYNC(rqstp->rq_task));
 out:
