From: NeilBrown <neilb@suse.de>
Subject: [PATCH] NFS: revalidate on open if dcache is negative.
References: bnc#876463
Patch-mainline: submitted 12may2014

NFS CTO semantics require that (absent a delegation) the server
must be contacted at each open.

nfs_lookup_verify_inode() implements this when the dcache contains
a positive cached entry.  However it is not called when the dcache
contains a negative cached entry.  That path uses nfs_neg_need_reval()
which doesn't impose CTO semantics.

So a sequence like:

   rm -f testfile
   ls -l testfile
   ssh $server touch testfile
   cat testfile

will fail:

  cat: testfile: No such file or directory

an 'strace' will confirm that this resulted from an 'open' system
call.

So add code to nfs_neg_need_reval implement CTO semantics much like
that in nfs_lookup_verify_inode().

Signed-off-by: NeilBrown <neilb@suse.de>
---
 fs/nfs/dir.c |    3 +++
 1 file changed, 3 insertions(+)

--- linux-3.0-SLE11-SP3.orig/fs/nfs/dir.c
+++ linux-3.0-SLE11-SP3/fs/nfs/dir.c
@@ -1104,6 +1104,9 @@ int nfs_neg_need_reval(struct inode *dir
 	/* Don't revalidate a negative dentry if we're creating a new file */
 	if (nd != NULL && nfs_lookup_check_intent(nd, LOOKUP_CREATE) != 0)
 		return 0;
+	if (nfs_lookup_check_intent(nd, LOOKUP_OPEN) != 0 &&
+	    !(NFS_SERVER(dir)->flags & NFS_MOUNT_NOCTO))
+		return 1;
 	if (NFS_SERVER(dir)->flags & NFS_MOUNT_LOOKUP_CACHE_NONEG)
 		return 1;
 	return !nfs_check_verifier(dir, dentry);
