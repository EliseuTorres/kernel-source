From: Mel Gorman <mgorman@suse.de>
Date: Wed, 2 Nov 2011 14:03:52 +0000
Subject: [PATCH] x86: kexec: Temporary hack to allow crashkernel=512M on server hardware
References: crashkernel reservations on large machines (bnc#726850)
Patch-mainline: No. Never should be merged pending a proper fix

crashkernel= was partially broken with the introduction of memblock
where the size of the crashkernel was limited to 448M. This was "fixed"
by commit [4b239f458: x86-64, mm: Put early page table high] which in
turn broken everything from xen, to suspend to some AMD machines.

The suspend problem was still unresolved for 3.0.8 so commit [8548c84d:
x86: Fix S4 regression] partially reverted it. This leaves us in
a position where we can either have large crash kernels or fully
working suspend.

The proper fix to this is likely to have serious side-effects
so this patch instead chooses fully working suspend for desktops
which presumably have smaller memory configurations and allow large
crashkernels for server configurations which presumably are not being
suspended or hibernated.

Signed-off-by: Mel Gorman <mgorman@suse.de>
---
 arch/x86/mm/init.c |    2 ++
 1 files changed, 2 insertions(+), 0 deletions(-)

diff --git a/arch/x86/mm/init.c b/arch/x86/mm/init.c
index 87488b9..418d0d3 100644
--- a/arch/x86/mm/init.c
+++ b/arch/x86/mm/init.c
@@ -64,7 +64,9 @@ static void __init find_early_table_space(unsigned long end, int use_pse,
 	/* for fixmap */
 	tables += roundup(__end_of_fixed_addresses * sizeof(pte_t), PAGE_SIZE);
 #endif
+#if defined(CONFIG_X86_32) || defined(CONFIG_KERNEL_DESKTOP)
 	good_end = max_pfn_mapped << PAGE_SHIFT;
+#endif
 
 	base = memblock_find_in_range(start, good_end, tables, PAGE_SIZE);
 	if (base == MEMBLOCK_ERROR)
