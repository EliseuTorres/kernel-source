From: Jeff Layton <jlayton@redhat.com>
Date: Tue, 11 Dec 2012 12:10:11 -0500
Subject: [PATCH 14/28] vfs: have faccessat retry once on an ESTALE error
Git-commit: 87fa55952b7347175c6e2f03874869ad2c055adb
Patch-mainline: v3.8
References: bnc#876463

Signed-off-by: Jeff Layton <jlayton@redhat.com>
Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
Acked-by: NeilBrown <neilb@suse.de>

---
 fs/open.c |    9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

--- linux-3.0-SLE11-SP3.orig/fs/open.c
+++ linux-3.0-SLE11-SP3/fs/open.c
@@ -312,6 +312,7 @@ SYSCALL_DEFINE3(faccessat, int, dfd, con
 	struct path path;
 	struct inode *inode;
 	int res;
+	unsigned int lookup_flags = LOOKUP_FOLLOW;
 
 	if (mode & ~S_IRWXO)	/* where's F_OK, X_OK, W_OK, R_OK? */
 		return -EINVAL;
@@ -333,8 +334,8 @@ SYSCALL_DEFINE3(faccessat, int, dfd, con
 	}
 
 	old_cred = override_creds(override_cred);
-
-	res = user_path_at(dfd, filename, LOOKUP_FOLLOW, &path);
+retry:
+	res = user_path_at(dfd, filename, lookup_flags, &path);
 	if (res)
 		goto out;
 
@@ -369,6 +370,10 @@ SYSCALL_DEFINE3(faccessat, int, dfd, con
 
 out_path_release:
 	path_put(&path);
+	if (retry_estale(res, lookup_flags)) {
+		lookup_flags |= LOOKUP_REVAL;
+		goto retry;
+	}
 out:
 	revert_creds(old_cred);
 	put_cred(override_cred);
