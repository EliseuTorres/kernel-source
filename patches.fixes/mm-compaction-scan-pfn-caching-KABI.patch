From: Mel Gorman <mgorman@suse.de>
Date: Thu, 25 Apr 2013 17:13:16 +0100
Subject: [PATCH] mm: compaction: Scan PFN caching KABI workaround

References: Cache compaction pfns for faster compaction cycles (bnc#816451)
Patch-mainline: No, unnecessary
References: Compaction functionality

This patch moves the per-zone fields needed for scan caching into a
hole where it does not affect the size of struct zone or the location of
any field within it. It's hidden from the kabi scanner then as it should
be harmless.

Signed-off-by: Mel Gorman <mgorman@suse.de>
---
 include/linux/compaction.h |  3 ---
 include/linux/mmzone.h     | 20 ++++++++++++--------
 2 files changed, 12 insertions(+), 11 deletions(-)

diff --git a/include/linux/compaction.h b/include/linux/compaction.h
index 46631ff..881f2bb 100644
--- a/include/linux/compaction.h
+++ b/include/linux/compaction.h
@@ -61,9 +61,6 @@ static inline bool compaction_deferred(struct zone *zone)
 /* Returns true if restarting compaction after many failures */
 static inline bool compaction_restarting(struct zone *zone, int order)
 {
-	if (order < zone->compact_order_failed)
-		return false;
-
 	return zone->compact_defer_shift == COMPACT_MAX_DEFER_SHIFT &&
 		zone->compact_considered >= 1UL << zone->compact_defer_shift;
 }
diff --git a/include/linux/mmzone.h b/include/linux/mmzone.h
index 5e6a301..c70b89f 100644
--- a/include/linux/mmzone.h
+++ b/include/linux/mmzone.h
@@ -329,14 +329,6 @@ struct zone {
 	 */
 	spinlock_t		lock;
 	int                     all_unreclaimable; /* All pages pinned */
-#if defined CONFIG_COMPACTION || defined CONFIG_CMA
-	/* Set to true when the PG_migrate_skip bits should be cleared */
-	bool			compact_blockskip_flush;
-
-	/* pfns where compaction scanners should start */
-	unsigned long		compact_cached_free_pfn;
-	unsigned long		compact_cached_migrate_pfn;
-#endif
 #ifdef CONFIG_MEMORY_HOTPLUG
 	/* see spanned/present_pages for more description */
 	seqlock_t		span_seqlock;
@@ -383,6 +375,18 @@ struct zone {
 	 */
 	unsigned int inactive_ratio;
 
+#ifdef __GENKSYMS__
+	/* This is a hole in struct zone that the compaction fields fits in */
+#else
+#if defined CONFIG_COMPACTION || defined CONFIG_CMA
+	/* Set to true when the PG_migrate_skip bits should be cleared */
+	bool			compact_blockskip_flush;
+
+	/* pfns where compaction scanners should start */
+	unsigned long		compact_cached_free_pfn;
+	unsigned long		compact_cached_migrate_pfn;
+#endif
+#endif /* __GENKSYMS__ */
 
 	ZONE_PADDING(_pad2_)
 	/* Rarely used or read-mostly fields */
