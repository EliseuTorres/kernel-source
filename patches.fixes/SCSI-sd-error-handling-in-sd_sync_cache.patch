From 2ab03ae46d6dc126a51ee9cd38206fbdc8bf6a34 Mon Sep 17 00:00:00 2001
From: Oliver Neukum <oliver@neukum.org>
Date: Mon, 25 Oct 2010 12:25:26 +0200
Subject: [PATCH 2/5] SCSI:sd:error handling in sd_sync_cache()
Reference: bnc#639803
Patch-mainline: Submitted

The SCSI commands sd_sync_cache() uses may fail.
These errors needs to be evaluated to return correct
error codes. This fixes system suspension while a device
removal is being handled.

Signed-off-by: Oliver NEukum <oneukum@suse.de>
---
--- linux-2.6.32.orig/drivers/scsi/sd.c	2009-12-03 04:51:21.000000000 +0100
+++ linux-2.6.32-SLE11-SP1/drivers/scsi/sd.c	2010-11-11 15:56:28.000000000 +0100
@@ -958,8 +954,32 @@ static int sd_sync_cache(struct scsi_dis
 
 	if (res) {
 		sd_print_result(sdkp, res);
+
 		if (driver_byte(res) & DRIVER_SENSE)
 			sd_print_sense_hdr(sdkp, &sshdr);
+			/* we need to evaluate the error return  */
+			if ((scsi_sense_valid(&sshdr) &&
+				/* 0x3a is medium not present */
+				sshdr.asc == 0x3a))
+					/* this is no error here */
+					return 0;
+
+			switch (host_byte(res)) {
+			/* ignore errors due to racing a disconnection */
+			case DID_BAD_TARGET:
+			case DID_NO_CONNECT:
+				return 0;
+			/* signal the upper layer it might try again */
+			case DID_BUS_BUSY:
+			case DID_IMM_RETRY:
+			case DID_REQUEUE:
+			case DID_SOFT_ERROR:
+				return -EBUSY;
+			default:
+				return -EIO;
+		}
+	} else {
+		return 0;
 	}
 
 	if (res)
