From ce9ead46f6fcf2d8f761266361045299d9229e9d Mon Sep 17 00:00:00 2001
From: Davidlohr Bueso <dbueso@suse.de>
Date: Wed, 4 Mar 2015 11:10:56 -0800
Subject: [PATCH] locking/mcs: Add some needed ACCESS_ONCE calls
Git-commit: 
Patch-mainline: None, not upstream.
References: 

Both node->locked (osq) and lock->owner (spinning) are entirely
speculative pointers, thus prevent the compiler from seeing
a stale value - wrap for volatile loads around ACCESS_ONCE.

Signed-off-by: Davidlohr Bueso <dbueso@suse.de>

---
 kernel/mutex.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

--- a/kernel/mutex.c
+++ b/kernel/mutex.c
@@ -217,7 +217,7 @@ bool osq_lock(struct mutex *mutex, struc
 	 * cmpxchg in an attempt to undo our queueing.
 	 */
 
-	while (!node->locked) {
+	while (!ACCESS_ONCE(node->locked)) {
 		/*
 		 * If we need to reschedule bail... so we can block.
 		 */
