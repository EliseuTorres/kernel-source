From 815d405ceff0d6964683f033e18b9b23a88fba87 Mon Sep 17 00:00:00 2001
From: Trond Myklebust <Trond.Myklebust@netapp.com>
Date: Mon, 26 Sep 2011 20:36:09 -0400
Subject: VFS: Fix the remaining automounter semantics regressions
Patch-mainline: 3.1-rc8
References: bnc#715496

The concensus seems to be that system calls such as stat() etc should
not trigger an automount.  Neither should the l* versions.

This patch therefore adds a LOOKUP_AUTOMOUNT flag to tag those lookups
that _should_ trigger an automount on the last path element.

Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
[ Edited to leave out the cases that are already covered by LOOKUP_OPEN,
  LOOKUP_DIRECTORY and LOOKUP_CREATE - all of which also fundamentally
  force automounting for their own reasons   - Linus ]

Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
Acked-by: Miklos Szeredi <mszeredi@suse.cz>
---
 fs/namespace.c   |    2 +-
 fs/nfs/super.c   |    2 +-
 fs/quota/quota.c |    2 +-
 3 files changed, 3 insertions(+), 3 deletions(-)

Index: linux-3.0-SLE11-SP2-3.0/fs/namespace.c
===================================================================
--- linux-3.0-SLE11-SP2-3.0.orig/fs/namespace.c	2011-09-28 10:43:24.000000000 +0200
+++ linux-3.0-SLE11-SP2-3.0/fs/namespace.c	2011-09-28 10:46:37.000000000 +0200
@@ -1757,7 +1757,7 @@ static int do_loopback(struct path *path
 		return err;
 	if (!old_name || !*old_name)
 		return -EINVAL;
-	err = kern_path(old_name, LOOKUP_FOLLOW, &old_path);
+	err = kern_path(old_name, LOOKUP_FOLLOW|LOOKUP_AUTOMOUNT, &old_path);
 	if (err)
 		return err;
 
Index: linux-3.0-SLE11-SP2-3.0/fs/nfs/super.c
===================================================================
--- linux-3.0-SLE11-SP2-3.0.orig/fs/nfs/super.c	2011-07-22 04:17:23.000000000 +0200
+++ linux-3.0-SLE11-SP2-3.0/fs/nfs/super.c	2011-09-28 10:46:37.000000000 +0200
@@ -2793,7 +2793,7 @@ static struct dentry *nfs_follow_remote_
 		goto out_put_mnt_ns;
 
 	ret = vfs_path_lookup(root_mnt->mnt_root, root_mnt,
-			export_path, LOOKUP_FOLLOW, nd);
+			export_path, LOOKUP_FOLLOW|LOOKUP_AUTOMOUNT, nd);
 
 	nfs_referral_loop_unprotect();
 	put_mnt_ns(ns_private);
Index: linux-3.0-SLE11-SP2-3.0/fs/quota/quota.c
===================================================================
--- linux-3.0-SLE11-SP2-3.0.orig/fs/quota/quota.c	2011-07-22 04:17:23.000000000 +0200
+++ linux-3.0-SLE11-SP2-3.0/fs/quota/quota.c	2011-09-28 10:46:37.000000000 +0200
@@ -355,7 +355,7 @@ SYSCALL_DEFINE4(quotactl, unsigned int,
 	 * resolution (think about autofs) and thus deadlocks could arise.
 	 */
 	if (cmds == Q_QUOTAON) {
-		ret = user_path_at(AT_FDCWD, addr, LOOKUP_FOLLOW, &path);
+		ret = user_path_at(AT_FDCWD, addr, LOOKUP_FOLLOW|LOOKUP_AUTOMOUNT, &path);
 		if (ret)
 			pathp = ERR_PTR(ret);
 		else
