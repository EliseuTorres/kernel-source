From: Michael Halcrow <mhalcrow@google.com>
Date: Wed, 26 Nov 2014 09:09:16 -0800
Subject: eCryptfs: Remove buggy and unnecessary write in file name decode
 routine
Git-commit: 942080643bce061c3dd9d5718d3b745dcb39a8bc
Patch-mainline: v3.19-rc1
References: bsc#918333, CVE-2014-9683

Dmitry Chernenkov used KASAN to discover that eCryptfs writes past the
end of the allocated buffer during encrypted filename decoding. This
fix corrects the issue by getting rid of the unnecessary 0 write when
the current bit offset is 2.

Signed-off-by: Michael Halcrow <mhalcrow@google.com>
Reported-by: Dmitry Chernenkov <dmitryc@google.com>
Suggested-by: Kees Cook <keescook@chromium.org>
Cc: stable@vger.kernel.org # v2.6.29+: 51ca58d eCryptfs: Filename Encryption: Encoding and encryption functions
Signed-off-by: Tyler Hicks <tyhicks@canonical.com>
Acked-by: Borislav Petkov <bp@suse.de>
---
 fs/ecryptfs/crypto.c | 1 -
 1 file changed, 1 deletion(-)

Index: current/fs/ecryptfs/crypto.c
===================================================================
--- current.orig/fs/ecryptfs/crypto.c	2015-04-09 11:06:40.244086145 +0200
+++ current/fs/ecryptfs/crypto.c	2015-04-09 11:07:24.848086066 +0200
@@ -2036,7 +2036,6 @@ ecryptfs_decode_from_filename(unsigned c
 			break;
 		case 2:
 			dst[dst_byte_offset++] |= (src_byte);
-			dst[dst_byte_offset] = 0;
 			current_bit_offset = 0;
 			break;
 		}
