From cb85a6ed67e979c59a29b7b4e8217e755b951cf4 Mon Sep 17 00:00:00 2001
From: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date: Fri, 30 Mar 2012 12:23:08 +0200
Subject: [PATCH] proc: stats: Use arch_idle_time for idle and iowait times if
 available
Git-commit: cb85a6ed67e979c59a29b7b4e8217e755b951cf4
Patch-mainline: 3.4-rc3
References: bnc#772893

Git commit a25cac5198d4ff28 "proc: Consider NO_HZ when printing idle and
iowait times" changes the code for /proc/stat to use get_cpu_idle_time_us
and get_cpu_iowait_time_us if the system is running with nohz enabled.
For architectures which define arch_idle_time (currently s390 only)
this is a change for the worse. The result of arch_idle_time is supposed
to be the exact sleep time of the target cpu and should be used instead
of the value kept by the scheduler.

Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
Reviewed-by: Michal Hocko <mhocko@suse.cz>
Reviewed-by: Srivatsa S. Bhat <srivatsa.bhat@linux.vnet.ibm.com>
Link: http://lkml.kernel.org/r/20120330122308.18720283@de.ibm.com
Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
Acked-by: Michal Hocko <mhocko@suse.cz>

---
 fs/proc/stat.c |   29 +++++++++++++++++++++++++----
 1 file changed, 25 insertions(+), 4 deletions(-)

--- a/fs/proc/stat.c
+++ b/fs/proc/stat.c
@@ -18,10 +18,30 @@
 #ifndef arch_irq_stat
 #define arch_irq_stat() 0
 #endif
-#ifndef arch_idle_time
-#define arch_idle_time(cpu) 0
-#endif
 
+#ifdef arch_idle_time
+
+static cputime64_t get_idle_time(int cpu)
+{
+	cputime64_t idle;
+
+	idle = kstat_cpu(cpu).cpustat.idle;
+	if (cpu_online(cpu) && !nr_iowait_cpu(cpu))
+		idle = cputime64_add(idle, arch_idle_time(cpu));
+	return idle;
+}
+
+static cputime64_t get_iowait_time(int cpu)
+{
+	cputime64_t iowait;
+
+	iowait = kstat_cpu(cpu).cpustat.iowait;
+	if (cpu_online(cpu) && nr_iowait_cpu(cpu))
+		iowait = cputime64_add(iowait, arch_idle_time(cpu));
+	return iowait;
+}
+
+#else
 static cputime64_t get_idle_time(int cpu)
 {
 	u64 idle_time = get_cpu_idle_time_us(cpu, NULL);
@@ -30,7 +50,6 @@ static cputime64_t get_idle_time(int cpu
 	if (idle_time == -1ULL) {
 		/* !NO_HZ so we can rely on cpustat.idle */
 		idle = kstat_cpu(cpu).cpustat.idle;
-		idle = cputime64_add(idle, arch_idle_time(cpu));
 	} else
 		idle = usecs_to_cputime64(idle_time);
 
@@ -51,6 +70,8 @@ static cputime64_t get_iowait_time(int c
 	return iowait;
 }
 
+#endif
+
 static int show_stat(struct seq_file *p, void *v)
 {
 	int i, j;
