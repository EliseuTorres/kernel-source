From: Yi Zou <yi.zou@intel.com>
Date: Fri, 16 Mar 2012 23:08:11 +0000
Subject: net: do not do gso for CHECKSUM_UNNECESSARY in netif_needs_gso
Git-commit: cdbee74ce74cd66de42a6f6d0edfa74fa9a66f2a
Patch-Mainline: v3.4
References: bnc#804574

This is related to fixing the bug of dropping FCoE frames when disabling tx ip
checksum by 'ethtool -K ethx tx off'. The FCoE protocol stack driver would
use CHECKSUM_UNNECESSARY on tx path instead of CHECKSUM_PARTIAL (as indicated in
the 2/2 of this series). To do so, netif_needs_gso() has to be changed here to
not do gso for both CHECKSUM_PARTIAL and CHECKSUM_UNNECESSARY.

Ref. to original discussion thread:
http://patchwork.ozlabs.org/patch/146567/

Signed-off-by: Yi Zou <yi.zou@intel.com>
Tested-by: Ross Brattain <ross.b.brattain@intel.com>
Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
Acked-by: Hannes Reinecke <hare@suse.de>

diff --git a/include/linux/netdevice.h b/include/linux/netdevice.h
index 5207df3..314c1a6 100644
--- a/include/linux/netdevice.h
+++ b/include/linux/netdevice.h
@@ -2672,7 +2672,8 @@ static inline int skb_gso_ok(struct sk_buff *skb, u32 features)
 static inline int netif_needs_gso(struct sk_buff *skb, int features)
 {
 	return skb_is_gso(skb) && (!skb_gso_ok(skb, features) ||
-		unlikely(skb->ip_summed != CHECKSUM_PARTIAL));
+		unlikely((skb->ip_summed != CHECKSUM_PARTIAL) &&
+			 (skb->ip_summed != CHECKSUM_UNNECESSARY)));
 }
 
 static inline void netif_set_gso_max_size(struct net_device *dev,
