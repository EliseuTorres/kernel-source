From: Mike Anderson <andmike@linux.vnet.ibm.com>
Date: Thu, 10 Dec 2009 23:52:21 +0000 (+0000)
Subject: dm mpath: prevent io from work queue while suspended
References: bnc#668483
Patch-mainline: v2.6.33-rc1~75^2~26
Git-Commit: 67a46dad25ccc8910995d8671f7ec17a6bc823cb

dm mpath: prevent io from work queue while suspended

Reject messages that can generate I/O while the device itself
is suspended.

Signed-off-by: Mike Anderson <andmike@linux.vnet.ibm.com>
Acked-by: Kiyoshi Ueda <k-ueda@ct.jp.nec.com>
Signed-off-by: Alasdair G Kergon <agk@redhat.com>

Acked-by: Hannes Reinecke <hare@suse.de>
Acked-by: Ankit Jain <jankit@suse.de>
---
 drivers/md/dm-mpath.c |   12 ++++++++++++
 1 file changed, 12 insertions(+)

Index: b/drivers/md/dm-mpath.c
===================================================================
--- a/drivers/md/dm-mpath.c
+++ b/drivers/md/dm-mpath.c
@@ -100,6 +100,8 @@ struct multipath {
 	mempool_t *mpio_pool;
 
 	struct mutex work_mutex;
+
+	unsigned suspended;	/* Don't create new I/O internally when set. */
 };
 
 /*
@@ -1382,6 +1384,7 @@ static void multipath_postsuspend(struct
 	struct multipath *m = ti->private;
 
 	mutex_lock(&m->work_mutex);
+	m->suspended = 1;
 	flush_multipath_work();
 	mutex_unlock(&m->work_mutex);
 }
@@ -1394,6 +1397,10 @@ static void multipath_resume(struct dm_t
 	struct multipath *m = (struct multipath *) ti->private;
 	unsigned long flags;
 
+	mutex_lock(&m->work_mutex);
+	m->suspended = 0;
+	mutex_unlock(&m->work_mutex);
+
 	spin_lock_irqsave(&m->lock, flags);
 	m->queue_if_no_path = m->saved_queue_if_no_path;
 	spin_unlock_irqrestore(&m->lock, flags);
@@ -1535,6 +1542,11 @@ static int multipath_message(struct dm_t
 
 	mutex_lock(&m->work_mutex);
 
+	if (m->suspended) {
+		r = -EBUSY;
+		goto out;
+	}
+
 	if (argc == 1) {
 		if (!strnicmp(argv[0], MESG_STR("queue_if_no_path"))) {
 			r = queue_if_no_path(m, 1, 0);
