From 72c003f6586c092c1a69f5482cd102e97d7ef40f Mon Sep 17 00:00:00 2001
From: Michal Hocko <mhocko@suse.cz>
Date: Wed, 10 Nov 2010 13:30:04 +0100
Subject: [PATCH] Make swap accounting default behavior configurable
Git-commit: a42c390cfa0c2612459d7226ba11612847ca3a64
References: bnc#650309, fate#310471

Swap accounting can be configured by CONFIG_CGROUP_MEM_RES_CTLR_SWAP
configuration option and then it is turned on by default. There is
a boot option (noswapaccount) which can disable this feature.

This makes it hard for distributors to enable the configuration option
as this feature leads to a bigger memory consumption and this is a no-go
for general purpose distribution kernel. On the other hand swap
accounting may be very usuful for some workloads.

This patch adds a new configuration option which controls the default
behavior (CGROUP_MEM_RES_CTLR_SWAP_ENABLED). If the option is selected
then the feature is turned on by default.

It also adds a new boot parameter swapaccount[=1|0] which enhances the
original noswapaccount parameter semantic by means of enable/disable
logic (defaults to 1 if no value is provided to be still consistent with
noswapaccount).

The default behavior is changed wrt. upstream and the accounting is 
disabled disabled by default in runtime.

Signed-off-by: Michal Hocko <mhocko@suse.cz>

---
 Documentation/kernel-parameters.txt |    5 +++++
 init/Kconfig                        |   13 +++++++++++++
 mm/memcontrol.c                     |   21 +++++++++++++++++++--
 3 files changed, 37 insertions(+), 2 deletions(-)

Index: linux-2.6.32-fate310471/Documentation/kernel-parameters.txt
===================================================================
--- linux-2.6.32-fate310471.orig/Documentation/kernel-parameters.txt
+++ linux-2.6.32-fate310471/Documentation/kernel-parameters.txt
@@ -2519,6 +2519,11 @@ and is between 256 and 4096 characters.
 			CONFIG_ENTERPRISE_SUPPORT must be enabled for this
 			to have any effect.
 
+	swapaccount=0|1
+			[KNL] Enable accounting of swap in memory resource
+			controller if no parameter or 1 is given or disable
+			it if 0 is given (See Documentation/cgroups/memory.txt)
+
 	swiotlb=	[IA-64] Number of I/O TLB slabs
 
 	switches=	[HW,M68k]
Index: linux-2.6.32-fate310471/init/Kconfig
===================================================================
--- linux-2.6.32-fate310471.orig/init/Kconfig
+++ linux-2.6.32-fate310471/init/Kconfig
@@ -588,6 +588,19 @@ config CGROUP_MEM_RES_CTLR_SWAP
 	  if boot option "noswapaccount" is set, swap will not be accounted.
 	  Now, memory usage of swap_cgroup is 2 bytes per entry. If swap page
 	  size is 4096bytes, 512k per 1Gbytes of swap.
+config CGROUP_MEM_RES_CTLR_SWAP_ENABLED
+	bool "Memory Resource Controller Swap Extension enabled by default"
+	depends on CGROUP_MEM_RES_CTLR_SWAP
+	default n
+	help
+	  Memory Resource Controller Swap Extension comes with its price in
+	  a bigger memory consumption. General purpose distribution kernels
+	  which want to enable the feautre but keep it disabled by default
+	  and let the user enable it by swapaccount boot command line
+	  parameter should have this option unselected.
+	  For those who want to have the feature enabled by default should
+	  select this option (if, for some reason, they need to disable it
+	  then noswapaccount does the trick).
 
 menuconfig CGROUP_SCHED
 	bool "Group CPU scheduler"
Index: linux-2.6.32-fate310471/mm/memcontrol.c
===================================================================
--- linux-2.6.32-fate310471.orig/mm/memcontrol.c
+++ linux-2.6.32-fate310471/mm/memcontrol.c
@@ -50,7 +50,14 @@ struct mem_cgroup *root_mem_cgroup __rea
 #ifdef CONFIG_CGROUP_MEM_RES_CTLR_SWAP
 /* Turned on only when memory cgroup is enabled && really_do_swap_account = 1 */
 int do_swap_account __read_mostly;
-static int really_do_swap_account __initdata = 1; /* for remember boot option*/
+
+/* for remember boot option*/
+#ifdef CONFIG_CGROUP_MEM_RES_CTLR_SWAP_ENABLED
+static int really_do_swap_account __initdata = 1;
+#else
+static int really_do_swap_account __initdata = 0;
+#endif
+
 #else
 #define do_swap_account		(0)
 #endif
@@ -3431,10 +3438,20 @@ struct cgroup_subsys mem_cgroup_subsys =
 };
 
 #ifdef CONFIG_CGROUP_MEM_RES_CTLR_SWAP
+static int __init enable_swap_account(char *s)
+{
+	/* consider enabled if no parameter or 1 is given */
+	if (!s || !strcmp(s, "=1"))
+		really_do_swap_account = 1;
+	else if (!strcmp(s, "=0"))
+		really_do_swap_account = 0;
+	return 1;
+}
+__setup("swapaccount", enable_swap_account);
 
 static int __init disable_swap_account(char *s)
 {
-	really_do_swap_account = 0;
+	enable_swap_account("=0");
 	return 1;
 }
 __setup("noswapaccount", disable_swap_account);
