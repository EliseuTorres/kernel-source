From fa8cbaaf5a68f62db3f9a8444ecbb940b47984cb Mon Sep 17 00:00:00 2001
From: Dan McGee <dpmcgee@gmail.com>
Date: Mon, 17 Oct 2011 13:05:23 +0000
Subject: [PATCH] powerpc+sparc64/mm: Remove hack in mmap randomize layout
Git-commit: fa8cbaaf5a68f62db3f9a8444ecbb940b47984cb
References: bsc#917839
Patch-mainline: v3.3-rc1 

Since commit 8a0a9bd4db63bc45e301, this comment in mmap_rnd() does not
hold true as the value returned by get_random_int() will in fact be

different every single call. Remove the comment and simplify the code
back to its original desired form.

This reverts commit a5adc91a4b44b5d1 which is no longer necessary and
also fixes the sparc code that copied this same adjustment.

Signed-off-by: Dan McGee <dpmcgee@gmail.com>
Acked-by: David S. Miller <davem@davemloft.net>
Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
Acked-by: Dinar Valeev <dvaleev@suse.com>
---
 arch/powerpc/mm/mmap_64.c        | 14 +++-----------
 arch/sparc/kernel/sys_sparc_64.c |  6 +++---
 2 files changed, 6 insertions(+), 14 deletions(-)

Index: linux-3.0-SLE11-SP3/arch/powerpc/mm/mmap_64.c
===================================================================
--- linux-3.0-SLE11-SP3.orig/arch/powerpc/mm/mmap_64.c
+++ linux-3.0-SLE11-SP3/arch/powerpc/mm/mmap_64.c
@@ -53,14 +53,6 @@ static inline int mmap_is_legacy(void)
 	return sysctl_legacy_va_layout;
 }
 
-/*
- * Since get_random_int() returns the same value within a 1 jiffy window,
- * we will almost always get the same randomisation for the stack and mmap
- * region. This will mean the relative distance between stack and mmap will
- * be the same.
- *
- * To avoid this we can shift the randomness by 1 bit.
- */
 static unsigned long mmap_rnd(void)
 {
 	unsigned long rnd = 0;
@@ -68,11 +60,11 @@ static unsigned long mmap_rnd(void)
 	if (current->flags & PF_RANDOMIZE) {
 		/* 8MB for 32bit, 1GB for 64bit */
 		if (is_32bit_task())
-			rnd = (long)(get_random_int() % (1<<(22-PAGE_SHIFT)));
+			rnd = (long)(get_random_int() % (1<<(23-PAGE_SHIFT)));
 		else
-			rnd = (long)(get_random_int() % (1<<(29-PAGE_SHIFT)));
+			rnd = (long)(get_random_int() % (1<<(30-PAGE_SHIFT)));
 	}
-	return (rnd << PAGE_SHIFT) * 2;
+	return rnd << PAGE_SHIFT;
 }
 
 static inline unsigned long mmap_base(void)
