From: Mel Gorman <mgorman@suse.de>
Date: Fri, 17 May 2013 11:10:04 +0100
Subject: [PATCH] mm: page_allocator: Remove first_pass guard

References: Cache compaction pfns for faster compaction cycles (bnc#816451)
Patch-mainline: No, never

The first_pass logic was intended to guard against worst-case THP
behaviour which should be severely mitigated by other patches now.
Remove the guard.

Signed-off-by: Mel Gorman <mgorman@suse.de>
---
 mm/page_alloc.c | 4 +---
 1 file changed, 1 insertion(+), 3 deletions(-)

diff --git a/mm/page_alloc.c b/mm/page_alloc.c
index 7b67d0f..820aa1b 100644
--- a/mm/page_alloc.c
+++ b/mm/page_alloc.c
@@ -2162,7 +2162,6 @@ __alloc_pages_slowpath(gfp_t gfp_mask, unsigned int order,
 	unsigned long did_some_progress;
 	bool sync_migration = false;
 	bool deferred_compaction = false;
-	bool first_pass = true;
 	bool contended_compaction = false;
 
 	/*
@@ -2266,12 +2265,11 @@ rebalance:
 	 * allocation now instead of entering direct reclaim. If direct reclaim
 	 * is used, use it only once before bailing.
 	 */
-	if ((first_pass || contended_compaction || deferred_compaction) &&
+	if ((contended_compaction || deferred_compaction) &&
 							(gfp_mask & __GFP_NO_KSWAPD))
 		goto nopage;
 
 	/* Try direct reclaim and then allocating */
-	first_pass = false;
 	page = __alloc_pages_direct_reclaim(gfp_mask, order,
 					zonelist, high_zoneidx,
 					nodemask,
