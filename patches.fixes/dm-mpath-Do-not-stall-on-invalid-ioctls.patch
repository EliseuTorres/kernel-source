From: Hannes Reinecke <hare@suse.de>
Date: Wed, 26 Feb 2014 09:59:56 +0100
Subject: dm-multipath: Do not stall on invalid ioctls
Patch-Mainline: Not yet
References: bnc#854025

An invalid ioctl is an invalid ioctl, irrespective on whether
multipath has active paths or not. And for invalid ioctls
we do not have to wait for multipath to activate any paths,
but can rather return the error code immediately.
This resolves numerous instances of

udevd[]: worker [] unexpectedly returned with status 0x0100

we have seen during testing.

Signed-off-by: Hannes Reinecke <hare@suse.de>
---
 drivers/md/dm-mpath.c | 9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

diff --git a/drivers/md/dm-mpath.c b/drivers/md/dm-mpath.c
index 6eb9dc9..e8431fb 100644
--- a/drivers/md/dm-mpath.c
+++ b/drivers/md/dm-mpath.c
@@ -1626,8 +1626,13 @@ static int multipath_ioctl(struct dm_target *ti, unsigned int cmd,
 	/*
 	 * Only pass ioctls through if the device sizes match exactly.
 	 */
-	if (!r && ti->len != i_size_read(bdev->bd_inode) >> SECTOR_SHIFT)
-		r = scsi_verify_blk_ioctl(NULL, cmd);
+	if (!bdev || ti->len != i_size_read(bdev->bd_inode) >> SECTOR_SHIFT) {
+		int err;
+
+		err = scsi_verify_blk_ioctl(NULL, cmd);
+		if (err)
+			r = err;
+	}
 
 	if (r == -ENOTCONN && !fatal_signal_pending(current))
 		queue_work(kmultipathd, &m->process_queued_ios);
-- 
1.7.12.4

