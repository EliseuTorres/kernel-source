From: Trond Myklebust <Trond.Myklebust@netapp.com>
Subject: NFS: Fix Oopses in nfs_lookup_revalidate and nfs4_lookup_revalidate
References: bnc#780008
Patch-mainline: No

Fix the oops in nfs_lookup_revalidate and nfs4_lookup_revalidate.
This Oops affects 3.5 kernels and older, and is due to lookup_one_len()
calling down to the dentry revalidation code with a NULL pointer
to struct nameidata.  

It is fixed upstream by commit 0b728e1911c (stop passing nameidata *
to ->d_revalidate()).

Note: It has been fixed differently in kernels older than 3.5. The
discussion can be found here:

   https://patchwork.kernel.org/patch/1363271/

Reported-by: Richard Ems <richard.ems@cape-horn-eng.com>
Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
Signed-off-by: Suresh Jayaraman <sjayaraman@suse.com>
---
 fs/nfs/dir.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

Index: linux-3.0-SLE11-SP2/fs/nfs/dir.c
===================================================================
--- linux-3.0-SLE11-SP2.orig/fs/nfs/dir.c
+++ linux-3.0-SLE11-SP2/fs/nfs/dir.c
@@ -1104,7 +1104,7 @@ static int nfs_lookup_revalidate(struct
 	struct nfs_fattr *fattr = NULL;
 	int error;
 
-	if (nd->flags & LOOKUP_RCU)
+	if (nd && (nd->flags & LOOKUP_RCU))
 		return -ECHILD;
 
 	parent = dget_parent(dentry);
@@ -1511,7 +1511,7 @@ static int nfs_open_revalidate(struct de
 	struct nfs_open_context *ctx;
 	int openflags, ret = 0;
 
-	if (nd->flags & LOOKUP_RCU)
+	if (nd && (nd->flags & LOOKUP_RCU))
 		return -ECHILD;
 
 	inode = dentry->d_inode;
