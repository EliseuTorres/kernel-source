From: Jeff Mahoney <jeffm@suse.com>
Subject: xfs: Fix re-use of EWOULDBLOCK during read on dm-mirror
References: bnc#736255
Patch-mainline: Submitted differently to linux-fs 6 Dec 2012

When using lvconvert to convert a linear mapping to a dm-raid1 mirror,
we encountered issues where the log would be flooded with messages like:
[490.452144] XFS (dm-0): I/O error occurred: meta-data dev dm-0 block 0x94d0caf8       ("xfs_trans_read_buf") error 11 buf count 4096

The cause is that dm-mirror (and striping, and others) will return
-EWOULDBLOCK for readahead requests while the mirror is rebuilding. XFS's
end_io routine caches the errno and then _xfs_buf_read bails out early
when it encounters it after issuing the i/o request. The I/O eventually
succeeds and the endio routine resets bp->b_error, but the original read
request has already returned -EWOULDBLOCK to the user and added the log
message above to the kernel log, freaking everyone out.

This patch ignores EWOULDBLOCK when deciding whether to wait for the I/O
to complete and tries again, allowing the read to succeed as expected.

Signed-off-by: Jeff Mahoney <jeffm@suse.com>
Reviewed-by: Rich Johnston <rjohnston@sgi.com>
---

 fs/xfs/linux-2.6/xfs_buf.c |    4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

--- a/fs/xfs/linux-2.6/xfs_buf.c
+++ b/fs/xfs/linux-2.6/xfs_buf.c
@@ -600,7 +600,9 @@ _xfs_buf_read(
 			XBF_READ_AHEAD | _XBF_RUN_QUEUES);
 
 	status = xfs_buf_iorequest(bp);
-	if (status || XFS_BUF_ISERROR(bp) || (flags & XBF_ASYNC))
+	if (status ||
+	    (XFS_BUF_ISERROR(bp) && XFS_BUF_GETERROR(bp) != EWOULDBLOCK) ||
+	    (flags & XBF_ASYNC))
 		return status;
 	return xfs_buf_iowait(bp);
 }

