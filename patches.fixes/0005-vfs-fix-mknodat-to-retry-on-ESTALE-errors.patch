From: Jeff Layton <jlayton@redhat.com>
Date: Thu, 20 Dec 2012 16:00:10 -0500
Subject: [PATCH 05/28] vfs: fix mknodat to retry on ESTALE errors
Git-commit: 972567f14cbcd437e9a88a73836bbc2ee0720b5f
Patch-mainline: v3.8
References: bnc#876463

Signed-off-by: Jeff Layton <jlayton@redhat.com>
Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
Acked-by: NeilBrown <neilb@suse.de>

---
 fs/namei.c |    9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

--- linux-3.0-SLE11-SP3.orig/fs/namei.c
+++ linux-3.0-SLE11-SP3/fs/namei.c
@@ -2544,14 +2544,15 @@ SYSCALL_DEFINE4(mknodat, int, dfd, const
 	char *tmp;
 	struct dentry *dentry;
 	struct nameidata nd;
+	unsigned int lookup_flags = 0;
 
 	if (S_ISDIR(mode))
 		return -EPERM;
 
-	error = user_path_parent(dfd, filename, &nd, &tmp, 0);
+retry:
+	error = user_path_parent(dfd, filename, &nd, &tmp, lookup_flags);
 	if (error)
 		return error;
-
 	dentry = lookup_create(&nd, 0);
 	if (IS_ERR(dentry)) {
 		error = PTR_ERR(dentry);
@@ -2588,6 +2589,10 @@ out_unlock:
 	mutex_unlock(&nd.path.dentry->d_inode->i_mutex);
 	path_put(&nd.path);
 	putname(tmp);
+	if (retry_estale(error, lookup_flags)) {
+		lookup_flags |= LOOKUP_REVAL;
+		goto retry;
+	}
 
 	return error;
 }
