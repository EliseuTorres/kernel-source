From: Trond Myklebust <trond.myklebust@primarydata.com>
Date: Tue, 4 Mar 2014 13:12:03 -0500
Subject: [PATCH] NFSv4: Fix the return value of nfs4_select_rw_stateid
Git-commit: 927864cd92aaad1d6285e3bb16e503caf3d6e27e
Patch-mainline: v3.14
References: bnc#888968

In commit 5521abfdcf4d6 (NFSv4: Resend the READ/WRITE RPC call
if a stateid change causes an error), we overloaded the return value of
nfs4_select_rw_stateid() to cause it to return -EWOULDBLOCK if an RPC
call is outstanding that would cause the NFSv4 lock or open stateid
to change.
That is all redundant when we actually copy the stateid used in the
read/write RPC call that failed, and check that against the current
stateid. It is doubly so, when we consider that in the NFSv4.1 case,
we also set the stateid's seqid to the special value '0', which means
'match the current valid stateid'.

Reported-by: Andy Adamson <andros@netapp.com>
Link: http://lkml.kernel.org/r/1393954269-3974-1-git-send-email-andros@netapp.com
Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
Acked-by: NeilBrown <neilb@suse.de>

---
 fs/nfs/nfs4state.c |   16 +++-------------
 1 file changed, 3 insertions(+), 13 deletions(-)

--- linux-3.0-SLE11-SP3.orig/fs/nfs/nfs4state.c
+++ linux-3.0-SLE11-SP3/fs/nfs/nfs4state.c
@@ -897,10 +897,6 @@ static int nfs4_copy_lock_stateid(nfs4_s
 	    (lsp->ls_flags & (NFS_LOCK_INITIALIZED | NFS_LOCK_LOST)) != 0) {
 		nfs4_stateid_copy(dst, &lsp->ls_stateid);
 		ret = 0;
-		smp_rmb();
-		if (lsp->ls_seqid.sequence &&
-		    !list_empty(&lsp->ls_seqid.sequence->list))
-			ret = -EWOULDBLOCK;
 	}
 	spin_unlock(&state->state_lock);
 	nfs4_put_lock_state(lsp);
@@ -908,21 +904,14 @@ out:
 	return ret;
 }
 
-static int nfs4_copy_open_stateid(nfs4_stateid *dst, struct nfs4_state *state)
+static void nfs4_copy_open_stateid(nfs4_stateid *dst, struct nfs4_state *state)
 {
-	int ret;
 	int seq;
 
 	do {
 		seq = read_seqbegin(&state->seqlock);
 		nfs4_stateid_copy(dst, &state->stateid);
-		ret = 0;
-		smp_rmb();
-		if (state->owner->so_seqid.sequence &&
-		    !list_empty(&state->owner->so_seqid.sequence->list))
-			ret = -EWOULDBLOCK;
 	} while (read_seqretry(&state->seqlock, seq));
-	return ret;
 }
 
 /*
@@ -941,7 +930,8 @@ int nfs4_select_rw_stateid(nfs4_stateid
 		goto out;
 	}
 	if (ret)
-		ret = nfs4_copy_open_stateid(dst, state);
+		nfs4_copy_open_stateid(dst, state);
+	ret = 0;
 out:
 	return ret;
 }
