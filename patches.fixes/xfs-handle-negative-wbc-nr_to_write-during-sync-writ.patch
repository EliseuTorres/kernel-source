From: Dave Chinner <dchinner@redhat.com>
Subject: [PATCH] xfs: handle negative wbc->nr_to_write during sync writeback
Git-commit: efceab1d563153a2b1a6e7d35376241a48126989
Patch-mainline: v2.6.36-rc3~27^2~5
References: bnc#699354

During data integrity (WB_SYNC_ALL) writeback, wbc->nr_to_write will
go negative on inodes with more than 1024 dirty pages due to
implementation details of write_cache_pages(). Currently XFS will
abort page clustering in writeback once nr_to_write drops below
zero, and so for data integrity writeback we will do very
inefficient page at a time allocation and IO submission for inodes
with large numbers of dirty pages.

Fix this by only aborting the page clustering code when
wbc->nr_to_write is negative and the sync mode is WB_SYNC_NONE.

Cc: <stable@kernel.org>
Signed-off-by: Dave Chinner <dchinner@redhat.com>
Reviewed-by: Christoph Hellwig <hch@lst.de>
Acked-by: Jan Kara <jack@suse.cz>

---
 fs/xfs/linux-2.6/xfs_aops.c |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

Index: linux-2.6.32-SLE11-SP2/fs/xfs/linux-2.6/xfs_aops.c
===================================================================
--- linux-2.6.32-SLE11-SP2.orig/fs/xfs/linux-2.6/xfs_aops.c
+++ linux-2.6.32-SLE11-SP2/fs/xfs/linux-2.6/xfs_aops.c
@@ -897,7 +897,8 @@ xfs_convert_page(
 			if (bdi_write_congested(bdi)) {
 				wbc->encountered_congestion = 1;
 				done = 1;
-			} else if (wbc->nr_to_write <= 0) {
+			} else if (wbc->nr_to_write <= 0 &&
+				   wbc->sync_mode == WB_SYNC_NONE) {
 				done = 1;
 			}
 		}
