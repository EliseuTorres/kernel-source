From: Jan Kara <jack@suse.cz>
Subject: [PATCH] xfs: Replace async callers of xfs_flush_pages()
Patch-mainline: 3.2
References: bnc#663678

There are three places calling xfs_flush_pages() with XBF_ASYNC flag.  Two of
them - xfs_release() and xfs_sync_inode_data() - want just to start writeback
of all inode pages thus change them to use filemap_flush() so that they don't
unnecessarily use WB_SYNC_ALL writeback. The third place in xfs_setattr_size()
is starting a synchronous writeback in fact so keep using
filemap_fdatawrite_range() there.  This way we can also get rid of abusing
XBF_ASYNC flag.

Signed-off-by: Jan Kara <jack@suse.cz>

diff -rupX /crypted/home/jack/.kerndiffexclude linux-2.6.32-SLE11-SP1/fs/xfs/linux-2.6/xfs_fs_subr.c linux-2.6.32-SLE11-SP1-1-xfs_flush_fix/fs/xfs/linux-2.6/xfs_fs_subr.c
--- linux-2.6.32-SLE11-SP1/fs/xfs/linux-2.6/xfs_fs_subr.c	2009-12-03 04:51:21.000000000 +0100
+++ linux-2.6.32-SLE11-SP1-1-xfs_flush_fix/fs/xfs/linux-2.6/xfs_fs_subr.c	2011-08-15 18:40:31.506893949 +0200
@@ -76,8 +76,6 @@ xfs_flush_pages(
 		xfs_iflags_clear(ip, XFS_ITRUNCATED);
 		ret = -filemap_fdatawrite(mapping);
 	}
-	if (flags & XFS_B_ASYNC)
-		return ret;
 	ret2 = xfs_wait_on_pages(ip, first, last);
 	if (!ret)
 		ret = ret2;
diff -rupX /crypted/home/jack/.kerndiffexclude linux-2.6.32-SLE11-SP1/fs/xfs/linux-2.6/xfs_sync.c linux-2.6.32-SLE11-SP1-1-xfs_flush_fix/fs/xfs/linux-2.6/xfs_sync.c
--- linux-2.6.32-SLE11-SP1/fs/xfs/linux-2.6/xfs_sync.c	2011-08-11 12:04:56.697341055 +0200
+++ linux-2.6.32-SLE11-SP1-1-xfs_flush_fix/fs/xfs/linux-2.6/xfs_sync.c	2011-08-15 19:50:03.358853963 +0200
@@ -237,8 +237,11 @@ xfs_sync_inode_data(
 		xfs_ilock(ip, XFS_IOLOCK_SHARED);
 	}
 
-	error = xfs_flush_pages(ip, 0, -1, (flags & SYNC_WAIT) ?
-				0 : XFS_B_ASYNC, FI_NONE);
+	xfs_iflags_clear(ip, XFS_ITRUNCATED);
+	if (flags & SYNC_WAIT)
+		error = xfs_flush_pages(ip, 0, -1, 0, FI_NONE);
+	else
+		error = -filemap_flush(mapping);
 	xfs_iunlock(ip, XFS_IOLOCK_SHARED);
 
  out_wait:
diff -rupX /crypted/home/jack/.kerndiffexclude linux-2.6.32-SLE11-SP1/fs/xfs/xfs_vnodeops.c linux-2.6.32-SLE11-SP1-1-xfs_flush_fix/fs/xfs/xfs_vnodeops.c
--- linux-2.6.32-SLE11-SP1/fs/xfs/xfs_vnodeops.c	2011-08-11 12:05:07.408101437 +0200
+++ linux-2.6.32-SLE11-SP1-1-xfs_flush_fix/fs/xfs/xfs_vnodeops.c	2011-08-15 19:50:48.467887349 +0200
@@ -253,9 +253,8 @@ xfs_setattr(
 		if (!code &&
 		    ip->i_size != ip->i_d.di_size &&
 		    iattr->ia_size > ip->i_d.di_size) {
-			code = xfs_flush_pages(ip,
-					ip->i_d.di_size, iattr->ia_size,
-					XFS_B_ASYNC, FI_NONE);
+			code = -filemap_fdatawrite_range(inode->i_mapping,
+					ip->i_d.di_size, iattr->ia_size);
 		}
 
 		/* wait for all I/O to complete */
@@ -1083,7 +1082,7 @@ xfs_release(
 		 */
 		truncated = xfs_iflags_test_and_clear(ip, XFS_ITRUNCATED);
 		if (truncated && VN_DIRTY(VFS_I(ip)) && ip->i_delayed_blks > 0)
-			xfs_flush_pages(ip, 0, -1, XFS_B_ASYNC, FI_NONE);
+			filemap_flush(VFS_I(ip)->i_mapping);
 	}
 
 	if (ip->i_d.di_nlink != 0) {
