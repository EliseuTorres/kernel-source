From: Wu Fengguang <fengguang.wu@intel.com>
Subject: HWPOISON: remove the free buddy page handler
References: Requested by Intel for better MCE/MCA testing
Patch-Mainline: yes (2.6.33)
Commit-ID: 95d01fc664b9476e0d18e3d745bb209a42a33588

Signed-off-by: Thomas Renninger <trenn@suse.de>

The buddy page has already be handled in the very beginning.
So remove redundant code.

Signed-off-by: Wu Fengguang <fengguang.wu@intel.com>
Signed-off-by: Andi Kleen <ak@linux.intel.com>

---
 mm/memory-failure.c |   14 ++++----------
 1 file changed, 4 insertions(+), 10 deletions(-)

Index: linux-2.6.32-SLE11-SP1/mm/memory-failure.c
===================================================================
--- linux-2.6.32-SLE11-SP1.orig/mm/memory-failure.c
+++ linux-2.6.32-SLE11-SP1/mm/memory-failure.c
@@ -388,14 +388,6 @@ static int me_unknown(struct page *p, un
 }
 
 /*
- * Free memory
- */
-static int me_free(struct page *p, unsigned long pfn)
-{
-	return DELAYED;
-}
-
-/*
  * Clean (or cleaned) page cache page.
  */
 static int me_pagecache_clean(struct page *p, unsigned long pfn)
@@ -583,7 +575,6 @@ static int me_huge_page(struct page *p,
 #define tail		(1UL << PG_tail)
 #define compound	(1UL << PG_compound)
 #define slab		(1UL << PG_slab)
-#define buddy		(1UL << PG_buddy)
 #define reserved	(1UL << PG_reserved)
 
 static struct page_state {
@@ -593,7 +584,10 @@ static struct page_state {
 	int (*action)(struct page *p, unsigned long pfn);
 } error_states[] = {
 	{ reserved,	reserved,	"reserved kernel",	me_ignore },
-	{ buddy,	buddy,		"free kernel",	me_free },
+	/*
+	 * free pages are specially detected outside this table:
+	 * PG_buddy pages only make a small fraction of all free pages.
+	 */
 
 	/*
 	 * Could in theory check if slab page is free or if we can drop
