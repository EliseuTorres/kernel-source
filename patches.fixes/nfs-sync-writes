From: NeilBrown <neilb@suse.de>
Subject: Restore use of stable writes for small O_SYNC writes
Patch-mainline: no
References: bnc#667766

NFS currently only uses 'stable' writes in very rare circumstances
such as direct reclaim.

This is a regression of earlier kernels which would use STABLE writes
for small O_SYNC writes as well.  With the current kernel we need a
write followed by a commit which is wasteful and reduces the ability
of the server to optimise the short stable write.

So enhance wb_priority to request a stable write when sync_mode is
WB_SYNC_ALL (implying a flush will follow soon anyway) and when the size
of the writeback would fit within a single NFS write request.

Acked-by: Neil Brown <neilb@suse.de>
Signed-off-by: Neil Brown <neilb@suse.de>

---
 fs/nfs/write.c |    9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

--- linux-2.6.32-SLE11-SP1.orig/fs/nfs/write.c
+++ linux-2.6.32-SLE11-SP1/fs/nfs/write.c
@@ -214,12 +214,15 @@ static void nfs_mark_uptodate(struct pag
 	SetPageUptodate(page);
 }
 
-static int wb_priority(struct writeback_control *wbc)
+static int wb_priority(struct writeback_control *wbc, struct inode *inode)
 {
 	if (wbc->for_reclaim)
 		return FLUSH_HIGHPRI | FLUSH_STABLE;
 	if (wbc->for_kupdate)
 		return FLUSH_LOWPRI;
+	if (wbc->sync_mode == WB_SYNC_ALL &&
+	    (wbc->range_end - wbc->range_start) <= NFS_SERVER(inode)->wsize - 1)
+		return FLUSH_STABLE;
 	return 0;
 }
 
@@ -338,7 +341,7 @@ static int nfs_writepage_locked(struct p
 	int err;
 
 	nfs_pageio_init_write(&pgio, page_file_mapping(page)->host,
-			wb_priority(wbc));
+			wb_priority(wbc, page->mapping->host));
 	err = nfs_do_writepage(page, wbc, &pgio);
 	nfs_pageio_complete(&pgio);
 	if (err < 0)
@@ -403,7 +406,7 @@ int nfs_writepages(struct address_space
 
 	nfs_inc_stats(inode, NFSIOS_VFSWRITEPAGES);
 
-	nfs_pageio_init_write(&pgio, inode, wb_priority(wbc));
+	nfs_pageio_init_write(&pgio, inode, wb_priority(wbc, inode));
 	err = write_cache_pages(mapping, wbc, nfs_writepages_callback, &pgio);
 	nfs_pageio_complete(&pgio);
 
