From 3df066978ccf712ec6d29ecfeec9bc4bc24fa59c Mon Sep 17 00:00:00 2001
From: Geyslan G. Bem <geyslan@gmail.com>
Date: Wed, 30 Oct 2013 16:01:00 -0500
Subject: [PATCH] xfs: fix possible NULL dereference in xlog_verify_iclog
Git-commit: 643f7c4e5656bd18c769211f933190f7bb738245
Patch-mainline: v3.13-rc1

In xlog_verify_iclog a debug check of the incore log buffers prints an
error if icptr is null and then goes on to dereference the pointer
regardless.  Convert this to an assert so that the intention is clear.
This was reported by Coverty.

Signed-off-by: Ben Myers <bpm@sgi.com>
Reviewed-by: Eric Sandeen <sandeen@redhat.com>

Signed-off-by: Jan Kara <jack@suse.cz>

---
 fs/xfs/xfs_log.c |    8 +++-----
 1 files changed, 3 insertions(+), 5 deletions(-)

diff --git a/fs/xfs/xfs_log.c b/fs/xfs/xfs_log.c
index 0461f08..eb88669 100644
--- a/fs/xfs/xfs_log.c
+++ b/fs/xfs/xfs_log.c
@@ -3712,11 +3712,9 @@ xlog_verify_iclog(
 	/* check validity of iclog pointers */
 	spin_lock(&log->l_icloglock);
 	icptr = log->l_iclog;
-	for (i=0; i < log->l_iclog_bufs; i++) {
-		if (icptr == NULL)
-			xfs_emerg(log->l_mp, "%s: invalid ptr", __func__);
-		icptr = icptr->ic_next;
-	}
+	for (i = 0; i < log->l_iclog_bufs; i++, icptr = icptr->ic_next)
+		ASSERT(icptr);
+
 	if (icptr != log->l_iclog)
 		xfs_emerg(log->l_mp, "%s: corrupt iclog ring", __func__);
 	spin_unlock(&log->l_icloglock);
-- 
1.6.0.2

