From: Linus Torvalds <torvalds@linux-foundation.org>
Date: Sun, 27 Mar 2011 19:09:29 -0700
Subject: [PATCH] proc: fix oops on invalid /proc/<pid>/maps access
Mime-version: 1.0
Content-type: text/plain; charset=UTF-8
Content-transfer-encoding: 8bit
Git-commit: 76597cd31470fa130784c78fadb4dab2e624a723
References: bnc#693382
Patch-mainline: v2.6.39-rc1

When m_start returns an error, the seq_file logic will still call m_stop
with that error entry, so we'd better make sure that we check it before
using it as a vma.

Introduced by commit ec6fd8a4355c ("report errors in /proc/*/*map*
sanely"), which replaced NULL with various ERR_PTR() cases.

(On ia64, you happen to get a unaligned fault instead of a page fault,
since the address used is generally some random error code like -EPERM)

Reported-by: Anca Emanuel <anca.emanuel@gmail.com>
Reported-by: Tony Luck <tony.luck@intel.com>
Cc: Al Viro <viro@zeniv.linux.org.uk>
Cc: Am√©rico Wang <xiyou.wangcong@gmail.com>
Cc: Stephen Wilson <wilsons@start.ca>
Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
Acked-by: Michal Hocko <mhocko@suse.cz>

---
 fs/proc/task_mmu.c |    3 ++-
 1 files changed, 2 insertions(+), 1 deletions(-)

Index: linux-2.6.32-SLE11-SP1/fs/proc/task_mmu.c
===================================================================
--- linux-2.6.32-SLE11-SP1.orig/fs/proc/task_mmu.c
+++ linux-2.6.32-SLE11-SP1/fs/proc/task_mmu.c
@@ -175,7 +175,8 @@ static void m_stop(struct seq_file *m, v
 	struct proc_maps_private *priv = m->private;
 	struct vm_area_struct *vma = v;
 
-	vma_stop(priv, vma);
+	if (!IS_ERR(vma))
+		vma_stop(priv, vma);
 	if (priv->task)
 		put_task_struct(priv->task);
 }

