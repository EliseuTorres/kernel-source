From: Hannes Reinecke <hare@suse.de>
Date: Thu Apr 29 16:16:47 2010 +0200
Subject: Race between blk_abort_queue() and scsi_requeue_request()
References: bnc#588929
Patch-Mainline: n/a

blk_abort_queue() takes the queue lock before aborting
an request. scsi_requeue_request() checks if a request
is already aborted, and _then_ taking the queue lock to
requeue the request.
This leaves a race window during which a process could
be aborting a request and another one requeueing it.

Signed-off-by: Hannes Reinecke <hare@suse.de>

Index: linux-2.6.32-SLE11-SP1/drivers/scsi/scsi_lib.c
===================================================================
--- linux-2.6.32-SLE11-SP1.orig/drivers/scsi/scsi_lib.c
+++ linux-2.6.32-SLE11-SP1/drivers/scsi/scsi_lib.c
@@ -120,13 +120,14 @@ static void scsi_requeue_request(struct
 {
 	unsigned long flags;
 
+	spin_lock_irqsave(q->queue_lock, flags);
 	if (blk_request_aborted(req)) {
 		scsi_unprep_fn(q, req);
-		blk_end_request_all(req, -EIO);
+		__blk_end_request_all(req, -EIO);
+		spin_unlock_irqrestore(q->queue_lock, flags);
 		goto out;
 	}
 
-	spin_lock_irqsave(q->queue_lock, flags);
 	if (unprep)
 		scsi_unprep_request(req);
 	blk_requeue_request(q, req);
