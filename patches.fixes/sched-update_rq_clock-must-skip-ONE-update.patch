Subject: sched: update_rq_clock() must skip ONE update
From: Mike Galbraith <mgalbraith@suse.de>
Date: Sun Mar 30 06:56:48 CEST 2014
Patch-mainline: not yet, submitted
References: bnc#869033, bnc#868528

Prevent large wakeup latencies from being accounted to the wrong task.

Cc: <stable@vger.kernel.org>
Signed-off-by: 	Mike Galbraith <mgalbraith@suse.de>
---
 kernel/sched.c |    7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

--- a/kernel/sched.c
+++ b/kernel/sched.c
@@ -815,7 +815,12 @@ static void update_rq_clock(struct rq *r
 {
 	s64 delta;
 
-	if (rq->skip_clock_update > 0)
+	/*
+	 * Set during wakeup to indicate we are on the way to schedule().
+	 * Decrement to ensure that a very large latency is not accounted
+	 * to the wrong task.
+	 */
+	if (rq->skip_clock_update-- > 0)
 		return;
 
 	delta = sched_clock_cpu(cpu_of(rq)) - rq->clock;
