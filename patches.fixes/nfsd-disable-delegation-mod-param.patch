From: NeilBrown <neilb@suse.de>
Subject: NFSD add module parameter to disable delegations
Patch-mainline: not needed
References: bnc#876463

When nfsd gives out a delegation it must reclaim it if the file is
changed on the server.  This works for writes or if the file is
changed via NFS access.
However local filesystem operations such as rename or unlink should
recall the delegation but don't.
This can lead to inconsistencies.

When no local filesystem access is used, delegations are perfectly
safe.  Then it is used, it can cause inconsistencies between the local
view and the NFS view.  To avoid this problem a new module parameter
is provided to disable the handing out of delegations.

 nfsd.allow_delegations=N

on kernel command line, or

  echo N > /sys/modules/nfsd/parameters/allow_delegations

will make local accesses safe again

Acked-by: NeilBrown <neilb@suse.de>
Signed-off-by: Neil Brown <neilb@suse.de>

---
 fs/nfsd/nfs4state.c |    6 ++++++
 1 file changed, 6 insertions(+)

--- linux-3.0-SLE11-SP3.orig/fs/nfsd/nfs4state.c
+++ linux-3.0-SLE11-SP3/fs/nfsd/nfs4state.c
@@ -127,6 +127,10 @@ get_nfs4_file(struct nfs4_file *fi)
 
 static int num_delegations;
 unsigned long max_delegations;
+static bool allow_delegations = true;
+module_param(allow_delegations, bool, 0644);
+MODULE_PARM_DESC(allow_delegations,
+		 "Allow NFS server to give (read) delegations to clients.");
 
 /*
  * Open owner state (share locks)
@@ -215,6 +219,8 @@ alloc_init_deleg(struct nfs4_client *clp
 	 * calbacks on stat) will be required before we can support
 	 * write delegations properly.
 	 */
+	if (!allow_delegations)
+		return NULL;
 	if (type != NFS4_OPEN_DELEGATE_READ)
 		return NULL;
 	if (fp->fi_had_conflict)
