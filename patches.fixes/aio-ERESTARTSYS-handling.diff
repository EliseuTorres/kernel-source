From: Jan Kara <jack@suse.cz>
Subject: aio: Do not return ERESTARTSYS as a result of AIO
References: bnc#612009
Patch-mainline: expect 2.6.35

We must not leak ERESTARTSYS (and similar error codes) to userspace as a return
value of IO.  Because other AIO could have been already submitted by the same
io_submit syscall, there is no easy way to restart the syscall. So we do not
have much other options than fail the particular IO with EINTR.

Signed-off-by: Jan Kara <jack@suse.cz>

diff -rupX /crypted/home/jack/.kerndiffexclude linux-2.6.16-SLES10_SP3_BRANCH/fs/aio.c linux-2.6.16-SLES10_SP3_BRANCH-1-aio_ERESTARTSYS/fs/aio.c
--- linux-2.6.16-SLES10_SP3_BRANCH/fs/aio.c	2010-06-08 12:50:47.000000000 +0200
+++ linux-2.6.16-SLES10_SP3_BRANCH-1-aio_ERESTARTSYS/fs/aio.c	2010-06-08 13:24:53.000000000 +0200
@@ -740,6 +740,13 @@ static ssize_t aio_run_iocb(struct kiocb
 
 	if (ret != -EIOCBRETRY && ret != -EIOCBQUEUED) {
 		BUG_ON(!list_empty(&iocb->ki_wait.task_list));
+		/*
+		 * There's no easy way to restart the syscall since other AIO's
+		 * may be already running. Just fail this IO with EINTR.
+		 */
+		if (unlikely(ret == -ERESTARTSYS || ret == -ERESTARTNOINTR ||
+			     ret == -ERESTARTNOHAND || ret == -ERESTART_RESTARTBLOCK))
+			ret = -EINTR;
 		aio_complete(iocb, ret, 0);
 	}
 out:
