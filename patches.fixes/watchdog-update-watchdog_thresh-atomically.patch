From: Michal Hocko <mhocko@suse.cz>
Subject: watchdog: Update watchdog_thresh atomically
Patch-mainline: 3.12-rc3
Git-commit: 359e6fab6600562073162348cd4c18c5958296d8
References: bnc#829357

proc_dowatchdog doesn't synchronize multiple callers which might lead to
confusion when two parallel callers might confuse watchdog_enable_all_cpus
resp. watchdog_disable_all_cpus (e.g. watchdog gets enabled even if
watchdog_thresh was set to 0 already).

This patch adds a local mutex which synchronizes callers to the sysctl handler.

Signed-off-by: Michal Hocko <mhocko@suse.cz>

---
 kernel/watchdog.c |    3 +++
 1 file changed, 3 insertions(+)

--- a/kernel/watchdog.c
+++ b/kernel/watchdog.c
@@ -515,8 +515,10 @@ static void watchdog_disable_all_cpus(vo
 int proc_dowatchdog(struct ctl_table *table, int write,
 		    void __user *buffer, size_t *lenp, loff_t *ppos)
 {
+	static DEFINE_MUTEX(watchdog_thresh_mutex);
 	int ret;
 
+	mutex_lock(&watchdog_thresh_mutex);
 	ret = proc_dointvec_minmax(table, write, buffer, lenp, ppos);
 	if (ret || !write)
 		goto out;
@@ -527,6 +529,7 @@ int proc_dowatchdog(struct ctl_table *ta
 		watchdog_disable_all_cpus();
 
 out:
+	mutex_unlock(&watchdog_thresh_mutex);
 	return ret;
 }
 #endif /* CONFIG_SYSCTL */
