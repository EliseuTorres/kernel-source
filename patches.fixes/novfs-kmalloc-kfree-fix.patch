From: Michal Kubecek <mkubecek@suse.cz>
Subject: novfs: fix some kmalloc/kfree issues
References: bnc#669378
Patch-mainline: no

- unchecked kmalloc() return value in processList()
- kfree() in novfs_i_setattr() would be called if kmalloc() failed

Reported-by: Jeremy Meldrum <jmeldrum@novell.com>
Signed-off-by: Michal Kubecek <mkubecek@suse.cz>
Acked-by: Jan Kara <jack@suse.cz>
---
 fs/novfs/inode.c |   22 +++++++++++-----------
 1 files changed, 11 insertions(+), 11 deletions(-)

diff --git a/fs/novfs/inode.c b/fs/novfs/inode.c
index d4c8f74..f1770fa 100644
--- a/fs/novfs/inode.c
+++ b/fs/novfs/inode.c
@@ -986,18 +986,18 @@ void processList(struct file *file, void *dirent, filldir_t filldir, char *list,
 			cp += (name.len + 1);
 
 			pinfo = kmalloc(sizeof(struct novfs_entry_info) + PATH_LENGTH_BUFFER, GFP_KERNEL);
-			pinfo->mode = S_IFDIR | 0700;
-			pinfo->size = 0;
-			pinfo->atime = pinfo->ctime = pinfo->mtime = CURRENT_TIME;
-			strcpy(pinfo->name, name.name);
-			pinfo->namelength = name.len;
-
-			novfs_Dump_Info(pinfo);
+			if (pinfo) {
+				pinfo->mode = S_IFDIR | 0700;
+				pinfo->size = 0;
+				pinfo->atime = pinfo->ctime = pinfo->mtime = CURRENT_TIME;
+				strcpy(pinfo->name, name.name);
+				pinfo->namelength = name.len;
+				novfs_Dump_Info(pinfo);
+				kfree(pinfo);
+			}
 
-			filldir(dirent, pinfo->name, pinfo->namelength, file->f_pos, file->f_pos, pinfo->mode >> 12);
+			filldir(dirent, name.name, name.len, file->f_pos, file->f_pos, (S_IFDIR | 0700) >> 12);
 			file->f_pos += 1;
-
-			kfree(pinfo);
 		}
 	}
 
@@ -2866,8 +2866,8 @@ int novfs_i_setattr(struct dentry *dentry, struct iattr *attr)
 					}
 				}
 			}
+			kfree(buf);
 		}
-		kfree(buf);
 	}
 	DbgPrint("return 0x%x", retVal);
 
-- 
1.7.3.4

