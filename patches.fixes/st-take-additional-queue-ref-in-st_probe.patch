From: Joe Lawrence <joe.lawrence@stratus.com>
Date: Tue, 5 Mar 2013 09:30:14 -0500
Subject: st: Take additional queue ref in st_probe
References: bnc#801038, bnc#788826
Patch-mainline: Not yet, http://marc.info/?l=linux-scsi&m=136249932603011&w=2

The SCSI tape driver employs a struct gendisk, calling alloc_disk() to
create an instance, but does not register it via add_disk().  When the
gendisk is torn down, disk_release() is called and expects to return a
disk queue reference that add_disk() normally would have taken out. (See
commit 523e1d39.)  Fix the kref accounting by adding a blk_get_queue()
to st_probe().

Signed-off-by: Joe Lawrence <joe.lawrence@stratus.com>
Tested-by: Ewan D. Milne <emilne@redhat.com>
Acked-by: Jan Vesely <jvesely@redhat.com>
Acked-by: Ewan D. Milne <emilne@redhat.com>
Cc: Kai MÃ¤kisara <Kai.Makisara@kolumbus.fi>
Cc: James E.J. Bottomley <JBottomley@parallels.com>
Cc: "Seymour, Shane M" <shane.seymour@hp.com>

Backporting notes: blk_get_queue() prototype changed in kernel v3.3
and the return value got inverted in the process. 

Acked-by: Jean Delvare <jdelvare@suse.de>
---
 drivers/scsi/st.c |   10 ++++++++--
 1 file changed, 8 insertions(+), 2 deletions(-)

--- a/drivers/scsi/st.c
+++ b/drivers/scsi/st.c
@@ -4108,6 +4108,10 @@ static int st_probe(struct device *dev)
 	tpnt->disk = disk;
 	disk->private_data = &tpnt->driver;
 	disk->queue = SDp->request_queue;
+	/* SCSI tape doesn't register this gendisk via add_disk().  Manually
+	 * take queue reference that release_disk() expects. */
+	if (!blk_get_queue(disk->queue))
+		goto out_put_disk;
 	tpnt->driver = &st_template;
 
 	tpnt->device = SDp;
@@ -4177,7 +4181,7 @@ static int st_probe(struct device *dev)
 	if (!idr_pre_get(&st_index_idr, GFP_KERNEL)) {
 		printk(KERN_WARNING "st: idr expansion failed\n");
 		error = -ENOMEM;
-		goto out_put_disk;
+		goto out_put_queue;
 	}
 
 	spin_lock(&st_index_lock);
@@ -4185,7 +4189,7 @@ static int st_probe(struct device *dev)
 	spin_unlock(&st_index_lock);
 	if (error) {
 		printk(KERN_WARNING "st: idr allocation failed: %d\n", error);
-		goto out_put_disk;
+		goto out_put_queue;
 	}
 
 	if (dev_num > ST_MAX_TAPES) {
@@ -4217,6 +4221,8 @@ out_put_index:
 	spin_lock(&st_index_lock);
 	idr_remove(&st_index_idr, dev_num);
 	spin_unlock(&st_index_lock);
+out_put_queue:
+	blk_put_queue(disk->queue);
 out_put_disk:
 	put_disk(disk);
 	kfree(tpnt);
