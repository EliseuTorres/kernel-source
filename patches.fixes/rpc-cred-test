From: NeilBrown <neilb@suse.de>
Subject: [PATCH] NFS/sunrpc: don't use a credential with extra groups.
Patch-mainline: 3.2
References: bnc#725878

The sunrpc layer keeps a cache of recently used credentials and
'unx_match' is used to find the credential which matches the current
process.

However unx_match allows a match when the cached credential has extra
groups at the end of uc_gids list which are not in the process group list.

So if a process with a list of (say) 4 group accesses a file and gains
access because of the last group in the list, then another process
with the same uid and gid, and a gid list being the first tree of the
gids of the original process tries to access the file, it will be
granted access even though it shouldn't as the wrong rpc credential
will be used.

Signed-off-by: NeilBrown <neilb@suse.de>
Acked-by: Neil Brown <neilb@suse.de>

---
 net/sunrpc/auth_unix.c |    2 ++
 1 file changed, 2 insertions(+)

--- linux-3.0-SLE11-SP2.orig/net/sunrpc/auth_unix.c
+++ linux-3.0-SLE11-SP2/net/sunrpc/auth_unix.c
@@ -129,6 +129,8 @@ unx_match(struct auth_cred *acred, struc
 	for (i = 0; i < groups ; i++)
 		if (cred->uc_gids[i] != GROUP_AT(acred->group_info, i))
 			return 0;
+	if (i < NFS_NGROUPS && cred->uc_gids[i] != NOGROUP)
+		return 0;
 	return 1;
 }
 
