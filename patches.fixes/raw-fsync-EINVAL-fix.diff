From: Anton Blanchard <anton@samba.org>
Subject: [PATCH] raw: fsync method is now required
References: bnc#590937
Patch-mainline: 2.6.34?

Commit 148f948ba877f4d3cdef036b1ff6d9f68986706a (vfs: Introduce new helpers for syncing after writing to O_SYNC file or IS_SYNC inode) broke the raw driver.

We now call through generic_file_aio_write -> generic_write_sync ->
vfs_fsync_range. vfs_fsync_range has:

        if (!fop || !fop->fsync) {
                ret = -EINVAL;
                goto out;
        }

But drivers/char/raw.c doesn't set an fsync method. 

We have two options: fix it or remove the raw driver completely. I'm happy
to do either, the fact this has been broken for so long suggests it is
rarely used.

The patch below adds an fsync method to the raw driver. My knowledge of the
block layer is pretty sketchy so this could do with a once over.

If we instead decide to remove the raw driver, this patch might still be
useful as a backport to 2.6.33 and 2.6.32.

Signed-off-by: Anton Blanchard <anton@samba.org>
Signed-off-by: Jan Kara <jack@suse.cz>
---

Index: linux-2.6.32-SLE11-SP1-rawdev/drivers/char/raw.c
===================================================================
--- linux-2.6.32-SLE11-SP1-rawdev.orig/drivers/char/raw.c
+++ linux-2.6.32-SLE11-SP1-rawdev/drivers/char/raw.c
@@ -253,6 +253,7 @@ static const struct file_operations raw_
 	.aio_read = 	generic_file_aio_read,
 	.write	=	do_sync_write,
 	.aio_write =	blkdev_aio_write,
+	.fsync	=	block_fsync,
 	.open	=	raw_open,
 	.release=	raw_release,
 	.ioctl	=	raw_ioctl,
Index: linux-2.6.32-SLE11-SP1-rawdev/fs/block_dev.c
===================================================================
--- linux-2.6.32-SLE11-SP1-rawdev.orig/fs/block_dev.c
+++ linux-2.6.32-SLE11-SP1-rawdev/fs/block_dev.c
@@ -404,10 +404,11 @@ static loff_t block_llseek(struct file *
  *	NULL first argument is nfsd_sync_dir() and that's not a directory.
  */
  
-static int block_fsync(struct file *filp, struct dentry *dentry, int datasync)
+int block_fsync(struct file *filp, struct dentry *dentry, int datasync)
 {
 	return sync_blockdev(I_BDEV(filp->f_mapping->host));
 }
+EXPORT_SYMBOL(block_fsync);
 
 /*
  * pseudo-fs
Index: linux-2.6.32-SLE11-SP1-rawdev/include/linux/fs.h
===================================================================
--- linux-2.6.32-SLE11-SP1-rawdev.orig/include/linux/fs.h
+++ linux-2.6.32-SLE11-SP1-rawdev/include/linux/fs.h
@@ -2243,6 +2243,7 @@ extern int generic_segment_checks(const 
 /* fs/block_dev.c */
 extern ssize_t blkdev_aio_write(struct kiocb *iocb, const struct iovec *iov,
 				unsigned long nr_segs, loff_t pos);
+extern int block_fsync(struct file *filp, struct dentry *dentry, int datasync);
 
 /* fs/splice.c */
 extern ssize_t generic_file_splice_read(struct file *, loff_t *,
