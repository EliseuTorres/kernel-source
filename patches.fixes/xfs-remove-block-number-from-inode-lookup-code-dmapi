From: Jeff Mahoney <jeffm@suse.com>
Subject: xfs: remove block number from inode lookup code (dmapi)
Patch-mainline: When DMAPI gets there

This patch implementst the DMAPI portion of
patches.fixes/xfs-remove-block-number-from-inode-lookup-code

Since the DMAPI code wasn't actually using the block number, this is
just straight code removal.

Signed-off-by: Jeff Mahoney <jeffm@suse.com>
---
 fs/xfs/dmapi/xfs_dm.c |   16 ++++++----------
 1 file changed, 6 insertions(+), 10 deletions(-)

--- a/fs/xfs/dmapi/xfs_dm.c
+++ b/fs/xfs/dmapi/xfs_dm.c
@@ -391,7 +391,6 @@ STATIC int
 xfs_dm_bulkall_iget_one(
 	xfs_mount_t	*mp,
 	xfs_ino_t	ino,
-	xfs_daddr_t	bno,
 	int		*value_lenp,
 	dm_xstat_t	*xbuf,
 	u_int		*xstat_szp,
@@ -405,7 +404,7 @@ xfs_dm_bulkall_iget_one(
 	int		error;
 
 	error = xfs_iget(mp, NULL, ino,
-			 XFS_IGET_UNTRUSTED, XFS_ILOCK_SHARED, &ip, bno);
+			 XFS_IGET_UNTRUSTED, XFS_ILOCK_SHARED, &ip);
 	if (error)
 		return error;
 
@@ -450,7 +449,6 @@ xfs_dm_bulkall_one(
 	void		__user *buffer,	/* buffer to place output in */
 	int		ubsize,		/* size of buffer */
 	void		*private_data,	/* my private data */
-	xfs_daddr_t	bno,		/* starting block of inode cluster */
 	int		*ubused,	/* amount of buffer we used */
 	int		*res)		/* bulkstat result code */
 {
@@ -488,7 +486,7 @@ xfs_dm_bulkall_one(
 	attr_buf_sz = value_len;
 	attr_buf = kmem_alloc(attr_buf_sz, KM_SLEEP);
 
-	error = xfs_dm_bulkall_iget_one(mp, ino, bno,
+	error = xfs_dm_bulkall_iget_one(mp, ino,
 					&value_len, xbuf, &xstat_sz,
 					dmb->attrname.dan_chars,
 					attr_buf);
@@ -542,7 +540,6 @@ STATIC int
 xfs_dm_bulkattr_iget_one(
 	xfs_mount_t	*mp,
 	xfs_ino_t	ino,
-	xfs_daddr_t	bno,
 	dm_stat_t	*sbuf,
 	u_int		stat_sz)
 {
@@ -551,7 +548,7 @@ xfs_dm_bulkattr_iget_one(
 	int		error;
 
 	error = xfs_iget(mp, NULL, ino,
-			 XFS_IGET_UNTRUSTED, XFS_ILOCK_SHARED, &ip, bno);
+			 XFS_IGET_UNTRUSTED, XFS_ILOCK_SHARED, &ip);
 	if (error)
 		return error;
 
@@ -575,7 +572,6 @@ xfs_dm_bulkattr_one(
 	void		__user *buffer,	/* buffer to place output in */
 	int		ubsize,		/* size of buffer */
 	void		*private_data,	/* my private data */
-	xfs_daddr_t	bno,		/* starting block of inode cluster */
 	int		*ubused,	/* amount of buffer we used */
 	int		*res)		/* bulkstat result code */
 {
@@ -598,7 +594,7 @@ xfs_dm_bulkattr_one(
 
 	sbuf = kmem_alloc(stat_sz, KM_SLEEP);
 
-	error = xfs_dm_bulkattr_iget_one(mp, ino, bno, sbuf, stat_sz);
+	error = xfs_dm_bulkattr_iget_one(mp, ino, sbuf, stat_sz);
 	if (error)
 		goto out_free_buffer;
 
@@ -1561,7 +1557,7 @@ dm_filldir(void *__buf, const char *name
 		goto out_err;
 
 	memset(statp, 0, dm_stat_size(MAXNAMLEN));
-	error = -xfs_dm_bulkattr_iget_one(cb->mp, ino, 0,
+	error = -xfs_dm_bulkattr_iget_one(cb->mp, ino,
 			statp, needed);
 	if (error)
 		goto out_err;
@@ -3012,7 +3008,7 @@ xfs_dm_fh_to_inode(
 	if (ino == 0)
 		return -ESTALE;
 
-	error = xfs_iget(mp, NULL, ino, 0, XFS_ILOCK_SHARED, &ip, 0);
+	error = xfs_iget(mp, NULL, ino, 0, XFS_ILOCK_SHARED, &ip);
 	if (error)
 		return -error;
 	if (!ip)
