From: Bob Moore <robert.moore@intel.com>
Subject: ACPICA: Fix Scope() op in module level code
References: bnc#646542
Patch-Mainline: yes

mainline git commit: 8df3fc981dc12d9fdcaef4100a2193b605024d7a
https://bugzilla.kernel.org/show_bug.cgi?id=19462

Signed-off-by: Bob Moore <robert.moore@intel.com>
Signed-off-by: Lin Ming <ming.m.lin@intel.com>
Signed-off-by: Len Brown <len.brown@intel.com>
Signed-off-by: Thomas Renninger <trenn@suse.de>

---
 drivers/acpi/acpica/dswexec.c |   19 ++++++++++++++++++-
 1 file changed, 18 insertions(+), 1 deletion(-)

Index: linux-2.6.32-SLE11-SP1/drivers/acpi/acpica/dswexec.c
===================================================================
--- linux-2.6.32-SLE11-SP1.orig/drivers/acpi/acpica/dswexec.c
+++ linux-2.6.32-SLE11-SP1/drivers/acpi/acpica/dswexec.c
@@ -300,8 +300,25 @@ acpi_ds_exec_begin_op(struct acpi_walk_s
 			 * we must enter this object into the namespace.  The created
 			 * object is temporary and will be deleted upon completion of
 			 * the execution of this method.
+			 *
+			 * Note 10/2010: Except for the Scope() op. This opcode does
+			 * not actually create a new object, it refers to an existing
+			 * object. However, for Scope(), we want to indeed open a
+			 * new scope.
 			 */
-			status = acpi_ds_load2_begin_op(walk_state, NULL);
+
+			if (op->common.aml_opcode != AML_SCOPE_OP) {
+				status = acpi_ds_load2_begin_op(walk_state,
+								NULL);
+			} else {
+				status =
+					acpi_ds_scope_stack_push(op->named.node,
+								 op->named.node->
+								 type, walk_state);
+				if (ACPI_FAILURE(status)) {
+					return_ACPI_STATUS(status);
+				}
+			}
 		}
 
 		break;
