From e237ec37ec154564f8690c5bd1795339955eeef9 Mon Sep 17 00:00:00 2001
From: Jan Kara <jack@suse.cz>
Date: Fri, 19 Dec 2014 14:27:55 +0100
Subject: [PATCH 4/4] udf: Check component length before reading it
Git-commit: e237ec37ec154564f8690c5bd1795339955eeef9
Patch-mainline: v3.19-rc3
References: bsc#933904 CVE-2014-9728 CVE-2014-9730

Check that length specified in a component of a symlink fits in the
input buffer we are reading. Also properly ignore component length for
component types that do not use it. Otherwise we read memory after end
of buffer for corrupted udf image.

Reported-by: Carl Henrik Lunde <chlunde@ping.uio.no>
Cc: stable@vger.kernel.org
Signed-off-by: Jan Kara <jack@suse.cz>

---
 fs/udf/symlink.c | 9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

Index: linux-3.0-SLE11-SP3/fs/udf/symlink.c
===================================================================
--- linux-3.0-SLE11-SP3.orig/fs/udf/symlink.c
+++ linux-3.0-SLE11-SP3/fs/udf/symlink.c
@@ -42,6 +42,7 @@ static int udf_pc_to_char(struct super_b
 	tolen--;
 	while (elen < fromlen) {
 		pc = (struct pathComponent *)(from + elen);
+		elen += sizeof(struct pathComponent);
 		switch (pc->componentType) {
 		case 1:
 			if (pc->lengthComponentIdent == 0) {
@@ -68,6 +69,9 @@ static int udf_pc_to_char(struct super_b
 			/* that would be . - just ignore */
 			break;
 		case 5:
+			elen += pc->lengthComponentIdent;
+			if (elen > fromlen)
+				return -EIO;
 			comp_len = udf_get_filename(sb, pc->componentIdent,
 						    pc->lengthComponentIdent,
 						    p, tolen);
@@ -79,7 +83,6 @@ static int udf_pc_to_char(struct super_b
 			tolen--;
 			break;
 		}
-		elen += sizeof(struct pathComponent) + pc->lengthComponentIdent;
 	}
 	if (p > to + 1)
 		p[-1] = '\0';
