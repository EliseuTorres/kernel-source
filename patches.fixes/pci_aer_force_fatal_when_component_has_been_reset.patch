From: Betty Dall <betty.dall@hp.com>
Subject: ACPI / APEI: Force fatal AER severity when component has been reset
References: bnc#828886 bnc#824568
Patch-Mainline: v3.11-rc1
Git-commit: 0ba98ec9196746dd6abfa7bb9856ef4f29ffb9be


Signed-off-by: Thomas Renninger <trenn@suse.de>

The CPER error record has a reset bit that indicates that the platform
has reset the component. The reset bit can be set for any severity
error including recoverable.  From the AER code path's perspective,
any error is fatal if the component has been reset.  This patch
upgrades the severity of the AER recovery to AER_FATAL whenever the
CPER error record indicates that the component has been reset.

[bhelgaas: s/bus has been reset/component has been reset/]
Signed-off-by: Betty Dall <betty.dall@hp.com>
Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
Index: linux-3.0-SLE11-SP3/drivers/acpi/apei/ghes.c
===================================================================
--- linux-3.0-SLE11-SP3.orig/drivers/acpi/apei/ghes.c
+++ linux-3.0-SLE11-SP3/drivers/acpi/apei/ghes.c
@@ -488,9 +488,19 @@ static void ghes_do_proc(const struct ac
 			    pcie_err->validation_bits & CPER_PCIE_VALID_AER_INFO) {
 				unsigned int devfn;
 				int aer_severity;
+
 				devfn = PCI_DEVFN(pcie_err->device_id.device,
 						  pcie_err->device_id.function);
 				aer_severity = cper_severity_to_aer(sev);
+
+				/*
+				 * If firmware reset the component to contain
+				 * the error, we must reinitialize it before
+				 * use, so treat it as a fatal AER error.
+				 */
+				if (gdata->flags & CPER_SEC_RESET)
+					aer_severity = AER_FATAL;
+
 				aer_recover_queue(pcie_err->device_id.segment,
 						  pcie_err->device_id.bus,
 						  devfn, aer_severity,
