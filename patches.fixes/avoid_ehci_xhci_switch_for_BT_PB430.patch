From d8a8bbb1b7e954fcbe6849688225a5cba889fc88 Mon Sep 17 00:00:00 2001
From: Oliver Neukum <oneukum@suse.de>
Date: Thu, 23 May 2013 11:59:25 +0200
Subject: Do not switch BT on HP ProBook 4340
References: bnc#812281
Git-Commit: e4f4c90ae055895aff16caad9a29ce340700cddb
Patch-Mainline: Never (mainline fix breaks kABI)

This ugly fix prevents the port the BT module is attached
to being handed over to XHCI from EHCI. This is necessary
because currently some XHCI cannot deal correctly with the
extremely quick disconnect/reconnect cycle caused by firmware
uploads.

The effect is seen in some preloads of HP laptops.

Signed-off-by: Oliver Neukum <oneukum@suse.de>
---
 drivers/usb/host/pci-quirks.c | 14 ++++++++++++++
 1 file changed, 14 insertions(+)

diff --git a/drivers/usb/host/pci-quirks.c b/drivers/usb/host/pci-quirks.c
index 0f097d3..3c738ec 100644
--- a/drivers/usb/host/pci-quirks.c
+++ b/drivers/usb/host/pci-quirks.c
@@ -556,6 +556,16 @@ static const struct dmi_system_id __devinitconst ehci_dmi_nohandoff_table[] = {
 	{ }
 };
 
+static const struct dmi_system_id bt_excepted_from_switch_table[] = {
+	{
+		/* HP ProBook 430 */
+		.matches = {
+			DMI_MATCH(DMI_PRODUCT_NAME, "HP ProBook 430 G1"),
+		},
+	},
+	{ }
+};
+
 static void __devinit ehci_bios_handoff(struct pci_dev *pdev,
 					void __iomem *op_reg_base,
 					u32 cap, u8 offset)
@@ -800,6 +810,10 @@ void usb_enable_xhci_ports(struct pci_dev *xhci_pdev)
 	dev_dbg(&xhci_pdev->dev, "Configurable USB 2.0 ports to hand over to xCHI: 0x%x\n",
 			ports_available);
 
+	/* this needs to be done in a dirty way to preserve kABI */
+	if (dmi_check_system(bt_excepted_from_switch_table))
+		ports_available &= ~8;
+
 	/* Write XUSB2PR, the xHC USB 2.0 Port Routing Register, to
 	 * switch the USB 2.0 power and data lines over to the xHCI
 	 * host.
-- 
1.8.1.4

