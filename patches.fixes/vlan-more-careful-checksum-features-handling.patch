From: =?UTF-8?q?Michal=20Kube=C4=8Dek?= <mkubecek@suse.cz>
Date: Tue, 20 May 2014 08:29:25 +0200
Subject: vlan: more careful checksum features handling
Patch-mainline: v3.16-rc1
Git-commit: da08143b85203b581f4a6461b149186b0e9592df
References: bnc#872634

When combining real_dev's features and vlan_features, simple
bitwise AND is used. This doesn't work well for checksum
offloading features as if one set has NETIF_F_HW_CSUM and the
other NETIF_F_IP_CSUM and/or NETIF_F_IPV6_CSUM, we end up with
no checksum offloading. However, from the logical point of view
(how can_checksum_protocol() works), NETIF_F_HW_CSUM contains
the functionality of NETIF_F_IP_CSUM and NETIF_F_IPV6_CSUM so
that the result should be IP/IPV6.

Add helper function netdev_intersect_features() implementing
this logic and use it in vlan_dev_fix_features().

Signed-off-by: Michal Kubecek <mkubecek@suse.cz>
Signed-off-by: David S. Miller <davem@davemloft.net>

Conflicts:
	include/linux/netdevice.h
	net/8021q/vlan_dev.c

---
 include/linux/netdevice.h | 13 +++++++++++++
 net/8021q/vlan_dev.c      |  4 ++--
 2 files changed, 15 insertions(+), 2 deletions(-)

diff --git a/include/linux/netdevice.h b/include/linux/netdevice.h
index 81f251a..f078d04 100644
--- a/include/linux/netdevice.h
+++ b/include/linux/netdevice.h
@@ -2642,6 +2642,19 @@ extern const char *netdev_drivername(const struct net_device *dev);
 
 extern void linkwatch_run_queue(void);
 
+static inline u32 netdev_intersect_features(u32 f1, u32 f2)
+{
+	if (f1 & NETIF_F_GEN_CSUM)
+		f1 |= (NETIF_F_ALL_CSUM & ~NETIF_F_GEN_CSUM);
+	if (f2 & NETIF_F_GEN_CSUM)
+		f2 |= (NETIF_F_ALL_CSUM & ~NETIF_F_GEN_CSUM);
+	f1 &= f2;
+	if (f1 & NETIF_F_GEN_CSUM)
+		f1 &= ~(NETIF_F_ALL_CSUM & ~NETIF_F_GEN_CSUM);
+
+	return f1;
+}
+
 static inline u32 netdev_get_wanted_features(struct net_device *dev)
 {
 	return (dev->features & ~dev->hw_features) | dev->wanted_features;
diff --git a/net/8021q/vlan_dev.c b/net/8021q/vlan_dev.c
index b172407..1b7fb37 100644
--- a/net/8021q/vlan_dev.c
+++ b/net/8021q/vlan_dev.c
@@ -599,8 +599,8 @@ static u32 vlan_dev_fix_features(struct net_device *dev, u32 features)
 	struct net_device *real_dev = vlan_dev_info(dev)->real_dev;
 	u32 old_features = features;
 
-	features &= real_dev->features;
-	features &= real_dev->vlan_features;
+	features = netdev_intersect_features(features, real_dev->features);
+	features = netdev_intersect_features(features, real_dev->vlan_features);
 
 	if (old_features & NETIF_F_SOFT_FEATURES)
 		features |= old_features & NETIF_F_SOFT_FEATURES;
-- 
1.8.4.5

