From: Chuck Lever <chuck.lever@oracle.com>
Subject: NFS: Slow down state manager after an unhandled error
References: bnc#774973
Patch-mainline: Not yet, [patch was at the end of a patch series that was
		truncated in the middle. Will be submitted for 3.7]

Patch and the discussions:
	https://patchwork.kernel.org/patch/1185421/
	http://article.gmane.org/gmane.linux.nfs/51659

If the state manager thread is not actually able to fully recover from
some situation, it wakes up waiters, who kick off a new state manager
thread.  Quite often the fresh invocation of the state manager is just
as successful.

This results in a livelock as the client dumps thousands of NFS
requests a second on the network in a vain attempt to recover.  Not
very friendly.

To mitigate this situation, add a delay in the state manager after
an unhandled error, so that the client sends just a few requests
every second in this case.

Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
Acked-by: Suresh Jayaraman <sjayaraman@suse.com>
---

 nfs4state.c |    1 +
 1 file changed, 1 insertion(+)

Index: linux-3.0-SLE11-SP2/fs/nfs/nfs4state.c
===================================================================
--- linux-3.0-SLE11-SP2.orig/fs/nfs/nfs4state.c
+++ linux-3.0-SLE11-SP2/fs/nfs/nfs4state.c
@@ -1744,6 +1744,7 @@ static void nfs4_state_manager(struct nf
 out_error:
 	printk(KERN_WARNING "Error: state manager failed on NFSv4 server %s"
 			" with error %d\n", clp->cl_hostname, -status);
+	ssleep(1);
 	nfs4_end_drain_session(clp);
 	nfs4_clear_state_manager_bit(clp);
 }
