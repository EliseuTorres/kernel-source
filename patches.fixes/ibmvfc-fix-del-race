From: Brian King <brking@linux.vnet.ibm.com>
Subject: ibmvfc: Fix rport add/delete race resulting in oops
Patch-mainline: 2.6.36
References: bnc#628180

Commit 43c8da907ccc656935d1085701f4db83385d8a59 introduced a race
condition which can occur when adding/deleting rports. There are
two possible threads now that can be deleting rports in the ibmvfc
driver, which can result in list_del being called twice, resulting
in an oops. This patch adds a new state to the ibmvfc_target struct
to indicate the target has been removed from the list and is in
the process of being deleted.

Signed-off-by: Brian King <brking@linux.vnet.ibm.com>
Signed-off-by: James Bottomley <James.Bottomley@suse.de>
Acked-by: Torsten Duwe <duwe@suse.de>

---

 drivers/scsi/ibmvscsi/ibmvfc.c |    8 ++++++++
 drivers/scsi/ibmvscsi/ibmvfc.h |    1 +
 2 files changed, 9 insertions(+)

diff -puN drivers/scsi/ibmvscsi/ibmvfc.c~ibmvfc_fix_del_race drivers/scsi/ibmvscsi/ibmvfc.c
--- linux-2.6.32.12-0.3/drivers/scsi/ibmvscsi/ibmvfc.c~ibmvfc_fix_del_race	2010-07-21 12:47:06.000000000 -0500
+++ linux-2.6.32.12-0.3-bjking1/drivers/scsi/ibmvscsi/ibmvfc.c	2010-07-21 12:47:06.000000000 -0500
@@ -430,6 +430,9 @@ static void ibmvfc_set_tgt_action(struct
 {
 	switch (tgt->action) {
 	case IBMVFC_TGT_ACTION_DEL_RPORT:
+		if (action == IBMVFC_TGT_ACTION_DELETED_RPORT)
+			tgt->action = action;
+	case IBMVFC_TGT_ACTION_DELETED_RPORT:
 		break;
 	default:
 		if (action == IBMVFC_TGT_ACTION_DEL_RPORT)
@@ -3895,11 +3898,15 @@ static void ibmvfc_tgt_add_rport(struct
 	if (rport && tgt->action == IBMVFC_TGT_ACTION_DEL_RPORT) {
 		tgt_dbg(tgt, "Deleting rport\n");
 		list_del(&tgt->queue);
+		ibmvfc_set_tgt_action(tgt, IBMVFC_TGT_ACTION_DELETED_RPORT);
 		spin_unlock_irqrestore(vhost->host->host_lock, flags);
 		fc_remote_port_delete(rport);
 		del_timer_sync(&tgt->timer);
 		kref_put(&tgt->kref, ibmvfc_release_tgt);
 		return;
+	} else if (rport && tgt->action == IBMVFC_TGT_ACTION_DELETED_RPORT) {
+		spin_unlock_irqrestore(vhost->host->host_lock, flags);
+		return;
 	}
 
 	if (rport) {
@@ -3975,6 +3982,7 @@ static void ibmvfc_do_work(struct ibmvfc
 				rport = tgt->rport;
 				tgt->rport = NULL;
 				list_del(&tgt->queue);
+				ibmvfc_set_tgt_action(tgt, IBMVFC_TGT_ACTION_DELETED_RPORT);
 				spin_unlock_irqrestore(vhost->host->host_lock, flags);
 				if (rport)
 					fc_remote_port_delete(rport);
diff -puN drivers/scsi/ibmvscsi/ibmvfc.h~ibmvfc_fix_del_race drivers/scsi/ibmvscsi/ibmvfc.h
--- linux-2.6.32.12-0.3/drivers/scsi/ibmvscsi/ibmvfc.h~ibmvfc_fix_del_race	2010-07-21 12:47:06.000000000 -0500
+++ linux-2.6.32.12-0.3-bjking1/drivers/scsi/ibmvscsi/ibmvfc.h	2010-07-21 12:47:06.000000000 -0500
@@ -593,6 +593,7 @@ enum ibmvfc_target_action {
 	IBMVFC_TGT_ACTION_INIT,
 	IBMVFC_TGT_ACTION_INIT_WAIT,
 	IBMVFC_TGT_ACTION_DEL_RPORT,
+	IBMVFC_TGT_ACTION_DELETED_RPORT,
 };
 
 struct ibmvfc_target {
_
