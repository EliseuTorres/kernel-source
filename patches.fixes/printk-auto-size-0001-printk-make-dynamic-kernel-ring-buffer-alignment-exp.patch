From: "Luis R. Rodriguez" <mcgrof@suse.com>
Date: Wed, 2 Jul 2014 15:20:06 +0200
Subject: [PATCH 1/4] printk: make dynamic kernel ring buffer alignment
 explicit
Patch-mainline: v3.17-rc1
Git-commit: 7030017752437cebc3ec5590735bd89ead1e4cb8
References: bnc#835888

pmladek@suse.cz:
memblock_virt_alloc_nopanic() is not available on SLE12. However the used
alloc_bootmem_nopanic() does an alignment to SMP_CACHE_BYTES which is
perfectly fine.


We have to consider alignment for the ring buffer both for the default
static size, and then also for when an dynamic allocation is made when the
log_buf_len=n kernel parameter is passed to set the size specifically to a
size larger than the default size set by the architecture through
CONFIG_LOG_BUF_SHIFT.

The default static kernel ring buffer can be aligned properly if
architectures set CONFIG_LOG_BUF_SHIFT properly, we provide ranges for the
size though so even if CONFIG_LOG_BUF_SHIFT has a sensible aligned value
it can be reduced to a non aligned value.  Commit 6ebb017de9 ("printk: Fix
alignment of buf causing crash on ARM EABI") by Andrew Lunn ensures the
static buffer is always aligned and the decision of alignment is done by
the compiler by using __alignof__(struct log).

When log_buf_len=n is used we allocate the ring buffer dynamically.
Dynamic allocation varies, for the early allocation called before
setup_arch() memblock_virt_alloc() requests a page aligment and for the
default kernel allocation memblock_virt_alloc_nopanic() requests no
special alignment, which in turn ends up aligning the allocation to
SMP_CACHE_BYTES, which is L1 cache aligned.

Since we already have the required alignment for the kernel ring buffer
though we can do better and request explicit alignment for LOG_ALIGN.
This does that to be safe and make dynamic allocation alignment explicit.

Signed-off-by: Luis R. Rodriguez <mcgrof@suse.com>
Tested-by: Petr Mladek <pmladek@suse.cz>
Acked-by: Petr Mladek <pmladek@suse.cz>
Cc: Andrew Lunn <andrew@lunn.ch>
Cc: Stephen Warren <swarren@wwwdotorg.org>
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Cc: Michal Hocko <mhocko@suse.cz>
Cc: Petr Mladek <pmladek@suse.cz>
Cc: Joe Perches <joe@perches.com>
Cc: Arun KS <arunks.linux@gmail.com>
Cc: Kees Cook <keescook@chromium.org>
Cc: Davidlohr Bueso <davidlohr@hp.com>
Cc: Chris Metcalf <cmetcalf@tilera.com>
Cc: Jan Kara <jack@suse.cz>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
---
 kernel/printk/printk.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/kernel/printk/printk.c b/kernel/printk/printk.c
index 94e8b32e1fe5..8b0aa6cd0c9e 100644
--- a/kernel/printk/printk.c
+++ b/kernel/printk/printk.c
@@ -811,7 +811,7 @@ void __init setup_log_buf(int early)
 	if (early) {
 		unsigned long mem;
 
-		mem = memblock_alloc(new_log_buf_len, PAGE_SIZE);
+		mem = memblock_alloc(new_log_buf_len, LOG_ALIGN);
 		if (!mem)
 			return;
 		new_log_buf = __va(mem);
-- 
1.8.4

