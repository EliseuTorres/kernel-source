From: Trond Myklebust <Trond.Myklebust@netapp.com>
Date: Sun, 6 May 2012 19:34:17 -0400
Subject: NFS: nfs_inode_return_delegation() should always flush dirty data
Git-commit: c57d1bc5e043dbb5ba82ded07003d71a8033d899
Patch-mainline: v3.5
References: bnc#864404

The assumption is that if you are in a situation where you need to
return the delegation, then you should probably stop caching the
data anyway.

Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
Acked-by: NeilBrown <neilb@suse.de>

---
 fs/nfs/delegation.c |    6 +++++-
 fs/nfs/delegation.h |    1 +
 2 files changed, 6 insertions(+), 1 deletion(-)

--- linux-3.0-SLE11-SP3.orig/fs/nfs/delegation.c
+++ linux-3.0-SLE11-SP3/fs/nfs/delegation.c
@@ -381,6 +381,10 @@ void nfs_inode_return_delegation_norecla
  * nfs_inode_return_delegation - synchronously return a delegation
  * @inode: inode to process
  *
+ * This routine will always flush any dirty data to disk on the
+ * assumption that if we need to return the delegation, then
+ * we should stop caching.
+ *
  * Returns zero on success, or a negative errno value.
  */
 int nfs_inode_return_delegation(struct inode *inode)
@@ -390,10 +394,10 @@ int nfs_inode_return_delegation(struct i
 	struct nfs_delegation *delegation;
 	int err = 0;
 
+	nfs_wb_all(inode);
 	if (rcu_access_pointer(nfsi->delegation) != NULL) {
 		delegation = nfs_detach_delegation(nfsi, server);
 		if (delegation != NULL) {
-			nfs_wb_all(inode);
 			err = __nfs_inode_return_delegation(inode, delegation, 1);
 		}
 	}
--- linux-3.0-SLE11-SP3.orig/fs/nfs/delegation.h
+++ linux-3.0-SLE11-SP3/fs/nfs/delegation.h
@@ -67,6 +67,7 @@ static inline int nfs_have_delegation(st
 
 static inline int nfs_inode_return_delegation(struct inode *inode)
 {
+	nfs_wb_all(inode);
 	return 0;
 }
 #endif
