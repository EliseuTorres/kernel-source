From: Sankar P <psankar@novell.com>
Subject: novfs: ftruncate call returns EIO as it causes two open calls
Patch-mainline: no
References: bnc#596031

The ftruncate call on novfs returns an error EIO, as a file open call is issued
on an already opened file and we do not have the NCP handle for it. Fix the
issue by using novfs_trunc_ex() function.

Signed-off-by: Samrat Kannikar <ksamrat@novell.com>

diff --git linux-2.6.32-s11sp1/fs/novfs/file.c linux-2.6.32-s11sp1/fs/novfs/file.c
index 5da32ca..d0930c3 100644
--- linux-2.6.32-s11sp1/fs/novfs/file.c
+++ linux-2.6.32-s11sp1/fs/novfs/file.c
@@ -1749,6 +1749,9 @@ int novfs_set_attr(unsigned char * Path, struct iattr *Attr,
 			pathlen--;
 	}
 
+        if ((Attr->ia_valid & ATTR_FILE) && (Attr->ia_valid & ATTR_SIZE))
+		retCode = novfs_trunc_ex(Attr->ia_file->private_data, Attr->ia_size, SessionId);
+
 	cmdlen = offsetof(struct novfs_set_file_info_request,path) + pathlen;
 	cmd = kmalloc(cmdlen, GFP_KERNEL);
 	if (cmd) {
diff --git linux-2.6.32-s11sp1/fs/novfs/inode.c linux-2.6.32-s11sp1/fs/novfs/inode.c
index 1c17f7f..2bc9cc0 100644
--- linux-2.6.32-s11sp1/fs/novfs/inode.c
+++ linux-2.6.32-s11sp1/fs/novfs/inode.c
@@ -3247,6 +3247,8 @@ int novfs_i_setattr(struct dentry *dentry, struct iattr *attr)
 					((struct inode_data *) inode->i_private)->
 					    Flags |= UPDATE_INODE;
 
+					if (ia_valid & ATTR_SIZE)
+						inode->i_size = attr->ia_size;
 					if (ia_valid & ATTR_ATIME)
 						inode->i_atime = attr->ia_atime;
 					if (ia_valid & ATTR_MTIME)
-- 
1.6.4.2

