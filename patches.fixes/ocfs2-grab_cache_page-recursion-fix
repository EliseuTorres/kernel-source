From: Jan Kara <jack@suse.cz>
Subject: ocfs2: Avoid recursing into filesystems when allocating memory with filesystem locks held
References: bnc#633543
Patch-mainline: No (maybe 2.6.36)

We must not allow page-reclaim to recurse into the filesystem when we are
holding filesystem locks or even have transaction started. That leads to
deadlocks or various assertion failures. So use GFP_NOFS for page allocations
in such places.

Signed-off-by: Jan Kara <jack@suse.cz>

Index: linux-2.6.32-SLE11-SP1/fs/ocfs2/alloc.c
===================================================================
--- linux-2.6.32-SLE11-SP1.orig/fs/ocfs2/alloc.c
+++ linux-2.6.32-SLE11-SP1/fs/ocfs2/alloc.c
@@ -7091,7 +7091,7 @@ int ocfs2_grab_pages(struct inode *inode
 	last_page_bytes = PAGE_ALIGN(end);
 	index = start >> PAGE_CACHE_SHIFT;
 	do {
-		pages[numpages] = grab_cache_page(mapping, index);
+		pages[numpages] = find_or_create_page(mapping, index, GFP_NOFS);
 		if (!pages[numpages]) {
 			ret = -ENOMEM;
 			mlog_errno(ret);
Index: linux-2.6.32-SLE11-SP1/fs/ocfs2/file.c
===================================================================
--- linux-2.6.32-SLE11-SP1.orig/fs/ocfs2/file.c
+++ linux-2.6.32-SLE11-SP1/fs/ocfs2/file.c
@@ -788,7 +788,7 @@ static int ocfs2_write_zero_page(struct
 	BUG_ON(abs_to > (((u64)index + 1) << PAGE_CACHE_SHIFT));
 	BUG_ON(abs_from & (inode->i_blkbits - 1));
 
-	page = grab_cache_page(mapping, index);
+	page = find_or_create_page(mapping, index, GFP_NOFS);
 	if (!page) {
 		ret = -ENOMEM;
 		mlog_errno(ret);
Index: linux-2.6.32-SLE11-SP1/fs/ocfs2/refcounttree.c
===================================================================
--- linux-2.6.32-SLE11-SP1.orig/fs/ocfs2/refcounttree.c
+++ linux-2.6.32-SLE11-SP1/fs/ocfs2/refcounttree.c
@@ -2955,7 +2955,7 @@ static int ocfs2_duplicate_clusters_by_p
 		if (map_end & (PAGE_CACHE_SIZE - 1))
 			to = map_end & (PAGE_CACHE_SIZE - 1);
 
-		page = grab_cache_page(mapping, page_index);
+		page = find_or_create_page(mapping, page_index, GFP_NOFS);
 
 		/*
 		 * In case PAGE_CACHE_SIZE <= CLUSTER_SIZE, This page
@@ -3178,7 +3178,8 @@ static int ocfs2_cow_sync_writeback(stru
 		if (map_end > end)
 			map_end = end;
 
-		page = grab_cache_page(context->inode->i_mapping, page_index);
+		page = find_or_create_page(context->inode->i_mapping,
+					   page_index, GFP_NOFS);
 		BUG_ON(!page);
 
 		wait_on_page_writeback(page);
