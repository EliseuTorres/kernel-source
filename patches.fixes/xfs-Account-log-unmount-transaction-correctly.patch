From: Dave Chinner <dchinner@redhat.com>
Date: Thu, 22 Mar 2012 05:15:11 +0000
Subject: xfs: Account log unmount transaction correctly
Git-commit: 3948659e30808fbaa7673bbe89de2ae9769e20a7
Patch-Mainline: 3.4-rc1
References: bnc#849950

There have been a few reports of this warning appearing recently:

XFS (dm-4): xlog_space_left: head behind tail
 tail_cycle = 129, tail_bytes = 20163072
 GH   cycle = 129, GH   bytes = 20162880

The common cause appears to be lots of freeze and unfreeze cycles,
and the output from the warnings indicates that we are leaking
around 8 bytes of log space per freeze/unfreeze cycle.

When we freeze the filesystem, we write an unmount record and that
uses xlog_write directly - a special type of transaction,
effectively. What it doesn't do, however, is correctly account for
the log space it uses. The unmount record writes an 8 byte structure
with a special magic number into the log, and the space this
consumes is not accounted for in the log ticket tracking the
operation. Hence we leak 8 bytes every unmount record that is
written.

Signed-off-by: Dave Chinner <dchinner@redhat.com>
Reviewed-by: Christoph Hellwig <hch@lst.de>
Signed-off-by: Ben Myers <bpm@sgi.com>
Signed-off-by: Robert Milasan <rmilasan@suse.com>
---

Index: linux-3.0/fs/xfs/xfs_log.c
===================================================================
--- linux-3.0.orig/fs/xfs/xfs_log.c
+++ linux-3.0/fs/xfs/xfs_log.c
@@ -531,8 +531,9 @@ xfs_log_unmount_write(xfs_mount_t *mp)
 				.lv_iovecp = &reg,
 			};
 
-			/* remove inited flag */
+			/* remove inited flag, and account for space used */
 			tic->t_flags = 0;
+			tic->t_curr_res -= sizeof(magic);
 			error = xlog_write(log, &vec, tic, &lsn,
 					   NULL, XLOG_UNMOUNT_TRANS);
 			/*
