Subject: [PATCH] cnic: Fix crash during bnx2x MTU change.
From: "Michael Chan" <mchan@broadcom.com>
References: bnc#564640
Patch-mainline: v2.6.34
Git-commit: 94824f3dbe0d3f62470603bbb18efb5510aaf07c

cnic_service_bnx2x() irq handler can be called during chip reset from
MTU change.  Need to check that the cnic's device state is up before
handling the irq.

Signed-off-by: Michael Chan <mchan@broadcom.com>
Signed-off-by: Brandon Philips <bphilips@suse.de>

---
 drivers/net/cnic.c |   10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

Index: linux-2.6.32-SLE11-SP1/drivers/net/cnic.c
===================================================================
--- linux-2.6.32-SLE11-SP1.orig/drivers/net/cnic.c
+++ linux-2.6.32-SLE11-SP1/drivers/net/cnic.c
@@ -2333,13 +2333,13 @@ static int cnic_service_bnx2x(void *data
 	struct cnic_local *cp = dev->cnic_priv;
 	u16 prod = cp->kcq_prod_idx & MAX_KCQ_IDX;
 
-	prefetch(cp->status_blk.bnx2x);
-	prefetch(&cp->kcq[KCQ_PG(prod)][KCQ_IDX(prod)]);
+	if (likely(test_bit(CNIC_F_CNIC_UP, &dev->flags))) {
+		prefetch(cp->status_blk.bnx2x);
+		prefetch(&cp->kcq[KCQ_PG(prod)][KCQ_IDX(prod)]);
 
-	if (likely(test_bit(CNIC_F_CNIC_UP, &dev->flags)))
 		tasklet_schedule(&cp->cnic_irq_task);
-
-	cnic_chk_pkt_rings(cp);
+		cnic_chk_pkt_rings(cp);
+	}
 
 	return 0;
 }
