From: Chuck Lever <chuck.lever@oracle.com>
Subject: NFS: Allow sec=none mounts in certain cases
Patch-mainline: No
References: bnc#795354

https://patchwork.kernel.org/patch/925732/

There is an undocumented convention (verified by reviewing network
traces from a NetApp filer and a Solaris NFS server) where a server
that returns a mount authflavor list containing an AUTH_NULL entry
is actually indicating it will accept any security flavor for the
export being mounted.

This might be used when the server maps all security flavors into the
same security mode.  For example, the server treats all accessors as,
say, UID 17.

Essentially, AUTH_NULL is treated as a wildcard that matches the
flavor the mounter requested.

Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
Signed-off-by: Neil Brown <neilb@suse.de>

---
 fs/nfs/super.c |   20 +++++++++++++++-----
 1 file changed, 15 insertions(+), 5 deletions(-)

--- linux-3.0-SLE11-SP2.orig/fs/nfs/super.c
+++ linux-3.0-SLE11-SP2/fs/nfs/super.c
@@ -1585,15 +1585,25 @@ static int nfs_walk_authlist(struct nfs_
 	 * AUTH_NULL first.  Our caller plants AUTH_SYS, the
 	 * preferred default, in args->auth_flavors[0] if user
 	 * didn't specify sec= mount option.
+	 *
+	 * By convention we treat AUTH_NULL in the returned list as
+	 * a wild card.  The server will map our requested flavor to
+	 * something else.
 	 */
-	for (i = 0; i < args->auth_flavor_len; i++)
-		for (j = 0; j < server_authlist_len; j++)
-			if (args->auth_flavors[i] == request->auth_flavs[j]) {
+	for (i = 0; i < server_authlist_len; i++) {
+		if (request->auth_flavs[i] == RPC_AUTH_NULL) {
+			dfprintk(MOUNT, "NFS: using default auth flavor %d\n",
+				 args->auth_flavors[0]);
+			return 0;
+		}
+		for (j = 0; j < args->auth_flavor_len; j++)
+			if (request->auth_flavs[i] == args->auth_flavors[j]) {
 				dfprintk(MOUNT, "NFS: using auth flavor %d\n",
-					request->auth_flavs[j]);
-				args->auth_flavors[0] = request->auth_flavs[j];
+					 request->auth_flavs[j]);
+				args->auth_flavors[0] = request->auth_flavs[i];
 				return 0;
 			}
+	}
 
 	dfprintk(MOUNT, "NFS: server does not support requested auth flavor\n");
 	nfs_umount(request);
