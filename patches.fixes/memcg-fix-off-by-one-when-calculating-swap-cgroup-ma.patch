From 33278f7f0a9e5a9b29f59e07b7e3182d27769ac2 Mon Sep 17 00:00:00 2001
From: Namhyung Kim <namhyung@gmail.com>
Date: Thu, 26 May 2011 16:25:30 -0700
Subject: [PATCH] memcg: fix off-by-one when calculating swap cgroup map length
Patch-mainline: 33278f7f0a9e5a9b29f59e07b7e3182d27769ac2
References: bnc#704592

It allocated one more page than necessary if @max_pages was a multiple of
SC_PER_PAGE.

Signed-off-by: Namhyung Kim <namhyung@gmail.com>
Acked-by: KAMEZAWA Hiroyuki <kamezawa.hiroyu@jp.fujitsu.com>
Acked-by: Balbir Singh <balbir@linux.vnet.ibm.com>
Cc: Daisuke Nishimura <nishimura@mxp.nes.nec.co.jp>
Cc: Michal Hocko <mhocko@suse.cz>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
Acked-by: Michal Hocko <mhocko@suse.cz>

---
 mm/page_cgroup.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

Index: linux-2.6.32-memcg-backports/mm/page_cgroup.c
===================================================================
--- linux-2.6.32-memcg-backports.orig/mm/page_cgroup.c
+++ linux-2.6.32-memcg-backports/mm/page_cgroup.c
@@ -453,7 +453,7 @@ int swap_cgroup_swapon(int type, unsigne
 	if (!do_swap_account)
 		return 0;
 
-	length = ((max_pages/SC_PER_PAGE) + 1);
+	length = DIV_ROUND_UP(max_pages, SC_PER_PAGE);
 	array_size = length * sizeof(void *);
 
 	array = vmalloc(array_size);
