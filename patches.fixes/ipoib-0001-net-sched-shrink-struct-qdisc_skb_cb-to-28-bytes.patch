From: Eric Dumazet <edumazet@google.com>
Date: Thu, 18 Sep 2014 08:02:05 -0700
Subject: net: sched: shrink struct qdisc_skb_cb to 28 bytes
Patch-mainline: v3.17-rc7
Git-commit: 257117862634d89de33fec74858b1a0ba5ab444b
References: bnc#919482

We cannot make struct qdisc_skb_cb bigger without impacting IPoIB,
or increasing skb->cb[] size.

Commit e0f31d849867 ("flow_keys: Record IP layer protocol in
skb_flow_dissect()") broke IPoIB.

Only current offender is sch_choke, and this one do not need an
absolutely precise flow key.

If we store 17 bytes of flow key, its more than enough. (Its the actual
size of flow_keys if it was a packed structure, but we might add new
fields at the end of it later)

Signed-off-by: Eric Dumazet <edumazet@google.com>
Fixes: e0f31d849867 ("flow_keys: Record IP layer protocol in skb_flow_dissect()")
Signed-off-by: David S. Miller <davem@davemloft.net>
Signed-off-by: Hadar Hen Zion <hadarh@mellanox.com>
Acked-by: John Jolly <jjolly@suse.de>
---
 include/net/sch_generic.h |    3 ++-
 1 files changed, 2 insertions(+), 1 deletions(-)

diff --git a/include/net/sch_generic.h b/include/net/sch_generic.h
index 9c6abd4..939bae6 100644
--- a/include/net/sch_generic.h
+++ b/include/net/sch_generic.h
@@ -221,7 +221,8 @@ struct qdisc_skb_cb {
 	unsigned int		pkt_len;
 	u16			bond_queue_mapping;
 	u16			_pad;
-	unsigned char		data[24];
+#define QDISC_CB_PRIV_LEN 20
+	unsigned char		data[QDISC_CB_PRIV_LEN];
 };
 
 static inline void qdisc_cb_private_validate(const struct sk_buff *skb, int sz)
-- 
1.7.8.2

