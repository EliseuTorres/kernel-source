From: Andre Detsch <adetsch@br.ibm.com>
Subject: [PATCH] tg3: Fix INTx fallback when MSI fails
Git-commit: dc8bf1b1a6edfc92465526de19772061302f0929
Reference: bnc#601198
Patch-mainline: 2.6.34

Tg3: Fix INTx fallback when MSI fails

MSI setup changes the value of irq_vec in struct tg3 *tp.
This attribute must be taken into account and restored before
we try to do a new request_irq for INTx fallback.

In powerpc, the original code was leading to an EINVAL return within
request_irq, because the driver was trying to use the disabled MSI
virtual irq number instead of tp->pdev->irq.

Signed-off-by: Andre Detsch <adetsch@br.ibm.com>
Acked-by: Michael Chan <mchan@broadcom.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
Signed-off-by: Brandon Philips <bphilips@suse.de>

---
 drivers/net/tg3.c |    1 +
 1 files changed, 1 insertions(+), 0 deletions(-)

Index: linux-2.6.32.ppc64/drivers/net/tg3.c
===================================================================
--- linux-2.6.32.ppc64.orig/drivers/net/tg3.c	2009-12-02 22:51:21.000000000 -0500
+++ linux-2.6.32.ppc64/drivers/net/tg3.c	2010-04-27 10:30:05.000000000 -0400
@@ -8159,6 +8159,7 @@ static int tg3_test_msi(struct tg3 *tp)
 	pci_disable_msi(tp->pdev);
 
 	tp->tg3_flags2 &= ~TG3_FLG2_USING_MSI;
+	tp->napi[0].irq_vec = tp->pdev->irq;
 
 	err = tg3_request_irq(tp, 0);
 	if (err)
