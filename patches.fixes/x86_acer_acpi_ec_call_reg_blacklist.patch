Subject: Call _Reg(0x3, 0x1) method in EC namespace if EC got set up, even there is on EC OpRegion
From: Michael Chang <mchang@novell.com>
References: bnc#636561
Patch-Mainline: never (something more generic should show up there at some time)

Signed-off-by: Thomas Renninger <trenn@suse.de>

---
 drivers/acpi/ec.c |   23 +++++++++++++++++++++++
 1 file changed, 23 insertions(+)

--- a/drivers/acpi/ec.c
+++ b/drivers/acpi/ec.c
@@ -123,6 +123,7 @@ EXPORT_SYMBOL(first_ec);
 static int EC_FLAGS_MSI; /* Out-of-spec MSI controller */
 static int EC_FLAGS_VALIDATE_ECDT; /* ASUStec ECDTs need to be validated */
 static int EC_FLAGS_SKIP_DSDT_SCAN; /* Not all BIOS survive early DSDT scan */
+static int EG_FLAGS_ACER_BAP50CP; /* Call _REG method */
 
 /* --------------------------------------------------------------------------
                              Transaction Management
@@ -787,6 +788,14 @@ static int acpi_ec_add(struct acpi_devic
 {
 	struct acpi_ec *ec = NULL;
 	int ret;
+	union acpi_object params[2] = {
+		{.type = ACPI_TYPE_INTEGER},
+		{.type = ACPI_TYPE_INTEGER},
+	};
+	struct acpi_object_list arg_list = {2, params};
+
+	params[0].integer.value = 3;
+	params[1].integer.value = 1;
 
 	strcpy(acpi_device_name(device), ACPI_EC_DEVICE_NAME);
 	strcpy(acpi_device_class(device), ACPI_EC_CLASS);
@@ -826,6 +835,10 @@ static int acpi_ec_add(struct acpi_devic
 
 	ret = ec_install_handlers(ec);
 
+	/* Workaround for broken acer laptop */
+	if (EG_FLAGS_ACER_BAP50CP)
+		acpi_evaluate_object(ec->handle, "_REG", &arg_list, NULL);
+		
 	/* EC is fully operational, allow queries */
 	clear_bit(EC_FLAGS_QUERY_PENDING, &ec->flags);
 	return ret;
@@ -929,6 +942,12 @@ static int ec_enlarge_storm_threshold(co
 	return 0;
 }
 
+static int ec_flag_acer_bap50cp(const struct dmi_system_id *id)
+{
+	EG_FLAGS_ACER_BAP50CP = 1;
+	return 0;
+}
+
 static struct dmi_system_id __initdata ec_dmi_table[] = {
 	{
 	ec_skip_dsdt_scan, "Compal JFL92", {
@@ -972,6 +991,10 @@ static struct dmi_system_id __initdata e
 	ec_validate_ecdt, "ASUS hardware", {
 	DMI_MATCH(DMI_SYS_VENDOR, "ASUSTek Computer Inc."),
 	DMI_MATCH(DMI_PRODUCT_NAME, "L4R"),}, NULL},
+ 	{
+ 	ec_flag_acer_bap50cp, "Acer BAP50-CP", {
+ 	DMI_MATCH(DMI_BOARD_VENDOR, "Acer"),
+ 	DMI_MATCH(DMI_BOARD_NAME, "BAP50-CP")}, NULL},
 	{},
 };
 
