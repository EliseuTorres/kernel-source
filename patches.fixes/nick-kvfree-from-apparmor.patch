From: Al Viro <viro@zeniv.linux.org.uk>
Date: Tue, 6 May 2014 14:02:53 -0400
Subject: nick kvfree() from apparmor
Patch-mainline: v3.15-rc5
Git-commit: 39f1f78d53b9bcbca91967380c5f0f2305a5c55f
References: bug#919382 FATE#317529

too many places open-code it

Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
Acked-by: Benjamin Poirier <bpoirier@suse.de>
---
 include/linux/mm.h                   |    2 ++
 mm/util.c                            |   11 +++++++++++
 security/apparmor/include/apparmor.h |    1 -
 security/apparmor/lib.c              |   14 --------------
 4 files changed, 13 insertions(+), 15 deletions(-)

--- a/include/linux/mm.h
+++ b/include/linux/mm.h
@@ -319,6 +319,8 @@ static inline int is_vmalloc_or_module_a
 }
 #endif
 
+extern void kvfree(const void *addr);
+
 static inline void compound_lock(struct page *page)
 {
 #ifdef CONFIG_TRANSPARENT_HUGEPAGE
--- a/mm/util.c
+++ b/mm/util.c
@@ -4,6 +4,8 @@
 #include <linux/module.h>
 #include <linux/err.h>
 #include <linux/sched.h>
+#include <linux/vmalloc.h>
+
 #include <asm/uaccess.h>
 
 #include "internal.h"
@@ -300,6 +302,15 @@ int __attribute__((weak)) get_user_pages
 }
 EXPORT_SYMBOL_GPL(get_user_pages_fast);
 
+void kvfree(const void *addr)
+{
+	if (is_vmalloc_addr(addr))
+		vfree(addr);
+	else
+		kfree(addr);
+}
+EXPORT_SYMBOL(kvfree);
+
 /* Tracepoints definitions. */
 EXPORT_TRACEPOINT_SYMBOL(kmalloc);
 EXPORT_TRACEPOINT_SYMBOL(kmem_cache_alloc);
--- a/security/apparmor/include/apparmor.h
+++ b/security/apparmor/include/apparmor.h
@@ -52,7 +52,6 @@ extern int apparmor_initialized __initda
 char *aa_split_fqname(char *args, char **ns_name);
 void aa_info_message(const char *str);
 void *kvmalloc(size_t size);
-void kvfree(void *buffer);
 
 
 /**
--- a/security/apparmor/lib.c
+++ b/security/apparmor/lib.c
@@ -99,17 +99,3 @@ void *kvmalloc(size_t size)
 	}
 	return buffer;
 }
-
-/**
- * kvfree - free an allocation do by kvmalloc
- * @buffer: buffer to free (MAYBE_NULL)
- *
- * Free a buffer allocated by kvmalloc
- */
-void kvfree(void *buffer)
-{
-	if (is_vmalloc_addr(buffer))
-		vfree(buffer);
-	else
-		kfree(buffer);
-}
