From: Bjorn Helgaas <bjorn.helgaas@hp.com>
Subject: PCI: read bridge windows before filling in subtractive decode resources
References: bnc#578572
Patch-Mainline: 2.6.34-rc1
Commit-ID: 2adf75160b10bf3f09ed7d3d04e937f923fc557e

Signed-off-by: Thomas Renninger <trenn@suse.de>

No functional change; this fills in the bus subtractive decode resources
after reading the bridge window information rather than before.  Also,
print out the subtractive decode resources as we already do for the
positive decode windows.

Signed-off-by: Bjorn Helgaas <bjorn.helgaas@hp.com>
Signed-off-by: Jesse Barnes <jbarnes@virtuousgeek.org>

---
 drivers/pci/probe.c |   15 ++++++++++-----
 1 file changed, 10 insertions(+), 5 deletions(-)

Index: linux-2.6.32-SLE11-SP1/drivers/pci/probe.c
===================================================================
--- linux-2.6.32-SLE11-SP1.orig/drivers/pci/probe.c
+++ linux-2.6.32-SLE11-SP1/drivers/pci/probe.c
@@ -398,14 +398,19 @@ void __devinit pci_read_bridge_bases(str
 		 child->secondary, child->subordinate,
 		 dev->transparent ? " (subtractive decode)" : "");
 
-	if (dev->transparent) {
-		for (i = 3; i < PCI_BUS_NUM_RESOURCES; i++)
-			child->resource[i] = child->parent->resource[i - 3];
-	}
-
 	pci_read_bridge_io(child);
 	pci_read_bridge_mmio(child);
 	pci_read_bridge_mmio_pref(child);
+
+	if (dev->transparent) {
+		for (i = 3; i < PCI_BUS_NUM_RESOURCES; i++) {
+			child->resource[i] = child->parent->resource[i - 3];
+			if (child->resource[i])
+				dev_printk(KERN_DEBUG, &dev->dev,
+					   "  bridge window %pR (subtractive decode)\n",
+					   child->resource[i]);
+		}
+	}
 }
 
 static struct pci_bus * pci_alloc_bus(void)
