From: Vasu Dev <vasu.dev@intel.com>
Date: Mon, 12 Dec 2011 16:30:24 +0100
Subject: net: fixes a crash due to wrong dev in calling __netif_receive_skb
References: bnc#732582
Patch-Mainline: Submitted to lkml

The orig_dev has to be updated before going another round
for vlan pkt, otherwise currently unmodified real orig_dev
causes vlan pkt delivered to real orig_dev also without
being cloned. This would cause skb list corruption
and possibly other issues with other stacks over vlans
and least fcoe stack is crashing though fcoe skb rx
list is well protected by its own spin lock


Signed-off-by: Vasu Dev <vasu.dev@intel.com>
Acked-by: Hannes Reinecke <hare@suse.de>

diff --git a/net/core/dev.c b/net/core/dev.c
index 73f9608..7306aab 100644
--- a/net/core/dev.c
+++ b/net/core/dev.c
@@ -3200,9 +3200,10 @@ ncls:
 			ret = deliver_skb(skb, pt_prev, orig_dev);
 			pt_prev = NULL;
 		}
-		if (vlan_do_receive(&skb, !rx_handler))
+		if (vlan_do_receive(&skb, !rx_handler)) {
+			orig_dev = skb->dev;
 			goto another_round;
-		else if (unlikely(!skb))
+		} else if (unlikely(!skb))
 			goto unlock;
 	}
 
