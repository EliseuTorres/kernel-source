From: Jan Kara <jack@suse.cz>
Subject: writeback: Avoid needless scanning of b_dirty list
Patch-mainline: Never (upstream always set older_than_this so patch would be noop)
References: bnc#819018

In case older_than_this isn't set and bdi has only inodes from a single
superblock, we can avoid scanning b_dirty list in queue_io() and simply
splice it to b_io list.

Signed-off-by: Jan Kara <jack@suse.cz>

diff -rupX /crypted/home/jack/.kerndiffexclude linux-3.0-SLE11-SP3-writeback_livelock/fs/fs-writeback.c linux-3.0-SLE11-SP3-2-writeback_livelock/fs/fs-writeback.c
--- linux-3.0-SLE11-SP3-writeback_livelock/fs/fs-writeback.c	2013-05-23 15:38:45.919379199 +0200
+++ linux-3.0-SLE11-SP3-2-writeback_livelock/fs/fs-writeback.c	2013-05-23 16:12:42.763349555 +0200
@@ -305,7 +305,14 @@ static void queue_io(struct bdi_writebac
 {
 	assert_spin_locked(&wb->list_lock);
 	list_splice_init(&wb->b_more_io, &wb->b_io);
-	move_expired_inodes(&wb->b_dirty, &wb->b_io, older_than_this);
+	/*
+	 * If we want all inodes and we don't have to sort superblocks, just
+	 * splice the list
+	 */
+	if (!older_than_this && !test_bit(BDI_multiple_sb, &wb->bdi->state))
+		list_splice_init(&wb->b_dirty, &wb->b_io);
+	else
+		move_expired_inodes(&wb->b_dirty, &wb->b_io, older_than_this);
 }
 
 static int write_inode(struct inode *inode, struct writeback_control *wbc)
@@ -521,6 +528,15 @@ static int writeback_sb_inodes(struct su
 		struct inode *inode = wb_inode(wb->b_io.prev);
 
 		if (inode->i_sb != sb) {
+			/*
+			 * Really two different filesystem superblocks? Mark
+			 * the bdi as such so that we sort inodes by sb from
+			 * now on.
+			 */
+			if (inode->i_sb != blockdev_superblock &&
+			    sb != blockdev_superblock &&
+			    !test_bit(BDI_multiple_sb, &wb->bdi->state))
+				set_bit(BDI_multiple_sb, &wb->bdi->state);
 			if (only_this_sb) {
 				/*
 				 * We only want to write back data for this
diff -rupX /crypted/home/jack/.kerndiffexclude linux-3.0-SLE11-SP3-writeback_livelock/include/linux/backing-dev.h linux-3.0-SLE11-SP3-2-writeback_livelock/include/linux/backing-dev.h
--- linux-3.0-SLE11-SP3-writeback_livelock/include/linux/backing-dev.h	2013-05-22 15:52:45.168730777 +0200
+++ linux-3.0-SLE11-SP3-2-writeback_livelock/include/linux/backing-dev.h	2013-05-23 15:58:06.607796184 +0200
@@ -32,6 +32,7 @@ enum bdi_state {
 	BDI_sync_congested,	/* The sync queue is getting full */
 	BDI_registered,		/* bdi_register() was done */
 	BDI_writeback_running,	/* Writeback is in progress */
+	BDI_multiple_sb,	/* Multiple superblocks belong to this bdi */
 	BDI_unused,		/* Available bits start here */
 };
 
