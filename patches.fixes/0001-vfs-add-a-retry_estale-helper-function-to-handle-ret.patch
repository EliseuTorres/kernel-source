From: Jeff Layton <jlayton@redhat.com>
Date: Thu, 20 Dec 2012 14:59:40 -0500
Subject: [PATCH 01/28] vfs: add a retry_estale helper function to handle
 retries on ESTALE
Git-commit: b9d6ba94b875192ef5e2dab92d72beea33b83c3d
Patch-mainline: v3.8
References: bnc#876463

This function is expected to be called from path-based syscalls to help
them decide whether to try the lookup and call again in the event that
they got an -ESTALE return back on an earier try.

Currently, we only retry the call once on an ESTALE error, but in the
event that we decide that that's not enough in the future, we should be
able to change the logic in this helper without too much effort.

Signed-off-by: Jeff Layton <jlayton@redhat.com>
Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
Acked-by: NeilBrown <neilb@suse.de>

---
 include/linux/namei.h |   16 ++++++++++++++++
 1 file changed, 16 insertions(+)

--- linux-3.0-SLE11-SP3.orig/include/linux/namei.h
+++ linux-3.0-SLE11-SP3/include/linux/namei.h
@@ -111,4 +111,20 @@ static inline void nd_terminate_link(voi
 	((char *) name)[min(len, maxlen)] = '\0';
 }
 
+/**
+ * retry_estale - determine whether the caller should retry an operation
+ * @error: the error that would currently be returned
+ * @flags: flags being used for next lookup attempt
+ *
+ * Check to see if the error code was -ESTALE, and then determine whether
+ * to retry the call based on whether "flags" already has LOOKUP_REVAL set.
+ *
+ * Returns true if the caller should try the operation again.
+ */
+static inline bool
+retry_estale(const long error, const unsigned int flags)
+{
+	return error == -ESTALE && !(flags & LOOKUP_REVAL);
+}
+
 #endif /* _LINUX_NAMEI_H */
