From: Jeff Layton <jlayton@redhat.com>
Date: Tue, 11 Dec 2012 12:10:10 -0500
Subject: [PATCH 12/28] vfs: fix renameat to retry on ESTALE errors
Git-commit: c6a9428401c00a27d3c17264934d14e284570c97
Patch-mainline: v3.8
References: bnc#876463

...as always, rename is the messiest of the bunch. We have to track
whether to retry or not via a separate flag since the error handling
is already quite complex.

Signed-off-by: Jeff Layton <jlayton@redhat.com>
Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
Acked-by: NeilBrown <neilb@suse.de>

---
 fs/namei.c |   15 ++++++++++++---
 1 file changed, 12 insertions(+), 3 deletions(-)

--- linux-3.0-SLE11-SP3.orig/fs/namei.c
+++ linux-3.0-SLE11-SP3/fs/namei.c
@@ -3260,13 +3260,15 @@ SYSCALL_DEFINE4(renameat, int, olddfd, c
 	struct nameidata oldnd, newnd;
 	char *from;
 	char *to;
+	unsigned int lookup_flags = 0;
+	bool should_retry = false;
 	int error;
-
-	error = user_path_parent(olddfd, oldname, &oldnd, &from, 0);
+retry:
+	error = user_path_parent(olddfd, oldname, &oldnd, &from, lookup_flags);
 	if (error)
 		goto exit;
 
-	error = user_path_parent(newdfd, newname, &newnd, &to, 0);
+	error = user_path_parent(newdfd, newname, &newnd, &to, lookup_flags);
 	if (error)
 		goto exit1;
 
@@ -3336,11 +3338,18 @@ exit4:
 exit3:
 	unlock_rename(new_dir, old_dir);
 exit2:
+	if (retry_estale(error, lookup_flags))
+		should_retry = true;
 	path_put(&newnd.path);
 	putname(to);
 exit1:
 	path_put(&oldnd.path);
 	putname(from);
+	if (should_retry) {
+		should_retry = false;
+		lookup_flags |= LOOKUP_REVAL;
+		goto retry;
+	}
 exit:
 	return error;
 }
