From: agraf@suse.de
Subject: Implement some missing intercepts so osx doesn't blow up
Patch-mainline: unknown
References: bnc#556564

---
 arch/x86/kvm/svm.c |   20 ++++++++++++++++++--
 arch/x86/kvm/x86.c |    4 +++-
 2 files changed, 21 insertions(+), 3 deletions(-)

Index: linux-3.12-SLE12/arch/x86/kvm/svm.c
===================================================================
--- linux-3.12-SLE12.orig/arch/x86/kvm/svm.c
+++ linux-3.12-SLE12/arch/x86/kvm/svm.c
@@ -2746,6 +2746,22 @@ static int xsetbv_interception(struct vc
 	return 1;
 }
 
+static int monitor_interception(struct vcpu_svm *svm)
+{
+	svm->next_rip = kvm_rip_read(&svm->vcpu) + 3;
+	skip_emulated_instruction(&svm->vcpu);
+
+	return 1;
+}
+
+static int mwait_interception(struct vcpu_svm *svm)
+{
+	svm->next_rip = kvm_rip_read(&svm->vcpu) + 3;
+	skip_emulated_instruction(&svm->vcpu);
+
+	return kvm_emulate_halt(&svm->vcpu);
+}
+
 static int invalid_op_interception(struct vcpu_svm *svm)
 {
 	kvm_queue_exception(&svm->vcpu, UD_VECTOR);
@@ -3308,8 +3324,8 @@ static int (*const svm_exit_handlers[])(
 	[SVM_EXIT_CLGI]				= clgi_interception,
 	[SVM_EXIT_SKINIT]			= skinit_interception,
 	[SVM_EXIT_WBINVD]                       = emulate_on_interception,
-	[SVM_EXIT_MONITOR]			= invalid_op_interception,
-	[SVM_EXIT_MWAIT]			= invalid_op_interception,
+	[SVM_EXIT_MONITOR]			= monitor_interception,
+	[SVM_EXIT_MWAIT]			= mwait_interception,
 	[SVM_EXIT_XSETBV]			= xsetbv_interception,
 	[SVM_EXIT_NPF]				= pf_interception,
 };
Index: linux-3.12-SLE12/arch/x86/kvm/x86.c
===================================================================
--- linux-3.12-SLE12.orig/arch/x86/kvm/x86.c
+++ linux-3.12-SLE12/arch/x86/kvm/x86.c
@@ -2037,6 +2037,7 @@ int kvm_set_msr_common(struct kvm_vcpu *
 		vcpu_unimpl(vcpu, "%s: MSR_IA32_DEBUGCTLMSR 0x%llx, nop\n",
 			    __func__, data);
 		break;
+	case MSR_NHM_SNB_PKG_CST_CFG_CTL: /* 0xe2 */
 	case 0x200 ... 0x2ff:
 		return set_msr_mtrr(vcpu, msr, data);
 	case MSR_IA32_APICBASE:
@@ -2374,6 +2375,7 @@ int kvm_get_msr_common(struct kvm_vcpu *
 	case MSR_AMD64_NB_CFG:
 	case MSR_FAM10H_MMIO_CONF_BASE:
 	case MSR_AMD64_BU_CFG2:
+	case MSR_NHM_SNB_PKG_CST_CFG_CTL: /* 0xe2 */
 		data = 0;
 		break;
 	case MSR_P6_PERFCTR0:
