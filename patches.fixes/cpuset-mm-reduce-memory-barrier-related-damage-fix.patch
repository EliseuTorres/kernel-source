From: Mel Gorman <mgorman@suse.de>
Date: Tue, 20 Mar 2012 11:19:03 +0000
Subject: [PATCH] cpuset: mm: Reduce large amounts of memory barrier related

References: VM performance
Patch-mainline: Never, replace with b1c12cbcd0a02527c180a862e8971e249d3b347d and 2ab41dd599228532afc0d5920f82e6378ec1c5f3

Fix an uninitialised variable warning and while strictly speaking it is
not necessary, call put_mems_allowed() in an error path in
dequeue_huge_page_vma().

Credit to Jan Beulich for spotting the problem.

Signed-off-by: Mel Gorman <mgorman@suse.de>
---
 mm/hugetlb.c |    6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/mm/hugetlb.c b/mm/hugetlb.c
index 9649841..ee91f1b 100644
--- a/mm/hugetlb.c
+++ b/mm/hugetlb.c
@@ -454,7 +454,7 @@ static struct page *dequeue_huge_page_vma(struct hstate *h,
 				struct vm_area_struct *vma,
 				unsigned long address, int avoid_reserve)
 {
-	struct page *page;
+	struct page *page = NULL;
 	struct mempolicy *mpol;
 	nodemask_t *nodemask;
 	struct zonelist *zonelist;
@@ -498,6 +498,10 @@ retry_cpuset:
 
 err:
 	mpol_cond_put(mpol);
+
+	/* No need to retry after a failed put_mems_allowed in the error path */
+	put_mems_allowed(cpuset_mems_cookie);
+
 	return NULL;
 }
 
