From: NeilBrown <neilb@suse.de>
Subject: Fix possible crash due to refcount problem
Patch-mainline: submitted for 2.6.37
References: bnc#650067

We need to hold a ref to an xprt across calls to svc_xprt_received,
because as soon as 'BUSY' is cleared the xprt can be free if we don't
hold a reference.


Acked-by: Neil Brown <neilb@suse.de>
Signed-off-by: Neil Brown <neilb@suse.de>

---
 net/sunrpc/svc_xprt.c |    4 ++++
 1 file changed, 4 insertions(+)

--- linux-2.6.32-SLE11-SP1.orig/net/sunrpc/svc_xprt.c
+++ linux-2.6.32-SLE11-SP1/net/sunrpc/svc_xprt.c
@@ -725,6 +725,9 @@ int svc_recv(struct svc_rqst *rqstp, lon
 			 * listener holds a reference too
 			 */
 			__module_get(newxpt->xpt_class->xcl_owner);
+			/* Must hold a reference across calls to
+			 * svc_xprt_received */
+			svc_xprt_get(newxpt);
 			svc_check_conn_limits(xprt->xpt_server);
 			spin_lock_bh(&serv->sv_lock);
 			set_bit(XPT_TEMP, &newxpt->xpt_flags);
@@ -740,6 +743,7 @@ int svc_recv(struct svc_rqst *rqstp, lon
 			}
 			spin_unlock_bh(&serv->sv_lock);
 			svc_xprt_received(newxpt);
+			svc_xprt_put(newxpt);
 		}
 		svc_xprt_received(xprt);
 	} else {
