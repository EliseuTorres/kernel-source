From: Amit Shah <amit.shah@redhat.com>
Subject: virtio: rng: add derating factor for use by hwrng core
Git-commit: 34679ec7a0c45da8161507e1f2e1f72749dfd85c
Patch-mainline: v3.17-rc1
References: bsc#918615

 virtio: rng: add derating factor for use by hwrng core

The khwrngd thread is started when a hwrng device of sufficient
quality is registered.  The virtio-rng device is backed by the
hypervisor, and we trust the hypervisor to provide real entropy.

A malicious or badly-implemented hypervisor is a scenario that's
irrelevant -- such a setup is bound to cause all sorts of badness, and a
compromised hwrng is the least of the user's worries.

Given this, we might as well assume that the quality of randomness we
receive is perfectly trustworthy.  Hence, we use 100% for the factor,
indicating maximum confidence in the source.

Signed-off-by: Amit Shah <amit.shah@redhat.com>
Reviewed-by: H. Peter Anvin <hpa@linux.intel.com>
Reviewed-by: Amos Kong <akong@redhat.com>
Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>
Signed-off-by: Torsten Duwe <duwe@suse.de>

--- a/drivers/char/hw_random/virtio-rng.c
+++ b/drivers/char/hw_random/virtio-rng.c
@@ -86,6 +86,7 @@ static struct hwrng virtio_hwrng = {
 	.name		= "virtio",
 	.cleanup	= virtio_cleanup,
 	.read		= virtio_read,
+	.quality	= 1000,
 };
 
 static int probe_common(struct virtio_device *vdev)
