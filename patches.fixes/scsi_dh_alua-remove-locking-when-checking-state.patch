From: Hannes Reinecke <hare@suse.de>
Date: Wed, 6 Nov 2013 13:12:37 +0100
Subject: scsi_dh_alua: remove locking when checking state
References: bnc#708296
Patch-Mainline: posted to linux-scsi

When checking the ALUA state we don't need a lock, as 32bit
updates are guaranteed to be atomic.
And it doesn't really matter if the value is up-to-date;
any errors will be catched by the SCSI stack anyway.

Signed-off-by: Hannes Reinecke <hare@suse.de>
---
 drivers/scsi/device_handler/scsi_dh_alua.c | 4 ----
 1 file changed, 4 deletions(-)

diff --git a/drivers/scsi/device_handler/scsi_dh_alua.c b/drivers/scsi/device_handler/scsi_dh_alua.c
index 99576d5..4df34a9 100644
--- a/drivers/scsi/device_handler/scsi_dh_alua.c
+++ b/drivers/scsi/device_handler/scsi_dh_alua.c
@@ -797,11 +797,9 @@ static int alua_rtpg(struct scsi_device *sdev, struct alua_port_group *pg)
 	     k += off, ucp += off) {
 
 		if (pg->group_id == (ucp[2] << 8) + ucp[3]) {
-			spin_lock(&pg->rtpg_lock);
 			pg->state = ucp[0] & 0x0f;
 			pg->pref = ucp[0] >> 7;
 			pg->valid = ucp[1];
-			spin_unlock(&pg->rtpg_lock);
 		}
 		off = 8 + (ucp[7] * 4);
 	}
@@ -828,9 +826,7 @@ static int alua_rtpg(struct scsi_device *sdev, struct alua_port_group *pg)
 		}
 		/* Transitioning time exceeded, set port to standby */
 		err = SCSI_DH_RETRY;
-		spin_lock(&pg->rtpg_lock);
 		pg->state = TPGS_STATE_STANDBY;
-		spin_unlock(&pg->rtpg_lock);
 		break;
 	case TPGS_STATE_OFFLINE:
 		/* Path unusable */
-- 
1.7.12.4

