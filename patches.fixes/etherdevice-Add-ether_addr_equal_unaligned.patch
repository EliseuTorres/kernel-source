From: Joe Perches <joe@perches.com>
Date: Fri, 6 Dec 2013 14:21:01 -0800
Subject: [PATCH] etherdevice: Add ether_addr_equal_unaligned
Patch-mainline: v3.14-rc1
Git-commit: 73eaef87e98a96fe8b8a586f916b2721bf512efa
References: bsc#909350 FATE#317546

Add a generic routine to test if possibly unaligned
to u16 Ethernet addresses are equal.

If CONFIG_HAVE_EFFICIENT_UNALIGNED_ACCESS is set,
this uses the slightly faster generic routine
ether_addr_equal, otherwise this uses memcmp.

Signed-off-by: Joe Perches <joe@perches.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
Acked-by: Gary Ching-Pang Lin <glin@suse.com>
---
 include/linux/etherdevice.h |   18 ++++++++++++++++++
 1 file changed, 18 insertions(+)

--- a/include/linux/etherdevice.h
+++ b/include/linux/etherdevice.h
@@ -267,6 +267,24 @@ static inline unsigned compare_ether_add
 }
 
 /**
+ * ether_addr_equal_unaligned - Compare two not u16 aligned Ethernet addresses
+ * @addr1: Pointer to a six-byte array containing the Ethernet address
+ * @addr2: Pointer other six-byte array containing the Ethernet address
+ *
+ * Compare two Ethernet addresses, returns true if equal
+ *
+ * Please note: Use only when any Ethernet address may not be u16 aligned.
+ */
+static inline bool ether_addr_equal_unaligned(const u8 *addr1, const u8 *addr2)
+{
+#if defined(CONFIG_HAVE_EFFICIENT_UNALIGNED_ACCESS)
+	return ether_addr_equal(addr1, addr2);
+#else
+	return memcmp(addr1, addr2, ETH_ALEN) == 0;
+#endif
+}
+
+/**
  * is_etherdev_addr - Tell if given Ethernet address belongs to the device.
  * @dev: Pointer to a device structure
  * @addr: Pointer to a six-byte array containing the Ethernet address
