From: Teradata
Subject: IPMI: avoid deadlock during panic
References: bnc#580373
Patch-mainline: yes, a747c5abc32

Avoid deadlock (by not taking lock in run_to_completion mode in
deliver_recv_msg()) in IPMI during panic.

Acked-by: Jiri Kosina <jkosina@suse.cz>

--- a/drivers/char/ipmi/ipmi_si_intf.c	2010-04-28 09:02:53.000000000 -0400
+++ b/drivers/char/ipmi/ipmi_si_intf.c	2010-05-04 19:42:45.000000000 -0400
@@ -311,11 +311,23 @@
 static void deliver_recv_msg(struct smi_info *smi_info,
 			     struct ipmi_smi_msg *msg)
 {
-	/* Deliver the message to the upper layer with the lock
-	   released. */
-	spin_unlock(&(smi_info->si_lock));
-	ipmi_smi_msg_received(smi_info->intf, msg);
-	spin_lock(&(smi_info->si_lock));
+	/* Deliver the message to the upper layer */
+
+	/*
+	 * Run to completion means we are single-threaded,
+	 * so locks are not held.
+	 */
+	if (smi_info->run_to_completion) {
+		ipmi_smi_msg_received(smi_info->intf, msg);
+	/*
+	 * Otherwise, release the lock, deliver the message, and
+	 * re-acquire the lock.
+	 */
+	} else {
+		spin_unlock(&(smi_info->si_lock));
+		ipmi_smi_msg_received(smi_info->intf, msg);
+		spin_lock(&(smi_info->si_lock));
+	}
 }
 
 static void return_hosed_msg(struct smi_info *smi_info, int cCode)
