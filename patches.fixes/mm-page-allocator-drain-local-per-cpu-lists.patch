From: Mel Gorman <mgorman@suse.de>
Date: Wed, 8 Feb 2012 21:38:14 +0000
Subject: [PATCH] mm: page allocator: Drain local per-cpu lists for any allocation failure
References: bnc744392
Patch-mainline: no

The i915 driver is reporting scheduling
while atomic bugs and bisection identified
patches.fixes/mm-page-allocator-do-not-drain-per-cpu-lists-via-IPI-from-page-allocator-context.patch
as being the problem. With that patch, it is possible for 728K of pages are
free on each CPUs list that is unusable by i915. If it fails the allocation,
it responds by unmapping some of its existing objects which triggers the
bug when it cond_resched() is called. This patch does not fix the i915
bug but has the side-effect of making it far harder to trigger.

Signed-off-by: Mel Gorman <mgorman@suse.de>
---
 mm/page_alloc.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/mm/page_alloc.c b/mm/page_alloc.c
index b7ef734..95794d5 100644
--- a/mm/page_alloc.c
+++ b/mm/page_alloc.c
@@ -2035,7 +2035,7 @@ retry:
 	 * would block during thread creation and the cost of sending storms
 	 * of IPIs in low memory conditions is quite high.
 	 */
-	if (!page && order && !drained) {
+	if (!page && !drained) {
 		drain_pages(get_cpu());
 		put_cpu();
 		drained = true;
