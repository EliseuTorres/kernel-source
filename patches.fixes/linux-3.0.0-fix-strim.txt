From: Michael Holzheu <holzheu@linux.vnet.ibm.com>
Subject: lib/string: Fix strim regression on all-whitespace strings
References: bnc#717248
Patch-mainline: Submission to be made

With git commit 84c95c9acf088c99d8793d78036b67faa5d0b851 a patch from
you went upstream where you wanted to improve the performance of the
strim() function.

Unfortunately this changed the semantics of strim() and broke my code. Before
the patch it was possible to use strim() without using the return value for
removing trailing spaces from strings that had either only blanks or only
trailing blanks.

Now this does not work any longer for strings that *only* have blanks.

Before patch: "   " -> ""    (empty string)
After patch:  "   " -> "   " (no change)

I think we should remove your patch to restore the old behavior.

From the description (lib/string.c):

 * Note that the first trailing whitespace is replaced with a %NUL-terminator

=> The first trailing whitespace of a string that only has whitespace
   characters is the first whitespace

Also strim() explicitely does not have "__must_check", in order to use it
without the return value.

I attached the patch that restores the correct strim() semantics.

Signed-off-by: Michael Holzheu <holzheu@linux.vnet.ibm.com>
Acked-by: John Jolly <jjolly@suse.de>
---
 lib/string.c |    3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

--- a/lib/string.c
+++ b/lib/string.c
@@ -360,7 +360,6 @@ char *strim(char *s)
 	size_t size;
 	char *end;
 
-	s = skip_spaces(s);
 	size = strlen(s);
 	if (!size)
 		return s;
@@ -370,7 +369,7 @@ char *strim(char *s)
 		end--;
 	*(end + 1) = '\0';
 
-	return s;
+	return skip_spaces(s);
 }
 EXPORT_SYMBOL(strim);
 
