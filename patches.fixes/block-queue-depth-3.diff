From: Jan Kara <jack@suse.cz>
Subject: block: Reserve only one queue tag for sync IO if only 3 tags are available
References: bnc#806396
Patch-mainline: expected 3.11
Git-commit: a6b3f7614ca690e49e934c291f707b0c19312194 (in linux-block.git)

In case device has three tags available we still reserve two of them for sync
IO. That leaves only a single tag for async IO such as writeback from flusher
thread which results in poor performance (about 50% of optimal throughput) of
streaming writes.

Allow async IO to consume two tags in case queue has three tag availabe to get
a decent async write performance.

Signed-off-by: Jan Kara <jack@suse.cz>

diff -rupX /crypted/home/jack/.kerndiffexclude linux-3.0-SLE11-SP3/block/blk-tag.c linux-3.0-SLE11-SP3-queue_tag/block/blk-tag.c
--- linux-3.0-SLE11-SP3/block/blk-tag.c	2013-06-24 10:22:09.948189870 +0200
+++ linux-3.0-SLE11-SP3-queue_tag/block/blk-tag.c	2013-06-25 13:50:28.424096148 +0200
@@ -350,9 +350,16 @@ int blk_queue_start_tag(struct request_q
 	 */
 	max_depth = bqt->max_depth;
 	if (!rq_is_sync(rq) && max_depth > 1) {
-		max_depth -= 2;
-		if (!max_depth)
+		switch (max_depth) {
+		case 2:
 			max_depth = 1;
+			break;
+		case 3:
+			max_depth = 2;
+			break;
+		default:
+			max_depth -= 2;
+		}
 		if (q->in_flight[BLK_RW_ASYNC] > max_depth)
 			return 1;
 	}
