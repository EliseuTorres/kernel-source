From: Jan Kara <jack@suse.cz>
Subject: block: Fix bogus partition statistics reports
Patch-mainline: Never (code changed differently)
References: bnc#885077 bnc#891211

part_round_stats() is called with queue_lock held except for part_stat_show().
This can lead to two part_round_stats() calls racing with each other possibly
causing corruption of partition IO statistics.

Fix the problem by grabbing queue_lock in part_stat_show().

Signed-off-by: Jan Kara <jack@suse.cz>

diff -rupX /crypted/home/jack/.kerndiffexclude linux-2.6.32-SLE11-SP1-LTSS/block/genhd.c linux-2.6.32-SLE11-SP1-LTSS-1-part_stats/block/genhd.c
--- linux-2.6.32-SLE11-SP1-LTSS/block/genhd.c	2010-07-13 14:00:49.000000000 +0200
+++ linux-2.6.32-SLE11-SP1-LTSS-1-part_stats/block/genhd.c	2014-11-11 12:24:48.457595924 +0100
@@ -1027,6 +1027,7 @@ static int diskstats_show(struct seq_fil
 	struct gendisk *gp = v;
 	struct disk_part_iter piter;
 	struct hd_struct *hd;
+	spinlock_t *queue_lock;
 	char buf[BDEVNAME_SIZE];
 	int cpu;
 
@@ -1040,9 +1041,15 @@ static int diskstats_show(struct seq_fil
  
 	disk_part_iter_init(&piter, gp, DISK_PITER_INCL_EMPTY_PART0);
 	while ((hd = disk_part_iter_next(&piter))) {
+		queue_lock = part_to_disk(hd)->queue->queue_lock;
+
+		if (queue_lock)	/* Some queues need not be initialized yet... */
+			spin_lock_irq(queue_lock);
 		cpu = part_stat_lock();
 		part_round_stats(cpu, hd);
 		part_stat_unlock();
+		if (queue_lock)
+			spin_unlock_irq(queue_lock);
 		seq_printf(seqf, "%4d %7d %s %lu %lu %llu "
 			   "%u %lu %lu %llu %u %u %u %u\n",
 			   MAJOR(part_devt(hd)), MINOR(part_devt(hd)),
diff -rupX /crypted/home/jack/.kerndiffexclude linux-2.6.32-SLE11-SP1-LTSS/fs/partitions/check.c linux-2.6.32-SLE11-SP1-LTSS-1-part_stats/fs/partitions/check.c
--- linux-2.6.32-SLE11-SP1-LTSS/fs/partitions/check.c	2010-07-13 14:00:12.000000000 +0200
+++ linux-2.6.32-SLE11-SP1-LTSS-1-part_stats/fs/partitions/check.c	2014-11-11 12:26:04.143804883 +0100
@@ -230,11 +230,16 @@ ssize_t part_stat_show(struct device *de
 		       struct device_attribute *attr, char *buf)
 {
 	struct hd_struct *p = dev_to_part(dev);
+	spinlock_t *queue_lock = part_to_disk(p)->queue->queue_lock;
 	int cpu;
 
+	if (queue_lock)	/* Some queues need not be initialized yet */
+		spin_lock_irq(queue_lock);
 	cpu = part_stat_lock();
 	part_round_stats(cpu, p);
 	part_stat_unlock();
+	if (queue_lock)
+		spin_unlock_irq(queue_lock);
 	return sprintf(buf,
 		"%8lu %8lu %8llu %8u "
 		"%8lu %8lu %8llu %8u "
