From: Michal Kubecek <mkubecek@suse.cz>
Date: Fri, 30 Aug 2013 14:49:07 +0200
Subject: netfilter: prevent race condition breaking net reference counting
Patch-mainline: Never, SLE specific fix
References: bnc#835094

The fix for bnc#773577 introduced a race condition in network
namespace reference counting. As namespace pointer in struct
netdevice is not refcounted, dev->net can point to a namespace
which has already zero reference count and is scheduled for
removal. If we take a reference in such situation, the namespace
would be removed twice.

The problem was introduced by SLE11-SP2 kernel-source commit
3902fddc1cfe54dba4b88bb5a9066e7730800434

Signed-off-by: Michal Kubecek <mkubecek@suse.cz>
---
 net/ipv6/netfilter/nf_conntrack_reasm.c | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/net/ipv6/netfilter/nf_conntrack_reasm.c b/net/ipv6/netfilter/nf_conntrack_reasm.c
index 03cfbb5..f04ab7c 100644
--- a/net/ipv6/netfilter/nf_conntrack_reasm.c
+++ b/net/ipv6/netfilter/nf_conntrack_reasm.c
@@ -254,7 +254,9 @@ fq_find(__be32 id, u32 user, struct net_device *dev, struct in6_addr *src, struc
 	else
 		arg.ifindex = 0;
 	arg.user = user;
-	arg.net = dev_net(dev);
+	arg.net = maybe_get_net(dev_net(dev));
+	if (!arg.net)
+		return NULL;
 	arg.src = src;
 	arg.dst = dst;
 
@@ -263,6 +265,7 @@ fq_find(__be32 id, u32 user, struct net_device *dev, struct in6_addr *src, struc
 
 	q = inet_frag_find(&nf_init_frags, &nf_frags, &arg, hash);
 	local_bh_enable();
+	put_net(arg.net);
 	if (IS_ERR_OR_NULL(q)) {
 		inet_frag_maybe_warn_overflow(q, pr_fmt());
 		return NULL;
-- 
1.8.1.4

