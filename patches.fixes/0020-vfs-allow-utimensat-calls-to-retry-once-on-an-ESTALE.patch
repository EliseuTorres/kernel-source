From: Jeff Layton <jlayton@redhat.com>
Date: Tue, 11 Dec 2012 12:10:14 -0500
Subject: [PATCH 20/28] vfs: allow utimensat() calls to retry once on an ESTALE
 error
Git-commit: a69201d6f08240f20a0d33a1b7273d1e7748791c
Patch-mainline: v3.8
References: bnc#876463

Clearly, we can't handle the NULL filename case, but we can deal with
the case where there's a real pathname.

Signed-off-by: Jeff Layton <jlayton@redhat.com>
Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
Acked-by: NeilBrown <neilb@suse.de>

---
 fs/utimes.c |    6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

--- linux-3.0-SLE11-SP3.orig/fs/utimes.c
+++ linux-3.0-SLE11-SP3/fs/utimes.c
@@ -158,13 +158,17 @@ long do_utimes(int dfd, const char __use
 
 		if (!(flags & AT_SYMLINK_NOFOLLOW))
 			lookup_flags |= LOOKUP_FOLLOW;
-
+retry:
 		error = user_path_at(dfd, filename, lookup_flags, &path);
 		if (error)
 			goto out;
 
 		error = utimes_common(&path, times);
 		path_put(&path);
+		if (retry_estale(error, lookup_flags)) {
+			lookup_flags |= LOOKUP_REVAL;
+			goto retry;
+		}
 	}
 
 out:
