Subject: sched: Remove rcu_read_lock/unlock() from select_idle_sibling()
From: "Nikunj A. Dadhania" <nikunj@linux.vnet.ibm.com>
Date: Fri, 17 Feb 2012 08:34:30 +0530
Git-commit: 62f6536a630affe3176deb48554d27ee58b65077
Patch-mainline: v3.4-rc1
References: Scheduler enhancements for I7 (bnc#754690)

select_idle_sibling() is called from select_task_rq_fair(), which
already has the RCU read lock held.

Signed-off-by: Nikunj A. Dadhania <nikunj@linux.vnet.ibm.com>
Signed-off-by: Peter Zijlstra <a.p.zijlstra@chello.nl>
Link: http://lkml.kernel.org/r/20120217030409.11748.12491.stgit@abhimanyu
Signed-off-by: Ingo Molnar <mingo@elte.hu>
Acked-by: Mike Galbraith <mgalbraith@suse.de>

---
 kernel/sched_fair.c |    4 ----
 1 file changed, 4 deletions(-)

--- a/kernel/sched_fair.c
+++ b/kernel/sched_fair.c
@@ -2279,8 +2279,6 @@ static int select_idle_sibling(struct ta
 	/*
 	 * Otherwise, iterate the domains and find an elegible idle cpu.
 	 */
-	rcu_read_lock();
-
 	sd = highest_flag_domain(target, SD_SHARE_PKG_RESOURCES);
 	for_each_lower_domain(sd) {
 		sg = sd->groups;
@@ -2302,8 +2300,6 @@ static int select_idle_sibling(struct ta
 		} while (sg != sd->groups);
 	}
 done:
-	rcu_read_unlock();
-
 	return target;
 }
 
