Git-commit: a8c2275493b866961f4429a741251c630c4fc6d7
From: Alexander Aring <alex.aring@gmail.com>
Date: Sat, 21 Dec 2013 05:39:04 +0100
Subject: nfs: fix dead code of ipv6_addr_scope
Patch-mainline: v3.14
References: bnc#868891

The correct way to check on IPV6_ADDR_SCOPE_LINKLOCAL is to check with
the ipv6_addr_src_scope function.

Currently this can't be work, because ipv6_addr_scope returns a int with
a mask of IPV6_ADDR_SCOPE_MASK (0x00f0U) and IPV6_ADDR_SCOPE_LINKLOCAL
is 0x02. So the condition is always false.

Signed-off-by: Alexander Aring <alex.aring@gmail.com>
Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
Acked-by: NeilBrown <neilb@suse.de>

---
 fs/nfs/nfs4filelayoutdev.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

--- linux-3.12-SLE12.orig/fs/nfs/nfs4filelayoutdev.c
+++ linux-3.12-SLE12/fs/nfs/nfs4filelayoutdev.c
@@ -95,7 +95,7 @@ same_sockaddr(struct sockaddr *addr1, st
 		b6 = (struct sockaddr_in6 *)addr2;
 
 		/* LINKLOCAL addresses must have matching scope_id */
-		if (ipv6_addr_scope(&a6->sin6_addr) ==
+		if (ipv6_addr_src_scope(&a6->sin6_addr) ==
 		    IPV6_ADDR_SCOPE_LINKLOCAL &&
 		    a6->sin6_scope_id != b6->sin6_scope_id)
 			return false;
