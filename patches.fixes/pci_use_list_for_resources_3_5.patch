From: Bjorn Helgaas <bjorn.helgaas@hp.com>
Subject: PCI: add pci_bus_for_each_resource(), remove direct bus->resource[] refs
References: bnc#578572
Patch-Mainline: 2.6.34-rc1
Commit-ID: 89a74ecccd1f78e51faf6287e5c0e93a92ac096e

Signed-off-by: Thomas Renninger <trenn@suse.de>

No functional change; this converts loops that iterate from 0 to
PCI_BUS_NUM_RESOURCES through pci_bus resource[] table to use the
pci_bus_for_each_resource() iterator instead.

This doesn't change the way resources are stored; it merely removes
dependencies on the fact that they're in a table.

Signed-off-by: Bjorn Helgaas <bjorn.helgaas@hp.com>
Signed-off-by: Jesse Barnes <jbarnes@virtuousgeek.org>

---
 arch/ia64/pci/pci.c                  |    5 ++---
 arch/mn10300/unit-asb2305/pci.c      |    6 ++----
 arch/powerpc/kernel/pci-common.c     |   11 ++++-------
 arch/powerpc/platforms/fsl_uli1575.c |   12 ++++++------
 drivers/pci/bus.c                    |    4 ++--
 drivers/pci/hotplug/shpchp_sysfs.c   |    9 +++------
 drivers/pci/pci.c                    |    5 ++---
 drivers/pci/setup-bus.c              |    9 ++++-----
 drivers/pcmcia/rsrc_nonstatic.c      |    3 +--
 drivers/pcmcia/yenta_socket.c        |    5 +++--
 include/linux/pci.h                  |    3 +++
 11 files changed, 32 insertions(+), 40 deletions(-)

Index: linux-2.6.32-SLE11-SP1/arch/ia64/pci/pci.c
===================================================================
--- linux-2.6.32-SLE11-SP1.orig/arch/ia64/pci/pci.c
+++ linux-2.6.32-SLE11-SP1/arch/ia64/pci/pci.c
@@ -438,13 +438,12 @@ EXPORT_SYMBOL(pcibios_bus_to_resource);
 static int __devinit is_valid_resource(struct pci_dev *dev, int idx)
 {
 	unsigned int i, type_mask = IORESOURCE_IO | IORESOURCE_MEM;
-	struct resource *devr = &dev->resource[idx];
+	struct resource *devr = &dev->resource[idx], *busr;
 
 	if (!dev->bus)
 		return 0;
-	for (i=0; i<PCI_BUS_NUM_RESOURCES; i++) {
-		struct resource *busr = dev->bus->resource[i];
 
+	pci_bus_for_each_resource(dev->bus, busr, i) {
 		if (!busr || ((busr->flags ^ devr->flags) & type_mask))
 			continue;
 		if ((devr->start) && (devr->start >= busr->start) &&
Index: linux-2.6.32-SLE11-SP1/arch/mn10300/unit-asb2305/pci.c
===================================================================
--- linux-2.6.32-SLE11-SP1.orig/arch/mn10300/unit-asb2305/pci.c
+++ linux-2.6.32-SLE11-SP1/arch/mn10300/unit-asb2305/pci.c
@@ -307,12 +307,10 @@ static int __init pci_check_direct(void)
 static int __devinit is_valid_resource(struct pci_dev *dev, int idx)
 {
 	unsigned int i, type_mask = IORESOURCE_IO | IORESOURCE_MEM;
-	struct resource *devr = &dev->resource[idx];
+	struct resource *devr = &dev->resource[idx], *busr;
 
 	if (dev->bus) {
-		for (i = 0; i < PCI_BUS_NUM_RESOURCES; i++) {
-			struct resource *busr = dev->bus->resource[i];
-
+		pci_bus_for_each_resource(dev->bus, busr, i) {
 			if (!busr || (busr->flags ^ devr->flags) & type_mask)
 				continue;
 
Index: linux-2.6.32-SLE11-SP1/arch/powerpc/kernel/pci-common.c
===================================================================
--- linux-2.6.32-SLE11-SP1.orig/arch/powerpc/kernel/pci-common.c
+++ linux-2.6.32-SLE11-SP1/arch/powerpc/kernel/pci-common.c
@@ -1047,10 +1047,8 @@ static void __devinit pcibios_fixup_brid
 
 	struct pci_dev *dev = bus->self;
 
-	for (i = 0; i < PCI_BUS_NUM_RESOURCES; ++i) {
-		if ((res = bus->resource[i]) == NULL)
-			continue;
-		if (!res->flags)
+	pci_bus_for_each_resource(bus, res, i) {
+		if (!res || !res->flags)
 			continue;
 		if (i >= 3 && bus->self->transparent)
 			continue;
@@ -1278,9 +1276,8 @@ void pcibios_allocate_bus_resources(stru
 	pr_debug("PCI: Allocating bus resources for %04x:%02x...\n",
 		 pci_domain_nr(bus), bus->number);
 
-	for (i = 0; i < PCI_BUS_NUM_RESOURCES; ++i) {
-		if ((res = bus->resource[i]) == NULL || !res->flags
-		    || res->start > res->end || res->parent)
+	pci_bus_for_each_resource(bus, res, i) {
+		if (!res || !res->flags || res->start > res->end || res->parent)
 			continue;
 		if (bus->parent == NULL)
 			pr = (res->flags & IORESOURCE_IO) ?
Index: linux-2.6.32-SLE11-SP1/arch/powerpc/platforms/fsl_uli1575.c
===================================================================
--- linux-2.6.32-SLE11-SP1.orig/arch/powerpc/platforms/fsl_uli1575.c
+++ linux-2.6.32-SLE11-SP1/arch/powerpc/platforms/fsl_uli1575.c
@@ -222,6 +222,7 @@ static void __devinit quirk_final_uli524
 	int i;
 	u8 *dummy;
 	struct pci_bus *bus = dev->bus;
+	struct resource *res;
 	resource_size_t end = 0;
 
 	for (i = PCI_BRIDGE_RESOURCES; i < PCI_BRIDGE_RESOURCES+3; i++) {
@@ -230,13 +231,12 @@ static void __devinit quirk_final_uli524
 			end = pci_resource_end(dev, i);
 	}
 
-	for (i = 0; i < PCI_BUS_NUM_RESOURCES; i++) {
-		if ((bus->resource[i]) &&
-			(bus->resource[i]->flags & IORESOURCE_MEM)) {
-			if (bus->resource[i]->end == end)
-				dummy = ioremap(bus->resource[i]->start, 0x4);
+	pci_bus_for_each_resource(bus, res, i) {
+		if (res && res->flags & IORESOURCE_MEM) {
+			if (res->end == end)
+				dummy = ioremap(res->start, 0x4);
 			else
-				dummy = ioremap(bus->resource[i]->end - 3, 0x4);
+				dummy = ioremap(res->end - 3, 0x4);
 			if (dummy) {
 				in_8(dummy);
 				iounmap(dummy);
Index: linux-2.6.32-SLE11-SP1/drivers/pci/bus.c
===================================================================
--- linux-2.6.32-SLE11-SP1.orig/drivers/pci/bus.c
+++ linux-2.6.32-SLE11-SP1/drivers/pci/bus.c
@@ -41,6 +41,7 @@ pci_bus_alloc_resource(struct pci_bus *b
 		void *alignf_data)
 {
 	int i, ret = -ENOMEM;
+	struct resource *r;
 	resource_size_t max = -1;
 
 	type_mask |= IORESOURCE_IO | IORESOURCE_MEM;
@@ -49,8 +50,7 @@ pci_bus_alloc_resource(struct pci_bus *b
 	if (!(res->flags & IORESOURCE_MEM_64))
 		max = PCIBIOS_MAX_MEM_32;
 
-	for (i = 0; i < PCI_BUS_NUM_RESOURCES; i++) {
-		struct resource *r = bus->resource[i];
+	pci_bus_for_each_resource(bus, r, i) {
 		if (!r)
 			continue;
 
Index: linux-2.6.32-SLE11-SP1/drivers/pci/hotplug/shpchp_sysfs.c
===================================================================
--- linux-2.6.32-SLE11-SP1.orig/drivers/pci/hotplug/shpchp_sysfs.c
+++ linux-2.6.32-SLE11-SP1/drivers/pci/hotplug/shpchp_sysfs.c
@@ -47,8 +47,7 @@ static ssize_t show_ctrl (struct device
 	bus = pdev->subordinate;
 
 	out += sprintf(buf, "Free resources: memory\n");
-	for (index = 0; index < PCI_BUS_NUM_RESOURCES; index++) {
-		res = bus->resource[index];
+	pci_bus_for_each_resource(bus, res, index) {
 		if (res && (res->flags & IORESOURCE_MEM) &&
 				!(res->flags & IORESOURCE_PREFETCH)) {
 			out += sprintf(out, "start = %8.8llx, "
@@ -58,8 +57,7 @@ static ssize_t show_ctrl (struct device
 		}
 	}
 	out += sprintf(out, "Free resources: prefetchable memory\n");
-	for (index = 0; index < PCI_BUS_NUM_RESOURCES; index++) {
-		res = bus->resource[index];
+	pci_bus_for_each_resource(bus, res, index) {
 		if (res && (res->flags & IORESOURCE_MEM) &&
 			       (res->flags & IORESOURCE_PREFETCH)) {
 			out += sprintf(out, "start = %8.8llx, "
@@ -69,8 +67,7 @@ static ssize_t show_ctrl (struct device
 		}
 	}
 	out += sprintf(out, "Free resources: IO\n");
-	for (index = 0; index < PCI_BUS_NUM_RESOURCES; index++) {
-		res = bus->resource[index];
+	pci_bus_for_each_resource(bus, res, index) {
 		if (res && (res->flags & IORESOURCE_IO)) {
 			out += sprintf(out, "start = %8.8llx, "
 					"length = %8.8llx\n",
Index: linux-2.6.32-SLE11-SP1/drivers/pci/pci.c
===================================================================
--- linux-2.6.32-SLE11-SP1.orig/drivers/pci/pci.c
+++ linux-2.6.32-SLE11-SP1/drivers/pci/pci.c
@@ -361,10 +361,9 @@ pci_find_parent_resource(const struct pc
 {
 	const struct pci_bus *bus = dev->bus;
 	int i;
-	struct resource *best = NULL;
+	struct resource *best = NULL, *r;
 
-	for(i = 0; i < PCI_BUS_NUM_RESOURCES; i++) {
-		struct resource *r = bus->resource[i];
+	pci_bus_for_each_resource(bus, r, i) {
 		if (!r)
 			continue;
 		if (res->start && !(res->start >= r->start && res->end <= r->end))
Index: linux-2.6.32-SLE11-SP1/drivers/pci/setup-bus.c
===================================================================
--- linux-2.6.32-SLE11-SP1.orig/drivers/pci/setup-bus.c
+++ linux-2.6.32-SLE11-SP1/drivers/pci/setup-bus.c
@@ -290,8 +290,7 @@ static struct resource *find_free_bus_re
 	unsigned long type_mask = IORESOURCE_IO | IORESOURCE_MEM |
 				  IORESOURCE_PREFETCH;
 
-	for (i = 0; i < PCI_BUS_NUM_RESOURCES; i++) {
-		r = bus->resource[i];
+	pci_bus_for_each_resource(bus, r, i) {
 		if (r == &ioport_resource || r == &iomem_resource)
 			continue;
 		if (r && (r->flags & type_mask) == type && !r->parent)
@@ -570,10 +569,10 @@ EXPORT_SYMBOL(pci_bus_assign_resources);
 
 static void pci_bus_dump_res(struct pci_bus *bus)
 {
-        int i;
+	struct resource *res;
+	int i;
 
-        for (i = 0; i < PCI_BUS_NUM_RESOURCES; i++) {
-                struct resource *res = bus->resource[i];
+	pci_bus_for_each_resource(bus, res, i) {
                 if (!res || !res->end)
                         continue;
 
Index: linux-2.6.32-SLE11-SP1/drivers/pcmcia/rsrc_nonstatic.c
===================================================================
--- linux-2.6.32-SLE11-SP1.orig/drivers/pcmcia/rsrc_nonstatic.c
+++ linux-2.6.32-SLE11-SP1/drivers/pcmcia/rsrc_nonstatic.c
@@ -794,8 +794,7 @@ static int nonstatic_autoadd_resources(s
 		return -EINVAL;
 #endif
 
-	for (i=0; i < PCI_BUS_NUM_RESOURCES; i++) {
-		res = s->cb_dev->bus->resource[i];
+	pci_bus_for_each_resource(s->cb_dev->bus, res, i) {
 		if (!res)
 			continue;
 
Index: linux-2.6.32-SLE11-SP1/drivers/pcmcia/yenta_socket.c
===================================================================
--- linux-2.6.32-SLE11-SP1.orig/drivers/pcmcia/yenta_socket.c
+++ linux-2.6.32-SLE11-SP1/drivers/pcmcia/yenta_socket.c
@@ -604,9 +604,10 @@ static int yenta_search_one_res(struct r
 static int yenta_search_res(struct yenta_socket *socket, struct resource *res,
 			    u32 min)
 {
+	struct resource *root;
 	int i;
-	for (i=0; i<PCI_BUS_NUM_RESOURCES; i++) {
-		struct resource * root = socket->dev->bus->resource[i];
+
+	pci_bus_for_each_resource(socket->dev->bus, root, i) {
 		if (!root)
 			continue;
 
Index: linux-2.6.32-SLE11-SP1/include/linux/pci.h
===================================================================
--- linux-2.6.32-SLE11-SP1.orig/include/linux/pci.h
+++ linux-2.6.32-SLE11-SP1/include/linux/pci.h
@@ -779,6 +779,9 @@ int pci_request_selected_regions_exclusi
 void pci_release_selected_regions(struct pci_dev *, int);
 
 /* drivers/pci/bus.c */
+#define pci_bus_for_each_resource(bus, res, i)				\
+	for (i = 0; res = bus->resource[i], i < PCI_BUS_NUM_RESOURCES; i++)
+
 int __must_check pci_bus_alloc_resource(struct pci_bus *bus,
 			struct resource *res, resource_size_t size,
 			resource_size_t align, resource_size_t min,
