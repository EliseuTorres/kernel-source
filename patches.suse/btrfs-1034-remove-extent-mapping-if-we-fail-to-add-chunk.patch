From: Josef Bacik <jbacik@fusionio.com>
Date: Thu, 31 Jan 2013 10:23:04 -0500
Patch-mainline: 3.8
Git-commit: 0f5d42b287f32417e54485d79f2318cf2970b37d
References: FATE#312888
Subject: [PATCH] Btrfs: remove extent mapping if we fail to add chunk

I got a double free error when unmounting a file system that failed to add a
chunk during its operation.  This is because we will kfree the mapping that
we created but leave the extent_map in the em_tree for chunks.  So to fix
this just remove the extent_map when we error out so we don't run into this
problem.  Thanks,

Signed-off-by: Josef Bacik <jbacik@fusionio.com>
Signed-off-by: David Sterba <dsterba@suse.cz>
---
 fs/btrfs/volumes.c |   14 ++++++++++++--
 1 file changed, 12 insertions(+), 2 deletions(-)

--- a/fs/btrfs/volumes.c
+++ b/fs/btrfs/volumes.c
@@ -3825,9 +3825,10 @@ static int __btrfs_alloc_chunk(struct bt
 	write_lock(&em_tree->lock);
 	ret = add_extent_mapping(em_tree, em);
 	write_unlock(&em_tree->lock);
-	free_extent_map(em);
-	if (ret)
+	if (ret) {
+		free_extent_map(em);
 		goto error;
+	}
 
 	for (i = 0; i < map->num_stripes; ++i) {
 		struct btrfs_device *device;
@@ -3852,6 +3853,7 @@ static int __btrfs_alloc_chunk(struct bt
 		goto error_dev_extent;
 	}
 
+	free_extent_map(em);
 	kfree(devices_info);
 	return 0;
 
@@ -3867,6 +3869,14 @@ error_dev_extent:
 			break;
 		}
 	}
+	write_lock(&em_tree->lock);
+	remove_extent_mapping(em_tree, em);
+	write_unlock(&em_tree->lock);
+
+	/* One for our allocation */
+	free_extent_map(em);
+	/* One for the tree reference */
+	free_extent_map(em);
 error:
 	kfree(map);
 	kfree(devices_info);
