From: Jeff Mahoney <jeffm@suse.com>
Subject: btrfs: __btrfs_mod_ref's process_func should return void
Patch-mainline: Submitted 24 Oct 2011

__btrfs_mod_ref's process_func function pointer calls btrfs_free_extent
and btrfs_inc_extent_ref, which now both return only 0. This patches
makes them return void and eliminates the error condition in
__btrfs_mod_ref.

Signed-off-by: Jeff Mahoney <jeffm@suse.com>
---
 fs/btrfs/ctree.h       |    4 ++--
 fs/btrfs/extent-tree.c |   19 +++++--------------
 2 files changed, 7 insertions(+), 16 deletions(-)

--- a/fs/btrfs/ctree.h
+++ b/fs/btrfs/ctree.h
@@ -2311,7 +2311,7 @@ int btrfs_set_disk_extent_flags(struct b
 				struct btrfs_root *root,
 				u64 bytenr, u64 num_bytes, u64 flags,
 				int is_data);
-int btrfs_free_extent(struct btrfs_trans_handle *trans,
+void btrfs_free_extent(struct btrfs_trans_handle *trans,
 		      struct btrfs_root *root,
 		      u64 bytenr, u64 num_bytes, u64 parent, u64 root_objectid,
 		      u64 owner, u64 offset, int for_cow);
@@ -2323,7 +2323,7 @@ void btrfs_prepare_extent_commit(struct
 				 struct btrfs_root *root);
 int btrfs_finish_extent_commit(struct btrfs_trans_handle *trans,
 			       struct btrfs_root *root);
-int btrfs_inc_extent_ref(struct btrfs_trans_handle *trans,
+void btrfs_inc_extent_ref(struct btrfs_trans_handle *trans,
 			 struct btrfs_root *root,
 			 u64 bytenr, u64 num_bytes, u64 parent,
 			 u64 root_objectid, u64 owner, u64 offset, int for_cow);
--- a/fs/btrfs/extent-tree.c
+++ b/fs/btrfs/extent-tree.c
@@ -1868,7 +1868,7 @@ static int btrfs_discard_extent(struct b
 	return ret;
 }
 
-int btrfs_inc_extent_ref(struct btrfs_trans_handle *trans,
+void btrfs_inc_extent_ref(struct btrfs_trans_handle *trans,
 			 struct btrfs_root *root,
 			 u64 bytenr, u64 num_bytes, u64 parent,
 			 u64 root_objectid, u64 owner, u64 offset, int for_cow)
@@ -1889,7 +1889,6 @@ int btrfs_inc_extent_ref(struct btrfs_tr
 					parent, root_objectid, owner, offset,
 					BTRFS_ADD_DELAYED_REF, NULL, for_cow);
 	}
-	return 0;
 }
 
 static int __btrfs_inc_extent_ref(struct btrfs_trans_handle *trans,
@@ -2680,7 +2679,7 @@ static int __btrfs_mod_ref(struct btrfs_
 	int i;
 	int level;
 	int ret = 0;
-	int (*process_func)(struct btrfs_trans_handle *, struct btrfs_root *,
+	void (*process_func)(struct btrfs_trans_handle *, struct btrfs_root *,
 			    u64, u64, u64, u64, u64, u64, int);
 
 	ref_root = btrfs_header_owner(buf);
@@ -2716,25 +2715,18 @@ static int __btrfs_mod_ref(struct btrfs_
 
 			num_bytes = btrfs_file_extent_disk_num_bytes(buf, fi);
 			key.offset -= btrfs_file_extent_offset(buf, fi);
-			ret = process_func(trans, root, bytenr, num_bytes,
+			process_func(trans, root, bytenr, num_bytes,
 					   parent, ref_root, key.objectid,
 					   key.offset, for_cow);
-			if (ret)
-				goto fail;
 		} else {
 			bytenr = btrfs_node_blockptr(buf, i);
 			num_bytes = btrfs_level_size(root, level - 1);
-			ret = process_func(trans, root, bytenr, num_bytes,
+			process_func(trans, root, bytenr, num_bytes,
 					   parent, ref_root, level - 1, 0,
 					   for_cow);
-			if (ret)
-				goto fail;
 		}
 	}
 	return 0;
-fail:
-	BUG();
-	return ret;
 }
 
 int btrfs_inc_ref(struct btrfs_trans_handle *trans, struct btrfs_root *root,
@@ -5078,7 +5070,7 @@ out:
 	btrfs_put_block_group(cache);
 }
 
-int btrfs_free_extent(struct btrfs_trans_handle *trans, struct btrfs_root *root,
+void btrfs_free_extent(struct btrfs_trans_handle *trans, struct btrfs_root *root,
 		      u64 bytenr, u64 num_bytes, u64 parent, u64 root_objectid,
 		      u64 owner, u64 offset, int for_cow)
 {
@@ -5109,7 +5101,6 @@ int btrfs_free_extent(struct btrfs_trans
 						offset, BTRFS_DROP_DELAYED_REF,
 						NULL, for_cow);
 	}
-	return ret;
 }
 
 static u64 stripe_align(struct btrfs_root *root, u64 val)
