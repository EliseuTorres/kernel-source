From: Michal Hocko <mhocko@suse.cz>
Subject: memcg: Do not charge if current is going to die
Patch-mainline: yes (partial backport of
 4b53433468c87794b523e4683fbd4e8e8aca1f63)
References: fate#312042

I picked up just this hunk from the whole patch because it helps to
better cope with a heavy parallel OOM load when tasks which already have a
fatal signal waiting for them spend too much time in reclaim and
consequently in mem_cgroup_handle_oom where they spend some time in wait
queue just to return immediately when somebody calls memcg_oom_recover.
The more tasks we have waiting the worse cache ping pong on
memcg_oom_mutex and oom_lock.
The rest of the patch is a clean up which would be nice to have but not
necessary at this stage.

Signed-off-by: Michal Hocko <mhocko@suse.cz>

Index: linux-2.6.32-fate312042/mm/memcontrol.c
===================================================================
 mm/memcontrol.c |    4 ++++
 1 file changed, 4 insertions(+)

--- linux-2.6.32-fate312042.orig/mm/memcontrol.c
+++ linux-2.6.32-fate312042/mm/memcontrol.c
@@ -1554,6 +1554,10 @@ static int __mem_cgroup_try_charge(struc
 		if (nr_pages == 1 && consume_stock(mem))
 			goto charged;
 
+		/* If killed, bypass charge */
+		if (fatal_signal_pending(current))
+			goto bypass;
+
 		ret = res_counter_charge(&mem->res, bytes, &fail_res);
 		if (likely(!ret)) {
 			if (!do_swap_account)
