From: Lee Schermerhorn <lee.schermerhorn@hp.com>
Subject: ia64: support memoryless nodes
References: bnc#570492
Patch-mainline: no (probably in future)

PATCH/RFC numa: ia64:  support memoryless nodes

Enable 'HAVE_MEMORYLESS_NODES' by default when NUMA configured
on ia64.  Initialize percpu 'numa_mem' variable when starting
secondary cpus.  Generic initialization will handle the boot
cpu.

Note:  the percpu declarations and macro definitions under
CONFIG_HAVE_MEMORYLESS_NODES in arch/ia64/include/asm/topology.h
belong in a generic header.  They are implemented in the ia64
private header for this patch to limit the effect of this
series to ia64.

Performance impact on "hackbench 100 process 100" -- slab using
percpu numa_mem_id for ia64 [HP Integrity rx8640]

kernel/config            100%CLM        0%CLM
sles11 sp1 b3 no patch    ~1.5s         ~31sec
sles11 sp1 b3 + patch     ~1.5s         ~4.1sec

# 100% Cell Local Memory => Numa, no memoryless nodes
#   0% CLM => "Interleaved", all cpus on memoryless nodes,
#              all memory on memory-only "pseudo-node"


Signed-off-by: Lee Schermerhorn <lee.schermerhorn@hp.com>
Acked-by: Nick Piggin <npiggin@suse.de>


 arch/ia64/Kconfig                |    4 ++++
 arch/ia64/include/asm/topology.h |   23 +++++++++++++++++++++++
 arch/ia64/kernel/smpboot.c       |    5 +++++
 3 files changed, 32 insertions(+)

Index: linux-2.6.27/arch/ia64/Kconfig
===================================================================
--- linux-2.6.27.orig/arch/ia64/Kconfig
+++ linux-2.6.27/arch/ia64/Kconfig
@@ -498,6 +498,10 @@ config HAVE_ARCH_NODEDATA_EXTENSION
 	def_bool y
 	depends on NUMA
 
+config HAVE_MEMORYLESS_NODES
+	def_bool y
+	depends on NUMA
+
 config ARCH_PROC_KCORE_TEXT
 	def_bool y
 	depends on PROC_KCORE
Index: linux-2.6.27/arch/ia64/kernel/smpboot.c
===================================================================
--- linux-2.6.27.orig/arch/ia64/kernel/smpboot.c
+++ linux-2.6.27/arch/ia64/kernel/smpboot.c
@@ -391,6 +391,11 @@ smp_callin (void)
 
 	fix_b0_for_bsp();
 
+	/*
+	 * local memory node for secondary processors
+	 */
+	set_numa_mem(local_memory_node(cpu_to_node_map[cpuid]));
+
 	ipi_call_lock_irq();
 	spin_lock(&vector_lock);
 	/* Setup the per cpu irq handling data structures */
Index: linux-2.6.27/arch/ia64/include/asm/topology.h
===================================================================
--- linux-2.6.27.orig/arch/ia64/include/asm/topology.h
+++ linux-2.6.27/arch/ia64/include/asm/topology.h
@@ -30,6 +30,29 @@
  */
 #define cpu_to_node(cpu) (int)(cpu_to_node_map[cpu])
 
+#ifdef CONFIG_HAVE_MEMORYLESS_NODES
+
+DECLARE_PER_CPU(int, numa_mem);
+
+#define set_numa_mem(node) percpu_write(numa_mem, node)
+
+/*
+ * Returns the number of the node from which 'cpu'
+ * allocates local memory.
+ */
+#define cpu_to_mem(cpu)	per_cpu(numa_mem, (cpu))
+#define numa_mem_id()	percpu_read(numa_mem)
+
+#else	/* !CONFIG_HAVE_MEMORYLESS_NODES */
+
+#define numa_mem numa_node
+static inline void set_numa_mem(int node) {}
+/*
+ * let cpu_to_mem() and numa_mem_id() default in <linux/topology.h>
+ */
+
+#endif	/* [!]CONFIG_HAVE_MEMORYLESS_NODES */
+
 /*
  * Returns a bitmask of CPUs on Node 'node'.
  */
