From: Chris Mason <chris.mason@oracle.com>
Date:   Tue Feb 28 12:42:44 2012 -0500
Patch-mainline: pending
References: FATE#306586
Subject: Btrfs: fix casting error in scrub reada code

The reada code from scrub was casting down a u64 to
an unsigned long so it could insert it into a radix tree.

What it really wanted to do was cast down the result of a shift, instead
of casting down the u64.  The bug resulted in trying to insert our
reada struct into the wrong place, which caused soft lockups and other
problems.

Signed-off-by: Chris Mason <chris.mason@oracle.com>
Signed-off-by: David Sterba <dsterba@suse.cz>
---
---
 fs/btrfs/reada.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

--- a/fs/btrfs/reada.c
+++ b/fs/btrfs/reada.c
@@ -300,7 +300,7 @@ static struct reada_zone *reada_find_zon
 
 	spin_lock(&fs_info->reada_lock);
 	ret = radix_tree_insert(&dev->reada_zones,
-				(unsigned long)zone->end >> PAGE_CACHE_SHIFT,
+				(unsigned long)(zone->end >> PAGE_CACHE_SHIFT),
 				zone);
 	if (ret == -EEXIST) {
 		kfree(zone);
