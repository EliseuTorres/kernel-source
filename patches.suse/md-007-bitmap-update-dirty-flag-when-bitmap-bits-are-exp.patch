From ffa23322b1596bb1a115e767d4251b62842adc23 Mon Sep 17 00:00:00 2001
From: NeilBrown <neilb@suse.de>
Date: Mon, 14 Dec 2009 12:49:56 +1100
Subject: [PATCH] md/bitmap: update dirty flag when bitmap bits are explicitly
	set.
Git-commit: ffa23322b1596bb1a115e767d4251b62842adc23
Patch-mainline: v2.6.33-rc1

There is a sysfs file which allows bits in the write-intent
bitmap to be explicit set - indicating that the block is thought
to be 'dirty'.
When this happens we should really set recovery_cp backwards
to include the block to reflect this dirtiness.

In particular, a 'resync' process will refuse to start if
recovery_cp is beyond the end of the array, so this is needed
to allow a resync to be triggered.

Signed-off-by: NeilBrown <neilb@suse.de>
---
 drivers/md/bitmap.c |    6 ++++++
 1 file changed, 6 insertions(+)

--- linux-2.6.32-SLE11-SP1.orig/drivers/md/bitmap.c
+++ linux-2.6.32-SLE11-SP1/drivers/md/bitmap.c
@@ -1534,6 +1534,12 @@ void bitmap_dirty_bits(struct bitmap *bi
 		sector_t sec = (sector_t)chunk << CHUNK_BLOCK_SHIFT(bitmap);
 		bitmap_set_memory_bits(bitmap, sec, 1);
 		bitmap_file_set_bit(bitmap, sec);
+		if (sec < bitmap->mddev->recovery_cp)
+			/* We are asserting that the array is dirty,
+			 * so move the recovery_cp address back so
+			 * that it is obvious that it is dirty
+			 */
+			bitmap->mddev->recovery_cp = sec;
 	}
 }
 


