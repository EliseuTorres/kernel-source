From: NeilBrown <neilb@suse.de>
Date: Thu, 12 Apr 2012 16:27:09 +1000
Subject: [PATCH 10/23] md/bitmap: remove bitmap_mask_state
Patch-mainline: 3.5
References: fate#311379

This function isn't really needed.  It sets or clears a flag in both
bitmap->flags and sb->state.
However both times it is called, bitmap_update_sb is called soon
afterwards which copies bitmap->flags to sb->state.
So just make changes to bitmap->flags, and open-code those rather than
hiding in a function.

Signed-off-by: NeilBrown <neilb@suse.de>
Acked-by: NeilBrown <neilb@suse.de>

---
 drivers/md/bitmap.c |   42 +++---------------------------------------
 1 file changed, 3 insertions(+), 39 deletions(-)

--- linux-3.0-SLE11-SP2-BTMU.orig/drivers/md/bitmap.c
+++ linux-3.0-SLE11-SP2-BTMU/drivers/md/bitmap.c
@@ -703,43 +703,6 @@ out_no_sb:
 	return err;
 }
 
-enum bitmap_mask_op {
-	MASK_SET,
-	MASK_UNSET
-};
-
-/* record the state of the bitmap in the superblock.  Return the old value */
-static int bitmap_mask_state(struct bitmap *bitmap, enum bitmap_state bits,
-			     enum bitmap_mask_op op)
-{
-	bitmap_super_t *sb;
-	unsigned long flags;
-	int old;
-
-	spin_lock_irqsave(&bitmap->lock, flags);
-	if (!bitmap->storage.sb_page) { /* can't set the state */
-		spin_unlock_irqrestore(&bitmap->lock, flags);
-		return 0;
-	}
-	spin_unlock_irqrestore(&bitmap->lock, flags);
-	sb = kmap_atomic(bitmap->storage.sb_page, KM_USER0);
-	old = le32_to_cpu(sb->state) & bits;
-	switch (op) {
-	case MASK_SET:
-		sb->state |= cpu_to_le32(bits);
-		bitmap->flags |= bits;
-		break;
-	case MASK_UNSET:
-		sb->state &= cpu_to_le32(~bits);
-		bitmap->flags &= ~bits;
-		break;
-	default:
-		BUG();
-	}
-	kunmap_atomic(sb, KM_USER0);
-	return old;
-}
-
 /*
  * general bitmap file operations
  */
@@ -898,7 +861,8 @@ static void bitmap_file_kick(struct bitm
 {
 	char *path, *ptr = NULL;
 
-	if (bitmap_mask_state(bitmap, BITMAP_STALE, MASK_SET) == 0) {
+	if (!(bitmap->flags & BITMAP_STALE)) {
+		bitmap->flags |= BITMAP_STALE;
 		bitmap_update_sb(bitmap);
 
 		if (bitmap->storage.file) {
@@ -1909,7 +1873,7 @@ int bitmap_load(mddev_t *mddev)
 
 	if (err)
 		goto out;
-	bitmap_mask_state(bitmap, BITMAP_STALE, MASK_UNSET);
+	bitmap->flags &= ~BITMAP_STALE;
 
 	/* Kick recovery in case any bits were set */
 	set_bit(MD_RECOVERY_NEEDED, &bitmap->mddev->recovery);
