From: Filipe Manana <fdmanana@suse.com>
Date: Mon, 6 Oct 2014 22:14:25 +0100
Patch-mainline: submitted upstream
References: bnc#902010
Subject: [PATCH 04/10] Btrfs: process all async extents on compressed write
 failure

If we had an error when processing one of the async extents from our list,
we were not processing the remaining async extents, meaning we would leak
those async_extent structs, never release the pages with the compressed
data and never unlock and clear the dirty flag from the inode's pages (those
that correspond to the uncompressed content).

Signed-off-by: Filipe Manana <fdmanana@suse.com>
---
 fs/btrfs/inode.c | 6 +-----
 1 file changed, 1 insertion(+), 5 deletions(-)

diff --git a/fs/btrfs/inode.c b/fs/btrfs/inode.c
index 819115e..6657ea6 100644
--- a/fs/btrfs/inode.c
+++ b/fs/btrfs/inode.c
@@ -817,13 +817,9 @@ retry:
 		}
 		alloc_hint = ins.objectid + ins.offset;
 		kfree(async_extent);
-		if (ret)
-			goto out;
 		cond_resched();
 	}
-	ret = 0;
-out:
-	return ret;
+	return 0;
 out_free_reserve:
 	btrfs_free_reserved_extent(root, ins.objectid, ins.offset, 1);
 out_free:
-- 
1.8.4.5

