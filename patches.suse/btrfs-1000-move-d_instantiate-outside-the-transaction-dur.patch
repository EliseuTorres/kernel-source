From: Chris Mason <chris.mason@fusionio.com>
Date: Wed, 6 Feb 2013 12:06:02 -0500
Patch-mainline: 3.8
Git-commit: 1a65e24b0bb7dde48cac4a2bf74d5558f9e32ba7
References: FATE#312888
Subject: [PATCH] Btrfs: move d_instantiate outside the transaction during
 mksubvol

Dave Sterba triggered a lockdep complaint about lock ordering
between the sb_internal lock and the cleaner semaphore.

btrfs_lookup_dentry() checks for orphans if we're looking up
the inode for a subvolume, and subvolume creation is triggering
the lookup with a transaction running.

This commit moves the d_instantiate after the transaction closes.

Signed-off-by: Chris Mason <chris.mason@fusionio.com>
Signed-off-by: David Sterba <dsterba@suse.cz>
---
 fs/btrfs/ioctl.c |   17 ++++++++++-------
 1 file changed, 10 insertions(+), 7 deletions(-)

--- a/fs/btrfs/ioctl.c
+++ b/fs/btrfs/ioctl.c
@@ -516,13 +516,6 @@ static noinline int create_subvol(struct
 
 	BUG_ON(ret);
 
-	inode = btrfs_lookup_dentry(dir, dentry);
-	if (IS_ERR(inode)) {
-		ret = PTR_ERR(inode);
-		goto fail;
-	}
-
-	d_instantiate(dentry, inode);
 fail:
 	if (async_transid) {
 		*async_transid = trans->transid;
@@ -532,6 +525,16 @@ fail:
 	}
 	if (err && !ret)
 		ret = err;
+
+	if (!ret) {
+		inode = btrfs_lookup_dentry(dir, dentry);
+		if (IS_ERR(inode)) {
+			ret = PTR_ERR(inode);
+		} else {
+			d_instantiate(dentry, inode);
+		}
+	}
+
 	return ret;
 }
 
