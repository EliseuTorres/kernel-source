From: Mel Gorman <mgorman@suse.de>
Date: Tue, 8 Nov 2011 14:41:18 +0000
Subject: [PATCH] netvm: Ensure release of RCU lock appropriate during SKB processing
References: Swap over NFS (fate#304949, bnc#724831)
Patch-mainline: no

Swap over NFS adjusts __netif_receive_skb() to tag the allocations
of PF_MEMALLOC skbs appropriately. In some situations it will decide to
drop the packets. Unfortunately, not all the exit paths were fixed up
and in some cases the function exits with the RCU lock held. In SLES
configurations, this doesn't matter but it causes problems if the kernel
is rebuilt with preemption disabled.

Signed-off-by: Mel Gorman <mgorman@suse.de>
---
 net/core/dev.c |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/net/core/dev.c b/net/core/dev.c
index ea380a2..b27caed 100644
--- a/net/core/dev.c
+++ b/net/core/dev.c
@@ -3162,7 +3162,7 @@ another_round:
 	if (skb->protocol == cpu_to_be16(ETH_P_8021Q)) {
 		skb = vlan_untag(skb);
 		if (unlikely(!skb))
-			goto out;
+			goto unlock;
 	}
 
 #ifdef CONFIG_NET_CLS_ACT
@@ -3216,9 +3216,9 @@
 		}
 		if (vlan_do_receive(&skb)) {
 			ret = __netif_receive_skb(skb);
-			goto out;
+			goto unlock;
 		} else if (unlikely(!skb))
-			goto out;
+			goto unlock;
 	}
 
 	/* deliver only exact match when indicated */
