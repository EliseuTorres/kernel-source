From: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
Subject: [PATCH 038/111]     fs/9p: Make sure we properly instantiate dentry.
Git-commit: 85e0df240e9376ff58eb1a50d9854f5f176dd297
Patch-Mainline: 2.6.35
References: FATE#311639

    For lookup if we get ENOENT error from the server we still
    instantiate the dentry. We need to make sure we have dentry
    operations set in that case so that a later dput on the dentry
    does the expected. Without the patch we get the below error

    #ln  -sf abc abclink
    ln: creating symbolic link `abclink': No such file or directory

    Now on the host do
    $ touch abclink

    Guest now gives ENOENT error.
    # ls
    ls: cannot access abclink: No such file or directory

	upstream commit 85e0df240e9376ff58eb1a50d9854f5f176dd297

    Debugged-by:Gautham R Shenoy <ego@in.ibm.com>
    Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
    Signed-off-by: Eric Van Hensbergen <ericvh@gmail.com>
Signed-off-by: Harsh Prateek Bora <harsh@linux.vnet.ibm.com>
Acked-by: Bruce Rogers <brogers@suse.com>
---
 fs/9p/vfs_inode.c |    7 ++++---
 1 files changed, 4 insertions(+), 3 deletions(-)

diff --git a/fs/9p/vfs_inode.c b/fs/9p/vfs_inode.c
index 1e13b5e..2532d58 100644
--- a/fs/9p/vfs_inode.c
+++ b/fs/9p/vfs_inode.c
@@ -696,8 +696,8 @@ static struct dentry *v9fs_vfs_lookup(struct inode *dir, struct dentry *dentry,
 	if (IS_ERR(fid)) {
 		result = PTR_ERR(fid);
 		if (result == -ENOENT) {
-			d_add(dentry, NULL);
-			return NULL;
+			inode = NULL;
+			goto inst_out;
 		}
 
 		return ERR_PTR(result);
@@ -714,7 +714,8 @@ static struct dentry *v9fs_vfs_lookup(struct inode *dir, struct dentry *dentry,
 	if (result < 0)
 		goto error;
 
-	if ((fid->qid.version) && (v9ses->cache))
+inst_out:
+	if (v9ses->cache)
 		dentry->d_op = &v9fs_cached_dentry_operations;
 	else
 		dentry->d_op = &v9fs_dentry_operations;
-- 
1.7.1.1

