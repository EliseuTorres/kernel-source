From c74093b694998d30105d9904686da5e3576497c4 Mon Sep 17 00:00:00 2001
From: Jeff Layton <jlayton@redhat.com>
Date: Tue, 11 Jan 2011 07:24:23 -0500
Subject: cifs: set up recurring workqueue job to do SMB echo requests
References: FATE#311695
Patch-mainline: yes

Reviewed-by: Suresh Jayaraman <sjayaraman@suse.de>
Signed-off-by: Jeff Layton <jlayton@redhat.com>
Signed-off-by: Steve French <sfrench@us.ibm.com>
Signed-off-by: Suresh Jayaraman <sjayaraman@suse.de>
---
 fs/cifs/cifsfs.c   |    7 +++++++
 fs/cifs/cifsfs.h   |    3 +++
 fs/cifs/cifsglob.h |    1 +
 fs/cifs/connect.c  |   43 +++++++++++++++++++++++++++++++++++++++++++
 4 files changed, 54 insertions(+)

Index: linux-2.6.32-SLE11-SP2/fs/cifs/cifsglob.h
===================================================================
--- linux-2.6.32-SLE11-SP2.orig/fs/cifs/cifsglob.h
+++ linux-2.6.32-SLE11-SP2/fs/cifs/cifsglob.h
@@ -217,6 +217,7 @@ struct TCP_Server_Info {
 	bool	sec_kerberosu2u;	/* supports U2U Kerberos */
 	bool	sec_ntlmssp;		/* supports NTLMSSP */
 	bool session_estab; /* mark when very first sess is established */
+	struct delayed_work	echo; /* echo ping workqueue job */
 #ifdef CONFIG_CIFS_FSCACHE
 	struct fscache_cookie   *fscache; /* client index cache cookie */
 #endif
Index: linux-2.6.32-SLE11-SP2/fs/cifs/connect.c
===================================================================
--- linux-2.6.32-SLE11-SP2.orig/fs/cifs/connect.c
+++ linux-2.6.32-SLE11-SP2/fs/cifs/connect.c
@@ -51,6 +51,9 @@
 #define CIFS_PORT 445
 #define RFC1001_PORT 139
 
+/* SMB echo "timeout" -- FIXME: tunable? */
+#define SMB_ECHO_INTERVAL (60 * HZ)
+
 extern void SMBNTencrypt(unsigned char *passwd, unsigned char *c8,
 			 unsigned char *p24);
 
@@ -120,6 +123,7 @@ static void tlink_rb_insert(struct rb_ro
 static void cifs_prune_tlinks(struct work_struct *work);
 
 static struct workqueue_struct *tlinks_wq;
+static struct workqueue_struct *echo_wq;
 
 /*
  * cifs tcp session reconnection
@@ -334,6 +338,39 @@ static int coalesce_t2(struct smb_hdr *p
 
 }
 
+int cifs_create_echo_queue(void)
+{
+	echo_wq = create_singlethread_workqueue("cifs_echo");
+	if (!echo_wq)
+		return -ENOMEM;
+	return 0;
+}
+
+void cifs_destroy_echo_queue(void)
+{
+	destroy_workqueue(echo_wq);
+}
+
+static void
+cifs_echo_request(struct work_struct *work)
+{
+	int rc;
+	struct TCP_Server_Info *server = container_of(work,
+					struct TCP_Server_Info, echo.work);
+
+	/* no need to ping if we got a response recently */
+	if (time_before(jiffies, server->lstrp + SMB_ECHO_INTERVAL - HZ))
+		goto requeue_echo;
+
+	rc = CIFSSMBEcho(server);
+	if (rc)
+		cFYI(1, "Unable to send echo request to server: %s",
+			server->hostname);
+
+requeue_echo:
+	queue_delayed_work(echo_wq, &server->echo, SMB_ECHO_INTERVAL);
+}
+
 static int
 cifs_demultiplex_thread(struct TCP_Server_Info *server)
 {
@@ -1573,6 +1610,8 @@ cifs_put_tcp_session(struct TCP_Server_I
 	list_del_init(&server->tcp_ses_list);
 	spin_unlock(&cifs_tcp_ses_lock);
 
+	cancel_delayed_work_sync(&server->echo);
+
 	spin_lock(&GlobalMid_Lock);
 	server->tcpStatus = CifsExiting;
 	spin_unlock(&GlobalMid_Lock);
@@ -1664,6 +1703,7 @@ cifs_get_tcp_session(struct smb_vol *vol
 	tcp_ses->sequence_number = 0;
 	INIT_LIST_HEAD(&tcp_ses->tcp_ses_list);
 	INIT_LIST_HEAD(&tcp_ses->smb_ses_list);
+	INIT_DELAYED_WORK(&tcp_ses->echo, cifs_echo_request);
 
 	/*
 	 * at this point we are the only ones with the pointer
@@ -1712,6 +1752,9 @@ cifs_get_tcp_session(struct smb_vol *vol
 
 	cifs_fscache_get_client_cookie(tcp_ses);
 
+	/* queue echo request delayed work */
+	queue_delayed_work(echo_wq, &tcp_ses->echo, SMB_ECHO_INTERVAL);
+
 	return tcp_ses;
 
 out_err_crypto_release:
Index: linux-2.6.32-SLE11-SP2/fs/cifs/cifsfs.c
===================================================================
--- linux-2.6.32-SLE11-SP2.orig/fs/cifs/cifsfs.c
+++ linux-2.6.32-SLE11-SP2/fs/cifs/cifsfs.c
@@ -983,8 +983,15 @@ init_cifs(void)
 	if (rc)
 		goto out_unregister_slow_work;
 
+	rc = cifs_create_echo_queue();
+	if (rc)
+		goto out_destroy_tlinks_queue;
+
 	return 0;
 
+ out_destroy_tlinks_queue:
+	cifs_destroy_tlinks_queue();
+
  out_unregister_slow_work:
 	slow_work_unregister_user(THIS_MODULE);
 
Index: linux-2.6.32-SLE11-SP2/fs/cifs/cifsfs.h
===================================================================
--- linux-2.6.32-SLE11-SP2.orig/fs/cifs/cifsfs.h
+++ linux-2.6.32-SLE11-SP2/fs/cifs/cifsfs.h
@@ -111,6 +111,9 @@ extern long cifs_ioctl(struct file *file
 extern int cifs_create_tlinks_queue(void);
 extern void cifs_destroy_tlinks_queue(void);
 
+extern int cifs_create_echo_queue(void);
+extern void cifs_destroy_echo_queue(void);
+
 #ifdef CONFIG_CIFS_EXPERIMENTAL
 extern const struct export_operations cifs_export_ops;
 #endif /* EXPERIMENTAL */
