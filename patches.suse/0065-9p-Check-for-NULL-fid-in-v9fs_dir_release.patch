From: jvrao <jvrao@linux.vnet.ibm.com>
Subject: [PATCH 065/111]     9p: Check for NULL fid in v9fs_dir_release()
Git-commit: 62726a7ab3a6a3624256172af055ff0a38c6ffa2
Patch-Mainline: 2.6.36
References: FATE#311639

    NULL fid should be handled in cases where we endup calling
    v9fs_dir_release() before even we instantiate the fid in filp.

	upstream commit 62726a7ab3a6a3624256172af055ff0a38c6ffa2
    Signed-off-by: Venkateswararao Jujjuri <jvrao@linux.vnet.ibm.com>
    Signed-off-by: Eric Van Hensbergen <ericvh@gmail.com>
Signed-off-by: Harsh Prateek Bora <harsh@linux.vnet.ibm.com>
Acked-by: Bruce Rogers <brogers@suse.com>
---
 fs/9p/vfs_dir.c |    6 ++++--
 1 files changed, 4 insertions(+), 2 deletions(-)

diff --git a/fs/9p/vfs_dir.c b/fs/9p/vfs_dir.c
index 7616a2e..34480fb 100644
--- a/fs/9p/vfs_dir.c
+++ b/fs/9p/vfs_dir.c
@@ -291,9 +291,11 @@ int v9fs_dir_release(struct inode *inode, struct file *filp)
 
 	fid = filp->private_data;
 	P9_DPRINTK(P9_DEBUG_VFS,
-			"inode: %p filp: %p fid: %d\n", inode, filp, fid->fid);
+			"v9fs_dir_release: inode: %p filp: %p fid: %d\n",
+			inode, filp, fid ? fid->fid : -1);
 	filemap_write_and_wait(inode->i_mapping);
-	p9_client_clunk(fid);
+	if (fid)
+		p9_client_clunk(fid);
 	return 0;
 }
 
-- 
1.7.1.1

