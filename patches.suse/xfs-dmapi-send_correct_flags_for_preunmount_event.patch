From: Alex Elder <aelder@sgi.com>
Subject: xfs: Do not always ignore preunmount events
Patch-mainline: never
References: bnc#691538

In xfs_fs_put_super(), the macro XFS_SEND_PREUNMOUNT(mp) is used to allow a
DMAPI pre-unmount event to get generated prior to the final flush of filesystem
data.  That macro generates a namespace event, passing as a final argument a
flag that's either 0 (normally) or DM_FLAGS_UNWANTED (if the event can be
ignored because it's not in the mount point's DMAPI event mask).

The current code is causing this particular event to be ignored, because it is
erroneously checking for DM_EVENT_UNMOUNT rather than DM_EVENT_PREUNMOUNT in
the DMAPI event mask.

The fix is straightforward.  We define a new macro to check the event mask
against the proper value and use it in place of the call to
XFS_DMAPI_UNMOUNT_FLAGS() currently in place.

Signed-off-by: Alex Elder <aelder@sgi.com>
Acked-by: Jan Kara <jack@suse.cz>
---
 fs/xfs/xfs_dmapi.h |    6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

--- a/fs/xfs/xfs_dmapi.h
+++ b/fs/xfs/xfs_dmapi.h
@@ -197,6 +197,10 @@ typedef struct xfs_dmops {
 #define XFS_DMAPI_UNMOUNT_FLAGS(mp) \
 	(((mp)->m_dmevmask & (1 << DM_EVENT_UNMOUNT)) ? 0 : DM_FLAGS_UNWANTED)
 
+#define XFS_DMAPI_PREUNMOUNT_FLAGS(mp) \
+	(((mp)->m_dmevmask & (1 << DM_EVENT_PREUNMOUNT)) \
+		? 0 : DM_FLAGS_UNWANTED)
+
 #define XFS_SEND_DATA(mp, ev,ip,off,len,fl,lock) \
 	(*(mp)->m_dm_ops->xfs_send_data)(ev,ip,off,len,fl,lock)
 #define XFS_SEND_MMAP(mp, vma,fl) \
@@ -213,7 +217,7 @@ do { \
 		(*(mp)->m_dm_ops->xfs_send_namesp)(DM_EVENT_PREUNMOUNT, mp, \
 			(mp)->m_rootip, DM_RIGHT_NULL, \
 			(mp)->m_rootip, DM_RIGHT_NULL, \
-			NULL, NULL, 0, 0, XFS_DMAPI_UNMOUNT_FLAGS(mp)); \
+			NULL, NULL, 0, 0, XFS_DMAPI_PREUNMOUNT_FLAGS(mp)); \
 	} \
 } while (0)
 #define XFS_SEND_UNMOUNT(mp) \
