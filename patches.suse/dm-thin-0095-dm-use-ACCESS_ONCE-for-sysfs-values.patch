Git-commit: fe5fe90639b62a75349dd1f1c74c4a984397171c
From: Mikulas Patocka <mpatocka@redhat.com>
Date: Fri, 12 Oct 2012 16:59:46 +0100
Subject: [PATCH] dm: use ACCESS_ONCE for sysfs values
Patch-mainline: v3.7-rc1
Reference: FATE#313903

Use the ACCESS_ONCE macro in dm-bufio and dm-verity where a variable
can be modified asynchronously (through sysfs) and we want to prevent
compiler optimizations that assume that the variable hasn't changed.
(See Documentation/atomic_ops.txt.)

[refreshed to remove irrelevant dm-verity.c potion - neilb]

Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
Signed-off-by: Alasdair G Kergon <agk@redhat.com>
Acked-by: NeilBrown <nfbrown@suse.com>

---
 drivers/md/dm-bufio.c |   10 +++-------
 1 file changed, 3 insertions(+), 7 deletions(-)

--- linux-3.0-SLE11-SP3.orig/drivers/md/dm-bufio.c
+++ linux-3.0-SLE11-SP3/drivers/md/dm-bufio.c
@@ -279,9 +279,7 @@ static void __cache_size_refresh(void)
 	BUG_ON(!mutex_is_locked(&dm_bufio_clients_lock));
 	BUG_ON(dm_bufio_client_count < 0);
 
-	dm_bufio_cache_size_latch = dm_bufio_cache_size;
-
-	barrier();
+	dm_bufio_cache_size_latch = ACCESS_ONCE(dm_bufio_cache_size);
 
 	/*
 	 * Use default if set to 0 and report the actual cache size used.
@@ -811,7 +809,7 @@ static void __get_memory_limit(struct dm
 {
 	unsigned long buffers;
 
-	if (dm_bufio_cache_size != dm_bufio_cache_size_latch) {
+	if (ACCESS_ONCE(dm_bufio_cache_size) != dm_bufio_cache_size_latch) {
 		mutex_lock(&dm_bufio_clients_lock);
 		__cache_size_refresh();
 		mutex_unlock(&dm_bufio_clients_lock);
@@ -1589,11 +1587,9 @@ EXPORT_SYMBOL_GPL(dm_bufio_client_destro
 
 static void cleanup_old_buffers(void)
 {
-	unsigned long max_age = dm_bufio_max_age;
+	unsigned long max_age = ACCESS_ONCE(dm_bufio_max_age);
 	struct dm_bufio_client *c;
 
-	barrier();
-
 	if (max_age > ULONG_MAX / HZ)
 		max_age = ULONG_MAX / HZ;
 
