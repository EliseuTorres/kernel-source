From: NeilBrown <neilb@suse.de>
Git-commit: 9b1215c102d4b12f6c815d7fdd35d0628db35b28
Date: Thu, 12 Apr 2012 16:27:08 +1000
Subject: [PATCH 07/23] md/bitmap: store bytes in file rather than just in last page.
Patch-mainline: 3.5
References: fate#311379

This number is more generally useful, and bytes-in-last-page is
easily extracted from it.

Signed-off-by: NeilBrown <neilb@suse.de>
Acked-by: NeilBrown <neilb@suse.de>

---
 drivers/md/bitmap.c |   16 +++++++++-------
 drivers/md/bitmap.h |    2 +-
 2 files changed, 10 insertions(+), 8 deletions(-)

--- linux-3.0-SLE11-SP2-BTMU.orig/drivers/md/bitmap.c
+++ linux-3.0-SLE11-SP2-BTMU/drivers/md/bitmap.c
@@ -260,9 +260,13 @@ static int write_sb_page(struct bitmap *
 
 		bdev = (rdev->meta_bdev) ? rdev->meta_bdev : rdev->bdev;
 
-		if (page->index == store->file_pages-1)
-			size = roundup(store->last_page_size,
+		if (page->index == store->file_pages-1) {
+			int last_page_size = store->bytes & (PAGE_SIZE-1);
+			if (last_page_size == 0)
+				last_page_size = PAGE_SIZE;
+			size = roundup(last_page_size,
 				       bdev_logical_block_size(bdev));
+		}
 		/* Just make sure we aren't corrupting data or
 		 * metadata
 		 */
@@ -1046,6 +1050,8 @@ static int bitmap_init_from_disk(struct
 	if (!bitmap->mddev->bitmap_info.external)
 		bytes += sizeof(bitmap_super_t);
 
+	store->bytes = bytes;
+
 	num_pages = DIV_ROUND_UP(bytes, PAGE_SIZE);
 
 	if (file && i_size_read(file->f_mapping->host) < bytes) {
@@ -1115,8 +1121,6 @@ static int bitmap_init_from_disk(struct
 
 			oldindex = index;
 
-			store->last_page_size = count;
-
 			if (outofdate) {
 				/*
 				 * if bitmap is out of date, dirty the
@@ -1938,9 +1942,7 @@ space_store(mddev_t *mddev, const char *
 		return -EINVAL;
 
 	if (mddev->bitmap &&
-	    sectors  < ((mddev->bitmap->storage.file_pages - 1)
-			      * PAGE_SIZE
-			+ mddev->bitmap->storage.last_page_size + 511) >> 9)
+	    sectors < (mddev->bitmap->storage.bytes + 511) >> 9)
 		return -EFBIG; /* Bitmap is too big for this small space */
 
 	/* could make sure it isn't too big, but that isn't really
--- linux-3.0-SLE11-SP2-BTMU.orig/drivers/md/bitmap.h
+++ linux-3.0-SLE11-SP2-BTMU/drivers/md/bitmap.h
@@ -218,7 +218,7 @@ struct bitmap {
 		unsigned long *filemap_attr;	/* attributes associated
 						 * w/ filemap pages */
 		unsigned long file_pages;	/* number of pages in the file*/
-		int last_page_size;		/* bytes in the last page */
+		unsigned long bytes;		/* total bytes in the bitmap */
 	} storage;
 
 	unsigned long flags;
