From 98071c649eae103155c76b72315419f9423f5c26 Mon Sep 17 00:00:00 2001
From: Allan Stephens <allan.stephens@windriver.com>
Date: Tue, 24 May 2011 14:44:56 -0400
Subject: [PATCH 007/183] tipc: Eliminate message header routines for caching
 destination node
Git-commit: 98071c649eae103155c76b72315419f9423f5c26
Patch-mainline: Merged into tipc-devel
References: bnc#797455

Gets rid of a pair of routines that provide support for temporarily
caching the destination node for a message in the associated message
buffer's application handle, since this capability is no longer used.

Signed-off-by: Allan Stephens <allan.stephens@windriver.com>
Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
Signed-off-by: Erik Hugne <erik.hugne@ericsson.com>
Signed-off-by: Jiri Kosina <jkosina@suse.cz>

---
 net/tipc/msg.h |   20 --------------------
 1 files changed, 0 insertions(+), 20 deletions(-)

diff --git a/net/tipc/msg.h b/net/tipc/msg.h
index 8452454..11b74dc 100644
--- a/net/tipc/msg.h
+++ b/net/tipc/msg.h
@@ -311,26 +311,6 @@ static inline void msg_set_seqno(struct tipc_msg *m, u32 n)
 }
 
 /*
- * TIPC may utilize the "link ack #" and "link seq #" fields of a short
- * message header to hold the destination node for the message, since the
- * normal "dest node" field isn't present.  This cache is only referenced
- * when required, so populating the cache of a longer message header is
- * harmless (as long as the header has the two link sequence fields present).
- *
- * Note: Host byte order is OK here, since the info never goes off-card.
- */
-
-static inline u32 msg_destnode_cache(struct tipc_msg *m)
-{
-	return m->hdr[2];
-}
-
-static inline void msg_set_destnode_cache(struct tipc_msg *m, u32 dnode)
-{
-	m->hdr[2] = dnode;
-}
-
-/*
  * Words 3-10
  */
 
-- 
1.7.8.3

