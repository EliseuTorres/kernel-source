From: Andre Przywara <andre.przywara@amd.com>
Subject: [PATCH 7/8] KVM: SVM: implement enhanced INVLPG intercept
References: FATE#309761
Git-commit: df4f3108562dc6f6ae6648f2698df7f4c9acf52d
Patch-mainline: v2.6.38

When the DecodeAssist feature is available, the linear address
is provided in the VMCB on INVLPG intercepts. Use it directly to
avoid any decoding and emulation.
This is only useful for shadow paging, though.

Backport of df4f3108562dc6f6ae6648f2698df7f4c9acf52d

Signed-off-by: Andre Przywara <andre.przywara@amd.com>
Acked-by: Bruce Rogers <brogers@suse.com>
---
 arch/x86/kvm/svm.c |    9 +++++++--
 1 files changed, 7 insertions(+), 2 deletions(-)

Index: linux-2.6.32-SLE11-SP2/arch/x86/kvm/svm.c
===================================================================
--- linux-2.6.32-SLE11-SP2.orig/arch/x86/kvm/svm.c
+++ linux-2.6.32-SLE11-SP2/arch/x86/kvm/svm.c
@@ -2145,8 +2145,13 @@ static int iret_interception(struct vcpu
 
 static int invlpg_interception(struct vcpu_svm *svm, struct kvm_run *kvm_run)
 {
-	if (emulate_instruction(&svm->vcpu, kvm_run, 0) != EMULATE_DONE)
-		pr_unimpl(&svm->vcpu, "%s: failed\n", __func__);
+	if (svm_has(SVM_FEATURE_DECODE_ASSIST)) {
+		kvm_mmu_invlpg(&svm->vcpu, svm->vmcb->control.exit_info_1);
+		skip_emulated_instruction(&svm->vcpu);
+	} else {
+		if (emulate_instruction(&svm->vcpu, kvm_run, 0) != EMULATE_DONE)
+			pr_unimpl(&svm->vcpu, "%s: failed\n", __func__);
+	}
 	return 1;
 }
 
