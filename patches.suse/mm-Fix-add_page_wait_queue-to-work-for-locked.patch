From: Jan Kara <jack@suse.cz>
Subject: Fix add_page_wait_queue() to work for PG_Locked bit waiters
References: bnc#792584
Patch-mainline: Never (introduced by patches.suse/unlock_page-speedup.patch)

PageWaiters optimization introduced by patches.suse/unlock_page-speedup.patch
breaks users of add_page_wait_queue() that want to wait on page unlock. An
example of such user is fs/cachefiles/ which wants to have a function called
when read of a page finishes. Without this fix cachefiles just hang when
reading a page from the cache.

Since we don't know what users of add_page_wait_queue() want to wait for, set
the PageWaiters flag unconditionally. A faster, although more error prone,
solution would be to provide a special function for waiters for page unlock
events. So far I don't think it's worth the problems since users of
add_page_wait_queue() seem to be rare.

Signed-off-by: Jan Kara <jack@suse.cz>

diff -rupX /crypted/home/jack/.kerndiffexclude linux-3.0-SLE11-SP3/mm/filemap.c linux-3.0-SLE11-SP3-1-cachefile_hang/mm/filemap.c
--- linux-3.0-SLE11-SP3/mm/filemap.c	2013-05-03 09:12:04.074645696 +0200
+++ linux-3.0-SLE11-SP3-1-cachefile_hang/mm/filemap.c	2013-05-03 13:54:20.889778088 +0200
@@ -605,6 +605,8 @@ void add_page_wait_queue(struct page *pa
 
 	spin_lock_irqsave(&q->lock, flags);
 	__add_wait_queue(q, waiter);
+	if (!PageWaiters(page))
+		SetPageWaiters(page);
 	spin_unlock_irqrestore(&q->lock, flags);
 }
 EXPORT_SYMBOL_GPL(add_page_wait_queue);
