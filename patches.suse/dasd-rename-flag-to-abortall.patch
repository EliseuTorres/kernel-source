From: Hannes Reinecke <hare@suse.de>
Date: Mon, 21 Jan 2013 11:56:45 +0100
Subject: dasd: rename flag to 'abortall'
Patch-Mainline: n/a
References: FATE#311379

As per request from IBM.

Signed-off-by: Hannes Reinecke <hare@suse.de>
---
 drivers/s390/block/dasd.c       |    2 +-
 drivers/s390/block/dasd_int.h   |    2 +-
 drivers/s390/block/dasd_ioctl.c |    4 ++--
 3 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/drivers/s390/block/dasd.c b/drivers/s390/block/dasd.c
index 3e3821f..97332c7 100644
--- a/drivers/s390/block/dasd.c
+++ b/drivers/s390/block/dasd.c
@@ -1944,7 +1944,7 @@ static void __dasd_process_request_queue(struct dasd_block *block)
 			__blk_end_request_all(req, -EIO);
 			continue;
 		}
-		if (test_bit(DASD_FLAG_TIMEOUT, &basedev->flags) &&
+		if (test_bit(DASD_FLAG_ABORTALL, &basedev->flags) &&
 		    blk_noretry_request(req)) {
 			DBF_DEV_EVENT(DBF_ERR, basedev,
 				      "Rejecting failfast request %p",
diff --git a/drivers/s390/block/dasd_int.h b/drivers/s390/block/dasd_int.h
index 92617f4..22d0109 100644
--- a/drivers/s390/block/dasd_int.h
+++ b/drivers/s390/block/dasd_int.h
@@ -487,7 +487,7 @@ struct dasd_block {
 					 */
 #define DASD_FLAG_IS_RESERVED	7	/* The device is reserved */
 #define DASD_FLAG_LOCK_STOLEN	8	/* The device lock was stolen */
-#define DASD_FLAG_TIMEOUT	9	/* Timeout, abort noretry requests */
+#define DASD_FLAG_ABORTALL	9	/* Abort all noretry requests */
 
 
 void dasd_put_device_wake(struct dasd_device *);
diff --git a/drivers/s390/block/dasd_ioctl.c b/drivers/s390/block/dasd_ioctl.c
index 4979b31..e227ba3 100644
--- a/drivers/s390/block/dasd_ioctl.c
+++ b/drivers/s390/block/dasd_ioctl.c
@@ -153,7 +153,7 @@ static int dasd_ioctl_abortio(struct dasd_block *block)
 	if (!capable (CAP_SYS_ADMIN))
 		return -EACCES;
 
-	if (test_and_set_bit(DASD_FLAG_TIMEOUT, &base->flags))
+	if (test_and_set_bit(DASD_FLAG_ABORTALL, &base->flags))
 		return 0;
 
 	dev_err(&base->cdev->dev, "ioctl timeout flag set\n");
@@ -194,7 +194,7 @@ static int dasd_ioctl_allowio(struct dasd_block *block)
 	if (!capable (CAP_SYS_ADMIN))
 		return -EACCES;
 
-	if (test_and_clear_bit(DASD_FLAG_TIMEOUT, &base->flags))
+	if (test_and_clear_bit(DASD_FLAG_ABORTALL, &base->flags))
 		dev_err(&base->cdev->dev, "ioctl timeout flag unset\n");
 
 	return 0;
-- 
1.7.4.2

