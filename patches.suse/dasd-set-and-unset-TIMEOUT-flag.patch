From: Hannes Reinecke <hare@suse.de>
Date: Tue, 31 Jul 2012 08:57:07 +0200
Subject: dasd: set and unset TIMEOUT flag automatically
References: bnc#768084
Patch-Mainline: no

The TIMEOUT flag should be set from dasd_times_out(), and unset
once a request returns without an error. With that we eliminate
any delays when aborting requests due to a timeout.

Signed-off-by: Hannes Reinecke <hare@suse.de>

diff --git a/drivers/s390/block/dasd.c b/drivers/s390/block/dasd.c
index a08756c..69f46be 100644
--- a/drivers/s390/block/dasd.c
+++ b/drivers/s390/block/dasd.c
@@ -2083,6 +2083,14 @@ restart:
 			goto restart;
 		}
 
+		/*
+		 * Clear timeout flag once a request
+		 * has returned without error
+		 */
+		if (cqr->status == DASD_CQR_DONE &&
+		    test_and_clear_bit(DASD_FLAG_TIMEOUT, &base->flags))
+			dev_err(&base->cdev->dev, "blk timeout flag unset\n");
+
 		/* Rechain finished requests to final queue */
 		cqr->endclk = get_clock();
 		list_move_tail(&cqr->blocklist, final_queue);
@@ -2293,6 +2301,9 @@ enum blk_eh_timer_return dasd_times_out(struct request *req)
 
 	device = cqr->startdev ? cqr->startdev : block->base;
 
+	if (!test_and_set_bit(DASD_FLAG_TIMEOUT, &device->flags))
+		dev_err(&device->cdev->dev, "blk timeout flag set\n");
+
 	spin_lock(&block->queue_lock);
 
 	/* Abort all requests in the queue */
diff --git a/drivers/s390/block/dasd_erp.c b/drivers/s390/block/dasd_erp.c
index 0eafe2e..5e0f8fd 100644
--- a/drivers/s390/block/dasd_erp.c
+++ b/drivers/s390/block/dasd_erp.c
@@ -160,6 +160,14 @@ dasd_log_sense(struct dasd_ccw_req *cqr, struct irb *irb)
 	struct dasd_device *device;
 
 	device = cqr->startdev;
+	if (cqr->intrc == -ETIMEDOUT) {
+		dev_err(&device->cdev->dev, "cqr %p timeout error", cqr);
+		return;
+	}
+	if (cqr->intrc == -ENOLINK) {
+		dev_err(&device->cdev->dev, "cqr %p transport error", cqr);
+		return;
+	}
 	/* dump sense data */
 	if (device->discipline && device->discipline->dump_sense)
 		device->discipline->dump_sense(device, cqr, irb);
diff --git a/drivers/s390/block/dasd_ioctl.c b/drivers/s390/block/dasd_ioctl.c
index 0c7fce5..14c5c1d 100644
--- a/drivers/s390/block/dasd_ioctl.c
+++ b/drivers/s390/block/dasd_ioctl.c
@@ -154,8 +154,12 @@ static int dasd_ioctl_timeout(struct dasd_block *block)
 	if (!capable (CAP_SYS_ADMIN))
 		return -EACCES;
 
+	if (test_and_set_bit(DASD_FLAG_TIMEOUT, &base->flags))
+		return 0;
+
+	dev_err(&base->cdev->dev, "ioctl timeout flag set\n");
+
 	spin_lock_irqsave(&block->request_queue_lock, flags);
-	set_bit(DASD_FLAG_TIMEOUT, &base->flags);
 	/*
 	 * We need to abort the first noretry requests as
 	 * there might be requests on the ccw_queue.
@@ -195,9 +199,9 @@ static int dasd_ioctl_resync(struct dasd_block *block)
 	if (!capable (CAP_SYS_ADMIN))
 		return -EACCES;
 
-	spin_lock_irqsave(get_ccwdev_lock(base->cdev), flags);
-	clear_bit(DASD_FLAG_TIMEOUT, &base->flags);
-	spin_unlock_irqrestore(get_ccwdev_lock(base->cdev), flags);
+	if (test_and_clear_bit(DASD_FLAG_TIMEOUT, &base->flags))
+		dev_err(&base->cdev->dev, "ioctl timeout flag unset\n");
+
 	return 0;
 }
 
