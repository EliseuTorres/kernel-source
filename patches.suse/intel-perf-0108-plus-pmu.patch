From: Peter Zijlstra <a.p.zijlstra@chello.nl>
Subject: perf, arch: Cleanup perf-pmu init vs lockup-detector
References: fate#311939, bnc#704917
Patch-mainline: v2.6.38-rc1
Git-commit: 004417a6d468e24399e383645c068b498eed84ad
Signed-off-by: Tony Jones <tonyj@suse.de>


Signed-off-by: Youquan Song <youquan.song@intel.com>

The perf hardware pmu got initialized at various points in the boot,
some before early_initcall() some after (notably arch_initcall).

The problem is that the NMI lockup detector is ran from early_initcall()
and expects the hardware pmu to be present.

Sanitize this by moving all architecture hardware pmu implementations to
initialize at early_initcall() and move the lockup detector to an explicit
initcall right after that.

Youquan: we need add this piece code because when init_hw_perf_events() run
in function identify_boot_cpu(), some data structure about CPU topology of CPU
 core and thread is not initialized, so if without the piece of code, the 
kernel with path "Add support for supplementary event registers" a7e3ed1e4 has
 issue to hange at boot. We only backport x86 desirable code which does not make
 any change to other architecutre, so they are not affected. 

Cc: paulus <paulus@samba.org>
Cc: davem <davem@davemloft.net>
Cc: Michael Cree <mcree@orcon.net.nz>
Cc: Deng-Cheng Zhu <dengcheng.zhu@gmail.com>
Acked-by: Paul Mundt <lethal@linux-sh.org>
Acked-by: Will Deacon <will.deacon@arm.com>
Signed-off-by: Peter Zijlstra <a.p.zijlstra@chello.nl>
LKML-Reference: <1290707759.2145.119.camel@laptop>
Signed-off-by: Ingo Molnar <mingo@elte.hu>

---
 arch/x86/kernel/cpu/common.c |    1 -
 1 file changed, 1 deletion(-)

--- a/arch/x86/kernel/cpu/common.c
+++ b/arch/x86/kernel/cpu/common.c
@@ -904,7 +904,6 @@ void __init identify_boot_cpu(void)
 #else
 	vgetcpu_set_mode();
 #endif
-	init_hw_perf_events();
 }
 
 void __cpuinit identify_secondary_cpu(struct cpuinfo_x86 *c)
--- a/arch/x86/kernel/cpu/perf_event.c
+++ b/arch/x86/kernel/cpu/perf_event.c
@@ -1491,6 +1555,7 @@ void __init init_hw_perf_events(void)
 
 	perf_cpu_notifier(x86_pmu_notifier);
 }
+early_initcall(init_hw_perf_events);
 
 static inline void x86_pmu_read(struct perf_event *event)
 {
