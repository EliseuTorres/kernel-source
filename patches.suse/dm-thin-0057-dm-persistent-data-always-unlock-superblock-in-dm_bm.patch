Git-commit: 8d44c98aac540cdf3cb5385bc6ef8d56930c7d70
From: Joe Thornber <ejt@redhat.com>
Date: Fri, 27 Jul 2012 15:08:06 +0100
Subject: [PATCH] dm persistent data: always unlock superblock in
 dm_bm_flush_and_unlock
Patch-mainline: v3.6-rc1
Reference: FATE#313903

Unlock the superblock even if initial dm_bufio_write_dirty_buffers fails.

Also, remove redundant flush calls.  dm_bm_flush_and_unlock's calls to
dm_bufio_write_dirty_buffers already result in dm_bufio_issue_flush
being called.

This avoids warnings about unflushed dirty buffers from bufio.

Signed-off-by: Joe Thornber <ejt@redhat.com>
Signed-off-by: Mike Snitzer <snitzer@redhat.com>
Signed-off-by: Alasdair G Kergon <agk@redhat.com>
Acked-by: NeilBrown <nfbrown@suse.com>

---
 drivers/md/persistent-data/dm-block-manager.c |   16 ++++------------
 1 file changed, 4 insertions(+), 12 deletions(-)

--- linux-3.0-SLE11-SP3.orig/drivers/md/persistent-data/dm-block-manager.c
+++ linux-3.0-SLE11-SP3/drivers/md/persistent-data/dm-block-manager.c
@@ -587,22 +587,14 @@ int dm_bm_flush_and_unlock(struct dm_blo
 	int r;
 
 	r = dm_bufio_write_dirty_buffers(to_bufio(bm));
-	if (unlikely(r))
-		return r;
-	r = dm_bufio_issue_flush(to_bufio(bm));
-	if (unlikely(r))
+	if (unlikely(r)) {
+		dm_bm_unlock(superblock);
 		return r;
+	}
 
 	dm_bm_unlock(superblock);
 
-	r = dm_bufio_write_dirty_buffers(to_bufio(bm));
-	if (unlikely(r))
-		return r;
-	r = dm_bufio_issue_flush(to_bufio(bm));
-	if (unlikely(r))
-		return r;
-
-	return 0;
+	return dm_bufio_write_dirty_buffers(to_bufio(bm));
 }
 
 u32 dm_bm_checksum(const void *data, size_t len, u32 init_xor)
