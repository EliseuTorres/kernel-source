From: Arne Jansen <sensille@gmx.net>
Date: Wed, 23 Mar 2011 16:34:19 +0100
Patch-mainline: yes
References: FATE#306586
Subject: [PATCH] btrfs: add readonly flag

setting the readonly flag prevents writes in case an error is detected

Signed-off-by: Arne Jansen <sensille@gmx.net>
Signed-off-by: David Sterba <dsterba@suse.cz>
---
 fs/btrfs/ctree.h |    2 +-
 fs/btrfs/ioctl.c |    4 ++--
 fs/btrfs/ioctl.h |    1 +
 fs/btrfs/scrub.c |   23 +++++++++++++----------
 4 files changed, 17 insertions(+), 13 deletions(-)

Index: linux-2.6.32-SLE11-SP2/fs/btrfs/ctree.h
===================================================================
--- linux-2.6.32-SLE11-SP2.orig/fs/btrfs/ctree.h
+++ linux-2.6.32-SLE11-SP2/fs/btrfs/ctree.h
@@ -2572,7 +2572,7 @@ void btrfs_reloc_post_snapshot(struct bt
 
 /* scrub.c */
 int btrfs_scrub_dev(struct btrfs_root *root, u64 devid, u64 start, u64 end,
-		    struct btrfs_scrub_progress *progress);
+		    struct btrfs_scrub_progress *progress, int readonly);
 int btrfs_scrub_pause(struct btrfs_root *root);
 int btrfs_scrub_pause_super(struct btrfs_root *root);
 int btrfs_scrub_continue(struct btrfs_root *root);
Index: linux-2.6.32-SLE11-SP2/fs/btrfs/ioctl.c
===================================================================
--- linux-2.6.32-SLE11-SP2.orig/fs/btrfs/ioctl.c
+++ linux-2.6.32-SLE11-SP2/fs/btrfs/ioctl.c
@@ -2508,7 +2508,7 @@ static long btrfs_ioctl_scrub(struct btr
 		return PTR_ERR(sa);
 
 	ret = btrfs_scrub_dev(root, sa->devid, sa->start, sa->end,
-			      &sa->progress);
+			      &sa->progress, sa->flags & BTRFS_SCRUB_READONLY);
 
 	if (copy_to_user(arg, sa, sizeof(*sa)))
 		ret = -EFAULT;
Index: linux-2.6.32-SLE11-SP2/fs/btrfs/ioctl.h
===================================================================
--- linux-2.6.32-SLE11-SP2.orig/fs/btrfs/ioctl.h
+++ linux-2.6.32-SLE11-SP2/fs/btrfs/ioctl.h
@@ -81,6 +81,7 @@ struct btrfs_scrub_progress {
 					 * Intermittent error. */
 };
 
+#define BTRFS_SCRUB_READONLY	1
 struct btrfs_ioctl_scrub_args {
 	__u64 devid;				/* in */
 	__u64 start;				/* in */
Index: linux-2.6.32-SLE11-SP2/fs/btrfs/scrub.c
===================================================================
--- linux-2.6.32-SLE11-SP2.orig/fs/btrfs/scrub.c
+++ linux-2.6.32-SLE11-SP2/fs/btrfs/scrub.c
@@ -42,7 +42,6 @@
  *  - In case of a read error on files with nodatasum, map the file and read
  *    the extent to trigger a writeback of the good copy
  *  - track and record media errors, throw out bad devices
- *  - add a readonly mode
  *  - add a mode to also read unallocated space
  *  - make the prefetch cancellable
  */
@@ -99,6 +98,7 @@ struct scrub_dev {
 	u16			csum_size;
 	struct list_head	csum_list;
 	atomic_t		cancel_req;
+	int			readonly;
 	/*
 	 * statistics
 	 */
@@ -329,14 +329,16 @@ static void scrub_fixup(struct scrub_bio
 	if (i == multi->num_stripes)
 		goto uncorrectable;
 
-	/*
-	 * bi_io_vec[ix].bv_page now contains good data, write it back
-	 */
-	if (scrub_fixup_io(WRITE, sdev->dev->bdev,
-			   (sbio->physical + ix * PAGE_SIZE) >> 9,
-			   sbio->bio->bi_io_vec[ix].bv_page)) {
-		/* I/O-error, writeback failed, give up */
-		goto uncorrectable;
+	if (!sdev->readonly) {
+		/*
+		 * bi_io_vec[ix].bv_page now contains good data, write it back
+		 */
+		if (scrub_fixup_io(WRITE, sdev->dev->bdev,
+				   (sbio->physical + ix * PAGE_SIZE) >> 9,
+				   sbio->bio->bi_io_vec[ix].bv_page)) {
+			/* I/O-error, writeback failed, give up */
+			goto uncorrectable;
+		}
 	}
 
 	kfree(multi);
@@ -1156,7 +1158,7 @@ static noinline_for_stack void scrub_wor
 
 
 int btrfs_scrub_dev(struct btrfs_root *root, u64 devid, u64 start, u64 end,
-		    struct btrfs_scrub_progress *progress)
+		    struct btrfs_scrub_progress *progress, int readonly)
 {
 	struct scrub_dev *sdev;
 	struct btrfs_fs_info *fs_info = root->fs_info;
@@ -1209,6 +1211,7 @@ int btrfs_scrub_dev(struct btrfs_root *r
 		scrub_workers_put(root);
 		return PTR_ERR(sdev);
 	}
+	sdev->readonly = readonly;
 	dev->scrub_device = sdev;
 
 	atomic_inc(&fs_info->scrubs_running);
