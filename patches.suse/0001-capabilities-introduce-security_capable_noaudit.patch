From: Eric Paris <eparis@redhat.com>
Subject: capabilities: introduce security_capable_noaudit
Git-commit: c7eba4a97563fd8b431787f7ad623444f2da80c6
Patch-mainline: v3.3-rc1
References: FATE#313982 bnc#799030

Exactly like security_capable except don't audit any denials.  This is for
places where the kernel may make decisions about what to do if a task has a
given capability, but which failing that capability is not a sign of a
security policy violation.  An example is checking if a task has
CAP_SYS_ADMIN to lower it's likelyhood of being killed by the oom killer.
This check is not a security violation if it is denied.

Signed-off-by: Eric Paris <eparis@redhat.com>
Acked-by: Serge E. Hallyn <serge.hallyn@canonical.com>
Acked-by: Eduardo Otubo <otubo@linux.vnet.ibm.com>
Acked-by: Corey Bryant <coreyb@linux.vnet.ibm.com>
Acked-by: Bruce Rogers <brogers@suse.com>
---
Note: There are minor differences compared to the upstream version of this
patch, specifically the addition of the 'current' parameter to the function
calls.
---
 include/linux/security.h | 7 +++++++
 security/security.c      | 7 +++++++
 2 files changed, 14 insertions(+)

diff --git a/include/linux/security.h b/include/linux/security.h
index 8ce59ef..df2f319 100644
--- a/include/linux/security.h
+++ b/include/linux/security.h
@@ -1669,6 +1669,8 @@ int security_capset(struct cred *new, const struct cred *old,
 		    const kernel_cap_t *permitted);
 int security_capable(struct user_namespace *ns, const struct cred *cred,
 			int cap);
+int security_capable_noaudit(const struct cred *cred, struct user_namespace *ns,
+			     int cap);
 int security_real_capable(struct task_struct *tsk, struct user_namespace *ns,
 			int cap);
 int security_real_capable_noaudit(struct task_struct *tsk,
@@ -1871,6 +1873,11 @@ static inline int security_capable(struct user_namespace *ns,
 	return cap_capable(current, cred, ns, cap, SECURITY_CAP_AUDIT);
 }
 
+static inline int security_capable_noaudit(const struct cred *cred,
+					   struct user_namespace *ns, int cap) {
+	return cap_capable(current, cred, ns, cap, SECURITY_CAP_NOAUDIT);
+}
+
 static inline int security_real_capable(struct task_struct *tsk, struct user_namespace *ns, int cap)
 {
 	int ret;
diff --git a/security/security.c b/security/security.c
index 91c9461..d02eea3 100644
--- a/security/security.c
+++ b/security/security.c
@@ -161,6 +161,13 @@ int security_capable(struct user_namespace *ns, const struct cred *cred,
 				     SECURITY_CAP_AUDIT);
 }
 
+int security_capable_noaudit(const struct cred *cred, struct user_namespace *ns,
+			     int cap)
+{
+	return security_ops->capable(current, cred, ns, cap,
+				     SECURITY_CAP_NOAUDIT);
+}
+
 int security_real_capable(struct task_struct *tsk, struct user_namespace *ns,
 			  int cap)
 {
-- 
1.7.12.4

