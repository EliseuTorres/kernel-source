From: Lee Schermerhorn <lee.schermerhorn@hp.com>
Subject: mm: introduce numa_mem_id
References: bnc#570492
Patch-mainline: no (probably in future)

Introduce "numa_mem_id()" macro for use by slab and possibly other
subsystems for handling "local" allocations for memory-less nodes.
For architectures that supports memoryless nodes, the arch dependent
topology.h will define numa_mem_id() to return the node with memory
from which local memory policy will allocate pages.  

For architectures that don't define numa_mem_id(), the default 
will just invoke numa_node_id();

Signed-off-by: Lee Schermerhorn <lee.schermerhorn@hp.com>
Acked-by: Nick Piggin <npiggin@suse.de>

 include/asm-generic/topology.h |    3 +++
 include/linux/mmzone.h         |    6 ++++++
 include/linux/topology.h       |   12 ++++++++++++
 mm/page_alloc.c                |   40 ++++++++++++++++++++++++++++++++++++++++
 4 files changed, 61 insertions(+)

Index: linux-2.6.32.5-0.1.1/include/linux/topology.h
===================================================================
--- linux-2.6.32.5-0.1.1.orig/include/linux/topology.h
+++ linux-2.6.32.5-0.1.1/include/linux/topology.h
@@ -223,4 +223,16 @@ int arch_update_cpu_topology(void);
 #define numa_node_id()		(cpu_to_node(raw_smp_processor_id()))
 #endif
 
+/*
+ * Returns number of "local memory node" for systems with memoryless nodes.
+ * Default is the current/local node.
+ */
+#ifndef numa_mem_id
+#define numa_mem_id	numa_node_id
+#endif
+
+#ifndef cpu_to_mem
+#define cpu_to_mem	cpu_to_node
+#endif
+
 #endif /* _LINUX_TOPOLOGY_H */
Index: linux-2.6.32.5-0.1.1/mm/page_alloc.c
===================================================================
--- linux-2.6.32.5-0.1.1.orig/mm/page_alloc.c
+++ linux-2.6.32.5-0.1.1/mm/page_alloc.c
@@ -55,6 +55,11 @@
 #include <asm/div64.h>
 #include "internal.h"
 
+#ifdef CONFIG_HAVE_MEMORYLESS_NODES
+DEFINE_PER_CPU(int, numa_mem);		/* Kernel "local memory" node */
+EXPORT_PER_CPU_SYMBOL(numa_mem);
+#endif
+
 /*
  * Array of node states.
  */
@@ -2712,6 +2717,24 @@ static void build_zonelist_cache(pg_data
 		zlc->z_to_n[z - zonelist->_zonerefs] = zonelist_node_idx(z);
 }
 
+#ifdef CONFIG_HAVE_MEMORYLESS_NODES
+/*
+ * Return node id of node used for "local" allocations.
+ * I.e., first node id of first zone in arg node's generic zonelist.
+ * Used for initializing percpu 'numa_mem', which is used primarily
+ * for kernel allocations, so use GFP_KERNEL flags to locate zonelist.
+ */
+int local_memory_node(int node)
+{
+	struct zone *zone;
+
+	(void)first_zones_zonelist(node_zonelist(node, GFP_KERNEL),
+				   gfp_zone(GFP_KERNEL),
+				   NULL,
+				   &zone);
+	return zone->node;
+}
+#endif
 
 #else	/* CONFIG_NUMA */
 
@@ -2778,6 +2801,23 @@ static int __build_all_zonelists(void *d
 		build_zonelists(pgdat);
 		build_zonelist_cache(pgdat);
 	}
+
+#ifdef CONFIG_HAVE_MEMORYLESS_NODES
+	/*
+	 * We now know the "local memory node" for each node--
+	 * i.e., the node of the first zone in the generic zonelist.
+	 * Set up numa_mem percpu variable for on-line cpus.  During
+	 * boot, only the boot cpu should be on-line;  we'll init the
+	 * secondary cpus' numa_mem as they come on-line.  During
+	 * node/memory hotplug, we'll fixup all on-line cpus.
+	 */
+	{
+		int cpu;
+		for_each_online_cpu(cpu)
+			cpu_to_mem(cpu) = local_memory_node(cpu_to_node(cpu));
+	}
+#endif
+
 	return 0;
 }
 
Index: linux-2.6.32.5-0.1.1/include/linux/mmzone.h
===================================================================
--- linux-2.6.32.5-0.1.1.orig/include/linux/mmzone.h
+++ linux-2.6.32.5-0.1.1/include/linux/mmzone.h
@@ -673,6 +673,12 @@ void memory_present(int nid, unsigned lo
 static inline void memory_present(int nid, unsigned long start, unsigned long end) {}
 #endif
 
+#ifdef CONFIG_HAVE_MEMORYLESS_NODES
+int local_memory_node(int node_id);
+#else
+static inline int local_memory_node(int node_id) { return node_id; };
+#endif
+
 #ifdef CONFIG_NEED_NODE_MEMMAP_SIZE
 unsigned long __init node_memmap_size_bytes(int, unsigned long, unsigned long);
 #endif
Index: linux-2.6.32.5-0.1.1/include/asm-generic/topology.h
===================================================================
--- linux-2.6.32.5-0.1.1.orig/include/asm-generic/topology.h
+++ linux-2.6.32.5-0.1.1/include/asm-generic/topology.h
@@ -34,6 +34,9 @@
 #ifndef cpu_to_node
 #define cpu_to_node(cpu)	((void)(cpu),0)
 #endif
+#ifndef cpu_to_mem
+#define cpu_to_mem(cpu)		((void)(cpu),0)
+#endif
 #ifndef parent_node
 #define parent_node(node)	((void)(node),0)
 #endif
