From: Jeff Mahoney <jeffm@suse.com>
Date: Mon, 3 Oct 2011 23:23:29 -0400
Subject: btrfs: __btrfs_mod_ref should return void
Patch-mainline: Submitted 24 Oct 2011

Now that process_func can't return an error, __btrfs_mod_ref has no more
error conditions and should return void.

Signed-off-by: Jeff Mahoney <jeffm@suse.com>
---
 fs/btrfs/ctree.c       |   30 ++++++++++--------------------
 fs/btrfs/ctree.h       |    4 ++--
 fs/btrfs/extent-tree.c |   25 ++++++++++---------------
 3 files changed, 22 insertions(+), 37 deletions(-)

--- a/fs/btrfs/ctree.c
+++ b/fs/btrfs/ctree.c
@@ -224,7 +224,6 @@ int btrfs_copy_root(struct btrfs_trans_h
 		      struct extent_buffer **cow_ret, u64 new_root_objectid)
 {
 	struct extent_buffer *cow;
-	int ret = 0;
 	int level;
 	struct btrfs_disk_key disk_key;
 
@@ -261,12 +260,9 @@ int btrfs_copy_root(struct btrfs_trans_h
 
 	WARN_ON(btrfs_header_generation(buf) > trans->transid);
 	if (new_root_objectid == BTRFS_TREE_RELOC_OBJECTID)
-		ret = btrfs_inc_ref(trans, root, cow, 1, 1);
+		btrfs_inc_ref(trans, root, cow, 1, 1);
 	else
-		ret = btrfs_inc_ref(trans, root, cow, 0, 1);
-
-	if (ret)
-		return ret;
+		btrfs_inc_ref(trans, root, cow, 0, 1);
 
 	btrfs_mark_buffer_dirty(cow);
 	*cow_ret = cow;
@@ -350,25 +346,21 @@ static noinline int update_ref_for_cow(s
 		if ((owner == root->root_key.objectid ||
 		     root->root_key.objectid == BTRFS_TREE_RELOC_OBJECTID) &&
 		    !(flags & BTRFS_BLOCK_FLAG_FULL_BACKREF)) {
-			ret = btrfs_inc_ref(trans, root, buf, 1, 1);
-			BUG_ON(ret);
+			btrfs_inc_ref(trans, root, buf, 1, 1);
 
 			if (root->root_key.objectid ==
 			    BTRFS_TREE_RELOC_OBJECTID) {
-				ret = btrfs_dec_ref(trans, root, buf, 0, 1);
-				BUG_ON(ret);
-				ret = btrfs_inc_ref(trans, root, cow, 1, 1);
-				BUG_ON(ret);
+				btrfs_dec_ref(trans, root, buf, 0, 1);
+				btrfs_inc_ref(trans, root, cow, 1, 1);
 			}
 			new_flags |= BTRFS_BLOCK_FLAG_FULL_BACKREF;
 		} else {
 
 			if (root->root_key.objectid ==
 			    BTRFS_TREE_RELOC_OBJECTID)
-				ret = btrfs_inc_ref(trans, root, cow, 1, 1);
+				btrfs_inc_ref(trans, root, cow, 1, 1);
 			else
-				ret = btrfs_inc_ref(trans, root, cow, 0, 1);
-			BUG_ON(ret);
+				btrfs_inc_ref(trans, root, cow, 0, 1);
 		}
 		if (new_flags != 0) {
 			ret = btrfs_set_disk_extent_flags(trans, root,
@@ -381,12 +373,10 @@ static noinline int update_ref_for_cow(s
 		if (flags & BTRFS_BLOCK_FLAG_FULL_BACKREF) {
 			if (root->root_key.objectid ==
 			    BTRFS_TREE_RELOC_OBJECTID)
-				ret = btrfs_inc_ref(trans, root, cow, 1, 1);
+				btrfs_inc_ref(trans, root, cow, 1, 1);
 			else
-				ret = btrfs_inc_ref(trans, root, cow, 0, 1);
-			BUG_ON(ret);
-			ret = btrfs_dec_ref(trans, root, buf, 1, 1);
-			BUG_ON(ret);
+				btrfs_inc_ref(trans, root, cow, 0, 1);
+			btrfs_dec_ref(trans, root, buf, 1, 1);
 		}
 		clean_tree_block(trans, root, buf);
 		*last_ref = 1;
--- a/fs/btrfs/ctree.h
+++ b/fs/btrfs/ctree.h
@@ -2303,9 +2303,9 @@ int btrfs_reserve_extent(struct btrfs_tr
 				  u64 empty_size, u64 hint_byte,
 				  u64 search_end, struct btrfs_key *ins,
 				  u64 data);
-int btrfs_inc_ref(struct btrfs_trans_handle *trans, struct btrfs_root *root,
+void btrfs_inc_ref(struct btrfs_trans_handle *trans, struct btrfs_root *root,
 		  struct extent_buffer *buf, int full_backref, int for_cow);
-int btrfs_dec_ref(struct btrfs_trans_handle *trans, struct btrfs_root *root,
+void btrfs_dec_ref(struct btrfs_trans_handle *trans, struct btrfs_root *root,
 		  struct extent_buffer *buf, int full_backref, int for_cow);
 int btrfs_set_disk_extent_flags(struct btrfs_trans_handle *trans,
 				struct btrfs_root *root,
--- a/fs/btrfs/extent-tree.c
+++ b/fs/btrfs/extent-tree.c
@@ -2664,7 +2664,7 @@ out:
 	return ret;
 }
 
-static int __btrfs_mod_ref(struct btrfs_trans_handle *trans,
+static void __btrfs_mod_ref(struct btrfs_trans_handle *trans,
 			   struct btrfs_root *root,
 			   struct extent_buffer *buf,
 			   int full_backref, int inc, int for_cow)
@@ -2678,7 +2678,6 @@ static int __btrfs_mod_ref(struct btrfs_
 	struct btrfs_file_extent_item *fi;
 	int i;
 	int level;
-	int ret = 0;
 	void (*process_func)(struct btrfs_trans_handle *, struct btrfs_root *,
 			    u64, u64, u64, u64, u64, u64, int);
 
@@ -2687,7 +2686,7 @@ static int __btrfs_mod_ref(struct btrfs_
 	level = btrfs_header_level(buf);
 
 	if (!root->ref_cows && level == 0)
-		return 0;
+		return;
 
 	if (inc)
 		process_func = btrfs_inc_extent_ref;
@@ -2726,19 +2725,18 @@ static int __btrfs_mod_ref(struct btrfs_
 					   for_cow);
 		}
 	}
-	return 0;
 }
 
-int btrfs_inc_ref(struct btrfs_trans_handle *trans, struct btrfs_root *root,
+void btrfs_inc_ref(struct btrfs_trans_handle *trans, struct btrfs_root *root,
 		  struct extent_buffer *buf, int full_backref, int for_cow)
 {
-	return __btrfs_mod_ref(trans, root, buf, full_backref, 1, for_cow);
+	__btrfs_mod_ref(trans, root, buf, full_backref, 1, for_cow);
 }
 
-int btrfs_dec_ref(struct btrfs_trans_handle *trans, struct btrfs_root *root,
+void btrfs_dec_ref(struct btrfs_trans_handle *trans, struct btrfs_root *root,
 		  struct extent_buffer *buf, int full_backref, int for_cow)
 {
-	return __btrfs_mod_ref(trans, root, buf, full_backref, 0, for_cow);
+	__btrfs_mod_ref(trans, root, buf, full_backref, 0, for_cow);
 }
 
 static int write_one_cache_group(struct btrfs_trans_handle *trans,
@@ -6298,10 +6296,8 @@ static noinline int walk_down_proc(struc
 	/* wc->stage == UPDATE_BACKREF */
 	if (!(wc->flags[level] & flag)) {
 		BUG_ON(!path->locks[level]);
-		ret = btrfs_inc_ref(trans, root, eb, 1, wc->for_reloc);
-		BUG_ON(ret);
-		ret = btrfs_dec_ref(trans, root, eb, 0, wc->for_reloc);
-		BUG_ON(ret);
+		btrfs_inc_ref(trans, root, eb, 1, wc->for_reloc);
+		btrfs_dec_ref(trans, root, eb, 0, wc->for_reloc);
 		ret = btrfs_set_disk_extent_flags(trans, root, eb->start,
 						  eb->len, flag, 0);
 		BUG_ON(ret);
@@ -6517,12 +6513,11 @@ static noinline int walk_up_proc(struct
 	if (wc->refs[level] == 1) {
 		if (level == 0) {
 			if (wc->flags[level] & BTRFS_BLOCK_FLAG_FULL_BACKREF)
-				ret = btrfs_dec_ref(trans, root, eb, 1,
+				btrfs_dec_ref(trans, root, eb, 1,
 						    wc->for_reloc);
 			else
-				ret = btrfs_dec_ref(trans, root, eb, 0,
+				btrfs_dec_ref(trans, root, eb, 0,
 						    wc->for_reloc);
-			BUG_ON(ret);
 		}
 		/* make block locked assertion in clean_tree_block happy */
 		if (!path->locks[level] &&
