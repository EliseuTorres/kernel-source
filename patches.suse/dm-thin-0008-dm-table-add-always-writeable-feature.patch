Git-commit: cc6cbe141a20f6d876b161b60af38d93935bfa85
From: Alasdair G Kergon <agk@redhat.com>
Date: Mon, 31 Oct 2011 20:19:02 +0000
Subject: [PATCH] dm table: add always writeable feature
Patch-mainline: v3.2-rc1
Reference: FATE#313903

Add a target feature flag DM_TARGET_ALWAYS_WRITEABLE to indicate that a target
does not support read-only mode.

The initial implementation of the thin provisioning target uses this.

Signed-off-by: Alasdair G Kergon <agk@redhat.com>
Acked-by: NeilBrown <nfbrown@suse.com>

---
 drivers/md/dm-table.c         |    6 ++++++
 include/linux/device-mapper.h |    7 +++++++
 2 files changed, 13 insertions(+)

--- linux-3.0-SLE11-SP3.orig/drivers/md/dm-table.c
+++ linux-3.0-SLE11-SP3/drivers/md/dm-table.c
@@ -795,6 +795,12 @@ int dm_table_add_target(struct dm_table
 		t->singleton = 1;
 	}
 
+	if (dm_target_always_writeable(tgt->type) && !(t->mode & FMODE_WRITE)) {
+		DMERR("%s: target type %s may not be included in read-only tables",
+		      dm_device_name(t->md), type);
+		return -EINVAL;
+	}
+
 	tgt->table = t;
 	tgt->begin = start;
 	tgt->len = len;
--- linux-3.0-SLE11-SP3.orig/include/linux/device-mapper.h
+++ linux-3.0-SLE11-SP3/include/linux/device-mapper.h
@@ -165,6 +165,13 @@ struct target_type {
 #define DM_TARGET_SINGLETON		0x00000001
 #define dm_target_needs_singleton(type)	((type)->features & DM_TARGET_SINGLETON)
 
+/*
+ * Indicates that a target does not support read-only devices.
+ */
+#define DM_TARGET_ALWAYS_WRITEABLE	0x00000002
+#define dm_target_always_writeable(type) \
+		((type)->features & DM_TARGET_ALWAYS_WRITEABLE)
+
 struct dm_target {
 	struct dm_table *table;
 	struct target_type *type;
