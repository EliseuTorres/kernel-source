From: Alexander Block <ablock84@googlemail.com>
Date: Fri, 15 Jun 2012 09:49:33 +0200
Patch-mainline: 3.6
Git-commit: 2bc5565286121d2a77ccd728eb3484dff2035b58
References: FATE#312888
Subject: [PATCH] Btrfs: don't update atime on RO subvolumes

Before the update_time inode operation was indroduced, it was
not possible to prevent updates of atime on RO subvolumes. VFS
was only able to check for RO on the mount, but did not know
anything about btrfs subvolumes.

btrfs_update_time does now check if the root is RO and skip
updating of times.

Signed-off-by: Alexander Block <ablock84@googlemail.com>
Signed-off-by: David Sterba <dsterba@suse.cz>
---
 fs/btrfs/inode.c |    5 +++++
 fs/inode.c       |    2 ++
 2 files changed, 7 insertions(+)

--- a/fs/btrfs/inode.c
+++ b/fs/btrfs/inode.c
@@ -4520,6 +4520,11 @@ int btrfs_dirty_inode(struct inode *inod
 static int btrfs_update_time(struct inode *inode, struct timespec *now,
 			     int flags)
 {
+	struct btrfs_root *root = BTRFS_I(inode)->root;
+
+	if (btrfs_root_readonly(root))
+		return -EROFS;
+
 	if (flags & S_VERSION)
 		inode_inc_iversion(inode);
 	if (flags & S_CTIME)
--- a/fs/inode.c
+++ b/fs/inode.c
@@ -1518,6 +1518,8 @@ void touch_atime(struct vfsmount *mnt, s
 	 * Btrfs), but since we touch atime while walking down the path we
 	 * really don't care if we failed to update the atime of the file,
 	 * so just ignore the return value.
+	 * We may also fail on filesystems that have the ability to make parts
+	 * of the fs read only, e.g. subvolumes in Btrfs.
 	 */
 	update_time(inode, &now, S_ATIME);
 	mnt_drop_write(mnt);
