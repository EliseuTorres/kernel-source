From: Dan Carpenter <dan.carpenter@oracle.com>
Date: Wed, 18 Apr 2012 09:59:03 +0300
Patch-mainline: 3.4
References: FATE#306586
Git-commit: 253beebd5a255e07d6a8b65515491f33664e82a2
Subject: [PATCH] Btrfs: double unlock bug in error handling

The caller expects this function to return with the lock held and
releases it immediately on error.

Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
Signed-off-by: David Sterba <dsterba@suse.cz>
---
 fs/btrfs/extent-tree.c |    2 ++
 1 file changed, 2 insertions(+)

--- a/fs/btrfs/extent-tree.c
+++ b/fs/btrfs/extent-tree.c
@@ -2303,6 +2303,7 @@ static noinline int run_clustered_refs(s
 
 				if (ret) {
 					printk(KERN_DEBUG "run_delayed_extent_op returned %d\n", ret);
+					spin_lock(&delayed_refs->lock);
 					return ret;
 				}
 
@@ -2333,6 +2334,7 @@ static noinline int run_clustered_refs(s
 
 		if (ret) {
 			printk(KERN_DEBUG "run_one_delayed_ref returned %d\n", ret);
+			spin_lock(&delayed_refs->lock);
 			return ret;
 		}
 
