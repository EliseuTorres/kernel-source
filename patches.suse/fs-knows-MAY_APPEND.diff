From: Andreas Gruenbacher <agruen@suse.de>
Subject: Allow filesystems to handle MAY_APPEND
    
The MS_WITHAPPEND super_block flag tells the vfs that the permission
inode operation understands the MAY_APPEND flag. This is required for
implementing permission models which go beyond the traditional UNIX
semantics.

If a filesystem does not set the flag, the behavior is unchanged.

Signed-off-by: Andreas Gruenbacher <agruen@suse.de>

---
 fs/namei.c         |    6 +++++-
 include/linux/fs.h |    2 ++
 2 files changed, 7 insertions(+), 1 deletion(-)

--- a/fs/namei.c
+++ b/fs/namei.c
@@ -269,6 +269,7 @@ int generic_permission(struct inode *ino
 int inode_permission(struct inode *inode, int mask)
 {
 	int retval;
+	int submask = mask;
 
 	if (mask & MAY_WRITE) {
 		umode_t mode = inode->i_mode;
@@ -287,8 +288,11 @@ int inode_permission(struct inode *inode
 			return -EACCES;
 	}
 
+	if (!IS_WITHAPPEND(inode))
+		submask &= ~MAY_APPEND;
+
 	if (inode->i_op->permission)
-		retval = inode->i_op->permission(inode, mask, 0);
+		retval = inode->i_op->permission(inode, submask, 0);
 	else
 		retval = generic_permission(inode, mask, 0,
 				inode->i_op->check_acl);
--- a/include/linux/fs.h
+++ b/include/linux/fs.h
@@ -208,6 +208,7 @@ struct inodes_stat_t {
 #define MS_KERNMOUNT	(1<<22) /* this is a kern_mount call */
 #define MS_I_VERSION	(1<<23) /* Update inode I_version field */
 #define MS_STRICTATIME	(1<<24) /* Always perform atime updates */
+#define MS_WITHAPPEND	(1<<25) /* iop->permission() understands MAY_APPEND */
 #define MS_SNAP_STABLE	(1<<27) /* Snapshot pages during writeback, if needed */
 #define MS_NOSEC	(1<<28)
 #define MS_BORN		(1<<29)
@@ -263,6 +264,7 @@ struct inodes_stat_t {
 #define IS_MANDLOCK(inode)	__IS_FLG(inode, MS_MANDLOCK)
 #define IS_NOATIME(inode)   __IS_FLG(inode, MS_RDONLY|MS_NOATIME)
 #define IS_I_VERSION(inode)   __IS_FLG(inode, MS_I_VERSION)
+#define IS_WITHAPPEND(inode)	__IS_FLG(inode, MS_WITHAPPEND)
 
 #define IS_NOQUOTA(inode)	((inode)->i_flags & S_NOQUOTA)
 #define IS_APPEND(inode)	((inode)->i_flags & S_APPEND)
