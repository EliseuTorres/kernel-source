From: Josef Bacik <josef@redhat.com>
Date: Fri, 4 Mar 2011 14:41:41 -0500
Patch-mainline: yes
References: FATE#306586
Subject: [PATCH] Btrfs: use mark_inode_dirty when expanding the file

Mark_inode_dirty will call btrfs_dirty_inode which will take care of updating
the inode.  This makes setsize a little cleaner since we don't have to start a
transaction and update the inode in there, we can just call mark_inode_dirty.
Thanks,

Signed-off-by: Josef Bacik <josef@redhat.com>
Signed-off-by: David Sterba <dsterba@suse.cz>
---
 fs/btrfs/inode.c |   24 ++++++------------------
 1 file changed, 6 insertions(+), 18 deletions(-)

--- a/fs/btrfs/inode.c
+++ b/fs/btrfs/inode.c
@@ -3635,15 +3635,13 @@ int btrfs_cont_expand(struct inode *inod
 
 static int btrfs_setattr_size(struct inode *inode, struct iattr *attr)
 {
-	struct btrfs_root *root = BTRFS_I(inode)->root;
-	struct btrfs_trans_handle *trans;
-	unsigned long nr;
+	loff_t oldsize = i_size_read(inode);
 	int ret;
 
-	if (attr->ia_size == inode->i_size)
+	if (attr->ia_size == oldsize)
 		return 0;
 
-	if (attr->ia_size > inode->i_size) {
+	if (attr->ia_size > oldsize) {
 		ret = btrfs_cont_expand(inode, attr->ia_size);
 		if (ret) {
 			btrfs_truncate(inode);
@@ -3651,19 +3649,9 @@ static int btrfs_setattr_size(struct ino
 		}
 
 		i_size_write(inode, attr->ia_size);
-		btrfs_ordered_update_i_size(inode, inode->i_size, NULL);
-
-		trans = btrfs_start_transaction(root, 0);
-		BUG_ON(IS_ERR(trans));
-
-		ret = btrfs_update_inode(trans, root, inode);
-		if (ret) {
-			btrfs_end_transaction(trans, root);
-			return ret;
-		}
-		nr = trans->blocks_used;
-		btrfs_end_transaction(trans, root);
-		btrfs_btree_balance_dirty(root, nr);
+		btrfs_ordered_update_i_size(inode, i_size_read(inode), NULL);
+  
+		mark_inode_dirty(inode);
 		return 0;
 	}
 
