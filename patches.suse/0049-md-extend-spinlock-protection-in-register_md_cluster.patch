From: NeilBrown <neilb@suse.com>
Date: Thu, 13 Aug 2015 12:32:55 +1000
Subject: [PATCH 49/57] md: extend spinlock protection in
 register_md_cluster_operations
Git-commit: 6022e75bf0686799a6ecca3c33a669e6c70e9d26
Patch-mainline: v4.3
References: fate#316335

This code looks racy.

The only possible race is if two modules try to register at the same
time and that won't happen.  But make the code look safe anyway.

Signed-off-by: NeilBrown <neilb@suse.com>
Acked-by: NeilBrown <neilb@suse.com>

---
 drivers/md/md.c | 16 ++++++++++------
 1 file changed, 10 insertions(+), 6 deletions(-)

diff --git a/drivers/md/md.c b/drivers/md/md.c
index 3e42584f6819..6c98d5c5d922 100644
--- a/drivers/md/md.c
+++ b/drivers/md/md.c
@@ -7512,15 +7512,19 @@ int unregister_md_personality(struct md_personality *p)
 	return 0;
 }
 
-int register_md_cluster_operations(struct md_cluster_operations *ops, struct module *module)
+int register_md_cluster_operations(struct md_cluster_operations *ops,
+				   struct module *module)
 {
-	if (md_cluster_ops != NULL)
-		return -EALREADY;
+	int ret = 0;
 	spin_lock(&pers_lock);
-	md_cluster_ops = ops;
-	md_cluster_mod = module;
+	if (md_cluster_ops != NULL)
+		ret = -EALREADY;
+	else {
+		md_cluster_ops = ops;
+		md_cluster_mod = module;
+	}
 	spin_unlock(&pers_lock);
-	return 0;
+	return ret;
 }
 EXPORT_SYMBOL(register_md_cluster_operations);
 
-- 
2.5.0

