From: Jiri Slaby <jslaby@suse.cz>
Date: Wed, 12 Nov 2014 16:02:11 +0100
Subject: kgr: mark even more kthreads
Patch-mainline: no
References: fate#313296 bnc#904871

fcoethread and bnx2fc_thread this time. Those prevented kgr from
finishing.

Signed-off-by: Jiri Slaby <jslaby@suse.cz>
---
 drivers/scsi/bnx2fc/bnx2fc_fcoe.c | 1 +
 drivers/scsi/fcoe/fcoe.c          | 1 +
 2 files changed, 2 insertions(+)

diff --git a/drivers/scsi/bnx2fc/bnx2fc_fcoe.c b/drivers/scsi/bnx2fc/bnx2fc_fcoe.c
index 79e5c94107a9..22b143ee97a8 100644
--- a/drivers/scsi/bnx2fc/bnx2fc_fcoe.c
+++ b/drivers/scsi/bnx2fc/bnx2fc_fcoe.c
@@ -599,6 +599,7 @@ int bnx2fc_percpu_io_thread(void *arg)
 	set_current_state(TASK_INTERRUPTIBLE);
 	while (!kthread_should_stop()) {
 		schedule();
+		kgr_task_safe(current);
 		spin_lock_bh(&p->fp_work_lock);
 		while (!list_empty(&p->work_list)) {
 			list_splice_init(&p->work_list, &work_list);
diff --git a/drivers/scsi/fcoe/fcoe.c b/drivers/scsi/fcoe/fcoe.c
index 00ee0ed642aa..49eedf916f16 100644
--- a/drivers/scsi/fcoe/fcoe.c
+++ b/drivers/scsi/fcoe/fcoe.c
@@ -1885,6 +1885,7 @@ retry:
 			spin_unlock_bh(&p->fcoe_rx_list.lock);
 			schedule();
 			set_current_state(TASK_RUNNING);
+			kgr_task_safe(current);
 			goto retry;
 		}
 
-- 
2.1.3

