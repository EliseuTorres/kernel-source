From: Mark Fasheh <mfasheh@suse.com>
Date: Fri Mar  5 14:52:51 PST 2010
Subject: gfs2: fix spectator mounts
Patch-mainline: never
References: FATE#307584 bnc#580105

Gut the write code and comment out the journal initialization. GFS2 was
trying to make changes to the fs despite the spectator mount option, which
was causing the module to fail mount.  Now we can actually have a truly
read-only GFS2 mount for migration purposes.  No userspace is required
either.

Signed-off-by: Mark Fasheh <mfasheh@suse.com>

Index: linux-2.6.32-gfs2-ro/fs/gfs2/file.c
===================================================================
--- linux-2.6.32-gfs2-ro.orig/fs/gfs2/file.c
+++ linux-2.6.32-gfs2-ro/fs/gfs2/file.c
@@ -710,18 +710,11 @@ const struct file_operations gfs2_file_f
 	.llseek		= gfs2_llseek,
 	.read		= do_sync_read,
 	.aio_read	= generic_file_aio_read,
-	.write		= do_sync_write,
-	.aio_write	= generic_file_aio_write,
-	.unlocked_ioctl	= gfs2_ioctl,
 	.mmap		= gfs2_mmap,
 	.open		= gfs2_open,
 	.release	= gfs2_close,
 	.fsync		= gfs2_fsync,
-	.lock		= gfs2_lock,
-	.flock		= gfs2_flock,
 	.splice_read	= generic_file_splice_read,
-	.splice_write	= generic_file_splice_write,
-	.setlease	= gfs2_setlease,
 };
 
 const struct file_operations gfs2_dir_fops = {
@@ -729,9 +722,6 @@ const struct file_operations gfs2_dir_fo
 	.unlocked_ioctl	= gfs2_ioctl,
 	.open		= gfs2_open,
 	.release	= gfs2_close,
-	.fsync		= gfs2_fsync,
-	.lock		= gfs2_lock,
-	.flock		= gfs2_flock,
 };
 
 #endif /* CONFIG_GFS2_FS_LOCKING_DLM */
@@ -740,23 +730,17 @@ const struct file_operations gfs2_file_f
 	.llseek		= gfs2_llseek,
 	.read		= do_sync_read,
 	.aio_read	= generic_file_aio_read,
-	.write		= do_sync_write,
-	.aio_write	= generic_file_aio_write,
-	.unlocked_ioctl	= gfs2_ioctl,
 	.mmap		= gfs2_mmap,
 	.open		= gfs2_open,
 	.release	= gfs2_close,
 	.fsync		= gfs2_fsync,
 	.splice_read	= generic_file_splice_read,
-	.splice_write	= generic_file_splice_write,
 	.setlease	= generic_setlease,
 };
 
 const struct file_operations gfs2_dir_fops_nolock = {
 	.readdir	= gfs2_readdir,
-	.unlocked_ioctl	= gfs2_ioctl,
 	.open		= gfs2_open,
 	.release	= gfs2_close,
-	.fsync		= gfs2_fsync,
 };
 
Index: linux-2.6.32-gfs2-ro/fs/gfs2/super.c
===================================================================
--- linux-2.6.32-gfs2-ro.orig/fs/gfs2/super.c
+++ linux-2.6.32-gfs2-ro/fs/gfs2/super.c
@@ -1359,14 +1359,8 @@ static void gfs2_destroy_inode(struct in
 const struct super_operations gfs2_super_ops = {
 	.alloc_inode		= gfs2_alloc_inode,
 	.destroy_inode		= gfs2_destroy_inode,
-	.write_inode		= gfs2_write_inode,
-	.delete_inode		= gfs2_delete_inode,
 	.put_super		= gfs2_put_super,
-	.sync_fs		= gfs2_sync_fs,
-	.freeze_fs 		= gfs2_freeze,
-	.unfreeze_fs		= gfs2_unfreeze,
 	.statfs			= gfs2_statfs,
-	.remount_fs		= gfs2_remount_fs,
 	.clear_inode		= gfs2_clear_inode,
 	.drop_inode		= gfs2_drop_inode,
 	.show_options		= gfs2_show_options,
Index: linux-2.6.32-gfs2-ro/fs/gfs2/aops.c
===================================================================
--- linux-2.6.32-gfs2-ro.orig/fs/gfs2/aops.c
+++ linux-2.6.32-gfs2-ro/fs/gfs2/aops.c
@@ -1122,48 +1122,31 @@ cannot_release:
 }
 
 static const struct address_space_operations gfs2_writeback_aops = {
-	.writepage = gfs2_writeback_writepage,
-	.writepages = gfs2_writeback_writepages,
 	.readpage = gfs2_readpage,
 	.readpages = gfs2_readpages,
-	.sync_page = block_sync_page,
-	.write_begin = gfs2_write_begin,
-	.write_end = gfs2_write_end,
 	.bmap = gfs2_bmap,
 	.invalidatepage = gfs2_invalidatepage,
 	.releasepage = gfs2_releasepage,
-	.direct_IO = gfs2_direct_IO,
 	.migratepage = buffer_migrate_page,
 	.is_partially_uptodate = block_is_partially_uptodate,
 	.error_remove_page = generic_error_remove_page,
 };
 
 static const struct address_space_operations gfs2_ordered_aops = {
-	.writepage = gfs2_ordered_writepage,
 	.readpage = gfs2_readpage,
 	.readpages = gfs2_readpages,
-	.sync_page = block_sync_page,
-	.write_begin = gfs2_write_begin,
-	.write_end = gfs2_write_end,
 	.set_page_dirty = gfs2_set_page_dirty,
 	.bmap = gfs2_bmap,
 	.invalidatepage = gfs2_invalidatepage,
 	.releasepage = gfs2_releasepage,
-	.direct_IO = gfs2_direct_IO,
 	.migratepage = buffer_migrate_page,
 	.is_partially_uptodate = block_is_partially_uptodate,
 	.error_remove_page = generic_error_remove_page,
 };
 
 static const struct address_space_operations gfs2_jdata_aops = {
-	.writepage = gfs2_jdata_writepage,
-	.writepages = gfs2_jdata_writepages,
 	.readpage = gfs2_readpage,
 	.readpages = gfs2_readpages,
-	.sync_page = block_sync_page,
-	.write_begin = gfs2_write_begin,
-	.write_end = gfs2_write_end,
-	.set_page_dirty = gfs2_set_page_dirty,
 	.bmap = gfs2_bmap,
 	.invalidatepage = gfs2_invalidatepage,
 	.releasepage = gfs2_releasepage,
Index: linux-2.6.32-gfs2-ro/fs/gfs2/ops_inode.c
===================================================================
--- linux-2.6.32-gfs2-ro.orig/fs/gfs2/ops_inode.c
+++ linux-2.6.32-gfs2-ro/fs/gfs2/ops_inode.c
@@ -1393,32 +1393,18 @@ out:
 
 const struct inode_operations gfs2_file_iops = {
 	.permission = gfs2_permission,
-	.setattr = gfs2_setattr,
 	.getattr = gfs2_getattr,
-	.setxattr = gfs2_setxattr,
 	.getxattr = gfs2_getxattr,
 	.listxattr = gfs2_listxattr,
-	.removexattr = gfs2_removexattr,
 	.fiemap = gfs2_fiemap,
 };
 
 const struct inode_operations gfs2_dir_iops = {
-	.create = gfs2_create,
 	.lookup = gfs2_lookup,
-	.link = gfs2_link,
-	.unlink = gfs2_unlink,
-	.symlink = gfs2_symlink,
-	.mkdir = gfs2_mkdir,
-	.rmdir = gfs2_rmdir,
-	.mknod = gfs2_mknod,
-	.rename = gfs2_rename,
 	.permission = gfs2_permission,
-	.setattr = gfs2_setattr,
 	.getattr = gfs2_getattr,
-	.setxattr = gfs2_setxattr,
 	.getxattr = gfs2_getxattr,
 	.listxattr = gfs2_listxattr,
-	.removexattr = gfs2_removexattr,
 	.fiemap = gfs2_fiemap,
 };
 
@@ -1426,12 +1412,9 @@ const struct inode_operations gfs2_symli
 	.readlink = gfs2_readlink,
 	.follow_link = gfs2_follow_link,
 	.permission = gfs2_permission,
-	.setattr = gfs2_setattr,
 	.getattr = gfs2_getattr,
-	.setxattr = gfs2_setxattr,
 	.getxattr = gfs2_getxattr,
 	.listxattr = gfs2_listxattr,
-	.removexattr = gfs2_removexattr,
 	.fiemap = gfs2_fiemap,
 };
 
Index: linux-2.6.32-gfs2-ro/fs/gfs2/ops_fstype.c
===================================================================
--- linux-2.6.32-gfs2-ro.orig/fs/gfs2/ops_fstype.c
+++ linux-2.6.32-gfs2-ro/fs/gfs2/ops_fstype.c
@@ -828,10 +828,6 @@ static int init_inodes(struct gfs2_sbd *
 	if (undo)
 		goto fail_qinode;
 
-	error = init_journal(sdp, undo);
-	if (error)
-		goto fail;
-
 	/* Read in the master statfs inode */
 	sdp->sd_statfs_inode = gfs2_lookup_simple(master, "statfs");
 	if (IS_ERR(sdp->sd_statfs_inode)) {
@@ -867,7 +863,6 @@ fail_rindex:
 fail_statfs:
 	iput(sdp->sd_statfs_inode);
 fail_journal:
-	init_journal(sdp, UNDO);
 fail:
 	return error;
 }
@@ -1137,11 +1132,11 @@ static int fill_super(struct super_block
 		goto fail;
 	}
 
-	if (!sdp->sd_args.ar_spectator  || !(sb->s_flags & MS_RDONLY) ||
-	    sdp->sd_args.ar_ignore_local_fs) {
+	if (!(sdp->sd_args.ar_spectator  && (sb->s_flags & MS_RDONLY) &&
+	      (strncmp(sdp->sd_args.ar_lockproto, "lock_nolock", GFS2_LOCKNAME_LEN) == 0))) {
 		printk(KERN_WARNING "Only read-only GFS2 mounts are "
-		       "supported.\nPlease mount with the \"spectator\" and "
-		       "\"ro\" mount options\n");
+		       "supported.\nPlease mount with the \"spectator\", "
+		       "\"ro\" and \"lockproto=lock_nolock\" mount options\n");
 		goto fail;
 	}
 
