From: Josef Bacik <josef@redhat.com>
Date: Tue, 31 May 2011 19:33:33 +0000
Patch-mainline: yes
References: FATE#306586
Subject: [PATCH] Btrfs: don't save the inode cache if we are deleting
 this root

With xfstest 254 I can panic the box every time with the inode number caching
stuff on.  This is because we clean the inodes out when we delete the subvolume,
but then we write out the inode cache which adds an inode to the subvolume inode
tree, and then when it gets evicted again the root gets added back on the dead
roots list and is deleted again, so we have a double free.  To stop this from
happening just return 0 if refs is 0 (and we're not the tree root since tree
root always has refs of 0).  With this fix 254 no longer panics.  Thanks,

Signed-off-by: Josef Bacik <josef@redhat.com>
Tested-by: David Sterba <dsterba@suse.cz>
Signed-off-by: Chris Mason <chris.mason@oracle.com>
Signed-off-by: David Sterba <dsterba@suse.cz>
---
 fs/btrfs/inode-map.c |    5 +++++
 1 file changed, 5 insertions(+)

Index: linux-2.6.32-SLE11-SP2/fs/btrfs/inode-map.c
===================================================================
--- linux-2.6.32-SLE11-SP2.orig/fs/btrfs/inode-map.c
+++ linux-2.6.32-SLE11-SP2/fs/btrfs/inode-map.c
@@ -394,6 +394,11 @@ int btrfs_save_ino_cache(struct btrfs_ro
 	     root->root_key.objectid > BTRFS_LAST_FREE_OBJECTID))
 		return 0;
 
+	/* Don't save inode cache if we are deleting this root */
+	if (btrfs_root_refs(&root->root_item) == 0 &&
+	    root != root->fs_info->tree_root)
+		return 0;
+
 	path = btrfs_alloc_path();
 	if (!path)
 		return -ENOMEM;
