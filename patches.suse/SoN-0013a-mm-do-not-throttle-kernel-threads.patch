From: Mel Gorman <mgorman@suse.de>
Date: Thu, 22 Sep 2011 11:01:21 +0100
Subject: [PATCH] mm: Do not throttle kernel threads when pfmemalloc reserves are under pressure
References: Swap over NFS (fate#304949, bnc#717939)
Patch-mainline: no

Under significant pressure some processes were getting throttled. In
some cases, this was leading to a livelock situation where ps -ef
would hang forever. Part of the problem appears to be that kjournald was
getting throttled which in turn would prevent processes holding mmap_sem
to make forward progress.

This patch prevents kernel threads getting throttled.

Signed-off-by: Mel Gorman <mgorman@suse.de>
---
 mm/vmscan.c |    4 ++++
 1 files changed, 4 insertions(+), 0 deletions(-)

diff --git a/mm/vmscan.c b/mm/vmscan.c
index 3e0700f..0db8440 100644
--- a/mm/vmscan.c
+++ b/mm/vmscan.c
@@ -2194,6 +2194,10 @@ static void throttle_direct_reclaim(gfp_t gfp_mask, struct zonelist *zonelist,
 	int high_zoneidx = gfp_zone(gfp_mask);
 	DEFINE_WAIT(wait);
 
+	/* Kernel threads such as kjournald should never stall */
+	if (current->flags & PF_KTHREAD)
+		return;
+
 	/* Check if the pfmemalloc reserves are ok */
 	first_zones_zonelist(zonelist, high_zoneidx, NULL, &zone);
 	if (pfmemalloc_watermark_ok(zone->zone_pgdat, high_zoneidx))
