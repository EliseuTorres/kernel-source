From 8d0fc4b6760faf1f6ce1bb469d6ce11a83a130f4 Mon Sep 17 00:00:00 2001
From: Mark Fasheh <mfasheh@suse.com>
Date: Tue, 26 Jul 2011 11:32:23 -0700
Subject: [PATCH 01/20] btrfs: Don't BUG_ON errors from
 btrfs_create_subvol_root()
Patch-mainline: 3.2?

This is called from only one place - create_subvol() which passes errors
safely back out to it's caller, btrfs_mksubvol where they are handled.

Additionally, btrfs_create_subvol_root() itself bug's needlessly from error
return of btrfs_update_inode(). Since create_subvol() was fixed to catch
errors we can bubble this one up too.

Signed-off-by: Mark Fasheh <mfasheh@suse.com>
---
 fs/btrfs/inode.c |    3 +--
 fs/btrfs/ioctl.c |    2 ++
 2 files changed, 3 insertions(+), 2 deletions(-)

Index: linux-3.0-SLE11-SP2/fs/btrfs/inode.c
===================================================================
--- linux-3.0-SLE11-SP2.orig/fs/btrfs/inode.c
+++ linux-3.0-SLE11-SP2/fs/btrfs/inode.c
@@ -6622,10 +6622,9 @@ int btrfs_create_subvol_root(struct btrf
 	btrfs_i_size_write(inode, 0);
 
 	err = btrfs_update_inode(trans, new_root, inode);
-	BUG_ON(err);
 
 	iput(inode);
-	return 0;
+	return err;
 }
 
 struct inode *btrfs_alloc_inode(struct super_block *sb)
Index: linux-3.0-SLE11-SP2/fs/btrfs/ioctl.c
===================================================================
--- linux-3.0-SLE11-SP2.orig/fs/btrfs/ioctl.c
+++ linux-3.0-SLE11-SP2/fs/btrfs/ioctl.c
@@ -421,6 +421,11 @@ static noinline int create_subvol(struct
 	btrfs_record_root_in_trans(trans, new_root);
 
 	ret = btrfs_create_subvol_root(trans, new_root, new_dirid);
+	if (ret) {
+		/* We potentially lose an unused inode item here */
+		goto fail;
+	}
+
 	/*
 	 * insert the directory item
 	 */
