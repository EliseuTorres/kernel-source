From: Martin K. Petersen <martin.petersen@oracle.com>
Date: Fri, 26 Feb 2010 00:20:37 -0500
Subject: [PATCH] block: Add BLK_ prefix to definitions
X-Git: eb28d31bc97e6374d81f404da309401ffaed467b
References: FATE#311054
Patch-Mainline: 2.6.34

Add a BLK_ prefix to block layer constants.

Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
Signed-off-by: Jens Axboe <jens.axboe@oracle.com>
Signed-off-by: Hannes Reinecke <hare@suse.de>
---
 block/blk-settings.c    |    4 ++--
 drivers/block/ps3vram.c |    4 ++--
 include/linux/blkdev.h  |   16 ++++++++++------
 3 files changed, 14 insertions(+), 10 deletions(-)

diff --git a/block/blk-settings.c b/block/blk-settings.c
index 8db60c9..4791131 100644
--- a/block/blk-settings.c
+++ b/block/blk-settings.c
@@ -112,7 +112,7 @@ void blk_set_default_limits(struct queue_limits *lim)
 	lim->max_phys_segments = MAX_PHYS_SEGMENTS;
 	lim->max_hw_segments = MAX_HW_SEGMENTS;
 	lim->seg_boundary_mask = BLK_SEG_BOUNDARY_MASK;
-	lim->max_segment_size = MAX_SEGMENT_SIZE;
+	lim->max_segment_size = BLK_MAX_SEGMENT_SIZE;
 	lim->max_sectors = BLK_DEF_MAX_SECTORS;
 	lim->max_hw_sectors = INT_MAX;
 	lim->max_discard_sectors = 0;
@@ -172,7 +172,7 @@ void blk_queue_make_request(struct request_queue *q, make_request_fn *mfn)
 	q->unplug_timer.data = (unsigned long)q;
 
 	blk_set_default_limits(&q->limits);
-	blk_queue_max_sectors(q, SAFE_MAX_SECTORS);
+	blk_queue_max_sectors(q, BLK_SAFE_MAX_SECTORS);
 
 	/*
 	 * If the caller didn't supply a lock, fall back to our embedded
diff --git a/drivers/block/ps3vram.c b/drivers/block/ps3vram.c
index 1fb6c31..a7ecb43 100644
--- a/drivers/block/ps3vram.c
+++ b/drivers/block/ps3vram.c
@@ -753,8 +753,8 @@ static int __devinit ps3vram_probe(struct ps3_system_bus_device *dev)
 	blk_queue_make_request(queue, ps3vram_make_request);
 	blk_queue_max_phys_segments(queue, MAX_PHYS_SEGMENTS);
 	blk_queue_max_hw_segments(queue, MAX_HW_SEGMENTS);
-	blk_queue_max_segment_size(queue, MAX_SEGMENT_SIZE);
-	blk_queue_max_sectors(queue, SAFE_MAX_SECTORS);
+	blk_queue_max_segment_size(queue, BLK_MAX_SEGMENT_SIZE);
+	blk_queue_max_sectors(queue, BLK_SAFE_MAX_SECTORS);
 
 	gendisk = alloc_disk(1);
 	if (!gendisk) {
diff --git a/include/linux/blkdev.h b/include/linux/blkdev.h
index 0704cde..045003c 100644
--- a/include/linux/blkdev.h
+++ b/include/linux/blkdev.h
@@ -1042,15 +1042,19 @@ extern int blk_verify_command(unsigned char *cmd, fmode_t has_write_perm);
 #define MAX_PHYS_SEGMENTS 128
 #define MAX_HW_SEGMENTS 128
 #define SAFE_MAX_SECTORS 255
+#define MAX_SEGMENT_SIZE	65536
+
+enum blk_default_limits {
+	BLK_MAX_SEGMENTS	= 128,
+	BLK_SAFE_MAX_SECTORS	= 255,
 #ifndef CONFIG_KERNEL_DESKTOP
-#define BLK_DEF_MAX_SECTORS 2048
+	BLK_DEF_MAX_SECTORS	= 2048,
 #else
-#define BLK_DEF_MAX_SECTORS 1024
+	BLK_DEF_MAX_SECTORS	= 1024,
 #endif
-
-#define MAX_SEGMENT_SIZE	65536
-
-#define BLK_SEG_BOUNDARY_MASK	0xFFFFFFFFUL
+	BLK_MAX_SEGMENT_SIZE	= 65536,
+	BLK_SEG_BOUNDARY_MASK	= 0xFFFFFFFFUL,
+};
 
 #define blkdev_entry_to_request(entry) list_entry((entry), struct request, queuelist)
 
-- 
1.6.0.2

