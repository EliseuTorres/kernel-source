From f7a490cabe9ae3d9fd8a116145fb13d14f108890 Mon Sep 17 00:00:00 2001
From: Erik Hugne <erik.hugne@ericsson.com>
Subject: [PATCH 5/5] tipc: don't hold portlock during nametbl unsubscribe
Patch-mainline: never
References: bsc#907063
Acked-by: Jiri Bohac <jbohac@suse.cz>

Upstream references: 13a2e89873506d64d7e52f17b571da371a3e25a4
                     c5fa7b3cf3cb22e4ac60485fc2dc187fe012910f

The new internal server handling introduced by the above commits
does solve the problem with triple-lock contention over port/node
and tipc_nametbl_locks, but are quite intrusive and cannot easily
be backported to 3.0.
This is a compromise, releasing the port lock before calling
tipc_nametbl_unsubscribe also resolves the contention problem.

Signed-off-by: Erik Hugne <erik.hugne@ericsson.com>
---
 net/tipc/subscr.c |    7 +++----
 1 file changed, 3 insertions(+), 4 deletions(-)

diff --git a/net/tipc/subscr.c b/net/tipc/subscr.c
index 5daad87..ef9a1f2 100644
--- a/net/tipc/subscr.c
+++ b/net/tipc/subscr.c
@@ -164,16 +164,15 @@ static void subscr_timeout(struct tipc_subscription *sub)
 		tipc_port_unlock(server_port);
 		return;
 	}
-
-	/* Unlink subscription from name table */
-	tipc_nametbl_unsubscribe(sub);
-
 	/* Unlink subscription from subscriber */
 	list_del(&sub->subscription_list);
 
 	/* Release subscriber's server port */
 	tipc_port_unlock(server_port);
 
+	/* Unlink subscription from name table */
+	tipc_nametbl_unsubscribe(sub);
+
 	/* Notify subscriber of timeout */
 	subscr_send_event(sub, sub->evt.s.seq.lower, sub->evt.s.seq.upper,
 			  TIPC_SUBSCR_TIMEOUT, 0, 0);
-- 
1.7.9.5

