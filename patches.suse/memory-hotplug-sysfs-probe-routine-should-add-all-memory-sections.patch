From: Nathan Fontenot <nfont@austin.ibm.com>
Subject: [PATCH] memory hotplug: sysfs probe routine should add all memory sections
Patch-mainline: Queued in driver-core-2.6.git/driver-core-next branch
References: bnc#643266

From 6add7cd618b4d4dc525731beb539c5e06e891855 Mon Sep 17 00:00:00 2001
From: Nathan Fontenot <nfont@austin.ibm.com>
Date: Mon, 31 Jan 2011 10:55:23 -0600
Subject: [PATCH] memory hotplug: sysfs probe routine should add all memory sections

As a follow-on to the recent patches I submitted that allowed for a sysfs
memory block to span multiple memory sections, we should also update the
probe routine to online all of the memory sections in a memory block.  Without
this patch the current code will only add a single memory section.  I think
the probe routine should add all of the memory sections in the specified memory
block so that its behavior is in line with memory hotplug actions through
the sysfs interfaces.

This patch applies on top of the previous sysfs memory updates to allow
a sysfs directory o span multiple memory sections.

https://lkml.org/lkml/2011/1/20/245

Signed-off-by: Nathan Fontenot <nfont@austin.ibm.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
Signed-off-by: Nikanth Karthikesan <knikanth@suse.de>

---

Index: linux-2.6.32-SLE11-SP1/drivers/base/memory.c
===================================================================
--- linux-2.6.32-SLE11-SP1.orig/drivers/base/memory.c
+++ linux-2.6.32-SLE11-SP1/drivers/base/memory.c
@@ -365,12 +365,19 @@ memory_probe_store(struct class *class,
 {
 	u64 phys_addr;
 	int nid;
-	int ret;
+	int i, ret;
 
 	phys_addr = simple_strtoull(buf, NULL, 0);
 
-	nid = memory_add_physaddr_to_nid(phys_addr);
-	ret = add_memory(nid, phys_addr, PAGES_PER_SECTION << PAGE_SHIFT);
+	for (i = 0; i < sections_per_block; i++) {
+		nid = memory_add_physaddr_to_nid(phys_addr);
+		ret = add_memory(nid, phys_addr,
+				 PAGES_PER_SECTION << PAGE_SHIFT);
+		if (ret)
+			break;
+
+		phys_addr += MIN_MEMORY_BLOCK_SIZE;
+	}
 
 	if (ret)
 		count = ret;
