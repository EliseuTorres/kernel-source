From: Mike Travis <travis@sgi.com>
Subject: Fix merge error in original kdb x86 patch
Date: Fri May 25 00:43:04 UTC 2012
Signed-off-by: Tony Jones <tonyj@suse.de>
References: bnc#746509
Patch-mainline: never
---

Let unknown_nmi_error call DIE_NMIUNKNOWN notify chain before dropping into kdb
allowing perf to clean up any back to back NMIs.

https://bugzilla.novell.com/show_bug.cgi?id=746509#c116,  location of KDB code
block in unknown_nmi_error() was merge error

---
 arch/x86/kernel/traps.c |   41 ++++++++++++++++++++++++-----------------
 1 file changed, 24 insertions(+), 17 deletions(-)

--- a/arch/x86/kernel/traps.c
+++ b/arch/x86/kernel/traps.c
@@ -375,26 +375,10 @@ io_check_error(unsigned char reason, str
 static notrace __kprobes void
 unknown_nmi_error(unsigned char reason, struct pt_regs *regs)
 {
-#ifdef CONFIG_KDB
-	static int controlling_cpu = -1;
-	static DEFINE_SPINLOCK(kdb_nmi_lock);
-	unsigned long flags;
-
-	spin_lock_irqsave(&kdb_nmi_lock, flags);
-	if (controlling_cpu == -1) {
-		controlling_cpu = smp_processor_id();
-		spin_unlock_irqrestore(&kdb_nmi_lock, flags);
-		(void)kdb(LKDB_REASON_NMI, reason, regs);
-		controlling_cpu = -1;
-	} else {
-		spin_unlock_irqrestore(&kdb_nmi_lock, flags);
-		(void)kdb(LKDB_REASON_ENTER_SLAVE, reason, regs);
-	}
-#endif /* CONFIG_KDB */
-
 	if (notify_die(DIE_NMIUNKNOWN, "nmi", regs, reason, 2, SIGINT) ==
 			NOTIFY_STOP)
 		return;
+
 #ifdef CONFIG_MCA
 	/*
 	 * Might actually be able to figure out what the guilty party
@@ -405,6 +389,26 @@ unknown_nmi_error(unsigned char reason,
 		return;
 	}
 #endif
+
+#ifdef CONFIG_KDB
+	if (kdb_on) {
+		static int controlling_cpu = -1;
+		static DEFINE_SPINLOCK(kdb_nmi_lock);
+		unsigned long flags;
+	
+		spin_lock_irqsave(&kdb_nmi_lock, flags);
+		if (controlling_cpu == -1) {
+			controlling_cpu = smp_processor_id();
+			spin_unlock_irqrestore(&kdb_nmi_lock, flags);
+			(void)kdb(LKDB_REASON_NMI, reason, regs);
+			controlling_cpu = -1;
+		} else {
+			spin_unlock_irqrestore(&kdb_nmi_lock, flags);
+			(void)kdb(LKDB_REASON_ENTER_SLAVE, reason, regs);
+		}
+	}
+#endif /* CONFIG_KDB */
+
 	pr_emerg("Uhhuh. NMI received for unknown reason %02x on CPU %d.\n",
 		 reason, smp_processor_id());
 
