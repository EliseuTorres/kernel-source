From: Miao Xie <miaox@cn.fujitsu.com>
Date: Tue, 15 Jan 2013 06:27:25 +0000
Patch-mainline: 3.8
Git-commit: 8d25a086eb104297e3ba1fdd180b04cfaaa84797
References: FATE#312888
Subject: [PATCH] Btrfs: Add ACCESS_ONCE() to transaction->abort
 accesses

We may access and update transaction->aborted on the different CPUs without
lock, so we need ACCESS_ONCE() wrapper to prevent the compiler from creating
unsolicited accesses and make sure we can get the right value.

Signed-off-by: Miao Xie <miaox@cn.fujitsu.com>
Signed-off-by: Josef Bacik <jbacik@fusionio.com>
Signed-off-by: David Sterba <dsterba@suse.cz>
---
 fs/btrfs/super.c       |    2 +-
 fs/btrfs/transaction.c |    3 ++-
 2 files changed, 3 insertions(+), 2 deletions(-)

--- a/fs/btrfs/super.c
+++ b/fs/btrfs/super.c
@@ -245,7 +245,7 @@ void __btrfs_abort_transaction(struct bt
 			     function, line, errstr);
 		return;
 	}
-	trans->transaction->aborted = errno;
+	ACCESS_ONCE(trans->transaction->aborted) = errno;
 	__btrfs_std_error(root->fs_info, function, line, errno, NULL);
 }
 /*
--- a/fs/btrfs/transaction.c
+++ b/fs/btrfs/transaction.c
@@ -1453,7 +1453,8 @@ int btrfs_commit_transaction(struct btrf
 		goto cleanup_transaction;
 	}
 
-	if (cur_trans->aborted) {
+	/* Stop the commit early if ->aborted is set */
+	if (unlikely(ACCESS_ONCE(cur_trans->aborted))) {
 		ret = cur_trans->aborted;
 		goto cleanup_transaction;
 	}
