From: Andre Przywara <andre.przywara@amd.com>
Subject: [PATCH 09/12] KVM: SVM: Add clean-bit for GDT and IDT
References: FATE#309760
Git-commit: 17a703cb14055c5dac7f34672d368c4d8f6ffe49
Patch-mainline: v2.6.38

This patch implements the clean-bit for the base and limit
of the gdt and idt in the vmcb.

Backport of 17a703cb14055c5dac7f34672d368c4d8f6ffe49
(done by: Joerg Roedel <joerg.roedel@amd.com>)

Signed-off-by: Andre Przywara <andre.przywara@amd.com>
Acked-by: Bruce Rogers <brogers@suse.com>
---
 arch/x86/kvm/svm.c |    4 ++++
 1 files changed, 4 insertions(+), 0 deletions(-)

Index: linux-2.6.32-SLE11-SP2/arch/x86/kvm/svm.c
===================================================================
--- linux-2.6.32-SLE11-SP2.orig/arch/x86/kvm/svm.c
+++ linux-2.6.32-SLE11-SP2/arch/x86/kvm/svm.c
@@ -150,6 +150,7 @@ enum {
 	VMCB_NPT,        /* npt_en, nCR3, gPAT */
 	VMCB_CR,         /* CR0, CR3, CR4, EFER */
 	VMCB_DR,         /* DR6, DR7 */
+	VMCB_DT,         /* GDT, IDT */
 	VMCB_DIRTY_MAX,
 };
 
@@ -1012,6 +1013,7 @@ static void svm_get_idt(struct kvm_vcpu
 
 	dt->limit = svm->vmcb->save.idtr.limit;
 	dt->base = svm->vmcb->save.idtr.base;
+	mark_dirty(svm->vmcb, VMCB_DT);
 }
 
 static void svm_set_idt(struct kvm_vcpu *vcpu, struct descriptor_table *dt)
@@ -1020,6 +1022,7 @@ static void svm_set_idt(struct kvm_vcpu
 
 	svm->vmcb->save.idtr.limit = dt->limit;
 	svm->vmcb->save.idtr.base = dt->base ;
+	mark_dirty(svm->vmcb, VMCB_DT);
 }
 
 static void svm_get_gdt(struct kvm_vcpu *vcpu, struct descriptor_table *dt)
@@ -1036,6 +1039,7 @@ static void svm_set_gdt(struct kvm_vcpu
 
 	svm->vmcb->save.gdtr.limit = dt->limit;
 	svm->vmcb->save.gdtr.base = dt->base ;
+	mark_dirty(svm->vmcb, VMCB_DT);
 }
 
 static void svm_decache_cr4_guest_bits(struct kvm_vcpu *vcpu)
