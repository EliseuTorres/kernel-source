From: Miao Xie <miaox@cn.fujitsu.com>
Date: Wed, 15 May 2013 07:48:15 +0000
Patch-mainline: 3.10
Git-commit: 89042e5ad23d50449691141334f30d53d6271266
References: FATE#312888
Subject: [PATCH] Btrfs: fix accessing a freed tree root

inode_tree_del() will move the tree root into the dead root list, and
then the tree will be destroyed by the cleaner. So if we remove the
delayed node which is cached in the inode after inode_tree_del(),
we may access a freed tree root. Fix it.

Signed-off-by: Miao Xie <miaox@cn.fujitsu.com>
Signed-off-by: Josef Bacik <jbacik@fusionio.com>
Signed-off-by: David Sterba <dsterba@suse.cz>
---
 fs/btrfs/inode.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

--- a/fs/btrfs/inode.c
+++ b/fs/btrfs/inode.c
@@ -4716,6 +4716,7 @@ void btrfs_evict_inode(struct inode *ino
 	btrfs_end_transaction(trans, root);
 	btrfs_btree_balance_dirty(root);
 no_delete:
+	btrfs_remove_delayed_node(inode);
 	end_writeback(inode);
 	return;
 }
@@ -7962,7 +7963,6 @@ void btrfs_destroy_inode(struct inode *i
 	inode_tree_del(inode);
 	btrfs_drop_extent_cache(inode, 0, (u64)-1, 0);
 free:
-	btrfs_remove_delayed_node(inode);
 	call_rcu(&inode->i_rcu, btrfs_i_callback);
 }
 
