From 7236a0801737628ed6a21951c5e9c2d510366b6b Mon Sep 17 00:00:00 2001
From: Takashi Iwai <tiwai@suse.de>
Date: Thu, 8 Nov 2012 18:35:06 +0100
Subject: [PATCH 1/3] firmware: Add the firmware signing support to scripts/sign-file

Git-commit: Not yet, reviewing
Patch-mainline: Not yet, reviewing
References: fate#314574
Target: SLE-12

Add -f option to sign-file script for generating a firmware signature
file.

A firmware signature file contains a pretty similar structure like a
signed module but in a different order (because it's a separate file
while the module signature is embedded at the tail of unsigned module
contents).  The file consists of
 - the magic string
 - the signature information, which is identical with the module
   signature
 - signer's name
 - key id
 - signature bytes

Signed-off-by: Takashi Iwai <tiwai@suse.de>
Acked-by: Lee, Chun-Yi <jlee@suse.com>
---
 scripts/sign-file |   34 +++++++++++++++++++++++++++-------
 1 files changed, 27 insertions(+), 7 deletions(-)

diff --git a/scripts/sign-file b/scripts/sign-file
index 2b7c448..b296a95 100755
--- a/scripts/sign-file
+++ b/scripts/sign-file
@@ -4,8 +4,11 @@
 #
 
 my $USAGE =
-"Usage: scripts/sign-file [-v] <hash algo> <key> <x509> <module> [<dest>]\n" .
-"       scripts/sign-file [-v] -s <raw sig> <hash algo> <x509> <module> [<dest>]\n";
+"Usage: scripts/sign-file [-v] [-f]  <hash algo> <key> <x509> <module> [<dest>]\n" .
+"       scripts/sign-file [-v] [-f] -s <raw sig> <hash algo> <x509> <module> [<dest>]\n" .
+"       -v verbose output\n" .
+"       -f create a firmware signature file\n";
+
 
 use strict;
 use FileHandle;
@@ -13,9 +16,10 @@ use IPC::Open2;
 use Getopt::Std;
 
 my %opts;
-getopts('vs:', \%opts) or die $USAGE;
+getopts('vfs:', \%opts) or die $USAGE;
 my $verbose = $opts{'v'};
 my $signature_file = $opts{'s'};
+my $sign_fw = $opts{'f'};
 
 die $USAGE if ($#ARGV > 4);
 die $USAGE if (!$signature_file && $#ARGV < 3 || $signature_file && $#ARGV < 2);
@@ -31,14 +35,18 @@ my ($dest, $keep_orig);
 if (@ARGV) {
 	$dest = $ARGV[0];
 	$keep_orig = 1;
+} elsif ($sign_fw) {
+	$dest = $module . ".sig";
+	$keep_orig = 1;
 } else {
 	$dest = $module . "~";
 }
+my $mode_name = $sign_fw ? "firmware" : "module";
 
 die "Can't read private key\n" if (!$signature_file && !-r $private_key);
 die "Can't read signature file\n" if ($signature_file && !-r $signature_file);
 die "Can't read X.509 certificate\n" unless (-r $x509);
-die "Can't read module\n" unless (-r $module);
+die "Can't read $mode_name\n" unless (-r $module);
 
 #
 # Function to read the contents of a file into a variable.
@@ -385,7 +393,9 @@ $signature = pack("n", length($signature)) . $signature,
 #
 my $unsigned_module = read_file($module);
 
-my $magic_number = "~Module signature appended~\n";
+my $magic_number = $sign_fw ?
+    "~Linux firmware signature~\n" :
+    "~Module signature appended~\n";
 
 my $info = pack("CCCCCxxxN",
 		$algo, $hash, $id_type,
@@ -394,7 +404,7 @@ my $info = pack("CCCCCxxxN",
 		length($signature));
 
 if ($verbose) {
-    print "Size of unsigned module: ", length($unsigned_module), "\n";
+    print "Size of unsigned $mode_name: ", length($unsigned_module), "\n";
     print "Size of signer's name  : ", length($signers_name), "\n";
     print "Size of key identifier : ", length($key_identifier), "\n";
     print "Size of signature      : ", length($signature), "\n";
@@ -406,7 +416,16 @@ if ($verbose) {
 
 open(FD, ">$dest") || die $dest;
 binmode FD;
-print FD
+if ($sign_fw) {
+    print FD
+    $magic_number,
+    $info,
+    $signers_name,
+    $key_identifier,
+    $signature
+    ;
+} else {
+    print FD
     $unsigned_module,
     $signers_name,
     $key_identifier,
@@ -414,6 +433,7 @@ print FD
     $info,
     $magic_number
     ;
+}
 close FD || die $dest;
 
 if (!$keep_orig) {
-- 
1.6.4.2

