From: Mark Fasheh <mfasheh@suse.com>
Date: Thu Jan 27 14:28:08 PST 2011
Subject: ocfs2: add back ported kernel api calls
Patch-mainline: Never

Latest Ocfs2 updates want generic_check_addressable. Place it in a seperate
file within the fs/ocfs2 heirarchy so as to make applying future patches
easier.

Signed-off-by: Mark Fasheh <mfasheh@suse.com>

Index: linux-2.6.32-ocfs2-build-fix/fs/ocfs2/super.c
===================================================================
--- linux-2.6.32-ocfs2-build-fix.orig/fs/ocfs2/super.c
+++ linux-2.6.32-ocfs2-build-fix/fs/ocfs2/super.c
@@ -73,6 +73,8 @@
 
 #include "buffer_head_io.h"
 
+#include "kapi.h"
+
 static struct kmem_cache *ocfs2_inode_cachep = NULL;
 struct kmem_cache *ocfs2_dquot_cachep;
 struct kmem_cache *ocfs2_qf_chunk_cachep;
Index: linux-2.6.32-ocfs2-build-fix/fs/ocfs2/Makefile
===================================================================
--- linux-2.6.32-ocfs2-build-fix.orig/fs/ocfs2/Makefile
+++ linux-2.6.32-ocfs2-build-fix/fs/ocfs2/Makefile
@@ -41,6 +41,7 @@ ocfs2-objs := \
 	quota_local.o		\
 	quota_global.o		\
 	xattr.o			\
+	kapi.o			\
 	acl.o
 
 ocfs2_stackglue-objs := stackglue.o
Index: linux-2.6.32-ocfs2-build-fix/fs/ocfs2/kapi.c
===================================================================
--- /dev/null
+++ linux-2.6.32-ocfs2-build-fix/fs/ocfs2/kapi.c
@@ -0,0 +1,33 @@
+#include <linux/module.h>
+#include <linux/fs.h>
+#include <linux/types.h>
+#include <linux/pagemap.h>
+
+/* generic_check_addressable taken from 2.6.37 source */
+/**
+ * generic_check_addressable - Check addressability of file system
+ * @blocksize_bits:	log of file system block size
+ * @num_blocks:		number of blocks in file system
+ *
+ * Determine whether a file system with @num_blocks blocks (and a
+ * block size of 2**@blocksize_bits) is addressable by the sector_t
+ * and page cache of the system.  Return 0 if so and -EFBIG otherwise.
+ */
+int generic_check_addressable(unsigned blocksize_bits, u64 num_blocks)
+{
+	u64 last_fs_block = num_blocks - 1;
+	u64 last_fs_page =
+		last_fs_block >> (PAGE_CACHE_SHIFT - blocksize_bits);
+
+	if (unlikely(num_blocks == 0))
+		return 0;
+
+	if ((blocksize_bits < 9) || (blocksize_bits > PAGE_CACHE_SHIFT))
+		return -EINVAL;
+
+	if ((last_fs_block > (sector_t)(~0ULL) >> (blocksize_bits - 9)) ||
+	    (last_fs_page > (pgoff_t)(~0ULL))) {
+		return -EFBIG;
+	}
+	return 0;
+}
Index: linux-2.6.32-ocfs2-build-fix/fs/ocfs2/kapi.h
===================================================================
--- /dev/null
+++ linux-2.6.32-ocfs2-build-fix/fs/ocfs2/kapi.h
@@ -0,0 +1,6 @@
+#ifndef OCFS2_KAPI_H
+#define OCFS2_KAPI_H
+
+int generic_check_addressable(unsigned blocksize_bits, u64 num_blocks);
+
+#endif	/* OCFS2_KAPI_H */
