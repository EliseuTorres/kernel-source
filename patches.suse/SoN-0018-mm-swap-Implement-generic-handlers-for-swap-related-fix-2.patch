From: Mel Gorman <mgorman@suse.de>
Date: Tue, 18 Sep 2012 11:15:51 +0100
Subject: [PATCH] mm: swap: Implement generic handlers for swap-related
 address ops fix

References: Swap over NFS (fate#304949, bnc#778334)
Patch-mainline: No, upstream implements this differently.

aops->set_page_dirty() is the wrong handler to use to determine if
the underlying filesystem is willing to handle PageSwapCache pages.
Instead it should use ->swap_activate(). This is not a problem upstream
as SWP_FILE is used there to detect if the underlying filesystem should
be called or not.

Signed-off-by: Mel Gorman <mgorman@suse.de>
---
 mm/page_io.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/mm/page_io.c b/mm/page_io.c
index 76593701..4952cc4 100644
--- a/mm/page_io.c
+++ b/mm/page_io.c
@@ -281,7 +281,7 @@ int swap_set_page_dirty(struct page *page)
 	struct swap_info_struct *sis = page_swap_info(page);
 	struct address_space *mapping = sis->swap_file->f_mapping;
 
-	if (mapping->a_ops->set_page_dirty)
+	if (mapping->a_ops->swap_activate)
 		return mapping->a_ops->set_page_dirty(page);
 	else
 		return __set_page_dirty_no_writeback(page);
