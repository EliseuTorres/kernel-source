From: David Sterba <dsterba@suse.cz>
Date: Tue, 06 Mar 2012 00:06:18 +0100
Patch-mainline: pending
References: FATE#306586
Subject: [PATCH] Btrfs: update message levels

Signed-off-by: David Sterba <dsterba@suse.cz>
---
Index: linux-3.0-SLE11-SP2/fs/btrfs/disk-io.c
===================================================================
--- linux-3.0-SLE11-SP2.orig/fs/btrfs/disk-io.c
+++ linux-3.0-SLE11-SP2/fs/btrfs/disk-io.c
@@ -2757,7 +2757,7 @@ static int write_dev_flush(struct btrfs_
 		wait_for_completion(&device->flush_wait);
 
 		if (bio_flagged(bio, BIO_EOPNOTSUPP)) {
-			printk("btrfs: disabling barriers on dev %s\n",
+			printk(KERN_INFO "btrfs: disabling barriers on dev %s\n",
 			       device->name);
 			device->nobarriers = 1;
 		}
Index: linux-3.0-SLE11-SP2/fs/btrfs/extent-tree.c
===================================================================
--- linux-3.0-SLE11-SP2.orig/fs/btrfs/extent-tree.c
+++ linux-3.0-SLE11-SP2/fs/btrfs/extent-tree.c
@@ -2302,7 +2302,7 @@ static noinline int run_clustered_refs(s
 				kfree(extent_op);
 
 				if (ret) {
-					printk("run_delayed_extent_op returned %d\n", ret);
+					printk(KERN_DEBUG "run_delayed_extent_op returned %d\n", ret);
 					return ret;
 				}
 
@@ -2332,7 +2332,7 @@ static noinline int run_clustered_refs(s
 		count++;
 
 		if (ret) {
-			printk("run_one_delayed_ref returned %d\n", ret);
+			printk(KERN_DEBUG "run_one_delayed_ref returned %d\n", ret);
 			return ret;
 		}
 
@@ -3720,7 +3720,7 @@ again:
 					       !space_info->flush);
 		/* Must have been interrupted, return */
 		if (ret) {
-			printk("%s returning -EINTR\n", __func__);
+			printk(KERN_DEBUG "%s returning -EINTR\n", __func__);
 			return -EINTR;
 		}
 
@@ -6248,11 +6248,10 @@ use_block_rsv(struct btrfs_trans_handle
 		return block_rsv;
 	if (ret) {
 		static DEFINE_RATELIMIT_STATE(_rs,
-				DEFAULT_RATELIMIT_INTERVAL,
-				/*DEFAULT_RATELIMIT_BURST*/ 2);
+				DEFAULT_RATELIMIT_INTERVAL * 10,
+				/*DEFAULT_RATELIMIT_BURST*/ 1);
 		if (__ratelimit(&_rs)) {
-			printk(KERN_DEBUG "btrfs: block rsv returned %d\n", ret);
-			WARN_ON(1);
+			WARN(1, KERN_DEBUG "btrfs: block rsv returned %d\n", ret);
 		}
 		ret = reserve_metadata_bytes(root, block_rsv, blocksize, 0);
 		if (!ret) {
Index: linux-3.0-SLE11-SP2/fs/btrfs/super.c
===================================================================
--- linux-3.0-SLE11-SP2.orig/fs/btrfs/super.c
+++ linux-3.0-SLE11-SP2/fs/btrfs/super.c
@@ -217,7 +217,7 @@ void __btrfs_abort_transaction(struct bt
 			       struct btrfs_root *root, const char *function,
 			       unsigned int line, int errno)
 {
-	WARN_ON_ONCE(1);
+	WARN_ONCE(1, KERN_DEBUG "Transaction aborted");
 	trans->aborted = errno;
 	/* Nothing used. The other threads that have joined this
 	 * transaction may be able to continue. */
@@ -740,7 +740,7 @@ static int btrfs_fill_super(struct super
 	tree_root = open_ctree(sb, fs_devices, (char *)data);
 
 	if (IS_ERR(tree_root)) {
-		printk("btrfs: open_ctree failed\n");
+		printk(KERN_ERR "btrfs: open_ctree failed\n");
 		return PTR_ERR(tree_root);
 	}
 	fs_info = tree_root->fs_info;
@@ -1478,7 +1478,7 @@ static void btrfs_fs_dirty_inode(struct
 
 	ret = btrfs_dirty_inode(inode);
 	if (ret)
-		printk_ratelimited(KERN_ERR "btrfs: fail to dirty inode %Lu "
+		printk_ratelimited(KERN_DEBUG "btrfs: fail to dirty inode %Lu "
 				   "error %d\n", btrfs_ino(inode), ret);
 }
 
