From: David Sterba <dsterba@suse.cz>
Date: Tue, 06 Mar 2012 00:06:18 +0100
Patch-mainline: pending
References: FATE#306586
Subject: [PATCH] Btrfs: update message levels

Signed-off-by: David Sterba <dsterba@suse.cz>
---
---
 fs/btrfs/disk-io.c     |    2 +-
 fs/btrfs/extent-tree.c |    7 +++----
 fs/btrfs/inode.c       |    6 +++---
 fs/btrfs/super.c       |    4 ++--
 4 files changed, 9 insertions(+), 10 deletions(-)

--- a/fs/btrfs/disk-io.c
+++ b/fs/btrfs/disk-io.c
@@ -2771,7 +2771,7 @@ static int write_dev_flush(struct btrfs_
 		wait_for_completion(&device->flush_wait);
 
 		if (bio_flagged(bio, BIO_EOPNOTSUPP)) {
-			printk("btrfs: disabling barriers on dev %s\n",
+			printk(KERN_INFO "btrfs: disabling barriers on dev %s\n",
 			       device->name);
 			device->nobarriers = 1;
 		}
--- a/fs/btrfs/extent-tree.c
+++ b/fs/btrfs/extent-tree.c
@@ -6296,11 +6296,10 @@ use_block_rsv(struct btrfs_trans_handle
 		return block_rsv;
 	if (ret) {
 		static DEFINE_RATELIMIT_STATE(_rs,
-				DEFAULT_RATELIMIT_INTERVAL,
-				/*DEFAULT_RATELIMIT_BURST*/ 2);
+				DEFAULT_RATELIMIT_INTERVAL * 10,
+				/*DEFAULT_RATELIMIT_BURST*/ 1);
 		if (__ratelimit(&_rs)) {
-			printk(KERN_DEBUG "btrfs: block rsv returned %d\n", ret);
-			WARN_ON(1);
+			WARN(1, KERN_DEBUG "btrfs: block rsv returned %d\n", ret);
 		}
 		ret = reserve_metadata_bytes(root, block_rsv, blocksize, 0);
 		if (!ret) {
--- a/fs/btrfs/inode.c
+++ b/fs/btrfs/inode.c
@@ -2423,13 +2423,13 @@ int btrfs_orphan_cleanup(struct btrfs_ro
 	}
 
 	if (nr_unlink)
-		printk(KERN_INFO "btrfs: unlinked %d orphans\n", nr_unlink);
+		printk(KERN_DEBUG "btrfs: unlinked %d orphans\n", nr_unlink);
 	if (nr_truncate)
-		printk(KERN_INFO "btrfs: truncated %d orphans\n", nr_truncate);
+		printk(KERN_DEBUG "btrfs: truncated %d orphans\n", nr_truncate);
 
 out:
 	if (ret)
-		printk(KERN_CRIT "btrfs: could not do orphan cleanup %d\n", ret);
+		printk(KERN_ERR "btrfs: could not do orphan cleanup %d\n", ret);
 	btrfs_free_path(path);
 	return ret;
 }
--- a/fs/btrfs/super.c
+++ b/fs/btrfs/super.c
@@ -740,7 +740,7 @@ static int btrfs_fill_super(struct super
 	tree_root = open_ctree(sb, fs_devices, (char *)data);
 
 	if (IS_ERR(tree_root)) {
-		printk("btrfs: open_ctree failed\n");
+		printk(KERN_ERR "btrfs: open_ctree failed\n");
 		return PTR_ERR(tree_root);
 	}
 	fs_info = tree_root->fs_info;
@@ -1478,7 +1478,7 @@ static void btrfs_fs_dirty_inode(struct
 
 	ret = btrfs_dirty_inode(inode);
 	if (ret)
-		printk_ratelimited(KERN_ERR "btrfs: fail to dirty inode %Lu "
+		printk_ratelimited(KERN_DEBUG "btrfs: fail to dirty inode %Lu "
 				   "error %d\n", btrfs_ino(inode), ret);
 }
 
