Subject: [S390] topology: expose core identifier
From: Heiko Carstens <heiko.carstens@de.ibm.com>
Date: Mon May 17 10:00:12 2010 +0200
Git-commit: 10d3858950557cd3cc05f647ede597114c610177
References: FATE#311860
Patch-mainline: v2.6.35-rc1

Provide a topology_core_id define which makes sure that the contents of
/sys/devices/system/cpu/cpuX/topology/core_id
indeed do contain the core id and not always 0.

Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
Acked-by: Mike Galbraith <mgalbraith@suse.de>

---
 arch/s390/include/asm/topology.h |    2 ++
 arch/s390/kernel/topology.c      |    7 ++++++-
 2 files changed, 8 insertions(+), 1 deletion(-)

Index: linux-2.6.32-SLE11-SP2/arch/s390/include/asm/topology.h
===================================================================
--- linux-2.6.32-SLE11-SP2.orig/arch/s390/include/asm/topology.h
+++ linux-2.6.32-SLE11-SP2/arch/s390/include/asm/topology.h
@@ -7,8 +7,10 @@
 
 const struct cpumask *cpu_coregroup_mask(unsigned int cpu);
 
+extern unsigned char cpu_core_id[NR_CPUS];
 extern cpumask_t cpu_core_map[NR_CPUS];
 
+#define topology_core_id(cpu)		(cpu_core_id[cpu])
 #define topology_core_cpumask(cpu)	(&cpu_core_map[cpu])
 
 int topology_set_cpu_management(int fc);
Index: linux-2.6.32-SLE11-SP2/arch/s390/kernel/topology.c
===================================================================
--- linux-2.6.32-SLE11-SP2.orig/arch/s390/kernel/topology.c
+++ linux-2.6.32-SLE11-SP2/arch/s390/kernel/topology.c
@@ -37,7 +37,8 @@ struct tl_cpu {
 };
 
 struct tl_container {
-	unsigned char reserved[8];
+	unsigned char reserved[7];
+	unsigned char id;
 };
 
 union tl_entry {
@@ -58,6 +59,7 @@ struct tl_info {
 
 struct core_info {
 	struct core_info *next;
+	unsigned char id;
 	cpumask_t mask;
 };
 
@@ -73,6 +75,7 @@ static DECLARE_WORK(topology_work, topol
 static DEFINE_SPINLOCK(topology_lock);
 
 cpumask_t cpu_core_map[NR_CPUS];
+unsigned char cpu_core_id[NR_CPUS];
 
 static cpumask_t cpu_coregroup_map(unsigned int cpu)
 {
@@ -116,6 +119,7 @@ static void add_cpus_to_core(struct tl_c
 		for_each_present_cpu(lcpu) {
 			if (cpu_logical_map(lcpu) == rcpu) {
 				cpu_set(lcpu, core->mask);
+				cpu_core_id[lcpu] = core->id;
 				smp_cpu_polarization[lcpu] = tl_cpu->pp;
 			}
 		}
@@ -158,6 +162,7 @@ static void tl_to_cores(struct tl_info *
 			break;
 		case 1:
 			core = core->next;
+			core->id = tle->container.id;
 			break;
 		case 0:
 			add_cpus_to_core(&tle->cpu, core);

