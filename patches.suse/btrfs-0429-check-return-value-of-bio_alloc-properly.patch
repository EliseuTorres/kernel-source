From: Tsutomu Itoh <t-itoh@jp.fujitsu.com>
Date: Thu, 12 Apr 2012 16:03:56 -0400
Patch-mainline: yes
References: FATE#306586
Git-commit: e627ee7bcd42b4e3a03ca01a8e46dcb4033c5ae0
Subject: [PATCH] Btrfs: check return value of bio_alloc() properly

bio_alloc() has the possibility of returning NULL.
So, it is necessary to check the return value.

Signed-off-by: Tsutomu Itoh <t-itoh@jp.fujitsu.com>
Signed-off-by: Chris Mason <chris.mason@oracle.com>
Signed-off-by: David Sterba <dsterba@suse.cz>
---
 fs/btrfs/compression.c |    2 ++
 fs/btrfs/extent_io.c   |    4 ++++
 fs/btrfs/scrub.c       |    2 ++
 3 files changed, 8 insertions(+)

--- a/fs/btrfs/compression.c
+++ b/fs/btrfs/compression.c
@@ -406,6 +406,7 @@ int btrfs_submit_compressed_write(struct
 			bio_put(bio);
 
 			bio = compressed_bio_alloc(bdev, first_byte, GFP_NOFS);
+			BUG_ON(!bio);
 			bio->bi_private = cb;
 			bio->bi_end_io = end_compressed_bio_write;
 			bio_add_page(bio, page, PAGE_CACHE_SIZE, 0);
@@ -688,6 +689,7 @@ int btrfs_submit_compressed_read(struct
 
 			comp_bio = compressed_bio_alloc(bdev, cur_disk_byte,
 							GFP_NOFS);
+			BUG_ON(!comp_bio);
 			comp_bio->bi_private = cb;
 			comp_bio->bi_end_io = end_compressed_bio_read;
 
--- a/fs/btrfs/extent_io.c
+++ b/fs/btrfs/extent_io.c
@@ -2140,6 +2140,10 @@ static int bio_readpage_error(struct bio
 	}
 
 	bio = bio_alloc(GFP_NOFS, 1);
+	if (!bio) {
+		free_io_failure(inode, failrec, 0);
+		return -EIO;
+	}
 	bio->bi_private = state;
 	bio->bi_end_io = failed_bio->bi_end_io;
 	bio->bi_sector = failrec->logical >> 9;
--- a/fs/btrfs/scrub.c
+++ b/fs/btrfs/scrub.c
@@ -728,6 +728,8 @@ static int scrub_fixup_io(int rw, struct
 	DECLARE_COMPLETION_ONSTACK(complete);
 
 	bio = bio_alloc(GFP_NOFS, 1);
+	if (!bio)
+		return -EIO;
 	bio->bi_bdev = bdev;
 	bio->bi_sector = sector;
 	bio_add_page(bio, page, PAGE_SIZE, 0);
