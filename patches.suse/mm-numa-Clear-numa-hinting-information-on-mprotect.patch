From: Mel Gorman <mgorman@suse.de>
Date: Fri, 29 Nov 2013 17:58:29 +0000
Subject: [PATCH] mm: numa: Clear numa hinting information on mprotect

References: Automatic NUMA Balancing (fate#315482)
Patch-mainline: No (under testing and review)
Git-commit: 3e133bac6ee38d6babdd996afc3028dfa5c3feb6

On a protection change it is no longer clear if the page should be still
accessible.  This patch clears the NUMA hinting fault bits on a protection
change.

Signed-off-by: Mel Gorman <mgorman@suse.de>
---
 mm/huge_memory.c | 2 ++
 mm/mprotect.c    | 2 ++
 2 files changed, 4 insertions(+)

diff --git a/mm/huge_memory.c b/mm/huge_memory.c
index acb968f..a3bf99b 100644
--- a/mm/huge_memory.c
+++ b/mm/huge_memory.c
@@ -1521,6 +1521,8 @@ int change_huge_pmd(struct vm_area_struct *vma, pmd_t *pmd,
 		ret = 1;
 		if (!prot_numa) {
 			entry = pmdp_get_and_clear(mm, addr, pmd);
+			if (pmd_numa(entry))
+				entry = pmd_mknonnuma(entry);
 			entry = pmd_modify(entry, newprot);
 			ret = HPAGE_PMD_NR;
 			BUG_ON(pmd_write(entry));
diff --git a/mm/mprotect.c b/mm/mprotect.c
index 89302a9..494b160 100644
--- a/mm/mprotect.c
+++ b/mm/mprotect.c
@@ -54,6 +54,8 @@ static unsigned long change_pte_range(struct vm_area_struct *vma, pmd_t *pmd,
 
 			if (!prot_numa) {
 				ptent = ptep_modify_prot_start(mm, addr, pte);
+				if (pte_numa(ptent))
+					ptent = pte_mknonnuma(ptent);
 				ptent = pte_modify(ptent, newprot);
 				updated = true;
 			} else {
