From: Hannes Reinecke <hare@suse.de>
Date: Tue, 12 Jul 2011 13:57:03 +0200
Subject: target: Backport for SLES11 SP2
Patch-Mainline: n/a
References: FATE#311801,bnc#687068

We're missing several commits from v3.0, so we need to revert
them for SLES11 SP2.

Signed-off-by: Hannes Reinecke <hare@suse.de>
---
 drivers/target/target_core_file.c   |    6 ++++--
 drivers/target/target_core_iblock.c |   11 ++++++-----
 drivers/target/target_core_pscsi.c  |    4 ++--
 3 files changed, 12 insertions(+), 9 deletions(-)

diff --git a/drivers/target/target_core_file.c b/drivers/target/target_core_file.c
index 150c430..f61fd14 100644
--- a/drivers/target/target_core_file.c
+++ b/drivers/target/target_core_file.c
@@ -403,7 +403,8 @@ static void fd_emulate_sync_cache(struct se_task *task)
 			end = LLONG_MAX;
 	}
 
-	ret = vfs_fsync_range(fd_dev->fd_file, start, end, 1);
+	ret = vfs_fsync_range(fd_dev->fd_file, fd_dev->fd_file->f_path.dentry,
+			      start, end, 1);
 	if (ret != 0)
 		printk(KERN_ERR "FILEIO: vfs_fsync_range() failed: %d\n", ret);
 
@@ -453,7 +454,8 @@ static void fd_emulate_write_fua(struct se_cmd *cmd, struct se_task *task)
 	DEBUG_FD_CACHE("FILEIO: FUA WRITE LBA: %llu, bytes: %u\n",
 			task->task_lba, task->task_size);
 
-	ret = vfs_fsync_range(fd_dev->fd_file, start, end, 1);
+	ret = vfs_fsync_range(fd_dev->fd_file, fd_dev->fd_file->f_path.dentry,
+			      start, end, 1);
 	if (ret != 0)
 		printk(KERN_ERR "FILEIO: vfs_fsync_range() failed: %d\n", ret);
 }
diff --git a/drivers/target/target_core_iblock.c b/drivers/target/target_core_iblock.c
index 8663900..cdb950a 100644
--- a/drivers/target/target_core_iblock.c
+++ b/drivers/target/target_core_iblock.c
@@ -152,8 +152,8 @@ static struct se_device *iblock_create_virtdevice(
 	printk(KERN_INFO  "IBLOCK: Claiming struct block_device: %s\n",
 			ib_dev->ibd_udev_path);
 
-	bd = blkdev_get_by_path(ib_dev->ibd_udev_path,
-				FMODE_WRITE|FMODE_READ|FMODE_EXCL, ib_dev);
+	bd = open_bdev_exclusive(ib_dev->ibd_udev_path,
+				 FMODE_WRITE|FMODE_READ, ib_dev);
 	if (IS_ERR(bd)) {
 		ret = PTR_ERR(bd);
 		goto failed;
@@ -392,8 +392,9 @@ static int iblock_do_task(struct se_task *task)
 {
 	struct se_device *dev = task->task_se_cmd->se_dev;
 	struct iblock_req *req = IBLOCK_REQ(task);
+	struct iblock_dev *ibd = (struct iblock_dev *)req->ib_dev;
+	struct request_queue *q = bdev_get_queue(ibd->ibd_bd);
 	struct bio *bio = req->ib_bio, *nbio = NULL;
-	struct blk_plug plug;
 	int rw;
 
 	if (task->task_data_direction == DMA_TO_DEVICE) {
@@ -411,7 +412,6 @@ static int iblock_do_task(struct se_task *task)
 		rw = READ;
 	}
 
-	blk_start_plug(&plug);
 	while (bio) {
 		nbio = bio->bi_next;
 		bio->bi_next = NULL;
@@ -421,7 +421,8 @@ static int iblock_do_task(struct se_task *task)
 		submit_bio(rw, bio);
 		bio = nbio;
 	}
-	blk_finish_plug(&plug);
+	if (q->unplug_fn)
+		q->unplug_fn(q);
 
 	return PYX_TRANSPORT_SENT_TO_TRANSPORT;
 }
diff --git a/drivers/target/target_core_pscsi.c b/drivers/target/target_core_pscsi.c
index 331d423..7c0ebae 100644
--- a/drivers/target/target_core_pscsi.c
+++ b/drivers/target/target_core_pscsi.c
@@ -460,8 +460,8 @@ static struct se_device *pscsi_create_type_disk(
 	 * Claim exclusive struct block_device access to struct scsi_device
 	 * for TYPE_DISK using supplied udev_path
 	 */
-	bd = blkdev_get_by_path(se_dev->se_dev_udev_path,
-				FMODE_WRITE|FMODE_READ|FMODE_EXCL, pdv);
+	bd = open_bdev_exclusive(se_dev->se_dev_udev_path,
+				 FMODE_WRITE|FMODE_READ, pdv);
 	if (IS_ERR(bd)) {
 		printk(KERN_ERR "pSCSI: blkdev_get_by_path() failed\n");
 		scsi_device_put(sd);
-- 
1.6.0.2

