From: Tony Jones <tonyj@suse.de>
Subject: drop additional perfmon2 syscalls
Patch-mainline: never, see description in perfmon2.patch

Patch accepted from SGI (FATE#303968) still adds the 12 new syscalls
which have been replaced (for SLES11) with an ioctl based interface.

Remove the relevant syscalls.

Signed-off-by: Tony Jones <tonyj@suse.de>

---
 arch/ia64/include/asm/unistd.h |   14 +-------------
 arch/ia64/kernel/entry.S       |   12 ------------
 include/linux/syscalls.h       |   30 ------------------------------
 kernel/sys_ni.c                |   13 -------------
 4 files changed, 1 insertion(+), 68 deletions(-)

--- a/arch/ia64/include/asm/unistd.h
+++ b/arch/ia64/include/asm/unistd.h
@@ -322,23 +322,11 @@
 #define __NR_process_vm_readv		1332
 #define __NR_process_vm_writev		1333
 #define __NR_accept4			1334
-#define	__NR_pfm_create_context		1335
-#define	__NR_pfm_write_pmcs		(__NR_pfm_create_context+1)
-#define	__NR_pfm_write_pmds		(__NR_pfm_create_context+2)
-#define	__NR_pfm_read_pmds		(__NR_pfm_create_context+3)
-#define	__NR_pfm_load_context		(__NR_pfm_create_context+4)
-#define	__NR_pfm_start			(__NR_pfm_create_context+5)
-#define	__NR_pfm_stop			(__NR_pfm_create_context+6)
-#define	__NR_pfm_restart		(__NR_pfm_create_context+7)
-#define	__NR_pfm_create_evtsets		(__NR_pfm_create_context+8)
-#define	__NR_pfm_getinfo_evtsets	(__NR_pfm_create_context+9)
-#define	__NR_pfm_delete_evtsets		(__NR_pfm_create_context+10)
-#define	__NR_pfm_unload_context		(__NR_pfm_create_context+11)
 
 #ifdef __KERNEL__
 
 
-#define NR_syscalls			325 /* length of syscall table */
+#define NR_syscalls			313 /* length of syscall table */
 
 /*
  * The following defines stop scripts/checksyscalls.sh from complaining about
--- a/arch/ia64/kernel/entry.S
+++ b/arch/ia64/kernel/entry.S
@@ -1780,18 +1780,6 @@ sys_call_table:
 	data8 sys_process_vm_readv
 	data8 sys_process_vm_writev
 	data8 sys_accept4
-	data8 sys_pfm_create_context		// 1335
-	data8 sys_pfm_write_pmcs
-	data8 sys_pfm_write_pmds
-	data8 sys_pfm_read_pmds
-	data8 sys_pfm_load_context
-	data8 sys_pfm_start			// 1340
-	data8 sys_pfm_stop
-	data8 sys_pfm_restart
-	data8 sys_pfm_create_evtsets
-	data8 sys_pfm_getinfo_evtsets
-	data8 sys_pfm_delete_evtsets		// 1345
-	data8 sys_pfm_unload_context
 
 	.org sys_call_table + 8*NR_syscalls	// guard against failures to increase NR_syscalls
 #endif /* __IA64_ASM_PARAVIRTUALIZED_NATIVE */
--- a/include/linux/syscalls.h
+++ b/include/linux/syscalls.h
@@ -34,13 +34,6 @@ struct __old_kernel_stat;
 struct oldold_utsname;
 struct old_utsname;
 struct pollfd;
-struct pfarg_ctx;
-struct pfarg_pmc;
-struct pfarg_pmd;
-struct pfarg_start;
-struct pfarg_load;
-struct pfarg_setinfo;
-struct pfarg_setdesc;
 struct rlimit;
 struct rlimit64;
 struct rusage;
@@ -838,29 +831,6 @@ asmlinkage long sys_syncfs(int fd);
 
 int kernel_execve(const char *filename, const char *const argv[], const char *const envp[]);
 
-asmlinkage long sys_pfm_create_context(struct pfarg_ctx __user *ureq,
-				       void __user *uarg, size_t smpl_size);
-asmlinkage long sys_pfm_write_pmcs(int fd, struct pfarg_pmc __user *ureq,
-				   int count);
-asmlinkage long sys_pfm_write_pmds(int fd, struct pfarg_pmd __user *ureq,
-				   int count);
-asmlinkage long sys_pfm_read_pmds(int fd, struct pfarg_pmd __user *ureq,
-				  int count);
-asmlinkage long sys_pfm_restart(int fd);
-asmlinkage long sys_pfm_stop(int fd);
-asmlinkage long sys_pfm_start(int fd, struct pfarg_start __user *ureq);
-asmlinkage long sys_pfm_load_context(int fd, struct pfarg_load __user *ureq);
-asmlinkage long sys_pfm_unload_context(int fd);
-asmlinkage long sys_pfm_delete_evtsets(int fd,
-				       struct pfarg_setinfo __user *ureq,
-				       int count);
-asmlinkage long sys_pfm_create_evtsets(int fd,
-				       struct pfarg_setdesc __user *ureq,
-				       int count);
-asmlinkage long sys_pfm_getinfo_evtsets(int fd,
-					struct pfarg_setinfo __user *ureq,
-					int count);
-
 asmlinkage long sys_perf_event_open(
 		struct perf_event_attr __user *attr_uptr,
 		pid_t pid, int cpu, int group_fd, unsigned long flags);
--- a/kernel/sys_ni.c
+++ b/kernel/sys_ni.c
@@ -147,19 +147,6 @@ cond_syscall(sys_io_cancel);
 cond_syscall(compat_sys_process_vm_readv);
 cond_syscall(compat_sys_process_vm_writev);
 
-cond_syscall(sys_pfm_create_context);
-cond_syscall(sys_pfm_write_pmcs);
-cond_syscall(sys_pfm_write_pmds);
-cond_syscall(sys_pfm_read_pmds);
-cond_syscall(sys_pfm_restart);
-cond_syscall(sys_pfm_start);
-cond_syscall(sys_pfm_stop);
-cond_syscall(sys_pfm_load_context);
-cond_syscall(sys_pfm_unload_context);
-cond_syscall(sys_pfm_create_evtsets);
-cond_syscall(sys_pfm_delete_evtsets);
-cond_syscall(sys_pfm_getinfo_evtsets);
-
 /* arch-specific weak syscall entries */
 cond_syscall(sys_pciconfig_read);
 cond_syscall(sys_pciconfig_write);
