From: Jens Axboe <jaxboe@fusionio.com>
Date: Tue, 1 Jun 2010 12:23:18 +0200
Subject: [PATCH] block: disable preemption before using sched_clock()
X-Git: 28f4197e5d4707311febeec8a0eb97cb5fd93c97
References: FATE#311692
Patch-Mainline: 2.6.34

Commit 9195291e5f05e01d67f9a09c756b8aca8f009089 added calls to
sched_clock() from preemptible code. sched_clock() is both the
wrong interface AND cannot be called without preempt disabled.

Apply a temporary fix to get rid of the warnings, a real patch
is in the works.

Signed-off-by: Jens Axboe <jaxboe@fusionio.com>
Signed-off-by: Hannes Reinecke <hare@suse.de>
---
 include/linux/blkdev.h |    9 +++++++++
 1 files changed, 9 insertions(+), 0 deletions(-)

diff --git a/include/linux/blkdev.h b/include/linux/blkdev.h
index 6b78350..5d6aa8c 100644
--- a/include/linux/blkdev.h
+++ b/include/linux/blkdev.h
@@ -1240,14 +1240,23 @@ struct work_struct;
 int kblockd_schedule_work(struct request_queue *q, struct work_struct *work);
 
 #ifdef CONFIG_BLK_CGROUP
+/*
+ * This should not be using sched_clock(). A real patch is in progress
+ * to fix this up, until that is in place we need to disable preemption
+ * around sched_clock() in this function and set_io_start_time_ns().
+ */
 static inline void set_start_time_ns(struct request *req)
 {
+	preempt_disable();
 	req->start_time_ns = sched_clock();
+	preempt_enable();
 }
 
 static inline void set_io_start_time_ns(struct request *req)
 {
+	preempt_disable();
 	req->io_start_time_ns = sched_clock();
+	preempt_enable();
 }
 #else
 static inline void set_start_time_ns(struct request *req) {}
-- 
1.6.0.2

