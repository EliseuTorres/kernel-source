Subject: [SCSI] libfc: Fix wrong scsi return status under FC_DATA_UNDRUN
References: fate#306857, fate#306859, bnc#551175
Acked-by: Jiri Bohac <jbohac@suse.cz>
From: Yi Zou <yi.zou@intel.com>
Patch-mainline: 2.6.33-rc1
Git-commit: 4347fa66878e079766258bc0d077c350cb31a799

This bug is exposed when there is a link flap in LLD. Particularly, when it
    happens right after a SCSI write command is sent out, no FCP_DATA is sent,
    causing fsp->status_code to be set as FC_DATA_UNDRUN in fc_fcp_complete_locked
    even no SCSI status is received. Consequently, fc_io_compl treats this as DID_OK.
    This results in SCSI returning successful to the initial I/O request even
    there is no DATA actually sent. Particularly, if you run an I/O tool w/ data
    verification on, the read back for verification is gonna fail.

    This is fixed here by checking when FC_DATA_UNDRUN happens, SCSI status is
    received w/ FC_SRB_RCV_STATUS set in fsp->state.

    Signed-off-by: Yi Zou <yi.zou@intel.com>
    Signed-off-by: Robert Love <robert.w.love@intel.com>
    Signed-off-by: James Bottomley <James.Bottomley@suse.de>
---

 drivers/scsi/libfc/fc_fcp.c |    3 ++-
 1 files changed, 2 insertions(+), 1 deletions(-)


diff --git a/drivers/scsi/libfc/fc_fcp.c b/drivers/scsi/libfc/fc_fcp.c
index ade962d..40ed744 100644
--- a/drivers/scsi/libfc/fc_fcp.c
+++ b/drivers/scsi/libfc/fc_fcp.c
@@ -1849,7 +1849,8 @@ static void fc_io_compl(struct fc_fcp_pkt *fsp)
 			 * scsi status is good but transport level
 			 * underrun.
 			 */
-			sc_cmd->result = DID_OK << 16;
+			sc_cmd->result = (fsp->state & FC_SRB_RCV_STATUS ?
+					  DID_OK : DID_ERROR) << 16;
 		} else {
 			/*
 			 * scsi got underrun, this is an error
