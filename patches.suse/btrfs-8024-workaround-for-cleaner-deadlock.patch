From: David Sterba <dsterba@suse.cz>
Date: Thu, 15 Dec 2011 02:10:55 +0100
Patch-mainline: pending
References: FATE#306586
Subject: [PATCH] btrfs: workaround for cleaner deadlock

Signed-off-by: David Sterba <dsterba@suse.cz>
---
 fs/btrfs/disk-io.c     |    2 ++
 fs/btrfs/extent-tree.c |    3 +++
 2 files changed, 5 insertions(+)

--- a/fs/btrfs/disk-io.c
+++ b/fs/btrfs/disk-io.c
@@ -1645,11 +1645,13 @@ static int cleaner_kthread(void *arg)
 		vfs_check_frozen(root->fs_info->sb, SB_FREEZE_WRITE);
 
 		if (!(root->fs_info->sb->s_flags & MS_RDONLY) &&
+			down_read_trylock(&root->fs_info->sb->s_umount) &&
 		    mutex_trylock(&root->fs_info->cleaner_mutex)) {
 			btrfs_run_delayed_iputs(root);
 			btrfs_clean_old_snapshots(root);
 			mutex_unlock(&root->fs_info->cleaner_mutex);
 			btrfs_run_defrag_inodes(root->fs_info);
+			up_read(&root->fs_info->sb->s_umount);
 		}
 
 		if (freezing(current)) {
--- a/fs/btrfs/extent-tree.c
+++ b/fs/btrfs/extent-tree.c
@@ -3731,6 +3731,9 @@ static void shrink_delalloc(struct btrfs
 	}
 
 	while (delalloc_bytes && loops < 3) {
+		if (btrfs_fs_closing(root->fs_info))
+			return;
+
 		max_reclaim = min(delalloc_bytes, to_reclaim);
 		nr_pages = max_reclaim >> PAGE_CACHE_SHIFT;
 		writeback_inodes_sb_nr_if_idle_safe(root->fs_info->sb, nr_pages);
