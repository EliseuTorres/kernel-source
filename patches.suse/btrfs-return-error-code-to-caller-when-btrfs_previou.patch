From: Tsutomu Itoh <t-itoh@jp.fujitsu.com>
Date: Thu, 19 May 2011 07:03:42 +0000
Patch-mainline: yes
References: FATE#306586
Subject: [PATCH] Btrfs: return error code to caller when
 btrfs_previous_item fails

The error code is returned instead of calling BUG_ON when
btrfs_previous_item returns the error.

Signed-off-by: Tsutomu Itoh <t-itoh@jp.fujitsu.com>
Signed-off-by: Chris Mason <chris.mason@oracle.com>
Signed-off-by: David Sterba <dsterba@suse.cz>
---
 fs/btrfs/volumes.c |    5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

Index: linux-2.6.32-SLE11-SP2/fs/btrfs/volumes.c
===================================================================
--- linux-2.6.32-SLE11-SP2.orig/fs/btrfs/volumes.c
+++ linux-2.6.32-SLE11-SP2/fs/btrfs/volumes.c
@@ -963,14 +963,14 @@ static int btrfs_free_dev_extent(struct
 	if (ret > 0) {
 		ret = btrfs_previous_item(root, path, key.objectid,
 					  BTRFS_DEV_EXTENT_KEY);
-		BUG_ON(ret);
+		if (ret)
+			goto out;
 		leaf = path->nodes[0];
 		btrfs_item_key_to_cpu(leaf, &found_key, path->slots[0]);
 		extent = btrfs_item_ptr(leaf, path->slots[0],
 					struct btrfs_dev_extent);
 		BUG_ON(found_key.offset > start || found_key.offset +
 		       btrfs_dev_extent_length(leaf, extent) < start);
-		ret = 0;
 	} else if (ret == 0) {
 		leaf = path->nodes[0];
 		extent = btrfs_item_ptr(leaf, path->slots[0],
@@ -983,6 +983,7 @@ static int btrfs_free_dev_extent(struct
 	ret = btrfs_del_item(trans, root, path);
 	BUG_ON(ret);
 
+out:
 	btrfs_free_path(path);
 	return ret;
 }
