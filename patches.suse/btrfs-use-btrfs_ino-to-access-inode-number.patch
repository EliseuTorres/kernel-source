From: David Sterba <dsterba@suse.cz>
Date: Tue, 31 May 2011 17:08:14 +0000
Patch-mainline: yes
References: FATE#306586
Subject: [PATCH] btrfs: use btrfs_ino to access inode number

commit 4cb5300bc ("Btrfs: add mount -o auto_defrag") accesses inode
number directly while it should use the helper with the new inode
number allocator.

Signed-off-by: David Sterba <dsterba@suse.cz>
Signed-off-by: Chris Mason <chris.mason@oracle.com>
Signed-off-by: David Sterba <dsterba@suse.cz>
---
 fs/btrfs/file.c  |    2 +-
 fs/btrfs/ioctl.c |    7 ++++---
 2 files changed, 5 insertions(+), 4 deletions(-)

Index: linux-2.6.32-SLE11-SP2/fs/btrfs/file.c
===================================================================
--- linux-2.6.32-SLE11-SP2.orig/fs/btrfs/file.c
+++ linux-2.6.32-SLE11-SP2/fs/btrfs/file.c
@@ -142,7 +142,7 @@ int btrfs_add_inode_defrag(struct btrfs_
 	if (!defrag)
 		return -ENOMEM;
 
-	defrag->ino = inode->i_ino;
+	defrag->ino = btrfs_ino(inode);
 	defrag->transid = transid;
 	defrag->root = root->root_key.objectid;
 
Index: linux-2.6.32-SLE11-SP2/fs/btrfs/ioctl.c
===================================================================
--- linux-2.6.32-SLE11-SP2.orig/fs/btrfs/ioctl.c
+++ linux-2.6.32-SLE11-SP2/fs/btrfs/ioctl.c
@@ -660,16 +660,17 @@ static int find_new_extents(struct btrfs
 	struct btrfs_file_extent_item *extent;
 	int type;
 	int ret;
+	u64 ino = btrfs_ino(inode);
 
 	path = btrfs_alloc_path();
 	if (!path)
 		return -ENOMEM;
 
-	min_key.objectid = inode->i_ino;
+	min_key.objectid = ino;
 	min_key.type = BTRFS_EXTENT_DATA_KEY;
 	min_key.offset = *off;
 
-	max_key.objectid = inode->i_ino;
+	max_key.objectid = ino;
 	max_key.type = (u8)-1;
 	max_key.offset = (u64)-1;
 
@@ -680,7 +681,7 @@ static int find_new_extents(struct btrfs
 					   path, 0, newer_than);
 		if (ret != 0)
 			goto none;
-		if (min_key.objectid != inode->i_ino)
+		if (min_key.objectid != ino)
 			goto none;
 		if (min_key.type != BTRFS_EXTENT_DATA_KEY)
 			goto none;
