From: K.Prasad <prasad@linux.vnet.ibm.com>
Subject: hw_breakpoints: Allow arch-specific cleanup before breakpoint unregistration
Date: Tue Jun 15 11:34:34 2010 +0530
Git-commit: f7136c5150c29846d7a1d09109449d96b2f63445
Patch-mainline: v2.6.36-rc1
References: FATE#311653, BNC#702123
Signed-off-by: Tony Jones <tonyj@suse.de>

    hw_breakpoints: Allow arch-specific cleanup before breakpoint unregistration
    
    Certain architectures (such as PowerPC) have a need to clean up data
    structures before a breakpoint is unregistered.  This introduces an
    arch-specific hook in release_bp_slot() along with a weak definition
    in the form of a stub function.
    
    Signed-off-by: K.Prasad <prasad@linux.vnet.ibm.com>
    Acked-by: Frederic Weisbecker <fweisbec@gmail.com>
    Signed-off-by: Paul Mackerras <paulus@samba.org>

---
 kernel/hw_breakpoint.c |   12 ++++++++++++
 1 file changed, 12 insertions(+)

--- a/kernel/hw_breakpoint.c
+++ b/kernel/hw_breakpoint.c
@@ -242,6 +242,17 @@ toggle_bp_slot(struct perf_event *bp, bo
 }
 
 /*
+ * Function to perform processor-specific cleanup during unregistration
+ */
+__weak void arch_unregister_hw_breakpoint(struct perf_event *bp)
+{
+	/*
+	 * A weak stub function here for those archs that don't define
+	 * it inside arch/.../kernel/hw_breakpoint.c
+	 */
+}
+
+/*
  * Contraints to check before allowing this new breakpoint counter:
  *
  *  == Non-pinned counter == (Considered as pinned for now)
@@ -339,6 +350,7 @@ void release_bp_slot(struct perf_event *
 {
 	mutex_lock(&nr_bp_mutex);
 
+	arch_unregister_hw_breakpoint(bp);
 	__release_bp_slot(bp);
 
 	mutex_unlock(&nr_bp_mutex);
