From: Matthew Garrett <matthew.garrett@nebula.com>
Subject: [PATCH V3 01/11] Add secure_modules() call
Date: Tue,  3 Sep 2013 19:50:08 -0400

Git-commit: Not yet
Patch-mainline: Not yet, fedora 20
References: fate#314486, bnc#884333
Target: SLE-11 SP3

Provide a single call to allow kernel code to determine whether the system
has been configured to either disable module loading entirely or to load
only modules signed with a trusted key.

Signed-off-by: Matthew Garrett <matthew.garrett@nebula.com>
Acked-by: Lee, Chun-Yi <jlee@suse.com>

---
 include/linux/module.h |  7 +++++++
 kernel/module.c        | 10 ++++++++++
 2 files changed, 17 insertions(+)

Index: linux-3.0-SLE11-SP3/include/linux/module.h
===================================================================
--- linux-3.0-SLE11-SP3.orig/include/linux/module.h
+++ linux-3.0-SLE11-SP3/include/linux/module.h
@@ -593,6 +593,8 @@ extern void print_modules(void);
 extern void module_update_tracepoints(void);
 extern int module_get_iter_tracepoints(struct tracepoint_iter *iter);
 
+extern bool secure_modules(void);
+
 #else /* !CONFIG_MODULES... */
 #define EXPORT_SYMBOL(sym)
 #define EXPORT_SYMBOL_GPL(sym)
@@ -717,6 +719,11 @@ static inline int module_get_iter_tracep
 {
 	return 0;
 }
+
+static inline bool secure_modules(void)
+{
+	return false;
+}
 #endif /* CONFIG_MODULES */
 
 #ifdef CONFIG_SYSFS
Index: linux-3.0-SLE11-SP3/kernel/module.c
===================================================================
--- linux-3.0-SLE11-SP3.orig/kernel/module.c
+++ linux-3.0-SLE11-SP3/kernel/module.c
@@ -3687,3 +3687,13 @@ int module_get_iter_tracepoints(struct t
 	return found;
 }
 #endif
+
+bool secure_modules(void)
+{
+#ifdef CONFIG_MODULE_SIG
+	return (sig_enforce || modules_disabled);
+#else
+	return modules_disabled;
+#endif
+}
+EXPORT_SYMBOL(secure_modules);
