Subject: [SCSI] fcoe: Call ndo_fcoe_enable/disable to turn FCoE feature on/off in LLD
References: fate#306857, fate#306859, bnc#551175
Acked-by: Jiri Bohac <jbohac@suse.cz>
From: Yi Zou <yi.zou@intel.com>
Patch-mainline: 2.6.33-rc1
Git-commit: b7a727f1af953b00352d3a4b6c458c6e2872f94b

Calls ndo_fcoe_enabled() of the associated netdev upon creating the FCoE
    instance to make sure LLD has all necessary resources allocated and setup
    properly before passing FCoE traffic. Similarly, calls ndo_fcoe_disable()
    upon destroying the FCoE instance on the associated netdev to allow the LLD
    to release all allocated resources for FCoE.

    Signed-off-by: Yi Zou <yi.zou@intel.com>
    Signed-off-by: Robert Love <robert.w.love@intel.com>
    Signed-off-by: James Bottomley <James.Bottomley@suse.de>
---

 drivers/scsi/fcoe/fcoe.c |   18 ++++++++++++++++++
 1 file changed, 18 insertions(+)


--- a/drivers/scsi/fcoe/fcoe.c
+++ b/drivers/scsi/fcoe/fcoe.c
@@ -162,9 +162,18 @@ static int fcoe_interface_setup(struct f
 	struct netdev_hw_addr *ha;
 	struct net_device *real_dev;
 	u8 flogi_maddr[ETH_ALEN];
+	const struct net_device_ops *ops;
 
 	fcoe->netdev = netdev;
 
+	/* Let LLD initialize for FCoE */
+	ops = netdev->netdev_ops;
+	if (ops->ndo_fcoe_enable) {
+		if (ops->ndo_fcoe_enable(netdev))
+			FCOE_NETDEV_DBG(netdev, "Failed to enable FCoE"
+					" specific feature for LLD.\n");
+	}
+
 	/* Do not support for bonding device */
 	if ((netdev->priv_flags & IFF_MASTER_ALB) ||
 	    (netdev->priv_flags & IFF_SLAVE_INACTIVE) ||
@@ -265,6 +274,7 @@ void fcoe_interface_cleanup(struct fcoe_
 	struct net_device *netdev = fcoe->netdev;
 	struct fcoe_ctlr *fip = &fcoe->ctlr;
 	u8 flogi_maddr[ETH_ALEN];
+	const struct net_device_ops *ops;
 
 	/*
 	 * Don't listen for Ethernet packets anymore.
@@ -284,6 +294,14 @@ void fcoe_interface_cleanup(struct fcoe_
 	if (fip->spma)
 		dev_unicast_delete(netdev, fip->ctl_src_addr);
 	dev_mc_delete(netdev, FIP_ALL_ENODE_MACS, ETH_ALEN, 0);
+
+	/* Tell the LLD we are done w/ FCoE */
+	ops = netdev->netdev_ops;
+	if (ops->ndo_fcoe_disable) {
+		if (ops->ndo_fcoe_disable(netdev))
+			FCOE_NETDEV_DBG(netdev, "Failed to disable FCoE"
+					" specific feature for LLD.\n");
+	}
 }
 
 /**
