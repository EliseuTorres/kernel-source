From: Luciano Chavez <lnx1138@linux.vnet.ibm.com>
Date: Thu Sep 15 15:37:09 IST 2011
Subject: mm: swap: Fix NULL dereference in destroy_swap_extents
References: Swap over NFS (fate#304949, bnc#717400)
Patch-mainline: Not yet, merging efforts ongoing

If swapon fails on a swapfile due to some problem like a file with
holes for example, destroy_swap_extents() is called from swapon()
before sis->swap_file has been initialised. This results in a NULL
deference. This patch fixes it.

Signed-off-by: Luciano Chavez <lnx1138@linux.vnet.ibm.com>
Signed-off-by: Mel Gorman <mgorman@suse.de>
--- 
 mm/swapfile.c |    7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

diff -up linux-3.0/mm/swapfile.c.orig linux-3.0/mm/swapfile.c
--- linux-3.0/mm/swapfile.c.orig	2011-09-13 02:12:10.000000000 +0000
+++ linux-3.0/mm/swapfile.c	2011-09-13 02:16:39.000000000 +0000
@@ -1355,7 +1355,10 @@ sector_t map_swap_page(struct page *page
 static void destroy_swap_extents(struct swap_info_struct *sis)
 {
 	struct file *swap_file = sis->swap_file;
-	struct address_space *mapping = swap_file->f_mapping;
+	struct address_space *mapping = NULL;
+
+	if (swap_file)
+		mapping = swap_file->f_mapping;
 
 	while (!list_empty(&sis->first_swap_extent.list)) {
 		struct swap_extent *se;
@@ -1366,7 +1369,7 @@ static void destroy_swap_extents(struct
 		kfree(se);
 	}
 
-	if (mapping->a_ops->swap_deactivate)
+	if (mapping && mapping->a_ops->swap_deactivate)
 		mapping->a_ops->swap_deactivate(swap_file);
 }
 
