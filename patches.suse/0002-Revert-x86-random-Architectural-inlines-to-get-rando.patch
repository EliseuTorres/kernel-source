From: Jiri Slaby <jslaby@suse.cz>
Date: Mon, 22 Oct 2012 11:18:37 +0200
Subject: Revert "x86, random: Architectural inlines to get random integers
 with RDRAND"
Patch-mainline: never, feature removal

This reverts commit 5faf9fc361bac926, upstream commit 628c6246d47b85f.
It is about adding rdrand support and this is not something we want to
have in SP2. This came to us via 3.0.47.

Signed-off-by: Jiri Slaby <jslaby@suse.cz>
---
 arch/x86/Kconfig                  |  9 -----
 arch/x86/include/asm/archrandom.h | 73 ---------------------------------------
 2 files changed, 82 deletions(-)
 delete mode 100644 arch/x86/include/asm/archrandom.h

diff --git a/arch/x86/Kconfig b/arch/x86/Kconfig
index a0e9bda..37357a5 100644
--- a/arch/x86/Kconfig
+++ b/arch/x86/Kconfig
@@ -1451,15 +1451,6 @@ config ARCH_USES_PG_UNCACHED
 	def_bool y
 	depends on X86_PAT
 
-config ARCH_RANDOM
-	def_bool y
-	prompt "x86 architectural random number generator" if EXPERT
-	---help---
-	  Enable the x86 architectural RDRAND instruction
-	  (Intel Bull Mountain technology) to generate random numbers.
-	  If supported, this is a high bandwidth, cryptographically
-	  secure hardware random number generator.
-
 config EFI
 	bool "EFI runtime service support"
 	depends on ACPI
diff --git a/arch/x86/include/asm/archrandom.h b/arch/x86/include/asm/archrandom.h
deleted file mode 100644
index b7b5bc0..0000000
--- a/arch/x86/include/asm/archrandom.h
+++ /dev/null
@@ -1,73 +0,0 @@
-/*
- * This file is part of the Linux kernel.
- *
- * Copyright (c) 2011, Intel Corporation
- * Authors: Fenghua Yu <fenghua.yu@intel.com>,
- *          H. Peter Anvin <hpa@linux.intel.com>
- *
- * This program is free software; you can redistribute it and/or modify it
- * under the terms and conditions of the GNU General Public License,
- * version 2, as published by the Free Software Foundation.
- *
- * This program is distributed in the hope it will be useful, but WITHOUT
- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
- * more details.
- *
- * You should have received a copy of the GNU General Public License along with
- * this program; if not, write to the Free Software Foundation, Inc.,
- * 51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.
- *
- */
-
-#ifndef ASM_X86_ARCHRANDOM_H
-#define ASM_X86_ARCHRANDOM_H
-
-#include <asm/processor.h>
-#include <asm/cpufeature.h>
-#include <asm/alternative.h>
-#include <asm/nops.h>
-
-#define RDRAND_RETRY_LOOPS	10
-
-#define RDRAND_INT	".byte 0x0f,0xc7,0xf0"
-#ifdef CONFIG_X86_64
-# define RDRAND_LONG	".byte 0x48,0x0f,0xc7,0xf0"
-#else
-# define RDRAND_LONG	RDRAND_INT
-#endif
-
-#ifdef CONFIG_ARCH_RANDOM
-
-#define GET_RANDOM(name, type, rdrand, nop)			\
-static inline int name(type *v)					\
-{								\
-	int ok;							\
-	alternative_io("movl $0, %0\n\t"			\
-		       nop,					\
-		       "\n1: " rdrand "\n\t"			\
-		       "jc 2f\n\t"				\
-		       "decl %0\n\t"                            \
-		       "jnz 1b\n\t"                             \
-		       "2:",                                    \
-		       X86_FEATURE_RDRAND,                      \
-		       ASM_OUTPUT2("=r" (ok), "=a" (*v)),       \
-		       "0" (RDRAND_RETRY_LOOPS));		\
-	return ok;						\
-}
-
-#ifdef CONFIG_X86_64
-
-GET_RANDOM(arch_get_random_long, unsigned long, RDRAND_LONG, ASM_NOP5);
-GET_RANDOM(arch_get_random_int, unsigned int, RDRAND_INT, ASM_NOP4);
-
-#else
-
-GET_RANDOM(arch_get_random_long, unsigned long, RDRAND_LONG, ASM_NOP3);
-GET_RANDOM(arch_get_random_int, unsigned int, RDRAND_INT, ASM_NOP3);
-
-#endif /* CONFIG_X86_64 */
-
-#endif  /* CONFIG_ARCH_RANDOM */
-
-#endif /* ASM_X86_ARCHRANDOM_H */
-- 
1.7.12.4

