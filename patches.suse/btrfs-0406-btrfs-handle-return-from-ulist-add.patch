From: Mark Fasheh <mfasheh@suse.de>
Date: Wed Jul 16 14:31:23 PDT 2014
Subject: btrfs: correctly handle return from ulist_add
References: bnc#887322
Patch-mainline: pending, submitted

ulist_add() can return '1' on sucess, which
qgroup_subtree_accounting() doesn't take into account. As a result,
that value can be bubbled up to callers, causing an error to be
printed. Fix this by only returning the value of ulist_add() when it
indicates an error.

Signed-off-by: Mark Fasheh <mfasheh@suse.de>

Index: linux-3.12-bnc887322/fs/btrfs/qgroup.c
===================================================================
--- linux-3.12-bnc887322.orig/fs/btrfs/qgroup.c
+++ linux-3.12-bnc887322/fs/btrfs/qgroup.c
@@ -1959,6 +1959,7 @@ static int qgroup_subtree_accounting(str
 	struct btrfs_qgroup_list *glist;
 	struct ulist *parents;
 	int ret = 0;
+	int err;
 	struct btrfs_qgroup *qg;
 	u64 root_obj = 0;
 	struct seq_list elem = {};
@@ -2013,10 +2014,12 @@ static int qgroup_subtree_accounting(str
 	 * while adding parents of the parents to our ulist.
 	 */
 	list_for_each_entry(glist, &qg->groups, next_group) {
-		ret = ulist_add(parents, glist->group->qgroupid,
+		err = ulist_add(parents, glist->group->qgroupid,
 				ptr_to_u64(glist->group), GFP_ATOMIC);
-		if (ret < 0)
+		if (err < 0) {
+			ret = err;
 			goto out_unlock;
+		}
 	}
 
 	ULIST_ITER_INIT(&uiter);
@@ -2028,10 +2031,12 @@ static int qgroup_subtree_accounting(str
 
 		/* Add any parents of the parents */
 		list_for_each_entry(glist, &qg->groups, next_group) {
-			ret = ulist_add(parents, glist->group->qgroupid,
+			err = ulist_add(parents, glist->group->qgroupid,
 					ptr_to_u64(glist->group), GFP_ATOMIC);
-			if (ret < 0)
+			if (err < 0) {
+				ret = err;
 				goto out_unlock;
+			}
 		}
 	}
 
