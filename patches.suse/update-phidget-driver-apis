From: Jeff Mahoney <jeffm@suse.com>
Subject: phidget: Update to newer APIs
Patch-mainline: Never; The driver was removed upstream

 This patch changes usb_buffer_alloc/free calls to usb_alloc/free_coherent
 calls.

 It also includes <linux/slab.h> for the kzalloc call.

Signed-off-by: Jeff Mahoney <jeffm@suse.com>
---
 drivers/usb/misc/phidgetkit.c          |    8 +++++---
 drivers/usb/misc/phidgetmotorcontrol.c |    9 ++++++---
 2 files changed, 11 insertions(+), 6 deletions(-)

--- a/drivers/usb/misc/phidgetkit.c
+++ b/drivers/usb/misc/phidgetkit.c
@@ -569,7 +569,8 @@ static int interfacekit_probe(struct usb
 
 	kit->dev_no = -1;
 	kit->ifkit = ifkit;
-	kit->data = usb_buffer_alloc(dev, URB_INT_SIZE, GFP_ATOMIC, &kit->data_dma);
+	kit->data = usb_alloc_coherent(dev, URB_INT_SIZE, GFP_ATOMIC,
+				       &kit->data_dma);
 	if (!kit->data)
 		goto out;
 
@@ -655,7 +656,8 @@ out:
 	if (kit) {
 		usb_free_urb(kit->irq);
 		if (kit->data)
-			usb_buffer_free(dev, URB_INT_SIZE, kit->data, kit->data_dma);
+			usb_free_coherent(dev, URB_INT_SIZE, kit->data,
+					  kit->data_dma);
 		if (kit->dev)
 			device_unregister(kit->dev);
 		if (kit->dev_no >= 0)
@@ -679,7 +681,7 @@ static void interfacekit_disconnect(stru
 
 	usb_kill_urb(kit->irq);
 	usb_free_urb(kit->irq);
-	usb_buffer_free(kit->udev, URB_INT_SIZE, kit->data, kit->data_dma);
+	usb_free_coherent(kit->udev, URB_INT_SIZE, kit->data, kit->data_dma);
 
 	cancel_delayed_work(&kit->do_notify);
 	cancel_delayed_work(&kit->do_resubmit);
--- a/drivers/usb/misc/phidgetmotorcontrol.c
+++ b/drivers/usb/misc/phidgetmotorcontrol.c
@@ -14,6 +14,7 @@
 #include <linux/init.h>
 #include <linux/module.h>
 #include <linux/usb.h>
+#include <linux/slab.h>
 
 #include "phidget.h"
 
@@ -339,7 +340,8 @@ static int motorcontrol_probe(struct usb
 		goto out;
 
 	mc->dev_no = -1;
-	mc->data = usb_buffer_alloc(dev, URB_INT_SIZE, GFP_ATOMIC, &mc->data_dma);
+	mc->data = usb_alloc_coherent(dev, URB_INT_SIZE, GFP_ATOMIC,
+				      &mc->data_dma);
 	if (!mc->data)
 		goto out;
 
@@ -394,7 +396,8 @@ out:
 	if (mc) {
 		usb_free_urb(mc->irq);
 		if (mc->data)
-			usb_buffer_free(dev, URB_INT_SIZE, mc->data, mc->data_dma);
+			usb_free_coherent(dev, URB_INT_SIZE, mc->data,
+					  mc->data_dma);
 		if (mc->dev)
 			device_unregister(mc->dev);
 		if (mc->dev_no >= 0)
@@ -418,7 +421,7 @@ static void motorcontrol_disconnect(stru
 
 	usb_kill_urb(mc->irq);
 	usb_free_urb(mc->irq);
-	usb_buffer_free(mc->udev, URB_INT_SIZE, mc->data, mc->data_dma);
+	usb_free_coherent(mc->udev, URB_INT_SIZE, mc->data, mc->data_dma);
 
 	cancel_delayed_work(&mc->do_notify);
 
