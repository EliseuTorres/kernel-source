From: Martin K. Petersen <martin.petersen@oracle.com>
Date: Wed, 10 Mar 2010 00:48:32 -0500
Subject: [PATCH] block: Finalize conversion of block limits functions
Git-commit: ee714f2dd33e726346e34f5cda12543162f4753e
References: FATE#311054
Patch-Mainline: 2.6.34

Remove compatibility wrappers and update remaining drivers.

Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
Signed-off-by: Jens Axboe <jens.axboe@oracle.com>
Signed-off-by: Hannes Reinecke <hare@suse.de>
---
 drivers/block/DAC960.c      |    1 -
 drivers/md/linear.c         |    2 +-
 drivers/md/multipath.c      |    4 ++--
 drivers/md/raid0.c          |    2 +-
 drivers/md/raid10.c         |    4 ++--
 drivers/staging/dst/dcore.c |    3 +--
 include/linux/blkdev.h      |   24 ------------------------
 8 files changed, 9 insertions(+), 36 deletions(-)

diff --git a/drivers/block/DAC960.c b/drivers/block/DAC960.c
index 459f1bc..c5f22bb 100644
--- a/drivers/block/DAC960.c
+++ b/drivers/block/DAC960.c
@@ -2533,7 +2533,6 @@ static bool DAC960_RegisterBlockDevice(DAC960_Controller_T *Controller)
   	Controller->RequestQueue[n] = RequestQueue;
   	blk_queue_bounce_limit(RequestQueue, Controller->BounceBufferLimit);
   	RequestQueue->queuedata = Controller;
-  	blk_queue_max_hw_segments(RequestQueue, Controller->DriverScatterGatherLimit);
 	blk_queue_max_segments(RequestQueue, Controller->DriverScatterGatherLimit);
 	blk_queue_max_hw_sectors(RequestQueue, Controller->MaxBlocksPerCommand);
 	disk->queue = RequestQueue;
diff --git a/drivers/md/linear.c b/drivers/md/linear.c
index 156d310..6ea1d5b 100644
--- a/drivers/md/linear.c
+++ b/drivers/md/linear.c
@@ -176,7 +176,7 @@ static linear_conf_t *linear_conf(mddev_t *mddev, int raid_disks)
 		 * a single page.
 		 */
 		if (rdev->bdev->bd_disk->queue->merge_bvec_fn) {
-			blk_queue_max_phys_segments(mddev->queue, 1);
+			blk_queue_max_segments(mddev->queue, 1);
 			blk_queue_segment_boundary(mddev->queue,
 						   PAGE_CACHE_SIZE - 1);
 		}
diff --git a/drivers/md/multipath.c b/drivers/md/multipath.c
index 252b392..18dd82e 100644
--- a/drivers/md/multipath.c
+++ b/drivers/md/multipath.c
@@ -307,7 +307,7 @@ static int multipath_add_disk(mddev_t *mddev, mdk_rdev_t *rdev)
 		 * merge_bvec_fn will be involved in multipath.)
 		 */
 			if (q->merge_bvec_fn) {
-				blk_queue_max_phys_segments(mddev->queue, 1);
+				blk_queue_max_segments(mddev->queue, 1);
 				blk_queue_segment_boundary(mddev->queue,
 							   PAGE_CACHE_SIZE - 1);
 			}
@@ -479,7 +479,7 @@ static int multipath_run (mddev_t *mddev)
 		 * violating it, not that we ever expect a device with
 		 * a merge_bvec_fn to be involved in multipath */
 		if (rdev->bdev->bd_disk->queue->merge_bvec_fn) {
-			blk_queue_max_phys_segments(mddev->queue, 1);
+			blk_queue_max_segments(mddev->queue, 1);
 			blk_queue_segment_boundary(mddev->queue,
 						   PAGE_CACHE_SIZE - 1);
 		}
diff --git a/drivers/md/raid0.c b/drivers/md/raid0.c
index dc939dd..11d3f57 100644
--- a/drivers/md/raid0.c
+++ b/drivers/md/raid0.c
@@ -199,7 +199,7 @@ static int create_strip_zones(mddev_t *mddev, raid0_conf_t **private_conf)
 		 */
 
 		if (rdev1->bdev->bd_disk->queue->merge_bvec_fn) {
-			blk_queue_max_phys_segments(mddev->queue, 1);
+			blk_queue_max_segments(mddev->queue, 1);
 			blk_queue_segment_boundary(mddev->queue,
 						   PAGE_CACHE_SIZE - 1);
 		}
diff --git a/drivers/md/raid10.c b/drivers/md/raid10.c
index ed8166f..3d6f480 100644
--- a/drivers/md/raid10.c
+++ b/drivers/md/raid10.c
@@ -1183,7 +1183,7 @@ static int raid10_add_disk(mddev_t *mddev, mdk_rdev_t *rdev)
 			 * violation.
 			 */
 			if (rdev->bdev->bd_disk->queue->merge_bvec_fn) {
-				blk_queue_max_phys_segments(mddev->queue, 1);
+				blk_queue_max_segments(mddev->queue, 1);
 				blk_queue_segment_boundary(mddev->queue,
 							   PAGE_CACHE_SIZE - 1);
 			}
@@ -2328,7 +2328,7 @@ static int run(mddev_t *mddev)
 		 * within a single page.
 		 */
 		if (rdev->bdev->bd_disk->queue->merge_bvec_fn) {
-			blk_queue_max_phys_segments(mddev->queue, 1);
+			blk_queue_max_segments(mddev->queue, 1);
 			blk_queue_segment_boundary(mddev->queue,
 						   PAGE_CACHE_SIZE - 1);
 		}
diff --git a/drivers/staging/dst/dcore.c b/drivers/staging/dst/dcore.c
index c24e4e0..7b3a4b8 100644
--- a/drivers/staging/dst/dcore.c
+++ b/drivers/staging/dst/dcore.c
@@ -170,8 +170,7 @@ static int dst_node_create_disk(struct dst_node *n)
 
 	n->queue->queuedata = n;
 	blk_queue_make_request(n->queue, dst_request);
-	blk_queue_max_phys_segments(n->queue, n->max_pages);
-	blk_queue_max_hw_segments(n->queue, n->max_pages);
+	blk_queue_max_segments(n->queue, n->max_pages);
 
 	err = -ENOMEM;
 	n->disk = alloc_disk(1);
diff --git a/include/linux/blkdev.h b/include/linux/blkdev.h
index 15e5aa5..afef4c0 100644
--- a/include/linux/blkdev.h
+++ b/include/linux/blkdev.h
@@ -946,26 +946,7 @@ extern void blk_cleanup_queue(struct request_queue *);
 extern void blk_queue_make_request(struct request_queue *, make_request_fn *);
 extern void blk_queue_bounce_limit(struct request_queue *, u64);
 extern void blk_queue_max_hw_sectors(struct request_queue *, unsigned int);
-
-/* Temporary compatibility wrapper */
-static inline void blk_queue_max_sectors(struct request_queue *q, unsigned int max)
-{
-	blk_queue_max_hw_sectors(q, max);
-}
-
 extern void blk_queue_max_segments(struct request_queue *, unsigned short);
-
-static inline void blk_queue_max_phys_segments(struct request_queue *q, unsigned short max)
-{
-	blk_queue_max_segments(q, max);
-}
-
-static inline void blk_queue_max_hw_segments(struct request_queue *q, unsigned short max)
-{
-	blk_queue_max_segments(q, max);
-}
-
-
 extern void blk_queue_max_segment_size(struct request_queue *, unsigned int);
 extern void blk_queue_max_discard_sectors(struct request_queue *q,
 		unsigned int max_discard_sectors);
@@ -1056,11 +1037,6 @@ static inline int sb_issue_discard(struct super_block *sb,
 
 extern int blk_verify_command(unsigned char *cmd, fmode_t has_write_perm);
 
-#define MAX_PHYS_SEGMENTS 128
-#define MAX_HW_SEGMENTS 128
-#define SAFE_MAX_SECTORS 255
-#define MAX_SEGMENT_SIZE	65536
-
 enum blk_default_limits {
 	BLK_MAX_SEGMENTS	= 128,
 	BLK_SAFE_MAX_SECTORS	= 255,
-- 
1.6.0.2

