From: Matthew Garrett <matthew.garrett@nebula.com>
Subject: [PATCH V3 05/11] asus-wmi: Restrict debugfs interface when module loading is restricted
Date: Tue,  3 Sep 2013 19:50:12 -0400

Git-commit: Not yet
Patch-mainline: Not yet, fedora 20
References: fate#314486, bnc#884333
Target: SLE-11 SP3

We have no way of validating what all of the Asus WMI methods do on a
given machine, and there's a risk that some will allow hardware state to
be manipulated in such a way that arbitrary code can be executed in the
kernel, circumventing module loading restrictions. Prevent that if any of
these features are enabled.

Signed-off-by: Matthew Garrett <matthew.garrett@nebula.com>
Acked-by: Lee, Chun-Yi <jlee@suse.com>

---
 drivers/platform/x86/asus-wmi.c | 9 +++++++++
 1 file changed, 9 insertions(+)

Index: linux-3.0-SLE11-SP3/drivers/platform/x86/asus-wmi.c
===================================================================
--- linux-3.0-SLE11-SP3.orig/drivers/platform/x86/asus-wmi.c
+++ linux-3.0-SLE11-SP3/drivers/platform/x86/asus-wmi.c
@@ -1294,6 +1294,9 @@ static int show_dsts(struct seq_file *m,
 	int err;
 	u32 retval = -1;
 
+	if (secure_modules())
+		return -EPERM;
+
 	err = asus_wmi_get_devstate(asus, asus->debug.dev_id, &retval);
 
 	if (err < 0)
@@ -1310,6 +1313,9 @@ static int show_devs(struct seq_file *m,
 	int err;
 	u32 retval = -1;
 
+	if (secure_modules())
+		return -EPERM;
+
 	err = asus_wmi_set_devstate(asus->debug.dev_id, asus->debug.ctrl_param,
 				    &retval);
 
@@ -1334,6 +1340,9 @@ static int show_call(struct seq_file *m,
 	union acpi_object *obj;
 	acpi_status status;
 
+	if (secure_modules())
+		return -EPERM;
+
 	status = wmi_evaluate_method(ASUS_WMI_MGMT_GUID,
 				     1, asus->debug.method_id,
 				     &input, &output);
