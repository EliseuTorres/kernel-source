Git-commit: 71fd5ae25d88841c08d5bbea90c0f0a12ca05509
From: Joe Thornber <ejt@redhat.com>
Date: Wed, 28 Mar 2012 18:41:27 +0100
Subject: [PATCH] dm persistent data: remove space map ref_count entries if
 redundant
Patch-mainline: v3.4-rc1
Reference: FATE#313903

Save space by removing entries from the space map ref_count tree if
they're no longer needed.

Ref counts are stored in two places: a bitmap if the ref_count is
below 3, or a btree of uint32_t if 3 or above.

When a ref_count that was above 3 drops below we can remove it from
the tree and save some metadata space.  This removal was commented out
before because I was unsure why this was causing under-populated btree
nodes.  Earlier patches have fixed this issue.

Signed-off-by: Joe Thornber <ejt@redhat.com>
Signed-off-by: Mike Snitzer <snitzer@redhat.com>
Signed-off-by: Alasdair G Kergon <agk@redhat.com>
Acked-by: NeilBrown <nfbrown@suse.com>

---
 drivers/md/persistent-data/dm-space-map-common.c |    3 ---
 1 file changed, 3 deletions(-)

--- linux-3.0-SLE11-SP3.orig/drivers/md/persistent-data/dm-space-map-common.c
+++ linux-3.0-SLE11-SP3/drivers/md/persistent-data/dm-space-map-common.c
@@ -405,8 +405,6 @@ int sm_ll_insert(struct ll_disk *ll, dm_
 		if (r < 0)
 			return r;
 
-#if 0
-		/* FIXME: dm_btree_remove doesn't handle this yet */
 		if (old > 2) {
 			r = dm_btree_remove(&ll->ref_count_info,
 					    ll->ref_count_root,
@@ -414,7 +412,6 @@ int sm_ll_insert(struct ll_disk *ll, dm_
 			if (r)
 				return r;
 		}
-#endif
 
 	} else {
 		__le32 le_rc = cpu_to_le32(ref_count);
