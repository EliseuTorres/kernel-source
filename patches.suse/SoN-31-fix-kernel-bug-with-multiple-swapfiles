From: Xiaotian Feng <dfeng@redhat.com>
Subject: [PATCH 30/30] fix mess up on swap with multi files from same nfs server
Patch-mainline: No
References: FATE#303834

xs_swapper() will set xprt->swapper when swapon nfs files, unset xprt->swapper
when swapoff nfs files. This will lead a bug if we swapon multi files from
the same nfs server, they had the same xprt, then the reserved memory could
not be disconnected when we swapoff all files.

The changes in struct rpc_xprt affect the kABI. As no one seem to be using
this, hide it using __GENKSYMS__.

Signed-off-by: Xiaotian Feng <dfeng@redhat.com
Signed-off-by: Suresh Jayaraman <sjayaraman@suse.de>
---
Index: linux-2.6.27-SLE11_BRANCH/include/linux/sunrpc/xprt.h
===================================================================
--- linux-2.6.27-SLE11_BRANCH.orig/include/linux/sunrpc/xprt.h
+++ linux-2.6.27-SLE11_BRANCH/include/linux/sunrpc/xprt.h
@@ -147,9 +147,16 @@ struct rpc_xprt {
 	unsigned int		max_reqs;	/* total slots */
 	unsigned long		state;		/* transport state */
 	unsigned char		shutdown   : 1,	/* being shut down */
+#ifndef __GENKSYMS__
+				resvport   : 1; /* use a reserved port */
+	unsigned int		swapper; 	/* we're swapping over this
+						   transport */
+#else
 				resvport   : 1, /* use a reserved port */
-				swapper    : 1; /* we're swapping over this
+				swapper	   : 1;	/* we're swapping over this
 						   transport */
+#endif
+
 	unsigned int		bind_index;	/* bind function index */
 
 	/*
Index: linux-2.6.27-SLE11_BRANCH/net/sunrpc/xprtsock.c
===================================================================
--- linux-2.6.27-SLE11_BRANCH.orig/net/sunrpc/xprtsock.c
+++ linux-2.6.27-SLE11_BRANCH/net/sunrpc/xprtsock.c
@@ -1496,11 +1496,11 @@ int xs_swapper(struct rpc_xprt *xprt, in
 		 */
 		err = sk_adjust_memalloc(1, RPC_RESERVE_PAGES);
 		if (!err) {
-			xprt->swapper = 1;
+			xprt->swapper++;
 			xs_set_memalloc(xprt);
 		}
 	} else if (xprt->swapper) {
-		xprt->swapper = 0;
+		xprt->swapper--;
 		sk_clear_memalloc(transport->inet);
 		sk_adjust_memalloc(-1, -RPC_RESERVE_PAGES);
 	}
