From:	Matthew Garrett <mjg@redhat.com>
Date:	Thu, 20 Sep 2012 10:40:56 -0400
Subject: [PATCH V2 01/10] Secure boot: Add new capability
Git-commit: Not yet, reviewing 
Patch-mainline: Not yet, reviewing
References: fate#314486
Target: SLE-11 SP3

Secure boot adds certain policy requirements, including that root must not
be able to do anything that could cause the kernel to execute arbitrary code.
The simplest way to handle this would seem to be to add a new capability
and gate various functionality on that. We'll then strip it from the initial
capability set if required.

Signed-off-by: Matthew Garrett <mjg@redhat.com>
Acked-by: Lee, Chun-Yi <jlee@suse.com> 
---
 include/linux/capability.h |    6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

--- a/include/linux/capability.h
+++ b/include/linux/capability.h
@@ -360,7 +360,11 @@ struct cpu_vfs_cap_data {
 #define CAP_WAKE_ALARM            35
 
 
-#define CAP_LAST_CAP         CAP_WAKE_ALARM
+/* Allow things that trivially permit root to modify the running kernel */
+
+#define CAP_COMPROMISE_KERNEL  37
+
+#define CAP_LAST_CAP         CAP_COMPROMISE_KERNEL
 
 #define cap_valid(x) ((x) >= 0 && (x) <= CAP_LAST_CAP)
 
