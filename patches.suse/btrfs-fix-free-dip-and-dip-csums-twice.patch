From: Miao Xie <miaox@cn.fujitsu.com>
Date: Mon, 22 Nov 2010 03:01:39 +0000
Patch-mainline: yes
References: FATE#306586
Subject: [PATCH] btrfs: fix free dip and dip->csums twice

bio_endio() will free dip and dip->csums, so dip and dip->csums twice will
be freed twice. Fix it.

Signed-off-by: Miao Xie <miaox@cn.fujitsu.com>
Signed-off-by: Chris Mason <chris.mason@oracle.com>
Signed-off-by: David Sterba <dsterba@suse.cz>
---
 fs/btrfs/inode.c |    9 +++------
 1 file changed, 3 insertions(+), 6 deletions(-)

--- a/fs/btrfs/inode.c
+++ b/fs/btrfs/inode.c
@@ -5734,7 +5734,7 @@ static void btrfs_submit_direct(int rw,
 
 	ret = btrfs_bio_wq_end_io(root->fs_info, bio, 0);
 	if (ret)
-		goto out_err;
+		goto free_ordered;
 
 	if (write && !skip_sum) {
 		ret = btrfs_wq_submit_bio(BTRFS_I(inode)->root->fs_info,
@@ -5743,7 +5743,7 @@ static void btrfs_submit_direct(int rw,
 				   __btrfs_submit_bio_start_direct_io,
 				   __btrfs_submit_bio_done);
 		if (ret)
-			goto out_err;
+			goto free_ordered;
 		return;
 	} else if (!skip_sum)
 		btrfs_lookup_bio_sums_dio(root, inode, bio,
@@ -5751,11 +5751,8 @@ static void btrfs_submit_direct(int rw,
 
 	ret = btrfs_map_bio(root, rw, bio, 0, 1);
 	if (ret)
-		goto out_err;
+		goto free_ordered;
 	return;
-out_err:
-	kfree(dip->csums);
-	kfree(dip);
 free_ordered:
 	/*
 	 * If this is a write, we need to clean up the reserved space and kill
