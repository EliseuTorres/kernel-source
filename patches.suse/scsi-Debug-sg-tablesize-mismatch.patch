From: Hannes Reinecke <hare@suse.de>
Date: Thu, 11 Jun 2015 11:18:23 +0200
Subject: [PATCH] scsi: Debug sg tablesize mismatch
References: bsc#933782
Patch-Mainline: n/a

After a multipath failover we're seeing mysterious BUG_ON()
triggers in scsi_init_sgtable(), which can only be explained
by a request segment count mismatch.
For debugging recount the rq segments and issue a warning
if a mismatch occurs. The mismatch is fixed up afterwards,
so the BUG_ON() statement later on is avoided.

Signed-off-by: Hannes Reinecke <hare@suse.de>
---
 drivers/scsi/scsi_lib.c | 15 ++++++++++++++-
 1 file changed, 14 insertions(+), 1 deletion(-)

diff --git a/drivers/scsi/scsi_lib.c b/drivers/scsi/scsi_lib.c
index c61dbe4..db7180f 100644
--- a/drivers/scsi/scsi_lib.c
+++ b/drivers/scsi/scsi_lib.c
@@ -992,7 +992,20 @@ void scsi_io_completion(struct scsi_cmnd *cmd, unsigned int good_bytes)
 static int scsi_init_sgtable(struct request *req, struct scsi_data_buffer *sdb,
 			     gfp_t gfp_mask)
 {
-	int count;
+	int count = 0;
+	struct bio_vec *bvec;
+	struct req_iterator iter;
+
+	rq_for_each_segment(bvec, req, iter)
+		count++;
+
+	if (count > req->nr_phys_segments) {
+		printk(KERN_WARNING "%s: sg tablesize mismatch, "
+		       "%d should be %d\n", __func__,
+		       count, req->nr_phys_segments);
+		blk_dump_rq_flags(req, __func__);
+		req->nr_phys_segments = count;
+	}
 
 	/*
 	 * If sg table allocation fails, requeue request later.
-- 
1.8.5.2

