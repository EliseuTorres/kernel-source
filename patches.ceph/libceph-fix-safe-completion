From: "Yan, Zheng" <zheng.z.yan@intel.com>
Date: Fri, 31 May 2013 15:54:44 +0800
Subject: libceph: fix safe completion
Git-commit: eb845ff13a44477f8a411baedbf11d678b9daf0a
Patch-mainline: v3.12-rc2
References: FATE#318328 bsc#917884

handle_reply() calls complete_request() only if the first OSD reply
has ONDISK flag.

Signed-off-by: Yan, Zheng <zheng.z.yan@intel.com>
Reviewed-by: Sage Weil <sage@inktank.com>
Acked-by: Lee Duncan <lduncan@suse.com> <lduncan@suse.com>
---
 include/linux/ceph/osd_client.h |    1 -
 net/ceph/osd_client.c           |   17 ++++++++---------
 2 files changed, 8 insertions(+), 10 deletions(-)

--- a/include/linux/ceph/osd_client.h
+++ b/include/linux/ceph/osd_client.h
@@ -145,7 +145,6 @@ struct ceph_osd_request {
 	s32               r_reply_op_result[CEPH_OSD_MAX_OP];
 	int               r_got_reply;
 	int		  r_linger;
-	int		  r_completed;
 
 	struct ceph_osd_client *r_osdc;
 	struct kref       r_kref;
--- a/net/ceph/osd_client.c
+++ b/net/ceph/osd_client.c
@@ -1527,6 +1527,8 @@ static void handle_reply(struct ceph_osd
 	for (i = 0; i < numops; i++)
 		req->r_reply_op_result[i] = ceph_decode_32(&p);
 
+	already_completed = req->r_got_reply;
+
 	if (!req->r_got_reply) {
 
 		req->r_result = result;
@@ -1557,16 +1559,14 @@ static void handle_reply(struct ceph_osd
 	    ((flags & CEPH_OSD_FLAG_WRITE) == 0))
 		__unregister_request(osdc, req);
 
-	already_completed = req->r_completed;
-	req->r_completed = 1;
 	mutex_unlock(&osdc->request_mutex);
-	if (already_completed)
-		goto done;
 
-	if (req->r_callback)
-		req->r_callback(req, msg);
-	else
-		complete_all(&req->r_completion);
+	if (!already_completed) {
+		if (req->r_callback)
+			req->r_callback(req, msg);
+		else
+			complete_all(&req->r_completion);
+	}
 
 	if (flags & CEPH_OSD_FLAG_ONDISK)
 		complete_request(req);
@@ -2124,7 +2124,6 @@ int ceph_osdc_start_request(struct ceph_
 	__register_request(osdc, req);
 	req->r_sent = 0;
 	req->r_got_reply = 0;
-	req->r_completed = 0;
 	rc = __map_request(osdc, req, 0);
 	if (rc < 0) {
 		if (nofail) {
