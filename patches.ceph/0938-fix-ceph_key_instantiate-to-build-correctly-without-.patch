From b91a1bb1ded0cbe0aa5e6eaabbe6c6271e11dace Mon Sep 17 00:00:00 2001
From: Danny Al-Gaaf <danny.al-gaaf@suse.de>
Date: Mon, 3 Jun 2013 18:29:16 +0200
Subject: [PATCH 938/938] fix ceph_key_instantiate() to build correctly without
 warning
Patch-mainline: 3.10-rc2
References: fate#312983

Signed-off-by: Danny Al-Gaaf <danny.al-gaaf@suse.de>

---
 net/ceph/crypto.c | 49 ++++++++++++++++++++++++-------------------------
 1 file changed, 24 insertions(+), 25 deletions(-)

diff --git a/net/ceph/crypto.c b/net/ceph/crypto.c
index 6e7a236..01ce5f1 100644
--- a/net/ceph/crypto.c
+++ b/net/ceph/crypto.c
@@ -423,40 +423,39 @@ int ceph_encrypt2(struct ceph_crypto_key *secret, void *dst, size_t *dst_len,
 	}
 }
 
-static int ceph_key_instantiate(struct key *key,
-				struct key_preparsed_payload *prep)
+
+int ceph_key_instantiate(struct key *key, const void *data, size_t datalen)
 {
-	struct ceph_crypto_key *ckey;
-	size_t datalen = prep->datalen;
-	int ret;
-	void *p;
+        struct ceph_crypto_key *ckey;
+        int ret;
+        void *p;
 
-	ret = -EINVAL;
-	if (datalen <= 0 || datalen > 32767 || !prep->data)
-		goto err;
+        ret = -EINVAL;
+        if (datalen <= 0 || datalen > 32767 || !data)
+                goto err;
 
-	ret = key_payload_reserve(key, datalen);
-	if (ret < 0)
-		goto err;
+        ret = key_payload_reserve(key, datalen);
+        if (ret < 0)
+                goto err;
 
-	ret = -ENOMEM;
-	ckey = kmalloc(sizeof(*ckey), GFP_KERNEL);
-	if (!ckey)
-		goto err;
+        ret = -ENOMEM;
+        ckey = kmalloc(sizeof(*ckey), GFP_KERNEL);
+        if (!ckey)
+                goto err;
 
-	/* TODO ceph_crypto_key_decode should really take const input */
-	p = (void *)prep->data;
-	ret = ceph_crypto_key_decode(ckey, &p, (char*)prep->data+datalen);
-	if (ret < 0)
-		goto err_ckey;
+        /* TODO ceph_crypto_key_decode should really take const input */
+        p = (void*)data;
+        ret = ceph_crypto_key_decode(ckey, &p, (char*)data+datalen);
+        if (ret < 0)
+                goto err_ckey;
 
-	key->payload.data = ckey;
-	return 0;
+        key->payload.data = ckey;
+        return 0;
 
 err_ckey:
-	kfree(ckey);
+        kfree(ckey);
 err:
-	return ret;
+        return ret;
 }
 
 static int ceph_key_match(const struct key *key, const void *description)
-- 
1.8.3

