From: Jiri Kosina <jkosina@suse.cz>
Subject: [PATCH 3.0-stable] Revert "sysfs: fix race between readdir and lseek"
Patch-mainline: no
References: bnc#816443

This reverts commit 991f76f837bf22c5bb07261cfd86525a0a96650c.

It depends on ef3d0fd27e90f ("vfs: do (nearly) lockless generic_file_llseek")
which is available only in 3.2+.

When applied on 3.0 codebase, it causes A-A deadlock, whenever anyone does
seek() on sysfs, as both generic_file_llseek() and sysfs_dir_llseek() obtain
i_mutex.

Signed-off-by: Jiri Kosina <jkosina@suse.cz>
---
 fs/sysfs/dir.c |   13 +------------
 1 files changed, 1 insertions(+), 12 deletions(-)

Index: linux-3.0-SLE11-SP3-sysfs-hang-debug/fs/sysfs/dir.c
===================================================================
--- linux-3.0-SLE11-SP3-sysfs-hang-debug.orig/fs/sysfs/dir.c
+++ linux-3.0-SLE11-SP3-sysfs-hang-debug/fs/sysfs/dir.c
@@ -961,21 +961,9 @@ static int sysfs_readdir(struct file * f
 	return 0;
 }
 
-static loff_t sysfs_dir_llseek(struct file *file, loff_t offset, int whence)
-{
-	struct inode *inode = file->f_path.dentry->d_inode;
-	loff_t ret;
-
-	mutex_lock(&inode->i_mutex);
-	ret = generic_file_llseek(file, offset, whence);
-	mutex_unlock(&inode->i_mutex);
-
-	return ret;
-}
-
 const struct file_operations sysfs_dir_operations = {
 	.read		= generic_read_dir,
 	.readdir	= sysfs_readdir,
 	.release	= sysfs_dir_release,
-	.llseek		= sysfs_dir_llseek,
+	.llseek		= generic_file_llseek,
 };
