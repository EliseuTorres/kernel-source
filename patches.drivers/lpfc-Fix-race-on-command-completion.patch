From: Hannes Reinecke <hare@suse.de>
Date: Tue, 25 Nov 2014 09:58:51 +0100
Subject: [PATCH] lpfc: Fix race on command completion
Patch-Mainline: not yet.
References: bnc#906027,bnc#889221

Upon command completion the lpfc driver would call ->done()
before releasing the command internally.
And it would not take a spinlock when checking for a valid
scsi command.

Signed-off-by: Hannes Reinecke <hare@suse.de>
---
 drivers/scsi/lpfc/lpfc_scsi.c | 23 +++++++++++++----------
 1 file changed, 13 insertions(+), 10 deletions(-)

Index: linux-3.0-SLE11-SP4/drivers/scsi/lpfc/lpfc_scsi.c
===================================================================
--- linux-3.0-SLE11-SP4.orig/drivers/scsi/lpfc/lpfc_scsi.c	2015-05-25 10:44:46.032834452 +0200
+++ linux-3.0-SLE11-SP4/drivers/scsi/lpfc/lpfc_scsi.c	2015-05-25 10:44:53.133173326 +0200
@@ -3995,9 +3995,15 @@
 	uint32_t logit = LOG_FCP;
 
 	/* Sanity check on return of outstanding command */
-	if (!(lpfc_cmd->pCmd))
+	spin_lock_irqsave(&phba->hbalock, flags);
+	if (!(lpfc_cmd->pCmd)) {
+		spin_unlock_irqrestore(&phba->hbalock, flags);
 		return;
+	}
 	cmd = lpfc_cmd->pCmd;
+	cmd->host_scribble = NULL;
+	spin_unlock_irqrestore(&phba->hbalock, flags);
+
 	shost = cmd->device->host;
 
 	lpfc_cmd->result = (pIocbOut->iocb.un.ulpWord[4] & IOERR_PARAM_MASK);
@@ -4209,16 +4215,16 @@
 
 	lpfc_scsi_unprep_dma_buf(phba, lpfc_cmd);
 
-	/* The sdev is not guaranteed to be valid post scsi_done upcall. */
+	/* The cmd is not guaranteed to be valid post scsi_done upcall. */
 	queue_depth = cmd->device->queue_depth;
 	scsi_id = cmd->device->id;
+	spin_lock_irqsave(&phba->hbalock, flags);
+	lpfc_cmd->pCmd = NULL;
+	spin_unlock_irqrestore(&phba->hbalock, flags);
+
 	cmd->scsi_done(cmd);
 
 	if (phba->cfg_poll & ENABLE_FCP_RING_POLLING) {
-		spin_lock_irqsave(&phba->hbalock, flags);
-		lpfc_cmd->pCmd = NULL;
-		spin_unlock_irqrestore(&phba->hbalock, flags);
-
 		/*
 		 * If there is a thread waiting for command completion
 		 * wake up the thread.
@@ -4231,10 +4237,6 @@
 		return;
 	}
 
-	spin_lock_irqsave(&phba->hbalock, flags);
-	lpfc_cmd->pCmd = NULL;
-	spin_unlock_irqrestore(&phba->hbalock, flags);
-
 	/*
 	 * If there is a thread waiting for command completion
 	 * wake up the thread.
@@ -4756,6 +4758,7 @@
 	return 0;
 
  out_host_busy_free_buf:
+	cmnd->host_scribble = NULL;
 	lpfc_scsi_unprep_dma_buf(phba, lpfc_cmd);
 	lpfc_release_scsi_buf(phba, lpfc_cmd);
  out_host_busy:
