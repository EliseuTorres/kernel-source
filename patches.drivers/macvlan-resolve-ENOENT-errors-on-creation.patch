From: John Fastabend <john.fastabend@gmail.com>
Date: Mon, 21 Oct 2013 14:28:02 -0700
Subject: macvlan: resolve ENOENT errors on creation
Patch-mainline: v3.13-rc1
Git-commit: 47d4ab91e4472723f181075c81627374ca86816c
References: fate#316924 bnc#875631 bnc#876145

After the commit below attempting to create macvlan devices was
resulting in ENOENT errors,

RTNETLINK answers: Invalid argument

This happens because netdev_upper_dev_link() is called before
register_netdevice() in the macvlan code. Through a call chain
this results in a call to __netdev_adjacent_dev_insert() and
finally a sysfs_create_link(). This requires the kobject of
the macvlan to be registered which is done in register_netdevice().
If there is no kobject which is the case here the ENOENT error
is seen on the command line.

To resolve this move the netdev_upper_dev_link() call below
the register_netdevice() call. This aligns with vlan driver
flow.

Regression introduced here,

commit 5831d66e8097aedfa3bc35941cf265ada2352317
Author: Veaceslav Falico <vfalico@redhat.com>
Date:   Wed Sep 25 09:20:32 2013 +0200

    net: create sysfs symlinks for neighbour devices

SLE12: the removal of "dev->priv_flags |= IFF_MACVLAN;" line is
intentional as we accidentally did two partial backports of
mainline commit a6cc0cfa7 and each of them added one copy.

CC: Veaceslav Falico <vfalico@redhat.com>
CC: Neil Horman <nhorman@tuxdriver.com>
Signed-off-by: John Fastabend <john.r.fastabend@intel.com>
Acked-by: Veaceslav Falico <vfalico@redhat.com>
Acked-by: Neil Horman <nhorman@tuxdriver.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
Acked-by: Michal Kubecek <mkubecek@suse.cz>

Conflicts:
	drivers/net/macvlan.c

---
 drivers/net/macvlan.c | 13 +++++--------
 1 file changed, 5 insertions(+), 8 deletions(-)

diff --git a/drivers/net/macvlan.c b/drivers/net/macvlan.c
index e70772e..baf488c 100644
--- a/drivers/net/macvlan.c
+++ b/drivers/net/macvlan.c
@@ -866,25 +866,22 @@ int macvlan_common_newlink(struct net *src_net, struct net_device *dev,
 		eth_hw_addr_inherit(dev, lowerdev);
 	}
 
-	dev->priv_flags |= IFF_MACVLAN;
-	err = netdev_upper_dev_link(lowerdev, dev);
-	if (err)
-		goto destroy_port;
-
 	port->count += 1;
 	err = register_netdevice(dev);
 	if (err < 0)
-		goto upper_dev_unlink;
+		goto destroy_port;
 
 	dev->priv_flags |= IFF_MACVLAN;
+	err = netdev_upper_dev_link(lowerdev, dev);
+	if (err)
+		goto destroy_port;
+
 
 	list_add_tail_rcu(&vlan->list, &port->vlans);
 	netif_stacked_transfer_operstate(lowerdev, dev);
 
 	return 0;
 
-upper_dev_unlink:
-	netdev_upper_dev_unlink(lowerdev, dev);
 destroy_port:
 	port->count -= 1;
 	if (!port->count)
-- 
1.8.4.5

