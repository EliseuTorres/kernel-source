From: Eli Cohen <eli@mellanox.com>
Date: Tue, 6 Mar 2012 15:50:51 +0200
Subject: IB/mlx4: Fix possible missed completion event
Patch-mainline: v3.4-rc1
Git-commit: 3616f9cead935d4e4c35915600d5e4d1384219cd
References: bnc#786036 FATE#314304

If an erroneous CQE is polled in the first iteration (i.e. npolled ==
0), we don't update the consumer index and hence the hardware could
get a wrong notion of how many CQEs software polled.  Fix this by
unconditionally updating the doorbell record.  We could change the
check to be something like

	if (npolled || err != -EAGAIN)
		...

but it does not seem worth the effort since a posted write to memory
should not cost too much.

Signed-off-by: Eli Cohen <eli@mellanox.com>
Signed-off-by: Roland Dreier <roland@purestorage.com>
Signed-off-by: Amir Vadai <amirv@mellanox.com>
Acked-by: Benjamin Poirier <bpoirier@suse.de>
---
 drivers/infiniband/hw/mlx4/cq.c |    3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)
--- a/drivers/infiniband/hw/mlx4/cq.c
+++ b/drivers/infiniband/hw/mlx4/cq.c
@@ -771,8 +771,7 @@ int mlx4_ib_poll_cq(struct ib_cq *ibcq,
 			break;
 	}
 
-	if (npolled)
-		mlx4_cq_set_ci(&cq->mcq);
+	mlx4_cq_set_ci(&cq->mcq);
 
 	spin_unlock_irqrestore(&cq->lock, flags);
 
