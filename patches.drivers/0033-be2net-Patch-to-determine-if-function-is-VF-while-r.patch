From sarveshwarb@serverengines.com  Thu Jun 23 15:40:24 2011
From: Sarveshwar Bandi <sarveshwarb@serverengines.com>
Date: Fri, 9 Jul 2010 01:43:55 +0000
Subject: [PATCH] be2net: Patch to determine if function is VF while running in guest OS.
Git-commit: 344dbf1073d1cea179ed0831547cab2b7ea4ea27
Patch-mainline: v2.6.36-rc1
References: FATE#311448, bnc#697255

When driver is loaded in guest OS, the pci variables is_virtfn and is_physfn are
both set to 0. This change uses registers in controller to determine the same.

Signed-off-by: Sarveshwar Bandi <sarveshwarb@serverengines.com>
Signed-off-by: David S. Miller <davem@davemloft.net>

Acked-by: Jeff Mahoney <jeffm@suse.com>
---
 drivers/net/benet/be.h      |   12 +++++++++++-
 drivers/net/benet/be_main.c |    1 +
 2 files changed, 12 insertions(+), 1 deletion(-)
--- a/drivers/net/benet/be.h
+++ b/drivers/net/benet/be.h
@@ -290,9 +290,10 @@ struct be_adapter {
 	int link_speed;
 	u8 port_type;
 	u8 transceiver;
+	u8 is_virtfn;
 };
 
-#define be_physfn(adapter) (!adapter->pdev->is_virtfn)
+#define be_physfn(adapter) (!adapter->is_virtfn)
 
 /* BladeEngine Generation numbers */
 #define BE_GEN2 2
@@ -392,6 +393,15 @@ static inline u8 is_udp_pkt(struct sk_bu
 	return val;
 }
 
+static inline void be_check_sriov_fn_type(struct be_adapter *adapter)
+{
+	u8 data;
+
+	pci_write_config_byte(adapter->pdev, 0xFE, 0xAA);
+	pci_read_config_byte(adapter->pdev, 0xFE, &data);
+	adapter->is_virtfn = (data != 0xAA);
+}
+
 extern void be_cq_notify(struct be_adapter *adapter, u16 qid, bool arm,
 		u16 num_popped);
 extern void be_link_status_update(struct be_adapter *adapter, bool link_up);
--- a/drivers/net/benet/be_main.c
+++ b/drivers/net/benet/be_main.c
@@ -1632,6 +1632,7 @@ static void be_sriov_enable(struct be_ad
 {
 #ifdef CONFIG_PCI_IOV
 	int status;
+	be_check_sriov_fn_type(adapter);
 	if (be_physfn(adapter) && num_vfs) {
 		status = pci_enable_sriov(adapter->pdev, num_vfs);
 		adapter->sriov_enabled = status ? false : true;
