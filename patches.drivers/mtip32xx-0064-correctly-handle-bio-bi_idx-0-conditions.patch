From: Sam Bradshaw <sbradshaw@micron.com>
Date: Wed, 15 May 2013 10:09:05 +0200
Subject: mtip32xx: Correctly handle bio->bi_idx != 0 conditions
Git-repo: http://git.kernel.org/pub/scm/linux/kernel/git/axboe/linux-block.git
Git-commit: 093c959307f2f5af72b24fdc4af7d4d0263f6eea
Patch-mainline: Queued in subsystem maintainer repo
References: FATE#311167,bnc#820569

Stacking drivers may append bvecs to existing bio's, resulting
in non-zero bi_idx conditions.  This patch counts the loops of
bio_for_each_segment() rather than inheriting the bi_idx value
to pass as a segment count to the hardware submission routine.

Signed-off-by: Sam Bradshaw <sbradshaw@micron.com>
Signed-off-by: Jens Axboe <axboe@kernel.dk>
Acked-by: Asai Thambi S P <asamymuthupa@micron.com>
Acked-by: Hannes Reinecke <hare@suse.de>
---

 drivers/block/mtip32xx/mtip32xx.c |    5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

--- a/drivers/block/mtip32xx/mtip32xx.c
+++ b/drivers/block/mtip32xx/mtip32xx.c
@@ -3864,7 +3864,7 @@ static void mtip_make_request(struct request_queue *queue, struct bio *bio)
 	struct driver_data *dd = queue->queuedata;
 	struct scatterlist *sg;
 	struct bio_vec *bvec;
-	int nents = 0;
+	int i, nents = 0;
 	int tag = 0, unaligned = 0;
 
 	if (unlikely(dd->dd_flag & MTIP_DDF_STOP_IO)) {
@@ -3922,11 +3922,12 @@ static void mtip_make_request(struct request_queue *queue, struct bio *bio)
 		}
 
 		/* Create the scatter list for this bio. */
-		bio_for_each_segment(bvec, bio, nents) {
+		bio_for_each_segment(bvec, bio, i) {
 			sg_set_page(&sg[nents],
 					bvec->bv_page,
 					bvec->bv_len,
 					bvec->bv_offset);
+			nents++;
 		}
 
 		/* Issue the read/write. */


