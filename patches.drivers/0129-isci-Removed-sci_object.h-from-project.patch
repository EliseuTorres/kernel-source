From: Maciej Patelczyk <maciej.patelczyk@intel.com>
Date: Thu, 28 Apr 2011 22:06:36 +0000
Subject: [PATCH 129/273] isci: Removed sci_object.h from project.
Git-commit: be2f41c611b65353fa3ae0c155cf906b348dc864
References: FATE#311808,bnc#709528
Patch-Mainline: 3.0

The sci_object.h file was removed. No sci_base_object
is now in the code.

Reported-by: Christoph Hellwig <hch@lst.de>
Signed-off-by: Maciej Patelczyk <maciej.patelczyk@intel.com>
Signed-off-by: Dan Williams <dan.j.williams@intel.com>
Signed-off-by: Hannes Reinecke <hare@suse.de>
---
 drivers/scsi/isci/core/sci_base_state.h       |    2 -
 drivers/scsi/isci/core/sci_object.h           |   98 -------------------------
 drivers/scsi/isci/core/scic_io_request.h      |    9 +--
 drivers/scsi/isci/core/scic_sds_smp_request.c |    3 +-
 drivers/scsi/isci/isci.h                      |    1 -
 5 files changed, 4 insertions(+), 109 deletions(-)
 delete mode 100644 drivers/scsi/isci/core/sci_object.h

diff --git a/drivers/scsi/isci/core/sci_base_state.h b/drivers/scsi/isci/core/sci_base_state.h
index 62d2a7c..d64efac 100644
--- a/drivers/scsi/isci/core/sci_base_state.h
+++ b/drivers/scsi/isci/core/sci_base_state.h
@@ -56,8 +56,6 @@
 #ifndef _SCI_BASE_STATE_H_
 #define _SCI_BASE_STATE_H_
 
-#include "sci_object.h"
-
 typedef void (*sci_base_state_handler_t)(void);
 
 typedef void (*sci_state_transition_t)(void *base_object);
diff --git a/drivers/scsi/isci/core/sci_object.h b/drivers/scsi/isci/core/sci_object.h
deleted file mode 100644
index 801b01b..0000000
--- a/drivers/scsi/isci/core/sci_object.h
+++ /dev/null
@@ -1,98 +0,0 @@
-/*
- * This file is provided under a dual BSD/GPLv2 license.  When using or
- * redistributing this file, you may do so under either license.
- *
- * GPL LICENSE SUMMARY
- *
- * Copyright(c) 2008 - 2011 Intel Corporation. All rights reserved.
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of version 2 of the GNU General Public License as
- * published by the Free Software Foundation.
- *
- * This program is distributed in the hope that it will be useful, but
- * WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- * General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.
- * The full GNU General Public License is included in this distribution
- * in the file called LICENSE.GPL.
- *
- * BSD LICENSE
- *
- * Copyright(c) 2008 - 2011 Intel Corporation. All rights reserved.
- * All rights reserved.
- *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions
- * are met:
- *
- *   * Redistributions of source code must retain the above copyright
- *     notice, this list of conditions and the following disclaimer.
- *   * Redistributions in binary form must reproduce the above copyright
- *     notice, this list of conditions and the following disclaimer in
- *     the documentation and/or other materials provided with the
- *     distribution.
- *   * Neither the name of Intel Corporation nor the names of its
- *     contributors may be used to endorse or promote products derived
- *     from this software without specific prior written permission.
- *
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
- */
-
-#ifndef _SCI_OBJECT_H_
-#define _SCI_OBJECT_H_
-
-/**
- * This file contains all of the method and constants associated with the SCI
- *    base object.  The SCI base object is the class from which all other
- *    objects derive in the Storage Controller Interface.
- *
- *
- */
-
-
-#include "sci_status.h"
-
-/**
- * struct sci_base_object - all core objects must include this as their
- *     first member to permit the casting below
- *
- * TODO: unwind this assumption, convert these routines and callers to pass a struct
- * sci_base_object pointer without casting, or convert 'private' to the
- * expected type per-object
- *
- */
-struct sci_base_object {
-	void *private;
-};
-
-static inline void *sci_object_get_association(void *obj)
-{
-	struct sci_base_object *base = obj;
-
-	return base->private;
-}
-
-static inline void sci_object_set_association(void *obj, void *private)
-{
-	struct sci_base_object *base = obj;
-
-	base->private = private;
-}
-
-#endif  /* _SCI_OBJECT_H_ */
-
diff --git a/drivers/scsi/isci/core/scic_io_request.h b/drivers/scsi/isci/core/scic_io_request.h
index 1ac530d..1602263 100644
--- a/drivers/scsi/isci/core/scic_io_request.h
+++ b/drivers/scsi/isci/core/scic_io_request.h
@@ -161,8 +161,7 @@ enum sci_status scic_io_request_construct(
  * if the remote_device does not support the SSP protocol.
  * SCI_FAILURE_INVALID_ASSOCIATION This value is returned if the user did not
  * properly set the association between the SCIC IO request and the user's IO
- * request.  Please refer to the sci_object_set_association() routine for more
- * information.
+ * request.
  */
 enum sci_status scic_io_request_construct_basic_ssp(
 	struct scic_sds_request *scic_io_request);
@@ -184,8 +183,7 @@ enum sci_status scic_io_request_construct_basic_ssp(
  * if the remote_device does not support the STP protocol.
  * SCI_FAILURE_INVALID_ASSOCIATION This value is returned if the user did not
  * properly set the association between the SCIC IO request and the user's IO
- * request.  Please refer to the sci_object_set_association() routine for more
- * information.
+ * request.
  */
 enum sci_status scic_io_request_construct_basic_sata(
 	struct scic_sds_request *scic_io_request);
@@ -206,8 +204,7 @@ enum sci_status scic_io_request_construct_basic_sata(
  * if the remote_device does not support the SMP protocol.
  * SCI_FAILURE_INVALID_ASSOCIATION This value is returned if the user did not
  * properly set the association between the SCIC IO request and the user's IO
- * request.  Please refer to the sci_object_set_association() routine for more
- * information.
+ * request.
  */
 enum sci_status scic_io_request_construct_smp(
 	struct scic_sds_request *scic_io_request);
diff --git a/drivers/scsi/isci/core/scic_sds_smp_request.c b/drivers/scsi/isci/core/scic_sds_smp_request.c
index ba29192..fff8668 100644
--- a/drivers/scsi/isci/core/scic_sds_smp_request.c
+++ b/drivers/scsi/isci/core/scic_sds_smp_request.c
@@ -574,8 +574,7 @@ static const struct sci_base_state scic_sds_smp_request_started_substate_table[]
  * if the remote_device does not support the SMP protocol.
  * SCI_FAILURE_INVALID_ASSOCIATION This value is returned if the user did not
  * properly set the association between the SCIC IO request and the user's IO
- * request.  Please refer to the sci_object_set_association() routine for more
- * information.
+ * request.
  */
 enum sci_status scic_io_request_construct_smp(struct scic_sds_request *sci_req)
 {
diff --git a/drivers/scsi/isci/isci.h b/drivers/scsi/isci/isci.h
index ac292d2..60c8462 100644
--- a/drivers/scsi/isci/isci.h
+++ b/drivers/scsi/isci/isci.h
@@ -65,7 +65,6 @@
 #include <scsi/libsas.h>
 #include <scsi/scsi.h>
 
-#include "core/sci_object.h"
 #include "scic_controller.h"
 #include "host.h"
 #include "timers.h"
-- 
1.6.0.2

