From: Brian King <brking@linux.vnet.ibm.com>
Subject: ibmvscsi: Improve CRQ reset reliability
Patch-mainline: 201aed678482f247aa96bd8fcd9e960fefd82d59
References: bnc#708809

This patch fixes an issue seen where an event occurs
which causes the ibmvscsi driver to reset its CRQ. Upon
re-registering its CRQ, it receives H_CLOSED, indicating
the Virtual I/O Server is not yet ready to receive commands.
This resulted in the ibmvscsi driver essentially offlining
the adapter and not recovering. The fix is to re-enable
our interrupt so that when the Virtual I/O server is ready
and sends a CRQ init, we will be able to receive it and
resume initialization of the VSCSI adapter.

Signed-off-by: Brian King <brking@linux.vnet.ibm.com>
Signed-off-by: James Bottomley <James.Bottomley@suse.de>
Acked-by: Torsten Duwe <duwe@suse.de>

---

 drivers/scsi/ibmvscsi/ibmvscsi.c |    3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

diff -puN drivers/scsi/ibmvscsi/ibmvscsi.c~ibmvscsi_recover_reset_notready drivers/scsi/ibmvscsi/ibmvscsi.c
--- linux-2.6.32.42-0.11/drivers/scsi/ibmvscsi/ibmvscsi.c~ibmvscsi_recover_reset_notready	2011-07-25 07:49:37.000000000 -0500
+++ linux-2.6.32.42-0.11-bjking1/drivers/scsi/ibmvscsi/ibmvscsi.c	2011-07-25 07:49:37.000000000 -0500
@@ -1853,8 +1853,7 @@ static void ibmvscsi_do_work(struct ibmv
 		rc = ibmvscsi_ops->reset_crq_queue(&hostdata->queue, hostdata);
 		if (!rc)
 			rc = ibmvscsi_ops->send_crq(hostdata, 0xC001000000000000LL, 0);
-		if (!rc)
-			rc = vio_enable_interrupts(to_vio_dev(hostdata->dev));
+		vio_enable_interrupts(to_vio_dev(hostdata->dev));
 	} else if (hostdata->reenable_crq) {
 		smp_rmb();
 		action = "enable";
_
