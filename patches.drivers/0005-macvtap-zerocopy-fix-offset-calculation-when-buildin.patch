From: Jason Wang <jasowang@redhat.com>
Date: Wed May 2 11:41:30 2012 +0800
Subject: macvtap: zerocopy: fix offset calculation when building skb
References: fate#314400
Patch-mainline: v3.5
Git-commit: 3afc9621f15701c557e60f61eba9242bac2771dd

This patch fixes the offset calculation when building skb:

- offset1 were used as skb data offset not vector offset
- reset offset to zero only when we advance to next vector

Signed-off-by: Jason Wang <jasowang@redhat.com>
Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
Acked-by: Bo Yang <boyang@suse.com>
Acked-by: Bruce Rogers <brogers@suse.com>

Index: b/drivers/net/macvtap.c
===================================================================
--- a/drivers/net/macvtap.c
+++ b/drivers/net/macvtap.c
@@ -478,10 +478,11 @@ static int zerocopy_sg_from_iovec(struct
 		if (copy > size) {
 			++from;
 			--count;
-		}
+			offset = 0;
+		} else
+			offset += size;
 		copy -= size;
 		offset1 += size;
-		offset = 0;
 	}
 
 	if (len == offset1)
@@ -492,13 +493,13 @@ static int zerocopy_sg_from_iovec(struct
 		int num_pages;
 		unsigned long base;
 
-		len = from->iov_len - offset1;
+		len = from->iov_len - offset;
 		if (!len) {
-			offset1 = 0;
+			offset = 0;
 			++from;
 			continue;
 		}
-		base = (unsigned long)from->iov_base + offset1;
+		base = (unsigned long)from->iov_base + offset;
 		size = ((base & ~PAGE_MASK) + len + ~PAGE_MASK) >> PAGE_SHIFT;
 		num_pages = get_user_pages_fast(base, size, 0, &page[i]);
 		if ((num_pages != size) ||
@@ -520,7 +521,7 @@ static int zerocopy_sg_from_iovec(struct
 			len -= f->size;
 			i++;
 		}
-		offset1 = 0;
+		offset = 0;
 		++from;
 	}
 	return 0;
