From: Sumit Saxena <Sumit.Saxena@lsi.com>
Date: Wed, 19 Sep 2012 14:52:29 +0200
Subject: megaraid_sas: boot hangs up while LD is offline issue
Patch-mainline: not yet, will be pushed by LSI
References: bnc#698102

Offline Logical drive(LD) should not be allowed to be visible to Operating
system.  At module load time, driver asks scsi_host_scan(), where driver needs
to skip offline LD same as non-system Physical drives(PDs).

Signed-off-by: Sumit Saxena <Sumit.Saxena@lsi.com>
Acked-by: Michal Hocko <mhocko@suse.cz>
Acked-by: Hannes Reinecke <hare@suse.de>

diff --git a/drivers/scsi/megaraid/megaraid_sas.h b/drivers/scsi/megaraid/megaraid_sas.h
index 7370c08..a8f772f 100644
--- a/drivers/scsi/megaraid/megaraid_sas.h
+++ b/drivers/scsi/megaraid/megaraid_sas.h
@@ -332,6 +332,15 @@ enum MR_PD_STATE {
 	MR_PD_STATE_SYSTEM              = 0x40,
  };
 
+/*
+ * define the enum for logical drive states
+ */
+enum MR_LD_STATE {
+	MR_LD_STATE_OFFLINE             = 0,
+	MR_LD_STATE_PARTIALLY_DEGRADED  = 1,
+	MR_LD_STATE_DEGRADED            = 2,
+	MR_LD_STATE_OPTIMAL             = 3
+};
 
  /*
  * defines the physical drive address structure
diff --git a/drivers/scsi/megaraid/megaraid_sas_base.c b/drivers/scsi/megaraid/megaraid_sas_base.c
index fcaddfd..ad2cb20 100644
--- a/drivers/scsi/megaraid/megaraid_sas_base.c
+++ b/drivers/scsi/megaraid/megaraid_sas_base.c
@@ -1522,6 +1522,7 @@ static struct megasas_instance *megasas_lookup_instance(u16 host_no)
 static int megasas_slave_configure(struct scsi_device *sdev)
 {
 	u16             pd_index = 0;
+	u16             ld_index = 0;
 	struct  megasas_instance *instance ;
 
 	instance = megasas_lookup_instance(sdev->host->host_no);
@@ -1533,16 +1534,23 @@ static int megasas_slave_configure(struct scsi_device *sdev)
 	*        That will be fixed once LSI engineers have audited the
 	*        firmware for possible issues.
 	*/
-	if (sdev->channel < MEGASAS_MAX_PD_CHANNELS &&
-				sdev->type == TYPE_DISK) {
-		pd_index = (sdev->channel * MEGASAS_MAX_DEV_PER_CHANNEL) +
-								sdev->id;
-		if (instance->pd_list[pd_index].driveState ==
-						MR_PD_STATE_SYSTEM) {
-			blk_queue_rq_timeout(sdev->request_queue,
-				MEGASAS_DEFAULT_CMD_TIMEOUT * HZ);
-			return 0;
-		}
+	pd_index = (sdev->channel * MEGASAS_MAX_DEV_PER_CHANNEL) + sdev_id;
+
+	/* Skip for LD offline and PD which are not configured as
+	 * system pd.
+	 */
+	if ((sdev->channel < MEGASAS_MAX_PD_CHANNELS &&
+				sdev->type == TYPE_DISK) &&
+				(instance->pd_list[pd_index].driveState !=
+					MR_PD_STATE_SYSTEM)) {
+		return -ENXIO;
+	}
+
+	ld_index = ((sdev->channel - 2) * MEGASAS_MAX_DEV_PER_CHANNEL)
+								+ sdev_id;
+	/* Need to find out best value to detect LD */
+	if ((sdev->channel >= MEGASAS_MAX_LD_CHANNELS) &&
+		(instance->ld_ids[ld_index] == 0xFF)) {
 		return -ENXIO;
 	}
 
diff --git a/drivers/scsi/megaraid/megaraid_sas_fp.c b/drivers/scsi/megaraid/megaraid_sas_fp.c
index 8fe3a45..e4aa580 100644
--- a/drivers/scsi/megaraid/megaraid_sas_fp.c
+++ b/drivers/scsi/megaraid/megaraid_sas_fp.c
@@ -52,10 +52,10 @@
 #include <scsi/scsi_host.h>
 
 #include "megaraid_sas_fusion.h"
+#include "megaraid_sas.h"
 #include <asm/div64.h>
 
 #define ABS_DIFF(a, b)   (((a) > (b)) ? ((a) - (b)) : ((b) - (a)))
-#define MR_LD_STATE_OPTIMAL 3
 #define FALSE 0
 #define TRUE 1
 
