From 44c0240052892911d9ebcb2bbc2a5cfc3176077c Mon Sep 17 00:00:00 2001
From: Takashi Iwai <tiwai@suse.de>
Date: Fri, 8 Jul 2011 15:14:19 +0200
Subject: [PATCH] ALSA: hda - Fix amp-cap checks in patch_realtek.c
Git-commit: 44c0240052892911d9ebcb2bbc2a5cfc3176077c
Patch-mainline: 3.1-rc2
Refernces: FATE#314106,FATE#314311,FATE#313695

query_amp_caps() may return non-zero if the amp cap isn't supported
by the codec.  Thus one needs to check widget-caps first, then check
the corresponding amp-caps.

Signed-off-by: Takashi Iwai <tiwai@suse.de>

---
 sound/pci/hda/patch_realtek.c |   34 ++++++++++++++++++++++------------
 1 file changed, 22 insertions(+), 12 deletions(-)

--- a/sound/pci/hda/patch_realtek.c
+++ b/sound/pci/hda/patch_realtek.c
@@ -206,6 +206,22 @@ struct alc_spec {
 
 #define ALC_MODEL_AUTO		0	/* common for all chips */
 
+static bool check_amp_caps(struct hda_codec *codec, hda_nid_t nid,
+			   int dir, unsigned int bits)
+{
+	if (!nid)
+		return false;
+	if (get_wcaps(codec, nid) & (1 << (dir + 1)))
+		if (query_amp_caps(codec, nid, dir) & bits)
+			return true;
+	return false;
+}
+
+#define nid_has_mute(codec, nid, dir) \
+	check_amp_caps(codec, nid, dir, AC_AMPCAP_MUTE)
+#define nid_has_volume(codec, nid, dir) \
+	check_amp_caps(codec, nid, dir, AC_AMPCAP_NUM_STEPS)
+
 /*
  * input MUX handling
  */
@@ -2647,7 +2663,8 @@ static void alc_set_pin_output(struct hd
 	snd_hda_codec_write(codec, nid, 0, AC_VERB_SET_PIN_WIDGET_CONTROL,
 			    pin_type);
 	/* unmute pin */
-	snd_hda_codec_write(codec, nid, 0, AC_VERB_SET_AMP_GAIN_MUTE,
+	if (nid_has_mute(codec, nid, HDA_OUTPUT))
+		snd_hda_codec_write(codec, nid, 0, AC_VERB_SET_AMP_GAIN_MUTE,
 			    AMP_OUT_UNMUTE);
 }
 
@@ -2888,11 +2905,6 @@ static int alc_auto_add_sw_ctl(struct hd
 #define alc_auto_add_stereo_sw(codec, pfx, cidx, nid)	\
 	alc_auto_add_sw_ctl(codec, pfx, cidx, nid, 3)
 
-#define nid_has_mute(codec, nid, dir) \
-	(query_amp_caps(codec, nid, dir) & AC_AMPCAP_MUTE)
-#define nid_has_volume(codec, nid, dir) \
-	(query_amp_caps(codec, nid, dir) & AC_AMPCAP_NUM_STEPS)
-
 static hda_nid_t alc_look_for_out_mute_nid(struct hda_codec *codec,
 					   hda_nid_t pin, hda_nid_t dac)
 {
@@ -3320,7 +3332,7 @@ static void alc_auto_init_adc(struct hda
 
 	nid = spec->adc_nids[adc_idx];
 	/* mute ADC */
-	if (query_amp_caps(codec, nid, HDA_INPUT) & AC_AMPCAP_MUTE) {
+	if (nid_has_mute(codec, nid, HDA_INPUT)) {
 		snd_hda_codec_write(codec, nid, 0,
 				    AC_VERB_SET_AMP_GAIN_MUTE,
 				    AMP_IN_MUTE(0));
@@ -3329,7 +3341,7 @@ static void alc_auto_init_adc(struct hda
 	if (!spec->capsrc_nids)
 		return;
 	nid = spec->capsrc_nids[adc_idx];
-	if (query_amp_caps(codec, nid, HDA_OUTPUT) & AC_AMPCAP_MUTE)
+	if (nid_has_mute(codec, nid, HDA_OUTPUT))
 		snd_hda_codec_write(codec, nid, 0,
 				    AC_VERB_SET_AMP_GAIN_MUTE,
 				    AMP_OUT_MUTE);
@@ -3446,12 +3458,10 @@ static void set_capture_mixer(struct hda
 	};
 
 	/* check whether either of ADC or MUX has a volume control */
-	if (!(query_amp_caps(codec, spec->adc_nids[0], HDA_INPUT) &
-	      AC_AMPCAP_NUM_STEPS)) {
+	if (!nid_has_volume(codec, spec->adc_nids[0], HDA_INPUT)) {
 		if (!spec->capsrc_nids)
 			return; /* no volume */
-		if (!(query_amp_caps(codec, spec->capsrc_nids[0], HDA_OUTPUT) &
-		      AC_AMPCAP_NUM_STEPS))
+		if (!nid_has_volume(codec, spec->capsrc_nids[0], HDA_OUTPUT))
 			return; /* no volume in capsrc, too */
 		spec->vol_in_capsrc = 1;
 	}
