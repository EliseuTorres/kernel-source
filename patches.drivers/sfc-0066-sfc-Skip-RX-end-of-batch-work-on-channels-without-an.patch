From: Ben Hutchings <bhutchings@solarflare.com>
Date: Mon, 13 Feb 2012 23:29:16 +0000
Subject: sfc: Skip RX end-of-batch work on channels without an RX queue
Patch-mainline: v3.4-rc1
Git-commit: d9ab70079a9730f2d748714cbe4242bc707b9eef
References: bnc#786035 FATE#314299

The code in efx_process_channel() to update the RX queue after each
batch of RX completions works out as a no-op on a TX-only channel
where the RX queue structure is set to all-zeroes, but
(1) efx_channel_get_rx_queue() will BUG() if DEBUG is defined, and
(2) it's a waste of time.

Signed-off-by: Ben Hutchings <bhutchings@solarflare.com>
Acked-by: Benjamin Poirier <bpoirier@suse.de>
---
 drivers/net/ethernet/sfc/efx.c |   21 +++++++++++----------
 1 file changed, 11 insertions(+), 10 deletions(-)

--- a/drivers/net/ethernet/sfc/efx.c
+++ b/drivers/net/ethernet/sfc/efx.c
@@ -224,18 +224,19 @@ static int efx_process_channel(struct ef
 		return 0;
 
 	spent = efx_nic_process_eventq(channel, budget);
-	if (spent == 0)
-		return 0;
-
-	/* Deliver last RX packet. */
-	if (channel->rx_pkt) {
-		__efx_rx_packet(channel, channel->rx_pkt);
-		channel->rx_pkt = NULL;
-	}
+	if (spent && efx_channel_has_rx_queue(channel)) {
+		struct efx_rx_queue *rx_queue =
+			efx_channel_get_rx_queue(channel);
 
-	efx_rx_strategy(channel);
+		/* Deliver last RX packet. */
+		if (channel->rx_pkt) {
+			__efx_rx_packet(channel, channel->rx_pkt);
+			channel->rx_pkt = NULL;
+		}
 
-	efx_fast_push_rx_descriptors(efx_channel_get_rx_queue(channel));
+		efx_rx_strategy(channel);
+		efx_fast_push_rx_descriptors(rx_queue);
+	}
 
 	return spent;
 }
