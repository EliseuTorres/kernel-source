From ajit.khaparde@emulex.com  Thu Jun 23 15:40:25 2011
From: Ajit Khaparde <ajit.khaparde@emulex.com>
Date: Fri, 11 Feb 2011 13:35:02 +0000
Subject: [PATCH] be2net: Initialize and cleanup sriov resources only if pci_enable_sriov has succeeded.
Git-commit: c99ac3e7e47ffb9e504d9b08f608e9d7519a6b4f
Patch-mainline: v2.6.39-rc1
References: FATE#311448, bnc#697255

Signed-off-by: Ajit Khaparde <ajit.khaparde@emulex.com>
Signed-off-by: David S. Miller <davem@davemloft.net>

Acked-by: Jeff Mahoney <jeffm@suse.com>
---
 drivers/net/benet/be_main.c |   41 ++++++++++++++++++++++++-----------------
 1 file changed, 24 insertions(+), 17 deletions(-)
--- a/drivers/net/benet/be_main.c
+++ b/drivers/net/benet/be_main.c
@@ -2189,20 +2189,26 @@ static int be_setup(struct be_adapter *a
 		goto do_none;
 
 	if (be_physfn(adapter)) {
-		while (vf < num_vfs) {
-			cap_flags = en_flags = BE_IF_FLAGS_UNTAGGED
-					| BE_IF_FLAGS_BROADCAST;
-			status = be_cmd_if_create(adapter, cap_flags, en_flags,
-					mac, true, &adapter->vf_if_handle[vf],
-					NULL, vf+1);
-			if (status) {
-				dev_err(&adapter->pdev->dev,
-				"Interface Create failed for VF %d\n", vf);
-				goto if_destroy;
+		if (adapter->sriov_enabled) {
+			while (vf < num_vfs) {
+				cap_flags = en_flags = BE_IF_FLAGS_UNTAGGED
+						| BE_IF_FLAGS_BROADCAST;
+				status = be_cmd_if_create(adapter, cap_flags,
+						en_flags, mac, true,
+						&adapter->vf_if_handle[vf],
+						NULL, vf+1);
+				if (status) {
+					dev_err(&adapter->pdev->dev,
+						"Interface Create failed for VF %d\n",
+						vf);
+					goto if_destroy;
+				}
+				adapter->vf_cfg[vf].vf_pmac_id =
+							BE_INVALID_PMAC_ID;
+				vf++;
 			}
-			vf++;
 		}
-	} else if (!be_physfn(adapter)) {
+	} else {
 		status = be_cmd_mac_addr_query(adapter, mac,
 			MAC_ADDRESS_TYPE_NETWORK, false, adapter->if_handle);
 		if (!status) {
@@ -2223,7 +2229,7 @@ static int be_setup(struct be_adapter *a
 	if (status != 0)
 		goto rx_qs_destroy;
 
-	if (be_physfn(adapter)) {
+	if (be_physfn(adapter) && adapter->sriov_enabled) {
 		status = be_vf_eth_addr_config(adapter);
 		if (status)
 			goto mcc_q_destroy;
@@ -2242,9 +2248,10 @@ rx_qs_destroy:
 tx_qs_destroy:
 	be_tx_queues_destroy(adapter);
 if_destroy:
-	for (vf = 0; vf < num_vfs; vf++)
-		if (adapter->vf_if_handle[vf])
-			be_cmd_if_destroy(adapter,
+	if (be_physfn(adapter) && adapter->sriov_enabled)
+		for (vf = 0; vf < num_vfs; vf++)
+			if (adapter->vf_cfg[vf].vf_if_handle)
+				be_cmd_if_destroy(adapter,
 					adapter->vf_cfg[vf].vf_if_handle,
 					vf + 1);
 	be_cmd_if_destroy(adapter, adapter->if_handle, 0);
@@ -2254,7 +2261,7 @@ do_none:
 
 static int be_clear(struct be_adapter *adapter)
 {
-	if (be_physfn(adapter))
+	if (be_physfn(adapter) && adapter->sriov_enabled)
 		be_vf_eth_addr_rem(adapter);
 
 	be_mcc_queues_destroy(adapter);
