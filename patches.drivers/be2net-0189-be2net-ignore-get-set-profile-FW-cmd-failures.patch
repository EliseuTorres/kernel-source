From: Sathya Perla <sathya.perla@emulex.com>
Date: Fri, 1 Aug 2014 17:47:30 +0530
Subject: be2net: ignore get/set profile FW cmd failures
Patch-mainline: v3.17-rc1
Git-commit: d3d183126de8e100b003d09b64c6ec4b1c93abfc
References: bnc#908322 FATE#317535

Old versions of BE3 FW may not support cmds to re-provision (and hence
optimize) resources/queues in SR-IOV config. Do not treat this FW cmd
failure as fatal and fail the function initialization. Instead, just
enable SR-IOV with the resources provided by the FW.

Prior to the "create optimal number of queues on SR-IOV config" patch
such failures were ignored.
Fixes: bec84e6b2 ("create optimal number of queues on SR-IOV config")

Reported-by: Eduardo Habkost <ehabkost@redhat.com>
Signed-off-by: Sathya Perla <sathya.perla@emulex.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
Acked-by: Benjamin Poirier <bpoirier@suse.de>
---
 drivers/net/ethernet/emulex/benet/be_main.c |   67 +++++++++++++++-------------
 1 file changed, 37 insertions(+), 30 deletions(-)

--- a/drivers/net/ethernet/emulex/benet/be_main.c
+++ b/drivers/net/ethernet/emulex/benet/be_main.c
@@ -3184,22 +3184,17 @@ static int be_get_sriov_config(struct be
 {
 	struct device *dev = &adapter->pdev->dev;
 	struct be_resources res = {0};
-	int status, max_vfs, old_vfs;
-
-	status = be_cmd_get_profile_config(adapter, &res, 0);
-	if (status)
-		return status;
-
-	adapter->pool_res = res;
+	int max_vfs, old_vfs;
 
 	/* Some old versions of BE3 FW don't report max_vfs value */
+	be_cmd_get_profile_config(adapter, &res, 0);
+
 	if (BE3_chip(adapter) && !res.max_vfs) {
 		max_vfs = pci_sriov_get_totalvfs(adapter->pdev);
 		res.max_vfs = max_vfs > 0 ? min(MAX_VFS, max_vfs) : 0;
 	}
 
-	adapter->pool_res.max_vfs = res.max_vfs;
-	pci_sriov_set_totalvfs(adapter->pdev, be_max_vfs(adapter));
+	adapter->pool_res = res;
 
 	if (!be_max_vfs(adapter)) {
 		if (num_vfs)
@@ -3208,6 +3203,8 @@ static int be_get_sriov_config(struct be
 		return 0;
 	}
 
+	pci_sriov_set_totalvfs(adapter->pdev, be_max_vfs(adapter));
+
 	/* validate num_vfs module param */
 	old_vfs = pci_num_vf(adapter->pdev);
 	if (old_vfs) {
@@ -3265,6 +3262,35 @@ static int be_get_resources(struct be_ad
 	return 0;
 }
 
+static void be_sriov_config(struct be_adapter *adapter)
+{
+	struct device *dev = &adapter->pdev->dev;
+	int status;
+
+	status = be_get_sriov_config(adapter);
+	if (status) {
+		dev_err(dev, "Failed to query SR-IOV configuration\n");
+		dev_err(dev, "SR-IOV cannot be enabled\n");
+		return;
+	}
+
+	/* When the HW is in SRIOV capable configuration, the PF-pool
+	 * resources are equally distributed across the max-number of
+	 * VFs. The user may request only a subset of the max-vfs to be
+	 * enabled. Based on num_vfs, redistribute the resources across
+	 * num_vfs so that each VF will have access to more number of
+	 * resources. This facility is not available in BE3 FW.
+	 * Also, this is done by FW in Lancer chip.
+	 */
+	if (be_max_vfs(adapter) && !pci_num_vf(adapter->pdev)) {
+		status = be_cmd_set_sriov_config(adapter,
+						 adapter->pool_res,
+						 adapter->num_vfs);
+		if (status)
+			dev_err(dev, "Failed to optimize SR-IOV resources\n");
+	}
+}
+
 static int be_get_config(struct be_adapter *adapter)
 {
 	u16 profile_id;
@@ -3281,27 +3307,8 @@ static int be_get_config(struct be_adapt
 				 "Using profile 0x%x\n", profile_id);
 	}
 
-	if (!BE2_chip(adapter) && be_physfn(adapter)) {
-		status = be_get_sriov_config(adapter);
-		if (status)
-			return status;
-
-		/* When the HW is in SRIOV capable configuration, the PF-pool
-		 * resources are equally distributed across the max-number of
-		 * VFs. The user may request only a subset of the max-vfs to be
-		 * enabled. Based on num_vfs, redistribute the resources across
-		 * num_vfs so that each VF will have access to more number of
-		 * resources. This facility is not available in BE3 FW.
-		 * Also, this is done by FW in Lancer chip.
-		 */
-		if (!pci_num_vf(adapter->pdev)) {
-			status = be_cmd_set_sriov_config(adapter,
-							 adapter->pool_res,
-							 adapter->num_vfs);
-			if (status)
-				return status;
-		}
-	}
+	if (!BE2_chip(adapter) && be_physfn(adapter))
+		be_sriov_config(adapter);
 
 	status = be_get_resources(adapter);
 	if (status)
