From 966ff65bd08fe36c7f48db86b0449b43e4c7b6a8 Mon Sep 17 00:00:00 2001
From: Dan Williams <dan.j.williams@intel.com>
Date: Tue, 20 May 2014 18:09:03 -0700
Subject: [PATCH 57/68] usb: don't clear FEAT_C_ENABLE on
 usb_port_runtime_resume failure
References: FATE#315518
Git-Commit: 7c604079bdf729e7b8c4b0e67c688b5081d1863d
Patch-Mainline: v3.16-rc1
Three reasons:
1/ It's an invalid operation on usb3 ports
2/ There's no guarantee of when / if a usb2 port has entered an error
   state relative to PORT_POWER request
3/ The port is active / powered at this point, so khubd will clear it as
   a matter of course

Acked-by: Alan Stern <stern@rowland.harvard.edu>
Signed-off-by: Dan Williams <dan.j.williams@intel.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Signed-off-by: Oliver Neukum <oneukum@suse.de>
---
 drivers/usb/core/port.c | 1 -
 1 file changed, 1 deletion(-)

diff --git a/drivers/usb/core/port.c b/drivers/usb/core/port.c
index 827b0d3..f41f051 100644
--- a/drivers/usb/core/port.c
+++ b/drivers/usb/core/port.c
@@ -110,7 +110,6 @@ static int usb_port_runtime_resume(struct device *dev)
 		if (retval < 0)
 			dev_dbg(&port_dev->dev, "can't get reconnection after setting port  power on, status %d\n",
 					retval);
-		usb_clear_port_feature(hdev, port1, USB_PORT_FEAT_C_ENABLE);
 		retval = 0;
 	}
 
-- 
1.8.4.5

