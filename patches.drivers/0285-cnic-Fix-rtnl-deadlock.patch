From mchan@broadcom.com  Tue Jul  5 16:20:59 2011
From: Michael Chan <mchan@broadcom.com>
Date: Fri, 8 Apr 2011 13:03:02 -0700
Subject: [PATCH 285/348] cnic: Fix rtnl deadlock
Git-commit: 93ae653491f0a413d5f4d9aa4df45d09ecb55d62
Patch-mainline: v3.0-rc1
References: FATE#311458 FATE#311459 FATE#311460 FATE#311461 FATE#311462 bnc#698050

Upstream commit: 93ae653491f0a413d5f4d9aa4df45d09ecb55d62

When cnic_stop_hw() -> cnic_cm_stop_bnx2x_hw() is called under rtnl_lock()
from NETDEV_DOWN event, it waits for cnic_delete_task() to complete.
It will deadlock when cnic_delete_task() takes rtnl_lock() before
calling cnic_ulp_stop_one().

We fix it by removing the rtnl_lock() in cnic_delete_task().
cnic_ulp_stop_one() has mutex and atomic bit ops to prevent important
operations from being done more than once, so it is not necessary to take
rtnl_lock().

Signed-off-by: Michael Chan <mchan@broadcom.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
Acked-by: Jeff Mahoney <jeffm@suse.com>
---
 drivers/net/cnic.c |    2 --
 1 files changed, 0 insertions(+), 2 deletions(-)

diff --git a/drivers/net/cnic.c b/drivers/net/cnic.c
index d8408e5..6cb4dd5 100644
--- a/drivers/net/cnic.c
+++ b/drivers/net/cnic.c
@@ -3986,9 +3986,7 @@ static void cnic_delete_task(struct work_struct *work)
 	if (test_and_clear_bit(CNIC_LCL_FL_STOP_ISCSI, &cp->cnic_local_flags)) {
 		struct drv_ctl_info info;
 
-		rtnl_lock();
 		cnic_ulp_stop_one(cp, CNIC_ULP_ISCSI);
-		rtnl_unlock();
 
 		info.cmd = DRV_CTL_ISCSI_STOPPED_CMD;
 		cp->ethdev->drv_ctl(dev->netdev, &info);
-- 
1.6.4.GIT

