From: Sebastian Ott <sebott@linux.vnet.ibm.com>
Subject: PCI: Add pcibios_release_device()
Patch-mainline: v3.11-rc1
Git-commit: 6ae32c539c0412ca789fb6041be45eeabf78431c
References: bnc#848335,FATE#83037,LTC#94737

Platforms may want to provide architecture-specific functionality when
a PCI device is released.  Add a pcibios_release_device() call that
architectures can override to do so.

Signed-off-by: Sebastian Ott <sebott@linux.vnet.ibm.com>
Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
Acked-by: John Jolly <jjolly@suse.de>
---
 drivers/pci/pci.c   |   10 ++++++++++
 drivers/pci/probe.c |    1 +
 include/linux/pci.h |    1 +
 3 files changed, 12 insertions(+)

--- a/drivers/pci/pci.c
+++ b/drivers/pci/pci.c
@@ -1317,6 +1317,16 @@ int __weak pcibios_add_device (struct pc
 }
 
 /**
+ * pcibios_release_device - provide arch specific hooks when releasing device dev
+ * @dev: the PCI device being released
+ *
+ * Permits the platform to provide architecture specific functionality when
+ * devices are released. This is the default implementation. Architecture
+ * implementations can override this.
+ */
+void __weak pcibios_release_device(struct pci_dev *dev) {}
+
+/**
  * pcibios_disable_device - disable arch specific PCI resources for device dev
  * @dev: the PCI device to disable
  *
--- a/drivers/pci/probe.c
+++ b/drivers/pci/probe.c
@@ -1048,6 +1048,7 @@ static void pci_release_dev(struct devic
 
 	pci_dev = to_pci_dev(dev);
 	pci_release_capabilities(pci_dev);
+	pcibios_release_device(pci_dev);
 	kfree(pci_dev);
 }
 
--- a/include/linux/pci.h
+++ b/include/linux/pci.h
@@ -1501,6 +1501,7 @@ void pcibios_disable_device(struct pci_d
 int pcibios_set_pcie_reset_state(struct pci_dev *dev,
 				 enum pcie_reset_state state);
 int pcibios_add_device(struct pci_dev *dev);
+void pcibios_release_device(struct pci_dev *dev);
 
 #ifdef CONFIG_PCI_MMCONFIG
 extern void __init pci_mmcfg_early_init(void);
