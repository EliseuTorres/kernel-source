From: Matthew Wilcox <matthew.r.wilcox@intel.com>
Date: Thu, 24 Feb 2011 08:46:00 -0500
Subject: NVMe: Fix discontiguous accesses
Git-commit: d8ee9d69f275769aaad40ef7c944565ff8d2d24f
References: FATE#313627
Patch-Mainline: v3.7-rc1

When we submit subsequent portions of the I/O, we need to access the
updated block, not start reading again from the original position.
This was showing up as miscompares in the XFS randholes testcase.

Signed-off-by: Matthew Wilcox <matthew.r.wilcox@intel.com>
Acked-by: Hannes Reinecke <hare@suse.de>
---
 drivers/block/nvme.c |    2 ++
 1 files changed, 2 insertions(+), 0 deletions(-)

diff --git a/drivers/block/nvme.c b/drivers/block/nvme.c
index 2409227..562d75a 100644
--- a/drivers/block/nvme.c
+++ b/drivers/block/nvme.c
@@ -529,6 +529,8 @@ static int nvme_submit_bio_queue(struct nvme_queue *nvmeq, struct nvme_ns *ns,
 	cmnd->rw.control = cpu_to_le16(control);
 	cmnd->rw.dsmgmt = cpu_to_le32(dsmgmt);
 
+	bio->bi_sector += length >> 9;
+
 	if (++nvmeq->sq_tail == nvmeq->q_depth)
 		nvmeq->sq_tail = 0;
 	writel(nvmeq->sq_tail, nvmeq->q_db);
-- 
1.7.4.2

