From d02a5e6c2fba8b114c44cf05085fca07180f37f1 Mon Sep 17 00:00:00 2001
From: Michael Chan <mchan@broadcom.com>
Date: Wed, 24 Feb 2010 14:42:06 +0000
Subject: [PATCH] cnic: Fix panic in cnic_iscsi_nl_msg_recv() when device is down.
References: bnc#608435
Patch-mainline: v2.6.35

Some data structures are freed when the device is down and it will
crash if an ISCSI netlink message is received.  Add RCU protection
to prevent this.  In the shutdown path, ulp_ops[CNIC_ULP_L4] is
assigned NULL and rcu_synchronized before freeing the data
structures.

Signed-off-by: Michael Chan <mchan@broadcom.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
Signed-off-by: Brandon Philips <bphilips@suse.de>

---
 drivers/net/cnic.c |    7 +++++++
 1 file changed, 7 insertions(+)

Index: linux-2.6.32-SLE11-SP1/drivers/net/cnic.c
===================================================================
--- linux-2.6.32-SLE11-SP1.orig/drivers/net/cnic.c
+++ linux-2.6.32-SLE11-SP1/drivers/net/cnic.c
@@ -335,6 +335,12 @@ static int cnic_iscsi_nl_msg_recv(struct
 		if (l5_cid >= MAX_CM_SK_TBL_SZ)
 			break;
 
+		rcu_read_lock();
+		if (!rcu_dereference(cp->ulp_ops[CNIC_ULP_L4])) {
+			rc = -ENODEV;
+			rcu_read_unlock();
+			break;
+		}
 		csk = &cp->csk_tbl[l5_cid];
 		csk_hold(csk);
 		if (cnic_in_use(csk)) {
@@ -349,6 +355,7 @@ static int cnic_iscsi_nl_msg_recv(struct
 				cnic_cm_set_pg(csk);
 		}
 		csk_put(csk);
+		rcu_read_unlock();
 		rc = 0;
 	}
 	}
