From: Mauro Carvalho Chehab <mchehab@redhat.com>
Subject: i7core_edac: properly terminate pci_dev_table
References: fate#311968
Patch-Mainline: yes
Git-commit: 3c52cc57ccd5c99441368d5e66be36681ce90e72


Signed-off-by: Thomas Renninger <trenn@suse.de>

At pci_xeon_fixup(), it waits for a null-terminated table, while at
i7core_get_all_devices, it just do a for 0..ARRAY_SIZE. As other tables
are zero-terminated, change it to be terminate with 0 as well, and fixes
a bug where it may be running out of the table elements.

Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>

---
 drivers/edac/i7core_edac.c |    9 +++++----
 1 file changed, 5 insertions(+), 4 deletions(-)

Index: linux-2.6.32-SLE11-SP1/drivers/edac/i7core_edac.c
===================================================================
--- linux-2.6.32-SLE11-SP1.orig/drivers/edac/i7core_edac.c
+++ linux-2.6.32-SLE11-SP1/drivers/edac/i7core_edac.c
@@ -354,6 +354,7 @@ static const struct pci_id_table pci_dev
 	PCI_ID_TABLE_ENTRY(pci_dev_descr_i7core_nehalem),
 	PCI_ID_TABLE_ENTRY(pci_dev_descr_lynnfield),
 	PCI_ID_TABLE_ENTRY(pci_dev_descr_i7core_westmere),
+	{0,}			/* 0 terminated list. */
 };
 
 /*
@@ -1410,14 +1411,13 @@ static int i7core_get_onedevice(struct p
 
 static int i7core_get_all_devices(void)
 {
-	int i, j, rc, last_bus;
+	int i, rc, last_bus;
 	struct pci_dev *pdev = NULL;
-	const struct pci_id_table *table;
+	const struct pci_id_table *table = pci_dev_table;
 
 	last_bus = i7core_pci_lastbus();
 
-	for (j = 0; j < ARRAY_SIZE(pci_dev_table); j++) {
-		table = &pci_dev_table[j];
+	while (table && table->descr) {
 		for (i = 0; i < table->n_devs; i++) {
 			pdev = NULL;
 			do {
@@ -1433,6 +1433,7 @@ static int i7core_get_all_devices(void)
 				}
 			} while (pdev);
 		}
+		table++;
 	}
 
 	return 0;
