From: Amir Vadai <amirv@mellanox.com>
Date: Mon Apr 14 11:17:22 2014 +0300
Subject: net/mlx4_core: Defer VF initialization till PF is fully initialized
Patch-mainline: v3.15-rc2
Git-commit: e1a5ddc5069a0c7589a139e0422200672d965581
References: bnc#874501
    
    Fix in commit [1] is not sufficient since a deferred VF initialization
    could happen after pci_enable_sriov() is finished, but before the PF is
    fully initialized.
    Need to prevent VFs from initializing till the PF is fully ready and
    comm channel is operational.
    
    [1] - 9798935 "net/mlx4_core: mlx4_init_slave() shouldn't access comm
          channel before PF is ready"
    
CC: Stuart Hayes <Stuart_Hayes@Dell.com>
Signed-off-by: Amir Vadai <amirv@mellanox.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
Acked-by: John Jolly <jjolly@suse.de>

diff --git a/drivers/net/ethernet/mellanox/mlx4/main.c b/drivers/net/ethernet/mellanox/mlx4/main.c
index 4b86c7a..cef267e 100644
--- a/drivers/net/ethernet/mellanox/mlx4/main.c
+++ b/drivers/net/ethernet/mellanox/mlx4/main.c
@@ -2369,11 +2369,11 @@ static int __mlx4_init_one(struct pci_dev *pdev, int pci_dev_data)
 
 			atomic_inc(&pf_loading);
 			err = pci_enable_sriov(pdev, num_vfs);
-			atomic_dec(&pf_loading);
 
 			if (err) {
 				mlx4_err(dev, "Failed to enable SR-IOV, continuing without SR-IOV (err = %d).\n",
 					 err);
+				atomic_dec(&pf_loading);
 				err = 0;
 			} else {
 				mlx4_warn(dev, "Running in master mode\n");
@@ -2532,6 +2532,9 @@ slave_start:
 	priv->pci_dev_data = pci_dev_data;
 	pci_set_drvdata(pdev, dev);
 
+	if (mlx4_is_master(dev) && dev->num_vfs)
+		atomic_dec(&pf_loading);
+
 	return 0;
 
 err_port:
@@ -2582,6 +2585,9 @@ err_rel_own:
 	if (!mlx4_is_slave(dev))
 		mlx4_free_ownership(dev);
 
+	if (mlx4_is_master(dev) && dev->num_vfs)
+		atomic_dec(&pf_loading);
+
 err_free_dev:
 	kfree(priv);
 
@@ -2675,6 +2681,7 @@ static void __mlx4_remove_one(struct pci_dev *pdev)
 		if (dev->flags & MLX4_FLAG_SRIOV) {
 			mlx4_warn(dev, "Disabling SR-IOV\n");
 			pci_disable_sriov(pdev);
+		dev->num_vfs = 0;
 		}
 
 		if (!mlx4_is_slave(dev))
