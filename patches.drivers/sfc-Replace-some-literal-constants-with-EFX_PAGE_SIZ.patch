From: Ben Hutchings <bhutchings@solarflare.com>
Date: Thu, 2 Feb 2012 21:21:15 +0000
Subject: [PATCH 2/4] sfc: Replace some literal constants with
 EFX_PAGE_SIZE/EFX_BUF_SIZE
Patch-mainline: v3.4-rc1
Git-commit: 5b6262d0ccf759a16fabe11d904a2531125a4b71
References: bnc#774523 CVE-2012-3412

The 'page size' for PCIe DMA, i.e. the alignment of boundaries at
which DMA must be broken, is 4KB.  Name this value as EFX_PAGE_SIZE
and use it in efx_max_tx_len().  Redefine EFX_BUF_SIZE as
EFX_PAGE_SIZE since its value is also a result of that requirement,
and use it in efx_init_special_buffer().

Signed-off-by: Ben Hutchings <bhutchings@solarflare.com>
Acked-by: Benjamin Poirier <bpoirier@suse.de>
---
 drivers/net/sfc/nic.c |    5 +----
 drivers/net/sfc/nic.h |    5 +++++
 drivers/net/sfc/tx.c  |    2 +-
 3 files changed, 7 insertions(+), 5 deletions(-)

--- a/drivers/net/sfc/nic.c
+++ b/drivers/net/sfc/nic.c
@@ -62,9 +62,6 @@ MODULE_PARM_DESC(rx_xon_thresh_bytes, "d
 #define EFX_FLUSH_INTERVAL 10
 #define EFX_FLUSH_POLL_COUNT 100
 
-/* Size and alignment of special buffers (4KB) */
-#define EFX_BUF_SIZE 4096
-
 /* Depth of RX flush request fifo */
 #define EFX_RX_FLUSH_COUNT 4
 
@@ -204,7 +201,7 @@ efx_init_special_buffer(struct efx_nic *
 	/* Write buffer descriptors to NIC */
 	for (i = 0; i < buffer->entries; i++) {
 		index = buffer->index + i;
-		dma_addr = buffer->dma_addr + (i * 4096);
+		dma_addr = buffer->dma_addr + (i * EFX_BUF_SIZE);
 		netif_dbg(efx, probe, efx->net_dev,
 			  "mapping special buffer %d at %llx\n",
 			  index, (unsigned long long)dma_addr);
--- a/drivers/net/sfc/nic.h
+++ b/drivers/net/sfc/nic.h
@@ -65,6 +65,11 @@ enum {
 #define FALCON_GMAC_LOOPBACKS			\
 	(1 << LOOPBACK_GMAC)
 
+/* Alignment of PCIe DMA boundaries (4KB) */
+#define EFX_PAGE_SIZE	4096
+/* Size and alignment of buffer table entries (same) */
+#define EFX_BUF_SIZE	EFX_PAGE_SIZE
+
 /**
  * struct falcon_board_type - board operations and type information
  * @id: Board type id, as found in NVRAM
--- a/drivers/net/sfc/tx.c
+++ b/drivers/net/sfc/tx.c
@@ -106,7 +106,7 @@ efx_max_tx_len(struct efx_nic *efx, dma_
 	 * little benefit from using descriptors that cross those
 	 * boundaries and we keep things simple by not doing so.
 	 */
-	unsigned len = (~dma_addr & 0xfff) + 1;
+	unsigned len = (~dma_addr & (EFX_PAGE_SIZE - 1)) + 1;
 
 	/* Work around hardware bug for unaligned buffers. */
 	if (EFX_WORKAROUND_5391(efx) && (dma_addr & 0xf))
