From: Ville Syrj채l채 <ville.syrjala@linux.intel.com>
Date: Mon Aug 18 22:16:09 2014 +0300
Subject: drm/i915: Move DP port disable to post_disable for pch platforms
Patch-mainline: Upstream/drm-intel-next-2014-09-05
Git-commit: 08aff3fe26ae7a0d6f302ac2e1b7e2eb9933cd42
Git-repo: git://anongit.freedesktop.org/drm-intel
References: bnc#899787
Signed-off-by: Egbert Eich <eich@suse.com>

We need to turn the DP port off after the pipe, otherwise the pipe won't
turn off properly on certain pch platforms at least (happens on my ILK for
example).  This also matches the BSpec modeset sequence better. We still
don't match the spec exactly though (eg. audio disable should happen
much earlier), but at last this eliminates the nasty
wait_for_pipe_off() timeouts.

We already did the port disable after the pipe for VLV/CHV and for CPU
eDP.

For g4x leave the port disable where it is since that matches the
modeset sequence in the documentation and I don't have a suitable
machine to test if the other order would work.

Signed-off-by: Ville Syrj채l채 <ville.syrjala@linux.intel.com>
Reviewed-by: Imre Deak <imre.deak@intel.com>
Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
---
 drivers/gpu/drm/i915/intel_dp.c |   18 +++++++++++++++---
 1 file changed, 15 insertions(+), 3 deletions(-)

--- linux-3.12-SLE12.orig/drivers/gpu/drm/i915/intel_dp.c
+++ linux-3.12-SLE12/drivers/gpu/drm/i915/intel_dp.c
@@ -1695,7 +1695,6 @@ void intel_edp_psr_update(struct drm_dev
 static void intel_disable_dp(struct intel_encoder *encoder)
 {
 	struct intel_dp *intel_dp = enc_to_intel_dp(&encoder->base);
-	enum port port = dp_to_dig_port(intel_dp)->port;
 	struct drm_device *dev = encoder->base.dev;
 
 	/* Make sure the panel is off before trying to change the mode. But also
@@ -1705,11 +1704,22 @@ static void intel_disable_dp(struct inte
 	intel_dp_sink_dpms(intel_dp, DRM_MODE_DPMS_ON);
 	ironlake_edp_panel_off(intel_dp);
 
-	/* cpu edp my only be disable _after_ the cpu pipe/plane is disabled. */
-	if (!(port == PORT_A || IS_VALLEYVIEW(dev)))
+	/* disable the port before the pipe on g4x */
+	if (INTEL_INFO(dev)->gen < 5)
 		intel_dp_link_down(intel_dp);
 }
 
+static void ilk_post_disable_dp(struct intel_encoder *encoder)
+{
+	struct intel_dp *intel_dp = enc_to_intel_dp(&encoder->base);
+	enum port port = dp_to_dig_port(intel_dp)->port;
+
+	intel_dp_link_down(intel_dp);
+
+	if (port == PORT_A)
+		ironlake_edp_pll_off(intel_dp);
+}
+
 static void intel_post_disable_dp(struct intel_encoder *encoder)
 {
 	struct intel_dp *intel_dp = enc_to_intel_dp(&encoder->base);
@@ -3588,6 +3598,8 @@ intel_dp_init(struct drm_device *dev, in
 	} else {
 		intel_encoder->pre_enable = intel_pre_enable_dp;
 		intel_encoder->enable = intel_enable_dp;
+		if (INTEL_INFO(dev)->gen >= 5)
+			intel_encoder->post_disable = ilk_post_disable_dp;
 	}
 
 	intel_dig_port->port = port;
