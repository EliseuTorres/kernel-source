From: Matthew Wilcox <matthew.r.wilcox@intel.com>
Date: Wed, 16 Mar 2011 16:29:00 -0400
Subject: NVMe: Fix comment formatting
Git-commit: fa92282149842645931580225647238428374758
References: FATE#313627
Patch-Mainline: v3.7-rc1

Reported-by: Randy Dunlap <rdunlap@xenotime.net>
Signed-off-by: Matthew Wilcox <matthew.r.wilcox@intel.com>
Acked-by: Hannes Reinecke <hare@suse.de>
---
 drivers/block/nvme.c |    6 ++++--
 1 files changed, 4 insertions(+), 2 deletions(-)

diff --git a/drivers/block/nvme.c b/drivers/block/nvme.c
index e392919..740a9c1 100644
--- a/drivers/block/nvme.c
+++ b/drivers/block/nvme.c
@@ -182,7 +182,8 @@ static int alloc_cmdid_killable(struct nvme_queue *nvmeq, void *ctx,
 	return (cmdid < 0) ? -EINTR : cmdid;
 }
 
-/* If you need more than four handlers, you'll need to change how
+/*
+ * If you need more than four handlers, you'll need to change how
  * alloc_cmdid and nvme_process_cq work.  Consider using a special
  * CMD_CTX value instead, if that works for your situation.
  */
@@ -1066,7 +1067,8 @@ static int nvme_submit_io(struct nvme_ns *ns, struct nvme_user_io __user *uio)
 	prps = nvme_setup_prps(dev, &c.common, sg, length);
 
 	nvmeq = get_nvmeq(ns);
-	/* Since nvme_submit_sync_cmd sleeps, we can't keep preemption
+	/*
+	 * Since nvme_submit_sync_cmd sleeps, we can't keep preemption
 	 * disabled.  We may be preempted at any point, and be rescheduled
 	 * to a different CPU.  That will cause cacheline bouncing, but no
 	 * additional races since q_lock already protects against other CPUs.
-- 
1.7.4.2

