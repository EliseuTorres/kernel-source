From: Roland Dreier <roland@purestorage.com>
Date: Tue, 14 Aug 2012 15:17:10 -0700
Subject: mlx4_core: Clean up buddy bitmap allocation
Patch-mainline: v3.6-rc3
Git-commit: 96f17d590092ae2511adf599a252e8ed1901b7a4
References: bnc#786036 FATE#314304

 - Use kcalloc() / vzalloc() instead of an extra bitmap_zero().
 - Add __GFP_NOWARN to kcalloc() since we'll try vzalloc() if it fails.

Signed-off-by: Roland Dreier <roland@purestorage.com>
Signed-off-by: Amir Vadai <amirv@mellanox.com>
Acked-by: Benjamin Poirier <bpoirier@suse.de>
---
 drivers/net/ethernet/mellanox/mlx4/mr.c |    7 +++----
 1 file changed, 3 insertions(+), 4 deletions(-)
--- a/drivers/net/ethernet/mellanox/mlx4/mr.c
+++ b/drivers/net/ethernet/mellanox/mlx4/mr.c
@@ -120,7 +120,7 @@ static int mlx4_buddy_init(struct mlx4_b
 	buddy->max_order = max_order;
 	spin_lock_init(&buddy->lock);
 
-	buddy->bits = kzalloc((buddy->max_order + 1) * sizeof (long *),
+	buddy->bits = kcalloc(buddy->max_order + 1, sizeof (long *),
 			      GFP_KERNEL);
 	buddy->num_free = kcalloc((buddy->max_order + 1), sizeof *buddy->num_free,
 				  GFP_KERNEL);
@@ -129,13 +129,12 @@ static int mlx4_buddy_init(struct mlx4_b
 
 	for (i = 0; i <= buddy->max_order; ++i) {
 		s = BITS_TO_LONGS(1 << (buddy->max_order - i));
-		buddy->bits[i] = kmalloc(s * sizeof (long), GFP_KERNEL);
+		buddy->bits[i] = kcalloc(s, sizeof (long), GFP_KERNEL | __GFP_NOWARN);
 		if (!buddy->bits[i]) {
-			buddy->bits[i] = vmalloc(s * sizeof(long));
+			buddy->bits[i] = vzalloc(s * sizeof(long));
 			if (!buddy->bits[i])
 				goto err_out_free;
 		}
-		bitmap_zero(buddy->bits[i], 1 << (buddy->max_order - i));
 	}
 
 	set_bit(0, buddy->bits[buddy->max_order]);
