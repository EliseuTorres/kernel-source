From 396a9e8183808052e17eb6bafc89a24824136bb4 Mon Sep 17 00:00:00 2001
From: Jacob Shin <jacob.shin@amd.com>
Date: Tue, 15 Jan 2013 22:59:27 -0600
Subject: [PATCH 1/2] EDAC, MCE, AMD: Make MC2 decoding per-family
Git-url: git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp.git
Git-commit: b61f33632dc3211e6bce9cfc8f6ec9ffd76d1011
Patch-mainline: next merge window (3.9)
References: fate#314148, bnc#798781

Currently only AMD Family 15h processors have special handling for MC2
errors. Since upcoming Family 16h will also need unique handling, let's
make MC2 handling part of amd_decoder_ops.

Signed-off-by: Jacob Shin <jacob.shin@amd.com>
Acked-by: Raymund Will <rw@suse.de>

---
 drivers/edac/mce_amd.c | 57 ++++++++++++++++++++++++++------------------------
 drivers/edac/mce_amd.h |  1 +
 2 files changed, 31 insertions(+), 27 deletions(-)

diff --git a/drivers/edac/mce_amd.c b/drivers/edac/mce_amd.c
index cc9512d..bf3b6ab 100644
--- a/drivers/edac/mce_amd.c
+++ b/drivers/edac/mce_amd.c
@@ -385,12 +385,9 @@ static void amd_decode_ic_mce(struct mce *m)
 		pr_emerg(HW_ERR "Corrupted IC MCE info?\n");
 }
 
-static void amd_decode_bu_mce(struct mce *m)
+static bool k8_bu_mce(u16 ec, u8 xec)
 {
-	u16 ec = EC(m->status);
-	u8 xec = XEC(m->status, xec_mask);
-
-	pr_emerg(HW_ERR "Bus Unit Error");
+	bool ret = true;
 
 	if (xec == 0x1)
 		pr_cont(" in the write data buffers.\n");
@@ -415,24 +412,18 @@ static void amd_decode_bu_mce(struct mce *m)
 				pr_cont(": %s parity/ECC error during data "
 					"access from L2.\n", R4_MSG(ec));
 			else
-				goto wrong_bu_mce;
+				ret = false;
 		} else
-			goto wrong_bu_mce;
+			ret = false;
 	} else
-		goto wrong_bu_mce;
-
-	return;
+		ret = false;
 
-wrong_bu_mce:
-	pr_emerg(HW_ERR "Corrupted BU MCE info?\n");
+	return ret;
 }
 
-static void amd_decode_cu_mce(struct mce *m)
+static bool f15h_cu_mce(u16 ec, u8 xec)
 {
-	u16 ec = EC(m->status);
-	u8 xec = XEC(m->status, xec_mask);
-
-	pr_emerg(HW_ERR "Combined Unit Error: ");
+	bool ret = true;
 
 	if (TLB_ERROR(ec)) {
 		if (xec == 0x0)
@@ -440,10 +431,10 @@ static void amd_decode_cu_mce(struct mce *m)
 		else if (xec == 0x1)
 			pr_cont("Poison data provided for TLB fill.\n");
 		else
-			goto wrong_cu_mce;
+			ret = false;
 	} else if (BUS_ERROR(ec)) {
 		if (xec > 2)
-			goto wrong_cu_mce;
+			ret = false;
 
 		pr_cont("Error during attempted NB data read.\n");
 	} else if (MEM_ERROR(ec)) {
@@ -457,14 +448,23 @@ static void amd_decode_cu_mce(struct mce *m)
 			break;
 
 		default:
-			goto wrong_cu_mce;
+			ret = false;
 		}
 	}
 
-	return;
+	return ret;
+}
 
-wrong_cu_mce:
-	pr_emerg(HW_ERR "Corrupted CU MCE info?\n");
+static void amd_decode_bu_mce(struct mce *m)
+{
+	u16 ec = EC(m->status);
+ 	u8 xec = XEC(m->status, xec_mask);
+ 
+ 	pr_emerg(HW_ERR "%s Unit Error: ", boot_cpu_data.x86 >= 0x15 ?
+		"Combined" : "Bus");
+ 
+ 	if (!fam_ops->bu_mce(ec, xec))
+		pr_cont(HW_ERR "Corrupted MC2 MCE info?\n");
 }
 
 static void amd_decode_ls_mce(struct mce *m)
@@ -802,10 +802,7 @@ int amd_decode_mce(struct notifier_block *nb, unsigned long val, void *data)
 		break;
 
 	case 2:
-		if (c->x86 == 0x15)
-			amd_decode_cu_mce(m);
-		else
-			amd_decode_bu_mce(m);
+		amd_decode_bu_mce(m);
 		break;
 
 	case 3:
@@ -857,24 +854,28 @@ static int __init mce_amd_init(void)
 	case 0xf:
 		fam_ops->dc_mce = k8_dc_mce;
 		fam_ops->ic_mce = k8_ic_mce;
+		fam_ops->bu_mce = k8_bu_mce;
 		fam_ops->nb_mce = k8_nb_mce;
 		break;
 
 	case 0x10:
 		fam_ops->dc_mce = f10h_dc_mce;
 		fam_ops->ic_mce = k8_ic_mce;
+		fam_ops->bu_mce = k8_bu_mce;
 		fam_ops->nb_mce = f10h_nb_mce;
 		break;
 
 	case 0x11:
 		fam_ops->dc_mce = k8_dc_mce;
 		fam_ops->ic_mce = k8_ic_mce;
+		fam_ops->bu_mce = k8_bu_mce;
 		fam_ops->nb_mce = f10h_nb_mce;
 		break;
 
 	case 0x12:
 		fam_ops->dc_mce = f12h_dc_mce;
 		fam_ops->ic_mce = k8_ic_mce;
+		fam_ops->bu_mce = k8_bu_mce;
 		fam_ops->nb_mce = nb_noop_mce;
 		break;
 
@@ -882,6 +883,7 @@ static int __init mce_amd_init(void)
 		nb_err_cpumask  = 0x3;
 		fam_ops->dc_mce = f14h_dc_mce;
 		fam_ops->ic_mce = f14h_ic_mce;
+		fam_ops->bu_mce = k8_bu_mce;
 		fam_ops->nb_mce = nb_noop_mce;
 		break;
 
@@ -889,6 +891,7 @@ static int __init mce_amd_init(void)
 		xec_mask = 0x1f;
 		fam_ops->dc_mce = f15h_dc_mce;
 		fam_ops->ic_mce = f15h_ic_mce;
+		fam_ops->bu_mce = f15h_cu_mce;
 		fam_ops->nb_mce = f10h_nb_mce;
 		break;
 
diff --git a/drivers/edac/mce_amd.h b/drivers/edac/mce_amd.h
index 795a320..98aefca 100644
--- a/drivers/edac/mce_amd.h
+++ b/drivers/edac/mce_amd.h
@@ -82,6 +82,7 @@ extern const char *ii_msgs[];
 struct amd_decoder_ops {
 	bool (*dc_mce)(u16, u8);
 	bool (*ic_mce)(u16, u8);
+	bool (*bu_mce)(u16, u8);
 	bool (*nb_mce)(u16, u8);
 };
 
-- 
1.8.1.1

