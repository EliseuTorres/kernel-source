From: Chad Dupuis <chad.dupuis@qlogic.com>
Date: Thu, 3 Oct 2013 03:21:13 -0400
Subject: [PATCH] [SCSI] qla2xxx: Fix request queue null dereference.
Git-commit: 36008cf118235cee49b6753455f33b6f2c3a7543
Patch-Mainline: 3.12-rc7
References: bnc#859840

If an invalid IOCB is returned on the response queue then the index into the
request queue map could be invalid and could return to us a bogus value. This
could cause us to try to deference an invalid pointer and cause an exception.

If we encounter this condition, simply return as no context can be established
for this response.

Signed-off-by: Chad Dupuis <chad.dupuis@qlogic.com>
Signed-off-by: Saurav Kashyap <saurav.kashyap@qlogic.com>
Signed-off-by: James Bottomley <JBottomley@Parallels.com>
Signed-off-by: Robert Milasan <rmilasan@suse.com>
---

Index: linux-3.0-sles11-sp3/drivers/scsi/qla2xxx/qla_dbg.c
===================================================================
--- linux-3.0-sles11-sp3.orig/drivers/scsi/qla2xxx/qla_dbg.c
+++ linux-3.0-sles11-sp3/drivers/scsi/qla2xxx/qla_dbg.c
@@ -17,7 +17,7 @@
  * |                              |                    | 0x113a         |
  * | Device Discovery             |       0x2087       | 0x2020-0x2022, |
  * |                              |                    | 0x2016         |
- * | Queue Command and IO tracing |       0x3031       | 0x3006-0x300b  |
+ * | Queue Command and IO tracing |       0x3059       | 0x3006-0x300b  |
  * |                              |                    | 0x3027-0x3028  |
  * |                              |                    | 0x302d-0x302e  |
  * | DPC Thread                   |       0x401d       | 0x4002,0x4013  |
Index: linux-3.0-sles11-sp3/drivers/scsi/qla2xxx/qla_isr.c
===================================================================
--- linux-3.0-sles11-sp3.orig/drivers/scsi/qla2xxx/qla_isr.c
+++ linux-3.0-sles11-sp3/drivers/scsi/qla2xxx/qla_isr.c
@@ -1942,6 +1942,15 @@ qla2x00_status_entry(scsi_qla_host_t *vh
 	que = MSW(sts->handle);
 	req = ha->req_q_map[que];
 
+	/* Check for invalid queue pointer */
+	if (req == NULL ||
+	    que >= find_first_zero_bit(ha->req_qid_map, ha->max_req_queues)) {
+		ql_dbg(ql_dbg_io, vha, 0x3059,
+		    "Invalid status handle (0x%x): Bad req pointer. req=%p, "
+		    "que=%u.\n", sts->handle, req, que);
+		return;
+	}
+
 	/* Validate handle. */
 	if (handle < req->num_outstanding_cmds) {
 		sp = req->outstanding_cmds[handle];
