From: Hannes Reinecke <hare@suse.de>
Subject: hpsa: unmap ioctl xfer buffer correctly
References: bnc#590856
Patch-Mainline: Not yet

The hpsa driver has the same issue as the cciss driver when
executing an ioctl command with XFER_NONE.
So porting the fix from cciss to hpsa.

Signed-off-by: Hannes Reinecke <hare@suse.de>

diff --git a/drivers/scsi/hpsa.c b/drivers/scsi/hpsa.c
index 183d3a4..dfb3488 100644
--- a/drivers/scsi/hpsa.c
+++ b/drivers/scsi/hpsa.c
@@ -2424,11 +2424,12 @@ static int hpsa_passthru_ioctl(struct ctlr_info *h, void __user *argp)
 			kfree(buff);
 			return -EFAULT;
 		}
-	} else
+	} else if (iocommand.Request.Type.Direction == XFER_READ)
 		memset(buff, 0, iocommand.buf_size);
 	c = cmd_special_alloc(h);
 	if (c == NULL) {
-		kfree(buff);
+		if (buff)
+			kfree(buff);
 		return -ENOMEM;
 	}
 	/* Fill in the command type */
@@ -2460,14 +2461,16 @@ static int hpsa_passthru_ioctl(struct ctlr_info *h, void __user *argp)
 		c->SG[0].Ext = 0; /* we are not chaining*/
 	}
 	hpsa_scsi_do_simple_cmd_core(h, c);
-	hpsa_pci_unmap(h->pdev, c, 1, PCI_DMA_BIDIRECTIONAL);
+	if (iocommand.buf_size > 0)
+		hpsa_pci_unmap(h->pdev, c, 1, PCI_DMA_BIDIRECTIONAL);
 	check_ioctl_unit_attention(h, c);
 
 	/* Copy the error information out */
 	memcpy(&iocommand.error_info, c->err_info,
 		sizeof(iocommand.error_info));
 	if (copy_to_user(argp, &iocommand, sizeof(iocommand))) {
-		kfree(buff);
+		if (buff)
+			kfree(buff);
 		cmd_special_free(h, c);
 		return -EFAULT;
 	}
@@ -2480,7 +2483,8 @@ static int hpsa_passthru_ioctl(struct ctlr_info *h, void __user *argp)
 			return -EFAULT;
 		}
 	}
-	kfree(buff);
+	if (buff)
+		kfree(buff);
 	cmd_special_free(h, c);
 	return 0;
 }
