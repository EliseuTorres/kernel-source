From ffddd6a43b998aad8bb5da293ee9d7cac3653f3f Mon Sep 17 00:00:00 2001
From: Tomas Winkler <tomas.winkler@intel.com>
Date: Wed, 5 Jun 2013 10:51:13 +0300
Subject: [char-misc 09/11] mei: me: clear interrupts on the resume path
Git-commit: 42f132febff3b7b42c6c9dbfc151f29233be3132
Patch-mainline: 3.10-rc6
References: bnc#876086

commit 42f132febff3b7b42c6c9dbfc151f29233be3132 upstream

We need to clear pending interrupts on the resume
path. This brings the device into defined state
before starting the reset flow

This should solve suspend/resume issues:

mei_me : wait hw ready failed. status = 0x0
mei_me : version message write failed

Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Acked-by: Takashi Iwai <tiwai@suse.de>

---
 drivers/misc/mei/interface.c |    8 ++++++++
 drivers/misc/mei/main.c      |    1 +
 drivers/misc/mei/mei_dev.h   |    1 +
 3 files changed, 10 insertions(+)

--- a/drivers/misc/mei/interface.c
+++ b/drivers/misc/mei/interface.c
@@ -56,6 +56,14 @@ void mei_disable_interrupts(struct mei_d
 	dev->host_hw_state &= ~H_IE;
 	mei_hcsr_set(dev);
 }
+void mei_clear_interrupts(struct mei_device *dev)
+{
+	u32 csr_reg = mei_hcsr_read(dev);
+
+	if ((csr_reg & H_IS) == H_IS)
+		mei_reg_write(dev, H_CSR, csr_reg);
+}
+
 
 /**
  * mei_hbuf_filled_slots - gets number of device filled buffer slots
--- a/drivers/misc/mei/main.c
+++ b/drivers/misc/mei/main.c
@@ -1197,6 +1197,7 @@ static int mei_pci_resume(struct device
 
 	mutex_lock(&dev->device_lock);
 	dev->dev_state = MEI_DEV_POWER_UP;
+	mei_clear_interrupts(dev);
 	mei_reset(dev, 1);
 	mutex_unlock(&dev->device_lock);
 
--- a/drivers/misc/mei/mei_dev.h
+++ b/drivers/misc/mei/mei_dev.h
@@ -446,5 +446,6 @@ void mei_csr_clear_his(struct mei_device
 
 void mei_enable_interrupts(struct mei_device *dev);
 void mei_disable_interrupts(struct mei_device *dev);
+void mei_clear_interrupts(struct mei_device *dev);
 
 #endif
