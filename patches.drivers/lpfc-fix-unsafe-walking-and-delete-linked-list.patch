From: Joseph Liu <joseph.liu@emulex.com>
Date: Wed, 22 May 2013 13:24:32 +0200
Subject: [PATCH] lpfc: fix unsafe walking and delete linked list
References: bnc#818064
Patch-Mainline: n/a

This system might crash in during submitting I/O.
The cause of the panic was due to the list_for_each_entry() was used
instead of list_for_each_entry_safe(), which is safe against removal of list
entry -- lead to list_del corrupting the list itself.

Signed-off-by: Joseph Liu <joseph.liu@emulex.com>
Signed-off-by: Hannes Reinecke <hare@suse.de>

diff --git a/drivers/scsi/lpfc/lpfc_scsi.c b/drivers/scsi/lpfc/lpfc_scsi.c
index 8fc0c1a..e5d828a 100644
--- a/drivers/scsi/lpfc/lpfc_scsi.c
+++ b/drivers/scsi/lpfc/lpfc_scsi.c
@@ -1111,7 +1111,7 @@ lpfc_get_scsi_buf_s4(struct lpfc_hba *phba, struct lpfc_nodelist *ndlp)
 	int found = 0;
 
 	spin_lock_irqsave(&phba->scsi_buf_list_lock, iflag);
-	list_for_each_entry(lpfc_cmd, &phba->lpfc_scsi_buf_list,
+	list_for_each_entry_safe(lpfc_cmd, &phba->lpfc_scsi_buf_list,
 							list) {
 		if (lpfc_test_rrq_active(phba, ndlp,
 					 lpfc_cmd->cur_iocbq.sli4_lxritag))
