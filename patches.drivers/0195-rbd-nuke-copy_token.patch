From 86c849f1dd5691cb812cc9e4f80a34ec7b5d35f8 Mon Sep 17 00:00:00 2001
From: Rickard Strandqvist <rickard_strandqvist@spectrumdigital.se>
Date: Thu, 1 Jan 2015 17:58:32 +0100
Subject: [PATCH 195/213] rbd: nuke copy_token()
References: fate#318918
Git-commit: 3a25cf43e00842ce51f7ce48ea5e38e516b574a8
Patch-mainline: v4.0-rc1

It's been largely superseded by dup_token() and unused for over
2 years, identified by cppcheck.

Signed-off-by: Rickard Strandqvist <rickard_strandqvist@spectrumdigital.se>
[idryomov@redhat.com: changelog]
Signed-off-by: Ilya Dryomov <idryomov@redhat.com>

Acked-by: David Disseldorp <ddiss@suse.de>

---
 drivers/block/rbd.c | 30 ------------------------------
 1 file changed, 30 deletions(-)

diff --git a/drivers/block/rbd.c b/drivers/block/rbd.c
index 2457347..a96ccd9 100644
--- a/drivers/block/rbd.c
+++ b/drivers/block/rbd.c
@@ -4832,36 +4832,6 @@ static inline size_t next_token(const char **buf)
 }
 
 /*
- * Finds the next token in *buf, and if the provided token buffer is
- * big enough, copies the found token into it.  The result, if
- * copied, is guaranteed to be terminated with '\0'.  Note that *buf
- * must be terminated with '\0' on entry.
- *
- * Returns the length of the token found (not including the '\0').
- * Return value will be 0 if no token is found, and it will be >=
- * token_size if the token would not fit.
- *
- * The *buf pointer will be updated to point beyond the end of the
- * found token.  Note that this occurs even if the token buffer is
- * too small to hold it.
- */
-static inline size_t copy_token(const char **buf,
-				char *token,
-				size_t token_size)
-{
-        size_t len;
-
-	len = next_token(buf);
-	if (len < token_size) {
-		memcpy(token, *buf, len);
-		*(token + len) = '\0';
-	}
-	*buf += len;
-
-        return len;
-}
-
-/*
  * Finds the next token in *buf, dynamically allocates a buffer big
  * enough to hold a copy of it, and copies the token into the new
  * buffer.  The copy is guaranteed to be terminated with '\0'.  Note
-- 
2.1.4

