From hzheng@nicira.com  Mon Jun 27 12:52:44 2011
From: Hao Zheng <hzheng@nicira.com>
Date: Thu, 11 Nov 2010 13:47:58 +0000
Subject: [PATCH 166/271] bnx2x: Look inside vlan when determining checksum
 proto.
Git-commit: d0d9d8ef5949551276f635cb04969184ba1a9553
Patch-mainline: v2.6.37-rc2
References: FATE#311458 FATE#311459 FATE#311460 FATE#311461 FATE#311462 bnc#698050

Upstream commit: d0d9d8ef5949551276f635cb04969184ba1a9553

Currently the skb->protocol field is used to setup checksum
offloading on transmit for the correct protocol.  However, if
vlan offloading is disabled or otherwise not used, the protocol
field will be ETH_P_8021Q, not the actual protocol.  This will
cause the checksum to be not computed correctly, even though the
hardware is capable of looking inside vlan tags.  Instead,
look inside the header if necessary to determine the correct
protocol type.

To some extent this fixes a regression from 2.6.36 because it
was previously not possible to disable vlan offloading and this
error case was not exposed.

Signed-off-by: Hao Zheng <hzheng@nicira.com>
CC: Eilon Greenstein <eilong@broadcom.com>
Signed-off-by: Jesse Gross <jesse@nicira.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
Acked-by: Jeff Mahoney <jeffm@suse.com>
---
 drivers/net/bnx2x/bnx2x_cmn.c    |    2 +-
 drivers/net/bnx2x/bnx2x_compat.h |    3 +++
 2 files changed, 4 insertions(+), 1 deletion(-)

--- a/drivers/net/bnx2x/bnx2x_cmn.c
+++ b/drivers/net/bnx2x/bnx2x_cmn.c
@@ -1684,7 +1684,7 @@ static inline u32 bnx2x_xmit_type(struct
 		rc = XMIT_PLAIN;
 
 	else {
-		if (skb->protocol == htons(ETH_P_IPV6)) {
+		if (vlan_get_protocol(skb) == htons(ETH_P_IPV6)) {
 			rc = XMIT_CSUM_V6;
 			if (ipv6_hdr(skb)->nexthdr == IPPROTO_TCP)
 				rc |= XMIT_CSUM_TCP;
--- a/drivers/net/bnx2x/bnx2x_compat.h
+++ b/drivers/net/bnx2x/bnx2x_compat.h
@@ -9,6 +9,8 @@
 #include <linux/in6.h>
 #include <linux/version.h>
 
+#include <linux/if_vlan.h>
+
 #if (LINUX_VERSION_CODE < 0x02061e)
 #define skb_record_rx_queue(skb, index)
 #define skb_tx_hash(dev, skb)	0
@@ -749,4 +751,5 @@ static inline int netif_set_real_num_rx_
 	return 0;
 }
 #endif
+
 #endif /* __BNX2X_COMPAT_H__ */
