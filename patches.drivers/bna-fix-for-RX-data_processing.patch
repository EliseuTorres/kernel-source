From: Rasesh Mody <rmody@brocade.com>
Date: Wed, 13 Mar 2013 16:18:14 -0700
Subject: bna: fix for RX data processing
Patch-mainline: n/a
Git-commit:
References: bnc#809101,FATE#313822

The BNA driver uses a page-base RX buffer allocation mechanism in GRO. The RX
path uses warm-cache skbs provided by napi_get_frags(). When doing a receive
data procesing, we should be using napi_gro_frags() rather than
napi_gro_receive(). This bug got introduced during the back port of bna driver,
causing the system to panic.

Signed-off-by: Rasesh Mody <rmody@brocade.com>
Acked-by: Hannes Reinecke <hare@suse.de>
---
 drivers/net/ethernet/brocade/bna/bnad.c |    8 ++++----
 1 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/drivers/net/ethernet/brocade/bna/bnad.c b/drivers/net/ethernet/brocade/bna/bnad.c
index f92ab16..cbd9deb 100644
--- a/drivers/net/ethernet/brocade/bna/bnad.c
+++ b/drivers/net/ethernet/brocade/bna/bnad.c
@@ -614,8 +614,8 @@ bnad_cq_process(struct bnad *bnad, struct bna_ccb *ccb, int budget)
 			struct bnad_rx_ctrl *rx_ctrl =
 				(struct bnad_rx_ctrl *)ccb->ctrl;
 			if (BNAD_RXBUF_IS_PAGE(unmap_q->type))
-				vlan_gro_receive(&rx_ctrl->napi, bnad->vlan_grp,
-						ntohs(cmpl->vlan_tag), skb);
+				vlan_gro_frags(&rx_ctrl->napi, bnad->vlan_grp,
+						ntohs(cmpl->vlan_tag));
 			else
 				vlan_hwaccel_receive_skb(skb,
 							 bnad->vlan_grp,
@@ -624,8 +624,8 @@ bnad_cq_process(struct bnad *bnad, struct bna_ccb *ccb, int budget)
 		} else { /* Not VLAN tagged/stripped */
 			struct bnad_rx_ctrl *rx_ctrl =
 				(struct bnad_rx_ctrl *)ccb->ctrl;
-			if (skb->ip_summed == CHECKSUM_UNNECESSARY)
-				napi_gro_receive(&rx_ctrl->napi, skb);
+			if (BNAD_RXBUF_IS_PAGE(unmap_q->type))
+				napi_gro_frags(&rx_ctrl->napi);
 			else
 				netif_receive_skb(skb);
 		}
-- 
1.7.1

