From 5c17a203721d72c36798e5d7fa564e1adf8beb65 Mon Sep 17 00:00:00 2001
From: "Akeem G. Abodunrin" <akeem.g.abodunrin@intel.com>
Date: Tue, 29 Jan 2013 10:15:31 +0000
Subject: [PATCH v5 036/164] igb: random code and comments fix

Git-commit: 5c17a203721d72c36798e5d7fa564e1adf8beb65
Patch-mainline: v3.10-rc1
Reference: fate#317388, bsc#909491
Target: sle11-sp4

This patch fixes code and comments as identified in the driver.

Signed-off-by: Akeem G Abodunrin <akeem.g.abodunrin@intel.com>
Tested-by: Aaron Brown <aaron.f.brown@intel.com>
Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
Acked-by: Lee, Chun-Yi <jlee@suse.com>

---
 drivers/net/ethernet/intel/igb/e1000_i210.c |    2 +-
 drivers/net/ethernet/intel/igb/e1000_mac.c  |    6 +++---
 drivers/net/ethernet/intel/igb/igb_main.c   |    3 +--
 3 files changed, 5 insertions(+), 6 deletions(-)

Index: linux-3.0-SLE11-SP4/drivers/net/ethernet/intel/igb/e1000_i210.c
===================================================================
--- linux-3.0-SLE11-SP4.orig/drivers/net/ethernet/intel/igb/e1000_i210.c
+++ linux-3.0-SLE11-SP4/drivers/net/ethernet/intel/igb/e1000_i210.c
@@ -326,7 +326,7 @@ s32 igb_write_nvm_srwr_i210(struct e1000
 /**
  *  igb_read_nvm_i211 - Read NVM wrapper function for I211
  *  @hw: pointer to the HW structure
- *  @address: the word address (aka eeprom offset) to read
+ *  @words: number of words to read
  *  @data: pointer to the data read
  *
  *  Wrapper function to return data formerly found in the NVM.
Index: linux-3.0-SLE11-SP4/drivers/net/ethernet/intel/igb/e1000_mac.c
===================================================================
--- linux-3.0-SLE11-SP4.orig/drivers/net/ethernet/intel/igb/e1000_mac.c
+++ linux-3.0-SLE11-SP4/drivers/net/ethernet/intel/igb/e1000_mac.c
@@ -1007,9 +1007,9 @@ s32 igb_config_fc_after_link_up(struct e
 		 * be asked to delay transmission of packets than asking
 		 * our link partner to pause transmission of frames.
 		 */
-		else if ((hw->fc.requested_mode == e1000_fc_none ||
-			  hw->fc.requested_mode == e1000_fc_tx_pause) ||
-			 hw->fc.strict_ieee) {
+		else if ((hw->fc.requested_mode == e1000_fc_none) ||
+			 (hw->fc.requested_mode == e1000_fc_tx_pause) ||
+			 (hw->fc.strict_ieee)) {
 			hw->fc.current_mode = e1000_fc_none;
 			hw_dbg("Flow Control = NONE.\r\n");
 		} else {
Index: linux-3.0-SLE11-SP4/drivers/net/ethernet/intel/igb/igb_main.c
===================================================================
--- linux-3.0-SLE11-SP4.orig/drivers/net/ethernet/intel/igb/igb_main.c
+++ linux-3.0-SLE11-SP4/drivers/net/ethernet/intel/igb/igb_main.c
@@ -3777,9 +3777,8 @@ static bool igb_thermal_sensor_event(str
 		ctrl_ext = rd32(E1000_CTRL_EXT);
 
 		if ((hw->phy.media_type == e1000_media_type_copper) &&
-		    !(ctrl_ext & E1000_CTRL_EXT_LINK_MODE_SGMII)) {
+		    !(ctrl_ext & E1000_CTRL_EXT_LINK_MODE_SGMII))
 			ret = !!(thstat & event);
-		}
 	}
 
 	return ret;
