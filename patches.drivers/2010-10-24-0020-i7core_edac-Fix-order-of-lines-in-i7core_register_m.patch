From: Hidetoshi Seto <seto.hidetoshi@jp.fujitsu.com>
Subject: i7core_edac: Fix order of lines in i7core_register_mci
References: fate#311968
Git-commit: 5939813b9c4270d0f46375c3cad64226bb1fcd62
Patch-mainline: v2.6.37-rc1


Signed-off-by: Thomas Renninger <trenn@suse.de>

The flag is_registered is not initialized until mci_bind_devs()
is called.  Refer it properly.

The mci->dev and mci->edac_check is required in edac_mc_add_mc(),
so prepare them just before the call.

Signed-off-by: Hidetoshi Seto <seto.hidetoshi@jp.fujitsu.com>
Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>

---
 drivers/edac/i7core_edac.c |   20 +++++++++-----------
 1 file changed, 9 insertions(+), 11 deletions(-)

Index: linux-2.6.32-SLE11-SP1/drivers/edac/i7core_edac.c
===================================================================
--- linux-2.6.32-SLE11-SP1.orig/drivers/edac/i7core_edac.c
+++ linux-2.6.32-SLE11-SP1/drivers/edac/i7core_edac.c
@@ -1934,9 +1934,6 @@ static int i7core_register_mci(struct i7
 	debugf0("MC: " __FILE__ ": %s(): mci = %p, dev = %p\n",
 		__func__, mci, &i7core_dev->pdev[0]->dev);
 
-	/* record ptr to the generic device */
-	mci->dev = &i7core_dev->pdev[0]->dev;
-
 	pvt = mci->pvt_info;
 	memset(pvt, 0, sizeof(*pvt));
 
@@ -1955,21 +1952,22 @@ static int i7core_register_mci(struct i7
 	mci->dev_name = pci_name(i7core_dev->pdev[0]);
 	mci->ctl_page_to_phys = NULL;
 
-	if (pvt->is_registered)
-		mci->mc_driver_sysfs_attributes = i7core_sysfs_rdimm_attrs;
-	else
-		mci->mc_driver_sysfs_attributes = i7core_sysfs_udimm_attrs;
-
-	/* Set the function pointer to an actual operation function */
-	mci->edac_check = i7core_check_error;
-
 	/* Store pci devices at mci for faster access */
 	rc = mci_bind_devs(mci, i7core_dev);
 	if (unlikely(rc < 0))
 		goto fail;
 
+	if (pvt->is_registered)
+		mci->mc_driver_sysfs_attributes = i7core_sysfs_rdimm_attrs;
+	else
+		mci->mc_driver_sysfs_attributes = i7core_sysfs_udimm_attrs;
+
 	/* Get dimm basic config */
 	get_dimm_config(mci, &csrow);
+	/* record ptr to the generic device */
+	mci->dev = &i7core_dev->pdev[0]->dev;
+	/* Set the function pointer to an actual operation function */
+	mci->edac_check = i7core_check_error;
 
 	/* add this new MC control structure to EDAC's list of MCs */
 	if (unlikely(edac_mc_add_mc(mci))) {
