From: Greg Pearson <greg.pearson@hp.com>
Subject: Fix zero freq if frequency is requested to quickly in a row
References: bnc#908572
Patch-Mainline: never in this form

If average frequency is zero, wait a specific time (from BIOS) and then
try again. 

Signed-off-by: Thomas Renninger <trenn@suse.de>

--- a/drivers/cpufreq/pcc-cpufreq.c	2015-01-08 11:53:48.000000000 -0700
+++ b/drivers/cpufreq/pcc-cpufreq.c	2015-01-16 09:36:21.000000000 -0700
@@ -29,6 +29,7 @@ 
 #include <linux/smp.h>
 #include <linux/sched.h>
 #include <linux/cpufreq.h>
+#include <linux/delay.h>
 #include <linux/compiler.h>
 #include <linux/slab.h>
 
@@ -105,8 +106,11 @@ 
 struct pcc_cpu {
 	u32 input_offset;
 	u32 output_offset;
+	u32 get_freq_retry;
 };
 
+static u32 min_time_between_cmds = 0;
+
 static struct pcc_cpu __percpu *pcc_cpu_info;
 
 static int pcc_cpufreq_verify(struct cpufreq_policy *policy)
@@ -186,6 +190,15 @@ 
 			" capped at %d\n", cpu, curr_freq);
 	}
 
+	if (curr_freq == 0 && pcc_cpu_data->get_freq_retry < 2) {
+		pcc_cpu_data->get_freq_retry++;
+		spin_unlock(&pcc_lock);
+		msleep(min_time_between_cmds / 1000);
+		curr_freq = pcc_get_freq(cpu);
+		return curr_freq;
+	}
+
+	pcc_cpu_data->get_freq_retry = 0;
 	spin_unlock(&pcc_lock);
 	return curr_freq;
 
@@ -525,6 +538,8 @@ 
 		goto pcch_free;
 	}
 
+	min_time_between_cmds = ioread32(&pcch_hdr->minimum_time);
+
 	printk(KERN_DEBUG "pcc-cpufreq: (v%s) driver loaded with frequency"
 	       " limits: %d MHz, %d MHz\n", PCC_VERSION,
 	       ioread32(&pcch_hdr->minimum_frequency),
