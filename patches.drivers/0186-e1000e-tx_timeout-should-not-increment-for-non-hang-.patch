From: Jesse Brandeburg <jesse.brandeburg@intel.com>
Date: Wed, 2 Feb 2011 10:19:55 +0000
Subject: e1000e: tx_timeout should not increment for non-hang events
References: bnc#699092, fate#311825
Patch-mainline: v2.6.38
Git-commit: 463342741222c79469303cdab8ce99c8bc2d80e8

Currently the driver increments the tx_timeout counter (an error counter)
when simply resetting the part with outstanding transmit work pending.
This is an unnecessary count of an error, when all we should be doing is
just resetting the part and discarding the transmits.  With this change the
only increment of tx_timeout is when the stack calls the watchdog reset
function due to a true Tx timeout.

Signed-off-by: Jesse Brandeburg <jesse.brandeburg@intel.com>
Reviewed-by: Bruce Allan <bruce.w.allan@intel.com>
Tested-by: Jeff Pieper <jeffrey.e.pieper@intel.com>
Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
Acked-by: Cho, Yu-Chen <acho@suse.com>
---
 drivers/net/e1000e/netdev.c |    1 -
 1 file changed, 1 deletion(-)

--- a/drivers/net/e1000e/netdev.c
+++ b/drivers/net/e1000e/netdev.c
@@ -4227,7 +4227,6 @@ link_up:
 		 * to get done, so reset controller to flush Tx.
 		 * (Do the reset outside of interrupt context).
 		 */
-		adapter->tx_timeout_count++;
 		schedule_work(&adapter->reset_task);
 		/* return immediately since reset is imminent */
 		return;
