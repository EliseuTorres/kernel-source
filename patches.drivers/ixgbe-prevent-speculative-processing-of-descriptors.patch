From: Milton Miller <miltonm@bga.com>
Subject: ixgbe: prevent speculative processing of descriptors
References: bnc#580416
Patch-mainline: sent to netdev

The PowerPC architecture does not require loads to independent bytes to be
ordered without adding an explicit barrier.

In ixgbe_clean_rx_irq we load the status bit then load the packet data.
With packet split disabled if these loads go out of order we get a
stale packet, but we will notice the bad sequence numbers and drop it.

The problem occurs with packet split enabled where the TCP/IP header and data
are in different descriptors. If the reads go out of order we may have data
that doesn't match the TCP/IP header. Since we use hardware checksumming this
bad data is never verified and it makes it all the way to the application.

This bug was found during stress testing and adding this barrier has been shown
to fix it.

Signed-off-by: Milton Miller <miltonm@bga.com>
Signed-off-by: Anton Blanchard <anton@samba.org>
Signed-off-by: Brandon Philips <bphilips@suse.de>
---

Ported to SLES 11 SP1 by:
Andre Detsch <adetsch@br.ibm.com>

Upstream submission:
http://marc.info/?l=linux-netdev&m=126593061601526&w=2

Index: linux-2.6.32.8-0.0.0.39.a2a8554/drivers/net/ixgbe/ixgbe_main.c
===================================================================
--- linux-2.6.32.8-0.0.0.39.a2a8554.orig/drivers/net/ixgbe/ixgbe_main.c	2010-02-17 11:34:42.000000000 -0500
+++ linux-2.6.32.8-0.0.0.39.a2a8554/drivers/net/ixgbe/ixgbe_main.c	2010-02-17 11:36:17.000000000 -0500
@@ -797,6 +797,7 @@ static bool ixgbe_clean_rx_irq(struct ix
 			break;
 		(*work_done)++;
 
+		rmb(); /* read descriptor and rx_buffer_info after status DD */
 		if (rx_ring->flags & IXGBE_RING_RX_PS_ENABLED) {
 			hdr_info = le16_to_cpu(ixgbe_get_hdr_info(rx_desc));
 			len = (hdr_info & IXGBE_RXDADV_HDRBUFLEN_MASK) >>
