From: Jeff Mahoney <jeffm@suse.com>
Subject: bna: Compatibility fixes for SLE11SP2 backport
References: FATE#311451 bnc#689230
Patch-mainline: Never, SLE11SP2+ only

 This patch contains compatibility shims to allow the bna code to work
 with the SLE11SP2 kernel.

Signed-off-by: Jeff Mahoney <jeffm@suse.com>
---
 drivers/net/bna/bna_compat.h |   25 +++++++++++++++++++++++++
 drivers/net/bna/bnad.c       |   12 +++++++++---
 drivers/net/bna/bnad.h       |    1 +
 3 files changed, 35 insertions(+), 3 deletions(-)

--- /dev/null
+++ b/drivers/net/bna/bna_compat.h
@@ -0,0 +1,25 @@
+#ifndef _BNA_COMPAT_H_
+#define _BNA_COMPAT_H_
+
+#define rtnl_link_stats64       net_device_stats
+
+#ifndef VLAN_N_VID
+#define VLAN_N_VID VLAN_GROUP_ARRAY_LEN
+#endif
+
+#ifndef netdev_mc_empty
+#define netdev_mc_empty(dev) (netdev_mc_count(dev) == 0)
+#endif
+
+static inline int dma_set_coherent_mask(struct device *dev, u64 mask)
+{
+	return pci_set_consistent_dma_mask(to_pci_dev(dev), mask);
+}
+
+#define DEFINE_DMA_UNMAP_ADDR(addr) DECLARE_PCI_UNMAP_ADDR(addr)
+#define dma_unmap_addr(ptr, addr)	pci_unmap_addr(ptr, addr)
+#define dma_unmap_addr_set(ptr, addr, val) pci_unmap_addr_set(ptr, addr, val)
+#define dma_set_coherent_mask(dev, mask)	\
+	pci_set_consistent_dma_mask(to_pci_dev(dev), mask)
+
+#endif /* _BNA_COMPAT_H_ */
--- a/drivers/net/bna/bnad.c
+++ b/drivers/net/bna/bnad.c
@@ -28,6 +28,7 @@
 #include "bnad.h"
 #include "bna.h"
 #include "cna.h"
+#include "bna_compat.h"
 
 static DEFINE_MUTEX(bnad_fwimg_mutex);
 
@@ -1571,10 +1572,10 @@ static void
 bnad_netdev_mc_list_get(struct net_device *netdev, u8 *mc_list)
 {
 	int i = 1; /* Index 0 has broadcast address */
-	struct netdev_hw_addr *mc_addr;
+	struct dev_addr_list *mc_addr;
 
 	netdev_for_each_mc_addr(mc_addr, netdev) {
-		memcpy(&mc_list[i * ETH_ALEN], &mc_addr->addr[0],
+		memcpy(&mc_list[i * ETH_ALEN], &mc_addr->da_addr[0],
 							ETH_ALEN);
 		i++;
 	}
@@ -2680,6 +2681,11 @@ bnad_get_stats64(struct net_device *netd
 	return stats;
 }
 
+static struct net_device_stats *bnad_get_stats(struct net_device *netdev)
+{
+	return bnad_get_stats64(netdev, &netdev->stats);
+}
+
 static void
 bnad_set_rx_mode(struct net_device *netdev)
 {
@@ -2883,7 +2889,7 @@ static const struct net_device_ops bnad_
 	.ndo_open		= bnad_open,
 	.ndo_stop		= bnad_stop,
 	.ndo_start_xmit		= bnad_start_xmit,
-	.ndo_get_stats64		= bnad_get_stats64,
+	.ndo_get_stats		= bnad_get_stats,
 	.ndo_set_rx_mode	= bnad_set_rx_mode,
 	.ndo_set_multicast_list = bnad_set_rx_mode,
 	.ndo_validate_addr      = eth_validate_addr,
--- a/drivers/net/bna/bnad.h
+++ b/drivers/net/bna/bnad.h
@@ -33,6 +33,7 @@
 #include <net/tcp.h>
 
 #include "bna.h"
+#include "bna_compat.h"
 
 #define BNAD_TXQ_DEPTH		2048
 #define BNAD_RXQ_DEPTH		2048
