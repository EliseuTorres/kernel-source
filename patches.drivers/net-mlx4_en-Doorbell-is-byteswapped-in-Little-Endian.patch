From: Amir Vadai <amirv@mellanox.com>
Date: Mon, 22 Dec 2014 10:21:57 +0200
Subject: net/mlx4_en: Doorbell is byteswapped in Little Endian archs
Patch-mainline: v3.19-rc3
Git-commit: 492f5add4be84652bbe13da8a250d60c6856a5c5
References: bug#925105

iowrite32() will byteswap it's argument on big endian archs.
iowrite32be() will byteswap on little endian archs.
Since we don't want to do this unnecessary byteswap on the fast path,
doorbell is stored in the NIC's native endianness. Using the right
iowrite() according to the arch endianness.

CC: Wei Yang <weiyang@linux.vnet.ibm.com>
CC: David Laight <david.laight@aculab.com>
Fixes: 6a4e812 ("net/mlx4_en: Avoid calling bswap in tx fast path")
Signed-off-by: Amir Vadai <amirv@mellanox.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
Acked-by: Benjamin Poirier <bpoirier@suse.de>
---
 drivers/net/ethernet/mellanox/mlx4/en_tx.c |   12 +++++++++++-
 1 file changed, 11 insertions(+), 1 deletion(-)

--- a/drivers/net/ethernet/mellanox/mlx4/en_tx.c
+++ b/drivers/net/ethernet/mellanox/mlx4/en_tx.c
@@ -933,7 +933,17 @@ netdev_tx_t mlx4_en_xmit(struct sk_buff
 		wmb();
 		tx_desc->ctrl.owner_opcode = op_own;
 		wmb();
-		iowrite32(ring->doorbell_qpn,
+		/* Since there is no iowrite*_native() that writes the
+		 * value as is, without byteswapping - using the one
+		 * the doesn't do byteswapping in the relevant arch
+		 * endianness.
+		 */
+#if defined(__LITTLE_ENDIAN)
+		iowrite32(
+#else
+		iowrite32be(
+#endif
+		          ring->doorbell_qpn,
 			  ring->bf.uar->map + MLX4_SEND_DOORBELL);
 	}
 
