From: Kleber Sacilotto de Souza <klebers@linux.vnet.ibm.com>
Subject: net/mlx4_en: Disable RFS when running in SRIOV mode
Patch-mainline: a229e488ac3f904d06c20d8d3f47831db3c7a15a
Git-commit: v3.9-rc3
References: bnc#810655, LTC#90417

Commit 37706996 "mlx4_en: fix allocation of CPU affinity reverse-map" fixed
a bug when mlx4_dev->caps.comp_pool is larger from the device rx rings, but
introduced a regression.

When the mlx4_core is activating its "legacy mode" (e.g when running in SRIOV
mode) w.r.t to EQs/IRQs usage, comp_pool becomes zero and we're crashing on
divide by zero alloc_cpu_rmap.

Fix that by enabling RFS only when running in non-legacy mode.

Reported-by: Yan Burman <yanb@mellanox.com>
Cc: Kleber Sacilotto de Souza <klebers@linux.vnet.ibm.com>
Signed-off-by: Amir Vadai <amirv@mellanox.com>
Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
Acked-by: John Jolly <jjolly@suse.de>
---


diff -up linux-3.0-mlx4-2/drivers/net/ethernet/mellanox/mlx4/en_netdev.c linux-3.0-mlx4-3/drivers/net/ethernet/mellanox/mlx4/en_netdev.c
--- linux-3.0-mlx4-2/drivers/net/ethernet/mellanox/mlx4/en_netdev.c	2013-03-20 15:43:03.000000000 -0400
+++ linux-3.0-mlx4-3/drivers/net/ethernet/mellanox/mlx4/en_netdev.c	2013-03-20 15:59:18.000000000 -0400
@@ -1436,9 +1436,11 @@ int mlx4_en_alloc_resources(struct mlx4_
 	}
 
 #ifdef CONFIG_RFS_ACCEL
-	priv->dev->rx_cpu_rmap = alloc_irq_cpu_rmap(priv->mdev->dev->caps.comp_pool);
-	if (!priv->dev->rx_cpu_rmap)
-		goto err;
+	if (priv->mdev->dev->caps.comp_pool) {
+		priv->dev->rx_cpu_rmap = alloc_irq_cpu_rmap(priv->mdev->dev->caps.comp_pool);
+		if (!priv->dev->rx_cpu_rmap)
+			goto err;
+	}
 
 	INIT_LIST_HEAD(&priv->filters);
 	spin_lock_init(&priv->filters_lock);
