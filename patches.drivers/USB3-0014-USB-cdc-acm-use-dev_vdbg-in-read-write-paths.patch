From 5e9e75f8bd97864d552ec2b8d1a00e2b3012a6b3 Mon Sep 17 00:00:00 2001
From: Johan Hovold <jhovold@gmail.com>
Date: Tue, 22 Mar 2011 11:12:17 +0100
Subject: USB: cdc-acm: use dev_vdbg in read/write paths
Patch-mainline: v3.0
Git-commit: 5e9e75f8bd97864d552ec2b8d1a00e2b3012a6b3

Replace dev_dbg with verbose dev_vdbg in read/write paths where
appropriate.

Signed-off-by: Johan Hovold <jhovold@gmail.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/usb/class/cdc-acm.c |   14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

--- a/drivers/usb/class/cdc-acm.c
+++ b/drivers/usb/class/cdc-acm.c
@@ -208,7 +208,7 @@ static int acm_write_start(struct acm *a
 		return -ENODEV;
 	}
 
-	dev_dbg(&acm->data->dev, "%s - susp_count %d\n", __func__,
+	dev_vdbg(&acm->data->dev, "%s - susp_count %d\n", __func__,
 							acm->susp_count);
 	usb_autopm_get_interface_async(acm->control);
 	if (acm->susp_count) {
@@ -361,7 +361,7 @@ static void acm_read_bulk(struct urb *ur
 	struct acm *acm = rcv->instance;
 	int status = urb->status;
 
-	dev_dbg(&acm->data->dev, "%s - status %d\n", __func__, status);
+	dev_vdbg(&acm->data->dev, "%s - status %d\n", __func__, status);
 
 	if (!ACM_READY(acm)) {
 		dev_dbg(&acm->data->dev, "%s - acm not ready\n", __func__);
@@ -404,7 +404,7 @@ static void acm_rx_tasklet(unsigned long
 	unsigned long flags;
 	unsigned char throttled;
 
-	dev_dbg(&acm->data->dev, "%s\n", __func__);
+	dev_vdbg(&acm->data->dev, "%s\n", __func__);
 
 	if (!ACM_READY(acm)) {
 		dev_dbg(&acm->data->dev, "%s - acm not ready\n", __func__);
@@ -432,7 +432,7 @@ next_buffer:
 	list_del(&buf->list);
 	spin_unlock_irqrestore(&acm->read_lock, flags);
 
-	dev_dbg(&acm->data->dev, "%s - processing buf 0x%p, size = %d\n",
+	dev_vdbg(&acm->data->dev, "%s - processing buf 0x%p, size = %d\n",
 						__func__, buf, buf->size);
 	if (tty) {
 		spin_lock_irqsave(&acm->throttle_lock, flags);
@@ -505,7 +505,7 @@ urbs:
 			return;
 		} else {
 			spin_unlock_irqrestore(&acm->read_lock, flags);
-			dev_dbg(&acm->data->dev,
+			dev_vdbg(&acm->data->dev,
 				"%s - sending urb 0x%p, rcv 0x%p, buf 0x%p\n",
 				__func__, rcv->urb, rcv, buf);
 		}
@@ -719,7 +719,7 @@ static int acm_tty_write(struct tty_stru
 	if (!count)
 		return 0;
 
-	dev_dbg(&acm->data->dev, "%s - count %d\n", __func__, count);
+	dev_vdbg(&acm->data->dev, "%s - count %d\n", __func__, count);
 
 	spin_lock_irqsave(&acm->write_lock, flags);
 	wbn = acm_wb_alloc(acm);
@@ -730,7 +730,7 @@ static int acm_tty_write(struct tty_stru
 	wb = &acm->wb[wbn];
 
 	count = (count > acm->writesize) ? acm->writesize : count;
-	dev_dbg(&acm->data->dev, "%s - write %d\n", __func__, count);
+	dev_vdbg(&acm->data->dev, "%s - write %d\n", __func__, count);
 	memcpy(wb->buf, buf, count);
 	wb->len = count;
 	spin_unlock_irqrestore(&acm->write_lock, flags);
