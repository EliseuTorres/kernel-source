From: Jason Wang <jasowang@redhat.com>
Date: Wed May 2 11:41:44 2012 +0800
Subject: macvtap: zerocopy: fix truesize underestimation
References: fate#314400
Patch-mainline: v3.5
Git-commit: 4ef67ebedffa44ed9939b34708ac2fee06d2f65f

As the skb fragment were pinned/built from user pages, we should
account the page instead of length for truesize.

Signed-off-by: Jason Wang <jasowang@redhat.com>
Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
Acked-by: Bo Yang <boyang@suse.com>
Acked-by: Bruce Rogers <brogers@suse.com>

Index: b/drivers/net/macvtap.c
===================================================================
--- a/drivers/net/macvtap.c
+++ b/drivers/net/macvtap.c
@@ -492,6 +492,7 @@ static int zerocopy_sg_from_iovec(struct
 		struct page *page[MAX_SKB_FRAGS];
 		int num_pages;
 		unsigned long base;
+		unsigned long truesize;
 
 		len = from->iov_len - offset;
 		if (!len) {
@@ -506,10 +507,11 @@ static int zerocopy_sg_from_iovec(struct
 		    (num_pages > MAX_SKB_FRAGS - skb_shinfo(skb)->nr_frags))
 			/* put_page is in skb free */
 			return -EFAULT;
+		truesize = size * PAGE_SIZE;
 		skb->data_len += len;
 		skb->len += len;
-		skb->truesize += len;
-		atomic_add(len, &skb->sk->sk_wmem_alloc);
+		skb->truesize += truesize;
+		atomic_add(truesize, &skb->sk->sk_wmem_alloc);
 		while (len) {
 			f = &skb_shinfo(skb)->frags[i];
 			f->page = page[i];
