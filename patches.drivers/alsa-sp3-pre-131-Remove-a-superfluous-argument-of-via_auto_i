From a353fbb17961780c13e585e8658006ef0e543733 Mon Sep 17 00:00:00 2001
From: Takashi Iwai <tiwai@suse.de>
Date: Thu, 21 Jul 2011 14:23:35 +0200
Subject: [PATCH] ALSA: hda - Remove a superfluous argument of via_auto_init_output()
Git-commit: a353fbb17961780c13e585e8658006ef0e543733
Patch-mainline: 3.1-rc2
References: FATE#314310

"force" argument is always true, so let's strip it off.

Signed-off-by: Takashi Iwai <tiwai@suse.de>

---
 sound/pci/hda/patch_via.c |   24 ++++++++++--------------
 1 file changed, 10 insertions(+), 14 deletions(-)

--- a/sound/pci/hda/patch_via.c
+++ b/sound/pci/hda/patch_via.c
@@ -531,8 +531,7 @@ static void init_output_pin(struct hda_c
 }
 
 static void via_auto_init_output(struct hda_codec *codec,
-				 struct nid_path *path, int pin_type,
-				 bool force)
+				 struct nid_path *path, int pin_type)
 {
 	unsigned int caps;
 	hda_nid_t pin;
@@ -549,7 +548,7 @@ static void via_auto_init_output(struct
 		snd_hda_codec_write(codec, pin, 0, AC_VERB_SET_AMP_GAIN_MUTE,
 				    AMP_OUT_MUTE | val);
 	}
-	activate_output_path(codec, path, true, force);
+	activate_output_path(codec, path, true, true); /* force on */
 }
 
 static void via_auto_init_multi_out(struct hda_codec *codec)
@@ -562,7 +561,7 @@ static void via_auto_init_multi_out(stru
 		path = &spec->out_path[i];
 		if (!i && spec->aamix_mode && spec->out_mix_path.depth)
 			path = &spec->out_mix_path;
-		via_auto_init_output(codec, path, PIN_OUT, true);
+		via_auto_init_output(codec, path, PIN_OUT);
 	}
 }
 
@@ -592,16 +591,16 @@ static void via_auto_init_hp_out(struct
 	struct via_spec *spec = codec->spec;
 
 	if (!spec->hp_path.depth) {
-		via_auto_init_output(codec, &spec->hp_mix_path, PIN_HP, true);
+		via_auto_init_output(codec, &spec->hp_mix_path, PIN_HP);
 		return;
 	}
 	deactivate_hp_paths(codec);
 	if (spec->hp_independent_mode)
-		via_auto_init_output(codec, &spec->hp_indep_path, PIN_HP, true);
+		via_auto_init_output(codec, &spec->hp_indep_path, PIN_HP);
 	else if (spec->aamix_mode)
-		via_auto_init_output(codec, &spec->hp_mix_path, PIN_HP, true);
+		via_auto_init_output(codec, &spec->hp_mix_path, PIN_HP);
 	else
-		via_auto_init_output(codec, &spec->hp_path, PIN_HP, true);
+		via_auto_init_output(codec, &spec->hp_path, PIN_HP);
 }
 
 static void via_auto_init_speaker_out(struct hda_codec *codec)
@@ -611,19 +610,16 @@ static void via_auto_init_speaker_out(st
 	if (!spec->autocfg.speaker_outs)
 		return;
 	if (!spec->speaker_path.depth) {
-		via_auto_init_output(codec, &spec->speaker_mix_path, PIN_OUT,
-				     true);
+		via_auto_init_output(codec, &spec->speaker_mix_path, PIN_OUT);
 		return;
 	}
 	if (!spec->aamix_mode) {
 		activate_output_path(codec, &spec->speaker_mix_path,
 				     false, false);
-		via_auto_init_output(codec, &spec->speaker_path, PIN_OUT,
-				     true);
+		via_auto_init_output(codec, &spec->speaker_path, PIN_OUT);
 	} else {
 		activate_output_path(codec, &spec->speaker_path, false, false);
-		via_auto_init_output(codec, &spec->speaker_mix_path, PIN_OUT,
-				     true);
+		via_auto_init_output(codec, &spec->speaker_mix_path, PIN_OUT);
 	}
 }
 
