From: Mauro Carvalho Chehab <mchehab@redhat.com>
Subject: i7core_edac: Fix ringbuffer maxsize
References: fate#311968
Patch-Mainline: yes
Git-commit: 321ece4dda32f52d4a28d6eb11f2ca2a5c93c191


Signed-off-by: Thomas Renninger <trenn@suse.de>

Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>

---
 drivers/edac/i7core_edac.c |   12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

Index: linux-2.6.32-SLE11-SP1/drivers/edac/i7core_edac.c
===================================================================
--- linux-2.6.32-SLE11-SP1.orig/drivers/edac/i7core_edac.c
+++ linux-2.6.32-SLE11-SP1/drivers/edac/i7core_edac.c
@@ -1632,14 +1632,14 @@ static void i7core_check_error(struct me
 	 * loosing an error.
 	 */
 	smp_rmb();
-	count = (pvt->mce_out + sizeof(mce_entry) - pvt->mce_in)
-		% sizeof(mce_entry);
+	count = (pvt->mce_out + MCE_LOG_LEN - pvt->mce_in)
+		% MCE_LOG_LEN;
 	if (!count)
 		return;
 
 	m = pvt->mce_outentry;
-	if (pvt->mce_in + count > sizeof(mce_entry)) {
-		unsigned l = sizeof(mce_entry) - pvt->mce_in;
+	if (pvt->mce_in + count > MCE_LOG_LEN) {
+		unsigned l = MCE_LOG_LEN - pvt->mce_in;
 
 		memcpy(m, &pvt->mce_entry[pvt->mce_in], sizeof(*m) * l);
 		smp_wmb();
@@ -1703,7 +1703,7 @@ static int i7core_mce_check_error(void *
 		return 0;
 
 	smp_rmb();
-	if ((pvt->mce_out + 1) % sizeof(mce_entry) == pvt->mce_in) {
+	if ((pvt->mce_out + 1) % MCE_LOG_LEN == pvt->mce_in) {
 		smp_wmb();
 		pvt->mce_overrun++;
 		return 0;
@@ -1712,7 +1712,7 @@ static int i7core_mce_check_error(void *
 	/* Copy memory error at the ringbuffer */
 	memcpy(&pvt->mce_entry[pvt->mce_out], mce, sizeof(*mce));
 	smp_wmb();
-	pvt->mce_out = (pvt->mce_out + 1) % sizeof(mce_entry);
+	pvt->mce_out = (pvt->mce_out + 1) % MCE_LOG_LEN;
 
 	/* Handle fatal errors immediately */
 	if (mce->mcgstatus & 1)
