From: wenxiong@linux.vnet.ibm.com <wenxiong@linux.vnet.ibm.com>
Subject: bnx2x: Fix kernel crash and data miscompare after EEH recovery
Git-commit: 9aaae044abe95de182d09004cc3fa181bf22e6e0
Patch-mainline: next-20140611
References: bnc#881761 

    A rmb() is required to ensure that the CQE is not read before it
    is written by the adapter DMA.  PCI ordering rules will make sure
    the other fields are written before the marker at the end of struct
    eth_fast_path_rx_cqe but without rmb() a weakly ordered processor can
    process stale data.
    
    Without the barrier we have observed various crashes including
    bnx2x_tpa_start being called on queues not stopped (resulting in message
    start of bin not in stop) and NULL pointer exceptions from bnx2x_rx_int.
    
Signed-off-by: Milton Miller <miltonm@us.ibm.com>
Signed-off-by: Wen Xiong <wenxiong@linux.vnet.ibm.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
Acked-by: Torsten Duwe <duwe@suse.de>

 drivers/net/ethernet/broadcom/bnx2x/bnx2x_cmn.c | 12 ++++++++++++
 1 file changed, 12 insertions(+)
diff --git a/drivers/net/ethernet/broadcom/bnx2x/bnx2x_cmn.c b/drivers/net/ethernet/broadcom/bnx2x/bnx2x_cmn.c
index 9261d53..72197d0 100644
--- a/drivers/net/ethernet/broadcom/bnx2x/bnx2x_cmn.c
+++ b/drivers/net/ethernet/broadcom/bnx2x/bnx2x_cmn.c
@@ -791,6 +791,18 @@ int bnx2x_rx_int(struct bnx2x_fastpath *
 		bd_prod = RX_BD(bd_prod);
 		bd_cons = RX_BD(bd_cons);
 
+		/* A rmb() is required to ensure that the CQE is not read
+		 * before it is written by the adapter DMA.  PCI ordering
+		 * rules will make sure the other fields are written before
+		 * the marker at the end of struct eth_fast_path_rx_cqe
+		 * but without rmb() a weakly ordered processor can process
+		 * stale data.  Without the barrier TPA state-machine might
+		 * enter inconsistent state and kernel stack might be
+		 * provided with incorrect packet description - these lead
+		 * to various kernel crashed.
+		 */
+		rmb();
+
 		/* Prefetch the page containing the BD descriptor
 		   at producer's index. It will be needed when new skb is
 		   allocated */
