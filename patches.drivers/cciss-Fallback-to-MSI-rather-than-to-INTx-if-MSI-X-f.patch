From: Alexander Gordeev <agordeev@redhat.com>
Date: Wed, 26 Feb 2014 10:02:41 +0100
Subject: cciss: Fallback to MSI rather than to INTx if MSI-X failed
References: bnc#913241,FATE#317338
Patch-Mainline: v3.16
Git-commit: 371ff93a72a1aa14773e2e17548796db8c004a6c

Currently the driver falls back to INTx mode when MSI-X
initialization failed. This is a suboptimal behaviour
for chips that also support MSI. This update changes that
behaviour and falls back to MSI mode in case MSI-X mode
initialization failed.

Signed-off-by: Alexander Gordeev <agordeev@redhat.com>
Cc: Mike Miller <mike.miller@hp.com>
Cc: iss_storagedev@hp.com
Cc: Jens Axboe <axboe@kernel.dk>
Cc: linux-pci@vger.kernel.org
Signed-off-by: Jens Axboe <axboe@fb.com>
Acked-by: Hannes Reinecke <hare@suse.de>
---
 drivers/block/cciss.c | 2 --
 1 file changed, 2 deletions(-)

diff --git a/drivers/block/cciss.c b/drivers/block/cciss.c
index 55a4d68..6928b8e 100644
--- a/drivers/block/cciss.c
+++ b/drivers/block/cciss.c
@@ -3989,11 +3989,9 @@ static void __devinit cciss_interrupt_mode(ctlr_info_t *h)
 		if (err > 0) {
 			dev_warn(&h->pdev->dev,
 				"only %d MSI-X vectors available\n", err);
-			goto default_int_mode;
 		} else {
 			dev_warn(&h->pdev->dev,
 				"MSI-X init failed %d\n", err);
-			goto default_int_mode;
 		}
 	}
 	if (pci_find_capability(h->pdev, PCI_CAP_ID_MSI)) {
-- 
1.8.5.2

