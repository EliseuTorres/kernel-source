From beb1d35f1690fe27694472a010a8e4a9ae11cc50 Mon Sep 17 00:00:00 2001
From: Oliver Neukum <oliver@neukum.org>
Date: Sat, 27 Feb 2010 20:55:52 +0100
Subject: usb: cdc-wdm: Fix submission of URB after suspension
Patch-mainline: v2.6.34
Git-commit: beb1d35f1690fe27694472a010a8e4a9ae11cc50

There's a window under which cdc-wdm may submit
an URB to a device about to be suspended. This
introduces a flag to prevent it.

Signed-off-by: Oliver Neukum <neukum@b1-systems.de>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/usb/class/cdc-wdm.c |    7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

--- a/drivers/usb/class/cdc-wdm.c
+++ b/drivers/usb/class/cdc-wdm.c
@@ -53,7 +53,7 @@ MODULE_DEVICE_TABLE (usb, wdm_ids);
 #define WDM_INT_STALL		5
 #define WDM_POLL_RUNNING	6
 #define WDM_RESPONDING		7
-
+#define WDM_SUSPENDING		8
 
 #define WDM_MAX			16
 
@@ -231,7 +231,8 @@ static void wdm_int_callback(struct urb
 	spin_lock(&desc->iuspin);
 	clear_bit(WDM_READ, &desc->flags);
 	set_bit(WDM_RESPONDING, &desc->flags);
-	if (!test_bit(WDM_DISCONNECTING, &desc->flags)) {
+	if (!test_bit(WDM_DISCONNECTING, &desc->flags)
+		&& !test_bit(WDM_SUSPENDING, &desc->flags)) {
 		rv = usb_submit_urb(desc->response, GFP_ATOMIC);
 		dev_dbg(&desc->intf->dev, "%s: usb_submit_urb %d",
 			__func__, rv);
@@ -800,6 +801,7 @@ static int wdm_suspend(struct usb_interf
 		rv = -EBUSY;
 	} else {
 #endif
+		set_bit(WDM_SUSPENDING, &desc->flags);
 		cancel_work_sync(&desc->rxwork);
 		kill_urbs(desc);
 #ifdef CONFIG_PM
@@ -830,6 +832,7 @@ static int wdm_resume(struct usb_interfa
 	dev_dbg(&desc->intf->dev, "wdm%d_resume\n", intf->minor);
 	mutex_lock(&desc->lock);
 	rv = recover_from_urb_loss(desc);
+	clear_bit(WDM_SUSPENDING, &desc->flags);
 	mutex_unlock(&desc->lock);
 	return rv;
 }
