From a2d96e778d1b15d2213f3b7737aa86fd8eda44cb Mon Sep 17 00:00:00 2001
From: Takashi Iwai <tiwai@suse.de>
Date: Wed, 9 May 2012 12:36:22 +0200
Subject: [PATCH] ALSA: hda - More robustify the power-up/down sequence
Git-commit: a2d96e778d1b15d2213f3b7737aa86fd8eda44cb
Patch-mainline: 3.5-rc1
References: FATE#313695

Check the power_transition up/down state instead of boolean bit, so
that the power-up sequence can cancel the pending power-down work
properly.  Also, by moving cancel_delayed_work_sync() before the
actual power-up sequence, make sure that the delayed power-down is
completed.

Signed-off-by: Takashi Iwai <tiwai@suse.de>

---
 sound/pci/hda/hda_codec.c |   22 +++++++++++++++-------
 sound/pci/hda/hda_codec.h |    2 +-
 2 files changed, 16 insertions(+), 8 deletions(-)

--- a/sound/pci/hda/hda_codec.c
+++ b/sound/pci/hda/hda_codec.c
@@ -2264,7 +2264,7 @@ int snd_hda_codec_reset(struct hda_codec
 	/* OK, let it free */
 
 #ifdef CONFIG_SND_HDA_POWER_SAVE
-	cancel_delayed_work(&codec->power_work);
+	cancel_delayed_work_sync(&codec->power_work);
 	codec->power_on = 0;
 	codec->power_transition = 0;
 	codec->power_jiffies = jiffies;
@@ -3490,11 +3490,14 @@ static void hda_call_codec_suspend(struc
 			    codec->afg ? codec->afg : codec->mfg,
 			    AC_PWRST_D3);
 #ifdef CONFIG_SND_HDA_POWER_SAVE
-	snd_hda_update_power_acct(codec);
 	cancel_delayed_work(&codec->power_work);
+	spin_lock(&codec->power_lock);
+	snd_hda_update_power_acct(codec);
+	trace_hda_power_down(codec);
 	codec->power_on = 0;
 	codec->power_transition = 0;
 	codec->power_jiffies = jiffies;
+	spin_unlock(&codec->power_lock);
 #endif
 }
 
@@ -4293,13 +4296,15 @@ static void hda_power_work(struct work_s
 	struct hda_bus *bus = codec->bus;
 
 	spin_lock(&codec->power_lock);
+	if (codec->power_transition > 0) { /* during power-up sequence? */
+		spin_unlock(&codec->power_lock);
+		return;
+	}
 	if (!codec->power_on || codec->power_count) {
 		codec->power_transition = 0;
 		spin_unlock(&codec->power_lock);
 		return;
 	}
-
-	trace_hda_power_down(codec);
 	spin_unlock(&codec->power_lock);
 
 	hda_call_codec_suspend(codec);
@@ -4340,11 +4345,15 @@ void snd_hda_power_up(struct hda_codec *
 
 	spin_lock(&codec->power_lock);
 	codec->power_count++;
-	if (codec->power_on || codec->power_transition) {
+	if (codec->power_on || codec->power_transition > 0) {
 		spin_unlock(&codec->power_lock);
 		return;
 	}
+	spin_unlock(&codec->power_lock);
 
+	cancel_delayed_work_sync(&codec->power_work);
+
+	spin_lock(&codec->power_lock);
 	trace_hda_power_up(codec);
 	snd_hda_update_power_acct(codec);
 	codec->power_on = 1;
@@ -4357,7 +4366,6 @@ void snd_hda_power_up(struct hda_codec *
 	hda_call_codec_resume(codec);
 
 	spin_lock(&codec->power_lock);
-	cancel_delayed_work(&codec->power_work);
 	codec->power_transition = 0;
 	spin_unlock(&codec->power_lock);
 }
@@ -4382,7 +4390,7 @@ void snd_hda_power_down(struct hda_codec
 		return;
 	}
 	if (power_save(codec)) {
-		codec->power_transition = 1; /* avoid reentrance */
+		codec->power_transition = -1; /* avoid reentrance */
 		queue_delayed_work(codec->bus->workq, &codec->power_work,
 				msecs_to_jiffies(power_save(codec) * 1000));
 	}
--- a/sound/pci/hda/hda_codec.h
+++ b/sound/pci/hda/hda_codec.h
@@ -859,7 +859,7 @@ struct hda_codec {
 	unsigned int no_jack_detect:1;	/* Machine has no jack-detection */
 #ifdef CONFIG_SND_HDA_POWER_SAVE
 	unsigned int power_on :1;	/* current (global) power-state */
-	unsigned int power_transition :1; /* power-state in transition */
+	int power_transition;	/* power-state in transition */
 	int power_count;	/* current (global) power refcount */
 	struct delayed_work power_work; /* delayed task for powerdown */
 	unsigned long power_on_acct;
