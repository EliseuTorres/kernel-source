From: Maciej Patelczyk <maciej.patelczyk@intel.com>
Date: Thu, 28 Apr 2011 22:06:01 +0000
Subject: [PATCH 122/273] isci: Removed struct sci_base_object from state machine.
Git-commit: 9a0fff7bf0ffd4f57fc71d8075a92008b606eb61
References: FATE#311808,bnc#709528
Patch-Mainline: 3.0

Changed any occurrence of struct sci_base_object into void.

Signed-off-by: Maciej Patelczyk <maciej.patelczyk@intel.com>
Signed-off-by: Dan Williams <dan.j.williams@intel.com>
Signed-off-by: Hannes Reinecke <hare@suse.de>
---
 drivers/scsi/isci/core/sci_base_state.h         |    8 +--
 drivers/scsi/isci/core/sci_base_state_machine.c |    2 +-
 drivers/scsi/isci/core/sci_base_state_machine.h |    4 +-
 drivers/scsi/isci/core/scic_sds_controller.c    |   32 +++----
 drivers/scsi/isci/core/scic_sds_phy.c           |  109 +++++++++--------------
 drivers/scsi/isci/core/scic_sds_port.c          |   68 ++++++---------
 drivers/scsi/isci/core/scic_sds_request.c       |   31 +++----
 drivers/scsi/isci/core/scic_sds_smp_request.c   |    8 +-
 drivers/scsi/isci/core/scic_sds_ssp_request.c   |    8 +-
 drivers/scsi/isci/core/scic_sds_stp_request.c   |   24 +++---
 drivers/scsi/isci/remote_device.c               |   28 ++----
 drivers/scsi/isci/remote_node_context.c         |   22 ++---
 drivers/scsi/isci/smp_remote_device.c           |   13 ++--
 drivers/scsi/isci/stp_remote_device.c           |   16 ++--
 14 files changed, 152 insertions(+), 221 deletions(-)

diff --git a/drivers/scsi/isci/core/sci_base_state.h b/drivers/scsi/isci/core/sci_base_state.h
index 4272a6f..62d2a7c 100644
--- a/drivers/scsi/isci/core/sci_base_state.h
+++ b/drivers/scsi/isci/core/sci_base_state.h
@@ -58,13 +58,9 @@
 
 #include "sci_object.h"
 
-typedef void (*sci_base_state_handler_t)(
-	void
-	);
+typedef void (*sci_base_state_handler_t)(void);
 
-typedef void (*sci_state_transition_t)(
-	struct sci_base_object *base_object
-	);
+typedef void (*sci_state_transition_t)(void *base_object);
 
 /**
  * struct sci_base_state - The base state object abstracts the fields common to
diff --git a/drivers/scsi/isci/core/sci_base_state_machine.c b/drivers/scsi/isci/core/sci_base_state_machine.c
index bc416d5..a704709 100644
--- a/drivers/scsi/isci/core/sci_base_state_machine.c
+++ b/drivers/scsi/isci/core/sci_base_state_machine.c
@@ -100,7 +100,7 @@ static void sci_state_machine_enter_state(struct sci_base_state_machine *sm)
  *
  */
 void sci_base_state_machine_construct(struct sci_base_state_machine *sm,
-				      struct sci_base_object *owner,
+				      void *owner,
 				      const struct sci_base_state *state_table,
 				      u32 initial_state)
 {
diff --git a/drivers/scsi/isci/core/sci_base_state_machine.h b/drivers/scsi/isci/core/sci_base_state_machine.h
index 13f6ee8..c0cf33b 100644
--- a/drivers/scsi/isci/core/sci_base_state_machine.h
+++ b/drivers/scsi/isci/core/sci_base_state_machine.h
@@ -94,7 +94,7 @@ struct sci_base_state_machine {
 	 * associated.  It serves as a cookie to be provided to the state
 	 * enter/exit methods.
 	 */
-	struct sci_base_object *state_machine_owner;
+	void *state_machine_owner;
 
 	/**
 	 * This field simply indicates the state value for the state machine's
@@ -121,7 +121,7 @@ struct sci_base_state_machine {
 
 void sci_base_state_machine_construct(
 	struct sci_base_state_machine *this_state_machine,
-	struct sci_base_object *state_machine_owner,
+	void *state_machine_owner,
 	const struct sci_base_state *state_table,
 	u32 initial_state);
 
diff --git a/drivers/scsi/isci/core/scic_sds_controller.c b/drivers/scsi/isci/core/scic_sds_controller.c
index 5e8dea5..135aa3e 100644
--- a/drivers/scsi/isci/core/scic_sds_controller.c
+++ b/drivers/scsi/isci/core/scic_sds_controller.c
@@ -2882,7 +2882,7 @@ enum sci_status scic_controller_start(struct scic_sds_controller *scic,
 
 /**
  *
- * @object: This is the struct sci_base_object which is cast to a struct scic_sds_controller
+ * @object: This is the object which is cast to a struct scic_sds_controller
  *    object.
  *
  * This method implements the actions taken by the struct scic_sds_controller on entry
@@ -2890,8 +2890,7 @@ enum sci_status scic_controller_start(struct scic_sds_controller *scic,
  * controllers initial state. none This function should initialze the
  * controller object.
  */
-static void scic_sds_controller_initial_state_enter(
-	struct sci_base_object *object)
+static void scic_sds_controller_initial_state_enter(void *object)
 {
 	struct scic_sds_controller *scic;
 
@@ -2903,15 +2902,14 @@ static void scic_sds_controller_initial_state_enter(
 
 /**
  *
- * @object: This is the struct sci_base_object which is cast to a struct scic_sds_controller
+ * @object: This is the object which is cast to a struct scic_sds_controller
  *    object.
  *
  * This method implements the actions taken by the struct scic_sds_controller on exit
  * from the SCI_BASE_CONTROLLER_STATE_STARTING. - This function stops the
  * controller starting timeout timer. none
  */
-static inline void scic_sds_controller_starting_state_exit(
-	struct sci_base_object *object)
+static inline void scic_sds_controller_starting_state_exit(void *object)
 {
 	struct scic_sds_controller *scic = (struct scic_sds_controller *)object;
 
@@ -2920,15 +2918,14 @@ static inline void scic_sds_controller_starting_state_exit(
 
 /**
  *
- * @object: This is the struct sci_base_object which is cast to a struct scic_sds_controller
+ * @object: This is the object which is cast to a struct scic_sds_controller
  *    object.
  *
  * This method implements the actions taken by the struct scic_sds_controller on entry
  * to the SCI_BASE_CONTROLLER_STATE_READY. - Set the state handlers to the
  * controllers ready state. none
  */
-static void scic_sds_controller_ready_state_enter(
-	struct sci_base_object *object)
+static void scic_sds_controller_ready_state_enter(void *object)
 {
 	struct scic_sds_controller *scic;
 
@@ -2941,14 +2938,13 @@ static void scic_sds_controller_ready_state_enter(
 
 /**
  *
- * @object: This is the struct sci_base_object which is cast to a struct scic_sds_controller
+ * @object: This is the object which is cast to a struct scic_sds_controller
  *    object.
  *
  * This method implements the actions taken by the struct scic_sds_controller on exit
  * from the SCI_BASE_CONTROLLER_STATE_READY. - This function does nothing. none
  */
-static void scic_sds_controller_ready_state_exit(
-	struct sci_base_object *object)
+static void scic_sds_controller_ready_state_exit(void *object)
 {
 	struct scic_sds_controller *scic;
 
@@ -2960,7 +2956,7 @@ static void scic_sds_controller_ready_state_exit(
 
 /**
  *
- * @object: This is the struct sci_base_object which is cast to a struct scic_sds_controller
+ * @object: This is the object which is cast to a struct scic_sds_controller
  *    object.
  *
  * This method implements the actions taken by the struct scic_sds_controller on entry
@@ -2968,8 +2964,7 @@ static void scic_sds_controller_ready_state_exit(
  * controllers ready state. - Stop the phys on this controller - Stop the ports
  * on this controller - Stop all of the remote devices on this controller none
  */
-static void scic_sds_controller_stopping_state_enter(
-	struct sci_base_object *object)
+static void scic_sds_controller_stopping_state_enter(void *object)
 {
 	struct scic_sds_controller *scic;
 
@@ -2983,15 +2978,14 @@ static void scic_sds_controller_stopping_state_enter(
 
 /**
  *
- * @object: This is the struct sci_base_object which is cast to a struct
+ * @object: This is the object which is cast to a struct
  * scic_sds_controller object.
  *
  * This funciton implements the actions taken by the struct scic_sds_controller
  * on exit from the SCI_BASE_CONTROLLER_STATE_STOPPING. -
  * This function stops the controller stopping timeout timer.
  */
-static inline void scic_sds_controller_stopping_state_exit(
-	struct sci_base_object *object)
+static inline void scic_sds_controller_stopping_state_exit(void *object)
 {
 	struct scic_sds_controller *scic =
 		(struct scic_sds_controller *)object;
@@ -2999,7 +2993,7 @@ static inline void scic_sds_controller_stopping_state_exit(
 	isci_timer_stop(scic->timeout_timer);
 }
 
-static void scic_sds_controller_resetting_state_enter(struct sci_base_object *object)
+static void scic_sds_controller_resetting_state_enter(void *object)
 {
 	struct scic_sds_controller *scic;
 
diff --git a/drivers/scsi/isci/core/scic_sds_phy.c b/drivers/scsi/isci/core/scic_sds_phy.c
index 0901846..972b977 100644
--- a/drivers/scsi/isci/core/scic_sds_phy.c
+++ b/drivers/scsi/isci/core/scic_sds_phy.c
@@ -1556,14 +1556,14 @@ static const struct scic_sds_phy_state_handler scic_sds_phy_starting_substate_ha
 
 /**
  * scic_sds_phy_starting_initial_substate_enter -
- * @object: This is the struct sci_base_object which is cast to a struct scic_sds_phy object.
+ * @object: This is the object which is cast to a struct scic_sds_phy object.
  *
  * This method will perform the actions required by the struct scic_sds_phy on
  * entering the SCIC_SDS_PHY_STARTING_SUBSTATE_INITIAL. - The initial state
  * handlers are put in place for the struct scic_sds_phy object. - The state is
  * changed to the wait phy type event notification. none
  */
-static void scic_sds_phy_starting_initial_substate_enter(struct sci_base_object *object)
+static void scic_sds_phy_starting_initial_substate_enter(void *object)
 {
 	struct scic_sds_phy *sci_phy;
 
@@ -1579,14 +1579,13 @@ static void scic_sds_phy_starting_initial_substate_enter(struct sci_base_object
 
 /**
  *
- * @object: This is the struct sci_base_object which is cast to a struct scic_sds_phy object.
+ * @object: This is the object which is cast to a struct scic_sds_phy object.
  *
  * This method will perform the actions required by the struct scic_sds_phy on
  * entering the SCIC_SDS_PHY_STARTING_SUBSTATE_AWAIT_PHY_TYPE_EN. - Set the
  * struct scic_sds_phy object state handlers for this state. none
  */
-static void scic_sds_phy_starting_await_ossp_en_substate_enter(
-	struct sci_base_object *object)
+static void scic_sds_phy_starting_await_ossp_en_substate_enter(void *object)
 {
 	struct scic_sds_phy *sci_phy;
 
@@ -1599,14 +1598,14 @@ static void scic_sds_phy_starting_await_ossp_en_substate_enter(
 
 /**
  *
- * @object: This is the struct sci_base_object which is cast to a struct scic_sds_phy object.
+ * @object: This is the object which is cast to a struct scic_sds_phy object.
  *
  * This method will perform the actions required by the struct scic_sds_phy on
  * entering the SCIC_SDS_PHY_STARTING_SUBSTATE_AWAIT_SPEED_EN. - Set the
  * struct scic_sds_phy object state handlers for this state. none
  */
 static void scic_sds_phy_starting_await_sas_speed_en_substate_enter(
-	struct sci_base_object *object)
+		void *object)
 {
 	struct scic_sds_phy *sci_phy;
 
@@ -1619,14 +1618,13 @@ static void scic_sds_phy_starting_await_sas_speed_en_substate_enter(
 
 /**
  *
- * @object: This is the struct sci_base_object which is cast to a struct scic_sds_phy object.
+ * @object: This is the object which is cast to a struct scic_sds_phy object.
  *
  * This method will perform the actions required by the struct scic_sds_phy on
  * entering the SCIC_SDS_PHY_STARTING_SUBSTATE_AWAIT_IAF_UF. - Set the
  * struct scic_sds_phy object state handlers for this state. none
  */
-static void scic_sds_phy_starting_await_iaf_uf_substate_enter(
-	struct sci_base_object *object)
+static void scic_sds_phy_starting_await_iaf_uf_substate_enter(void *object)
 {
 	struct scic_sds_phy *sci_phy;
 
@@ -1639,15 +1637,14 @@ static void scic_sds_phy_starting_await_iaf_uf_substate_enter(
 
 /**
  *
- * @object: This is the struct sci_base_object which is cast to a struct scic_sds_phy object.
+ * @object: This is the object which is cast to a struct scic_sds_phy object.
  *
  * This method will perform the actions required by the struct scic_sds_phy on
  * entering the SCIC_SDS_PHY_STARTING_SUBSTATE_AWAIT_SAS_POWER. - Set the
  * struct scic_sds_phy object state handlers for this state. - Add this phy object to
  * the power control queue none
  */
-static void scic_sds_phy_starting_await_sas_power_substate_enter(
-	struct sci_base_object *object)
+static void scic_sds_phy_starting_await_sas_power_substate_enter(void *object)
 {
 	struct scic_sds_phy *sci_phy;
 
@@ -1665,14 +1662,13 @@ static void scic_sds_phy_starting_await_sas_power_substate_enter(
 
 /**
  *
- * @object: This is the struct sci_base_object which is cast to a struct scic_sds_phy object.
+ * @object: This is the object which is cast to a struct scic_sds_phy object.
  *
  * This method will perform the actions required by the struct scic_sds_phy on exiting
  * the SCIC_SDS_PHY_STARTING_SUBSTATE_AWAIT_SAS_POWER. - Remove the
  * struct scic_sds_phy object from the power control queue. none
  */
-static void scic_sds_phy_starting_await_sas_power_substate_exit(
-	struct sci_base_object *object)
+static void scic_sds_phy_starting_await_sas_power_substate_exit(void *object)
 {
 	struct scic_sds_phy *sci_phy;
 
@@ -1685,15 +1681,14 @@ static void scic_sds_phy_starting_await_sas_power_substate_exit(
 
 /**
  *
- * @object: This is the struct sci_base_object which is cast to a struct scic_sds_phy object.
+ * @object: This is the object which is cast to a struct scic_sds_phy object.
  *
  * This method will perform the actions required by the struct scic_sds_phy on
  * entering the SCIC_SDS_PHY_STARTING_SUBSTATE_AWAIT_SATA_POWER. - Set the
  * struct scic_sds_phy object state handlers for this state. - Add this phy object to
  * the power control queue none
  */
-static void scic_sds_phy_starting_await_sata_power_substate_enter(
-	struct sci_base_object *object)
+static void scic_sds_phy_starting_await_sata_power_substate_enter(void *object)
 {
 	struct scic_sds_phy *sci_phy;
 
@@ -1711,14 +1706,13 @@ static void scic_sds_phy_starting_await_sata_power_substate_enter(
 
 /**
  *
- * @object: This is the struct sci_base_object which is cast to a struct scic_sds_phy object.
+ * @object: This is the object which is cast to a struct scic_sds_phy object.
  *
  * This method will perform the actions required by the struct scic_sds_phy on exiting
  * the SCIC_SDS_PHY_STARTING_SUBSTATE_AWAIT_SATA_POWER. - Remove the
  * struct scic_sds_phy object from the power control queue. none
  */
-static void scic_sds_phy_starting_await_sata_power_substate_exit(
-	struct sci_base_object *object)
+static void scic_sds_phy_starting_await_sata_power_substate_exit(void *object)
 {
 	struct scic_sds_phy *sci_phy;
 
@@ -1732,15 +1726,13 @@ static void scic_sds_phy_starting_await_sata_power_substate_exit(
 
 /**
  *
- * @object: This is the struct sci_base_object which is cast to a
- * struct scic_sds_phy object.
+ * @object: This is the object which is cast to a struct scic_sds_phy object.
  *
  * This function will perform the actions required by the struct scic_sds_phy on
  * entering the SCIC_SDS_PHY_STARTING_SUBSTATE_AWAIT_SATA_PHY_EN. - Set the
  * struct scic_sds_phy object state handlers for this state. none
  */
-static void scic_sds_phy_starting_await_sata_phy_substate_enter(
-	struct sci_base_object *object)
+static void scic_sds_phy_starting_await_sata_phy_substate_enter(void *object)
 {
 	struct scic_sds_phy *sci_phy = (struct scic_sds_phy *)object;
 
@@ -1754,8 +1746,7 @@ static void scic_sds_phy_starting_await_sata_phy_substate_enter(
 
 /**
  *
- * @object: This is the struct sci_base_object which is cast to a
- * struct scic_sds_phy object.
+ * @object: This is the object which is cast to a struct scic_sds_phy object.
  *
  * This method will perform the actions required by the struct scic_sds_phy
  * on exiting
@@ -1763,7 +1754,7 @@ static void scic_sds_phy_starting_await_sata_phy_substate_enter(
  * that was started on entry to await sata phy event notification none
  */
 static inline void scic_sds_phy_starting_await_sata_phy_substate_exit(
-	struct sci_base_object *object)
+		void *object)
 {
 	struct scic_sds_phy *sci_phy = (struct scic_sds_phy *)object;
 
@@ -1772,14 +1763,13 @@ static inline void scic_sds_phy_starting_await_sata_phy_substate_exit(
 
 /**
  *
- * @object: This is the struct sci_base_object which is cast to a struct scic_sds_phy object.
+ * @object: This is the object which is cast to a struct scic_sds_phy object.
  *
  * This method will perform the actions required by the struct scic_sds_phy on
  * entering the SCIC_SDS_PHY_STARTING_SUBSTATE_AWAIT_SATA_SPEED_EN. - Set the
  * struct scic_sds_phy object state handlers for this state. none
  */
-static void scic_sds_phy_starting_await_sata_speed_substate_enter(
-	struct sci_base_object *object)
+static void scic_sds_phy_starting_await_sata_speed_substate_enter(void *object)
 {
 	struct scic_sds_phy *sci_phy = (struct scic_sds_phy *)object;
 
@@ -1793,8 +1783,7 @@ static void scic_sds_phy_starting_await_sata_speed_substate_enter(
 
 /**
  *
- * @object: This is the struct sci_base_object which is cast to a
- * struct scic_sds_phy object.
+ * @object: This is the object which is cast to a struct scic_sds_phy object.
  *
  * This function will perform the actions required by the
  * struct scic_sds_phy on exiting
@@ -1802,7 +1791,7 @@ static void scic_sds_phy_starting_await_sata_speed_substate_enter(
  * that was started on entry to await sata phy event notification none
  */
 static inline void scic_sds_phy_starting_await_sata_speed_substate_exit(
-	struct sci_base_object *object)
+	void *object)
 {
 	struct scic_sds_phy *sci_phy = (struct scic_sds_phy *)object;
 
@@ -1811,8 +1800,7 @@ static inline void scic_sds_phy_starting_await_sata_speed_substate_exit(
 
 /**
  *
- * @object: This is the struct sci_base_object which is cast to a
- * struct scic_sds_phy object.
+ * @object: This is the object which is cast to a struct scic_sds_phy object.
  *
  * This function will perform the actions required by the struct scic_sds_phy on
  * entering the SCIC_SDS_PHY_STARTING_SUBSTATE_AWAIT_SIG_FIS_UF. - Set the
@@ -1820,8 +1808,7 @@ static inline void scic_sds_phy_starting_await_sata_speed_substate_exit(
  * - Start the SIGNATURE FIS
  * timeout timer none
  */
-static void scic_sds_phy_starting_await_sig_fis_uf_substate_enter(
-	struct sci_base_object *object)
+static void scic_sds_phy_starting_await_sig_fis_uf_substate_enter(void *object)
 {
 	bool continue_to_ready_state;
 	struct scic_sds_phy *sci_phy = (struct scic_sds_phy *)object;
@@ -1851,8 +1838,7 @@ static void scic_sds_phy_starting_await_sig_fis_uf_substate_enter(
 
 /**
  *
- * @object: This is the struct sci_base_object which is cast to a
- * struct scic_sds_phy object.
+ * @object: This is the object which is cast to a struct scic_sds_phy object.
  *
  * This function will perform the actions required by the
  * struct scic_sds_phy on exiting
@@ -1860,7 +1846,7 @@ static void scic_sds_phy_starting_await_sig_fis_uf_substate_enter(
  * FIS timeout timer. none
  */
 static inline void scic_sds_phy_starting_await_sig_fis_uf_substate_exit(
-	struct sci_base_object *object)
+	void *object)
 {
 	struct scic_sds_phy *sci_phy;
 
@@ -1871,14 +1857,14 @@ static inline void scic_sds_phy_starting_await_sig_fis_uf_substate_exit(
 
 /**
  *
- * @object: This is the struct sci_base_object which is cast to a struct scic_sds_phy object.
+ * @object: This is the object which is cast to a struct scic_sds_phy object.
  *
  * This method will perform the actions required by the struct scic_sds_phy on
  * entering the SCIC_SDS_PHY_STARTING_SUBSTATE_FINAL. - Set the struct scic_sds_phy
  * object state handlers for this state. - Change base state machine to the
  * ready state. none
  */
-static void scic_sds_phy_starting_final_substate_enter(struct sci_base_object *object)
+static void scic_sds_phy_starting_final_substate_enter(void *object)
 {
 	struct scic_sds_phy *sci_phy;
 
@@ -2206,14 +2192,13 @@ static void scu_link_layer_tx_hard_reset(
 
 /**
  *
- * @object: This is the struct sci_base_object which is cast to a struct scic_sds_phy object.
+ * @object: This is the object which is cast to a struct scic_sds_phy object.
  *
  * This method will perform the actions required by the struct scic_sds_phy on
  * entering the SCI_BASE_PHY_STATE_INITIAL. - This function sets the state
  * handlers for the phy object base state machine initial state. none
  */
-static void scic_sds_phy_initial_state_enter(
-	struct sci_base_object *object)
+static void scic_sds_phy_initial_state_enter(void *object)
 {
 	struct scic_sds_phy *sci_phy;
 
@@ -2224,15 +2209,14 @@ static void scic_sds_phy_initial_state_enter(
 
 /**
  *
- * @object: This is the struct sci_base_object which is cast to a
- * struct scic_sds_phy object.
+ * @object: This is the object which is cast to a struct scic_sds_phy object.
  *
  * This function will perform the actions required by the struct scic_sds_phy on
  * entering the SCI_BASE_PHY_STATE_INITIAL. - This function sets the state
  * handlers for the phy object base state machine initial state. - The SCU
  * hardware is requested to stop the protocol engine. none
  */
-static void scic_sds_phy_stopped_state_enter(struct sci_base_object *object)
+static void scic_sds_phy_stopped_state_enter(void *object)
 {
 	struct scic_sds_phy *sci_phy = (struct scic_sds_phy *)object;
 	struct scic_sds_controller *scic = scic_sds_phy_get_controller(sci_phy);
@@ -2266,7 +2250,7 @@ static void scic_sds_phy_stopped_state_enter(struct sci_base_object *object)
 
 /**
  *
- * @object: This is the struct sci_base_object which is cast to a struct scic_sds_phy object.
+ * @object: This is the object which is cast to a struct scic_sds_phy object.
  *
  * This method will perform the actions required by the struct scic_sds_phy on
  * entering the SCI_BASE_PHY_STATE_STARTING. - This function sets the state
@@ -2276,8 +2260,7 @@ static void scic_sds_phy_stopped_state_enter(struct sci_base_object *object)
  * state then the struct scic_sds_controller is informed that the phy has gone link
  * down. none
  */
-static void scic_sds_phy_starting_state_enter(
-	struct sci_base_object *object)
+static void scic_sds_phy_starting_state_enter(void *object)
 {
 	struct scic_sds_phy *sci_phy;
 
@@ -2307,7 +2290,7 @@ static void scic_sds_phy_starting_state_enter(
 
 /**
  *
- * @object: This is the struct sci_base_object which is cast to a struct scic_sds_phy object.
+ * @object: This is the object which is cast to a struct scic_sds_phy object.
  *
  * This method will perform the actions required by the struct scic_sds_phy on
  * entering the SCI_BASE_PHY_STATE_READY. - This function sets the state
@@ -2315,8 +2298,7 @@ static void scic_sds_phy_starting_state_enter(
  * hardware protocol engine is resumed. - The struct scic_sds_controller is informed
  * that the phy object has gone link up. none
  */
-static void scic_sds_phy_ready_state_enter(
-	struct sci_base_object *object)
+static void scic_sds_phy_ready_state_enter(void *object)
 {
 	struct scic_sds_phy *sci_phy;
 
@@ -2333,14 +2315,13 @@ static void scic_sds_phy_ready_state_enter(
 
 /**
  *
- * @object: This is the struct sci_base_object which is cast to a struct scic_sds_phy object.
+ * @object: This is the object which is cast to a struct scic_sds_phy object.
  *
  * This method will perform the actions required by the struct scic_sds_phy on exiting
  * the SCI_BASE_PHY_STATE_INITIAL. This function suspends the SCU hardware
  * protocol engine represented by this struct scic_sds_phy object. none
  */
-static void scic_sds_phy_ready_state_exit(
-	struct sci_base_object *object)
+static void scic_sds_phy_ready_state_exit(void *object)
 {
 	struct scic_sds_phy *sci_phy;
 
@@ -2351,14 +2332,13 @@ static void scic_sds_phy_ready_state_exit(
 
 /**
  *
- * @object: This is the struct sci_base_object which is cast to a struct scic_sds_phy object.
+ * @object: This is the object which is cast to a struct scic_sds_phy object.
  *
  * This method will perform the actions required by the struct scic_sds_phy on
  * entering the SCI_BASE_PHY_STATE_RESETTING. - This function sets the state
  * handlers for the phy object base state machine resetting state. none
  */
-static void scic_sds_phy_resetting_state_enter(
-	struct sci_base_object *object)
+static void scic_sds_phy_resetting_state_enter(void *object)
 {
 	struct scic_sds_phy *sci_phy;
 
@@ -2387,14 +2367,13 @@ static void scic_sds_phy_resetting_state_enter(
 
 /**
  *
- * @object: This is the struct sci_base_object which is cast to a struct scic_sds_phy object.
+ * @object: This is the object which is cast to a struct scic_sds_phy object.
  *
  * This method will perform the actions required by the struct scic_sds_phy on
  * entering the SCI_BASE_PHY_STATE_FINAL. - This function sets the state
  * handlers for the phy object base state machine final state. none
  */
-static void scic_sds_phy_final_state_enter(
-	struct sci_base_object *object)
+static void scic_sds_phy_final_state_enter(void *object)
 {
 	struct scic_sds_phy *sci_phy;
 
diff --git a/drivers/scsi/isci/core/scic_sds_port.c b/drivers/scsi/isci/core/scic_sds_port.c
index 057f95a..1cbf1d6 100644
--- a/drivers/scsi/isci/core/scic_sds_port.c
+++ b/drivers/scsi/isci/core/scic_sds_port.c
@@ -1623,15 +1623,14 @@ scic_sds_port_resume_port_task_scheduler(struct scic_sds_port *port)
 
 /**
  *
- * @object: This is the struct sci_base_object which is cast to a struct scic_sds_port object.
+ * @object: This is the object which is cast to a struct scic_sds_port object.
  *
  * This method will perform the actions required by the struct scic_sds_port on
  * entering the SCIC_SDS_PORT_READY_SUBSTATE_WAITING. This function checks the
  * port for any ready phys.  If there is at least one phy in a ready state then
  * the port transitions to the ready operational substate. none
  */
-static void scic_sds_port_ready_substate_waiting_enter(
-	struct sci_base_object *object)
+static void scic_sds_port_ready_substate_waiting_enter(void *object)
 {
 	struct scic_sds_port *sci_port = (struct scic_sds_port *)object;
 
@@ -1654,16 +1653,14 @@ static void scic_sds_port_ready_substate_waiting_enter(
 
 /**
  *
- * @object: This is the struct sci_base_object which is cast to a
- * struct scic_sds_port object.
+ * @object: This is the object which is cast to a struct scic_sds_port object.
  *
  * This function will perform the actions required by the struct scic_sds_port
  * on entering the SCIC_SDS_PORT_READY_SUBSTATE_OPERATIONAL. This function sets
  * the state handlers for the port object, notifies the SCI User that the port
  * is ready, and resumes port operations. none
  */
-static void scic_sds_port_ready_substate_operational_enter(
-	struct sci_base_object *object)
+static void scic_sds_port_ready_substate_operational_enter(void *object)
 {
 	u32 index;
 	struct scic_sds_port *sci_port = (struct scic_sds_port *)object;
@@ -1699,14 +1696,13 @@ static void scic_sds_port_ready_substate_operational_enter(
 
 /**
  *
- * @object: This is the struct sci_base_object which is cast to a struct scic_sds_port object.
+ * @object: This is the object which is cast to a struct scic_sds_port object.
  *
  * This method will perform the actions required by the struct scic_sds_port on
  * exiting the SCIC_SDS_PORT_READY_SUBSTATE_OPERATIONAL. This function reports
  * the port not ready and suspends the port task scheduler. none
  */
-static void scic_sds_port_ready_substate_operational_exit(
-	struct sci_base_object *object)
+static void scic_sds_port_ready_substate_operational_exit(void *object)
 {
 	struct scic_sds_port *sci_port = (struct scic_sds_port *)object;
 	struct scic_sds_controller *scic =
@@ -1731,15 +1727,13 @@ static void scic_sds_port_ready_substate_operational_exit(
 
 /**
  * scic_sds_port_ready_substate_configuring_enter() -
- * @object: This is the struct sci_base_object which is cast to a
- * struct scic_sds_port object.
+ * @object: This is the object which is cast to a struct scic_sds_port object.
  *
  * This method will perform the actions required by the struct scic_sds_port on
  * exiting the SCIC_SDS_PORT_READY_SUBSTATE_OPERATIONAL. This function reports
  * the port not ready and suspends the port task scheduler. none
  */
-static void scic_sds_port_ready_substate_configuring_enter(
-	struct sci_base_object *object)
+static void scic_sds_port_ready_substate_configuring_enter(void *object)
 {
 	struct scic_sds_port *sci_port = (struct scic_sds_port *)object;
 	struct scic_sds_controller *scic =
@@ -1763,8 +1757,7 @@ static void scic_sds_port_ready_substate_configuring_enter(
 				SCIC_SDS_PORT_READY_SUBSTATE_OPERATIONAL);
 }
 
-static void scic_sds_port_ready_substate_configuring_exit(
-	struct sci_base_object *object)
+static void scic_sds_port_ready_substate_configuring_exit(void *object)
 {
 	struct scic_sds_port *sci_port = (struct scic_sds_port *)object;
 
@@ -2253,15 +2246,14 @@ static void scic_sds_port_invalidate_dummy_remote_node(struct scic_sds_port *sci
 
 /**
  *
- * @object: This is the struct sci_base_object which is cast to a struct scic_sds_port object.
+ * @object: This is the object which is cast to a struct scic_sds_port object.
  *
  * This method will perform the actions required by the struct scic_sds_port on
  * entering the SCI_BASE_PORT_STATE_STOPPED. This function sets the stopped
  * state handlers for the struct scic_sds_port object and disables the port task
  * scheduler in the hardware. none
  */
-static void scic_sds_port_stopped_state_enter(
-	struct sci_base_object *object)
+static void scic_sds_port_stopped_state_enter(void *object)
 {
 	struct scic_sds_port *sci_port;
 
@@ -2285,14 +2277,13 @@ static void scic_sds_port_stopped_state_enter(
 
 /**
  *
- * @object: This is the struct sci_base_object which is cast to a struct scic_sds_port object.
+ * @object: This is the object which is cast to a struct scic_sds_port object.
  *
  * This method will perform the actions required by the struct scic_sds_port on
  * exiting the SCI_BASE_STATE_STOPPED. This function enables the SCU hardware
  * port task scheduler. none
  */
-static void scic_sds_port_stopped_state_exit(
-	struct sci_base_object *object)
+static void scic_sds_port_stopped_state_exit(void *object)
 {
 	struct scic_sds_port *sci_port;
 
@@ -2304,14 +2295,14 @@ static void scic_sds_port_stopped_state_exit(
 
 /**
  * scic_sds_port_ready_state_enter -
- * @object: This is the struct sci_base_object which is cast to a struct scic_sds_port object.
+ * @object: This is the object which is cast to a struct scic_sds_port object.
  *
  * This method will perform the actions required by the struct scic_sds_port on
  * entering the SCI_BASE_PORT_STATE_READY. This function sets the ready state
  * handlers for the struct scic_sds_port object, reports the port object as
  * not ready and starts the ready substate machine. none
  */
-static void scic_sds_port_ready_state_enter(struct sci_base_object *object)
+static void scic_sds_port_ready_state_enter(void *object)
 {
 	struct scic_sds_controller *scic;
 	struct scic_sds_port *sci_port;
@@ -2340,7 +2331,7 @@ static void scic_sds_port_ready_state_enter(struct sci_base_object *object)
 	sci_base_state_machine_start(&sci_port->ready_substate_machine);
 }
 
-static void scic_sds_port_ready_state_exit(struct sci_base_object *object)
+static void scic_sds_port_ready_state_exit(void *object)
 {
 	struct scic_sds_port *sci_port;
 
@@ -2351,14 +2342,13 @@ static void scic_sds_port_ready_state_exit(struct sci_base_object *object)
 
 /**
  *
- * @object: This is the struct sci_base_object which is cast to a struct scic_sds_port object.
+ * @object: This is the object which is cast to a struct scic_sds_port object.
  *
  * This method will perform the actions required by the struct scic_sds_port on
  * entering the SCI_BASE_PORT_STATE_RESETTING. This function sets the resetting
  * state handlers for the struct scic_sds_port object. none
  */
-static void scic_sds_port_resetting_state_enter(
-	struct sci_base_object *object)
+static void scic_sds_port_resetting_state_enter(void *object)
 {
 	struct scic_sds_port *sci_port;
 
@@ -2371,15 +2361,13 @@ static void scic_sds_port_resetting_state_enter(
 
 /**
  *
- * @object: This is the struct sci_base_object which is cast to a
- * struct scic_sds_port object.
+ * @object: This is the object which is cast to a struct scic_sds_port object.
  *
  * This function will perform the actions required by the
  * struct scic_sds_port on
  * exiting the SCI_BASE_STATE_RESETTING. This function does nothing. none
  */
-static inline void scic_sds_port_resetting_state_exit(
-	struct sci_base_object *object)
+static inline void scic_sds_port_resetting_state_exit(void *object)
 {
 	struct scic_sds_port *sci_port = (struct scic_sds_port *)object;
 
@@ -2388,14 +2376,14 @@ static inline void scic_sds_port_resetting_state_exit(
 
 /**
  *
- * @object: This is the struct sci_base_object which is cast to a struct scic_sds_port object.
+ * @object: This is the void object which is cast to a
+ * struct scic_sds_port object.
  *
  * This method will perform the actions required by the struct scic_sds_port on
  * entering the SCI_BASE_PORT_STATE_STOPPING. This function sets the stopping
  * state handlers for the struct scic_sds_port object. none
  */
-static void scic_sds_port_stopping_state_enter(
-	struct sci_base_object *object)
+static void scic_sds_port_stopping_state_enter(void *object)
 {
 	struct scic_sds_port *sci_port;
 
@@ -2408,15 +2396,14 @@ static void scic_sds_port_stopping_state_enter(
 
 /**
  *
- * @object: This is the struct sci_base_object which is cast to a
- * struct scic_sds_port object.
+ * @object: This is the object which is cast to a struct scic_sds_port object.
  *
  * This function will perform the actions required by the
  * struct scic_sds_port on
  * exiting the SCI_BASE_STATE_STOPPING. This function does nothing. none
  */
 static inline void
-scic_sds_port_stopping_state_exit(struct sci_base_object *object)
+scic_sds_port_stopping_state_exit(void *object)
 {
 	struct scic_sds_port *sci_port = (struct scic_sds_port *)object;
 
@@ -2427,15 +2414,14 @@ scic_sds_port_stopping_state_exit(struct sci_base_object *object)
 
 /**
  *
- * @object: This is the struct sci_base_object which is cast to a
- * struct scic_sds_port object.
+ * @object: This is the object which is cast to a struct scic_sds_port object.
  *
  * This function will perform the actions required by the
  * struct scic_sds_port on
  * entering the SCI_BASE_PORT_STATE_STOPPING. This function sets the stopping
  * state handlers for the struct scic_sds_port object. none
  */
-static void scic_sds_port_failed_state_enter(struct sci_base_object *object)
+static void scic_sds_port_failed_state_enter(void *object)
 {
 	struct scic_sds_port *sci_port = (struct scic_sds_port *)object;
 	struct isci_port *iport = sci_object_get_association(sci_port);
diff --git a/drivers/scsi/isci/core/scic_sds_request.c b/drivers/scsi/isci/core/scic_sds_request.c
index 395080d..3ebfb7f 100644
--- a/drivers/scsi/isci/core/scic_sds_request.c
+++ b/drivers/scsi/isci/core/scic_sds_request.c
@@ -1521,8 +1521,7 @@ static const struct scic_sds_io_request_state_handler scic_sds_request_state_han
  * base request is constructed. Entry into the initial state sets all handlers
  * for the io request object to their default handlers. none
  */
-static void scic_sds_request_initial_state_enter(
-	struct sci_base_object *object)
+static void scic_sds_request_initial_state_enter(void *object)
 {
 	struct scic_sds_request *sci_req = (struct scic_sds_request *)object;
 
@@ -1541,8 +1540,7 @@ static void scic_sds_request_initial_state_enter(
  * SCI_BASE_REQUEST_STATE_CONSTRUCTED state. The method sets the state handlers
  * for the the constructed state. none
  */
-static void scic_sds_request_constructed_state_enter(
-	struct sci_base_object *object)
+static void scic_sds_request_constructed_state_enter(void *object)
 {
 	struct scic_sds_request *sci_req = (struct scic_sds_request *)object;
 
@@ -1556,14 +1554,13 @@ static void scic_sds_request_constructed_state_enter(
 /**
  * scic_sds_request_started_state_enter() -
  * @object: This parameter specifies the base object for which the state
- *    transition is occuring.  This is cast into a SCIC_SDS_IO_REQUEST object.
+ *    transition is occurring.  This is cast into a SCIC_SDS_IO_REQUEST object.
  *
  * This method implements the actions taken when entering the
  * SCI_BASE_REQUEST_STATE_STARTED state. If the io request object type is a
  * SCSI Task request we must enter the started substate machine. none
  */
-static void scic_sds_request_started_state_enter(
-	struct sci_base_object *object)
+static void scic_sds_request_started_state_enter(void *object)
 {
 	struct scic_sds_request *sci_req = (struct scic_sds_request *)object;
 
@@ -1583,15 +1580,14 @@ static void scic_sds_request_started_state_enter(
 /**
  * scic_sds_request_started_state_exit() -
  * @object: This parameter specifies the base object for which the state
- *    transition is occuring.  This object is cast into a SCIC_SDS_IO_REQUEST
+ *    transition is occurring.  This object is cast into a SCIC_SDS_IO_REQUEST
  *    object.
  *
  * This method implements the actions taken when exiting the
  * SCI_BASE_REQUEST_STATE_STARTED state. For task requests the action will be
  * to stop the started substate machine. none
  */
-static void scic_sds_request_started_state_exit(
-	struct sci_base_object *object)
+static void scic_sds_request_started_state_exit(void *object)
 {
 	struct scic_sds_request *sci_req = (struct scic_sds_request *)object;
 
@@ -1602,7 +1598,7 @@ static void scic_sds_request_started_state_exit(
 /**
  * scic_sds_request_completed_state_enter() -
  * @object: This parameter specifies the base object for which the state
- *    transition is occuring.  This object is cast into a SCIC_SDS_IO_REQUEST
+ *    transition is occurring.  This object is cast into a SCIC_SDS_IO_REQUEST
  *    object.
  *
  * This method implements the actions taken when entering the
@@ -1611,8 +1607,7 @@ static void scic_sds_request_started_state_exit(
  * completion status and convert it to an enum sci_status to return in the
  * completion callback function. none
  */
-static void scic_sds_request_completed_state_enter(
-	struct sci_base_object *object)
+static void scic_sds_request_completed_state_enter(void *object)
 {
 	struct scic_sds_request *sci_req = (struct scic_sds_request *)object;
 	struct scic_sds_controller *scic =
@@ -1636,14 +1631,13 @@ static void scic_sds_request_completed_state_enter(
 /**
  * scic_sds_request_aborting_state_enter() -
  * @object: This parameter specifies the base object for which the state
- *    transition is occuring.  This object is cast into a SCIC_SDS_IO_REQUEST
+ *    transition is occurring.  This object is cast into a SCIC_SDS_IO_REQUEST
  *    object.
  *
  * This method implements the actions taken when entering the
  * SCI_BASE_REQUEST_STATE_ABORTING state. none
  */
-static void scic_sds_request_aborting_state_enter(
-	struct sci_base_object *object)
+static void scic_sds_request_aborting_state_enter(void *object)
 {
 	struct scic_sds_request *sci_req = (struct scic_sds_request *)object;
 
@@ -1660,14 +1654,13 @@ static void scic_sds_request_aborting_state_enter(
 /**
  * scic_sds_request_final_state_enter() -
  * @object: This parameter specifies the base object for which the state
- *    transition is occuring.  This is cast into a SCIC_SDS_IO_REQUEST object.
+ *    transition is occurring.  This is cast into a SCIC_SDS_IO_REQUEST object.
  *
  * This method implements the actions taken when entering the
  * SCI_BASE_REQUEST_STATE_FINAL state. The only action required is to put the
  * state handlers in place. none
  */
-static void scic_sds_request_final_state_enter(
-	struct sci_base_object *object)
+static void scic_sds_request_final_state_enter(void *object)
 {
 	struct scic_sds_request *sci_req = (struct scic_sds_request *)object;
 
diff --git a/drivers/scsi/isci/core/scic_sds_smp_request.c b/drivers/scsi/isci/core/scic_sds_smp_request.c
index d4009e5..4299737 100644
--- a/drivers/scsi/isci/core/scic_sds_smp_request.c
+++ b/drivers/scsi/isci/core/scic_sds_smp_request.c
@@ -518,12 +518,12 @@ static const struct scic_sds_io_request_state_handler scic_sds_smp_request_start
  *    SCIC_SDS_SMP_REQUEST_STARTED_SUBSTATE_AWAIT_TC_RESPONSE sub-state. This
  *    includes setting the IO request state handlers for this sub-state.
  * @object: This parameter specifies the request object for which the sub-state
- *    change is occuring.
+ *    change is occurring.
  *
  * none.
  */
 static void scic_sds_smp_request_started_await_response_substate_enter(
-	struct sci_base_object *object)
+	void *object)
 {
 	struct scic_sds_request *sci_req = (struct scic_sds_request *)object;
 
@@ -539,12 +539,12 @@ static void scic_sds_smp_request_started_await_response_substate_enter(
  *    SCIC_SDS_SMP_REQUEST_STARTED_SUBSTATE_AWAIT_TC_COMPLETION sub-state.
  *    This includes setting the SMP request state handlers for this sub-state.
  * @object: This parameter specifies the request object for which the sub-state
- *    change is occuring.
+ *    change is occurring.
  *
  * none.
  */
 static void scic_sds_smp_request_started_await_tc_completion_substate_enter(
-	struct sci_base_object *object)
+	void *object)
 {
 	struct scic_sds_request *sci_req = (struct scic_sds_request *)object;
 
diff --git a/drivers/scsi/isci/core/scic_sds_ssp_request.c b/drivers/scsi/isci/core/scic_sds_ssp_request.c
index 0367668..a7297ab 100644
--- a/drivers/scsi/isci/core/scic_sds_ssp_request.c
+++ b/drivers/scsi/isci/core/scic_sds_ssp_request.c
@@ -195,12 +195,12 @@ static const struct scic_sds_io_request_state_handler scic_sds_ssp_task_request_
  *    sub-state.  This includes setting the IO request state handlers for this
  *    sub-state.
  * @object: This parameter specifies the request object for which the sub-state
- *    change is occuring.
+ *    change is occurring.
  *
  * none.
  */
 static void scic_sds_io_request_started_task_mgmt_await_tc_completion_substate_enter(
-	struct sci_base_object *object)
+	void *object)
 {
 	struct scic_sds_request *sci_req = (struct scic_sds_request *)object;
 
@@ -216,12 +216,12 @@ static void scic_sds_io_request_started_task_mgmt_await_tc_completion_substate_e
  *    SCIC_SDS_IO_REQUEST_STARTED_SUBSTATE_AWAIT_TC_RESPONSE sub-state. This
  *    includes setting the IO request state handlers for this sub-state.
  * @object: This parameter specifies the request object for which the sub-state
- *    change is occuring.
+ *    change is occurring.
  *
  * none.
  */
 static void scic_sds_io_request_started_task_mgmt_await_task_response_substate_enter(
-	struct sci_base_object *object)
+	void *object)
 {
 	struct scic_sds_request *sci_req = (struct scic_sds_request *)object;
 
diff --git a/drivers/scsi/isci/core/scic_sds_stp_request.c b/drivers/scsi/isci/core/scic_sds_stp_request.c
index 59c5f1b..2c6b62e 100644
--- a/drivers/scsi/isci/core/scic_sds_stp_request.c
+++ b/drivers/scsi/isci/core/scic_sds_stp_request.c
@@ -564,7 +564,7 @@ static const struct scic_sds_io_request_state_handler scic_sds_stp_request_start
 };
 
 static void scic_sds_stp_request_started_non_data_await_h2d_completion_enter(
-	struct sci_base_object *object)
+	void *object)
 {
 	struct scic_sds_request *sci_req = (struct scic_sds_request *)object;
 
@@ -579,8 +579,7 @@ static void scic_sds_stp_request_started_non_data_await_h2d_completion_enter(
 		);
 }
 
-static void scic_sds_stp_request_started_non_data_await_d2h_enter(
-	struct sci_base_object *object)
+static void scic_sds_stp_request_started_non_data_await_d2h_enter(void *object)
 {
 	struct scic_sds_request *sci_req = (struct scic_sds_request *)object;
 
@@ -1214,7 +1213,7 @@ static const struct scic_sds_io_request_state_handler scic_sds_stp_request_start
 };
 
 static void scic_sds_stp_request_started_pio_await_h2d_completion_enter(
-	struct sci_base_object *object)
+	void *object)
 {
 	struct scic_sds_request *sci_req = (struct scic_sds_request *)object;
 
@@ -1228,8 +1227,7 @@ static void scic_sds_stp_request_started_pio_await_h2d_completion_enter(
 		sci_req->target_device, sci_req);
 }
 
-static void scic_sds_stp_request_started_pio_await_frame_enter(
-	struct sci_base_object *object)
+static void scic_sds_stp_request_started_pio_await_frame_enter(void *object)
 {
 	struct scic_sds_request *sci_req = (struct scic_sds_request *)object;
 
@@ -1241,7 +1239,7 @@ static void scic_sds_stp_request_started_pio_await_frame_enter(
 }
 
 static void scic_sds_stp_request_started_pio_data_in_await_data_enter(
-	struct sci_base_object *object)
+	void *object)
 {
 	struct scic_sds_request *sci_req = (struct scic_sds_request *)object;
 
@@ -1253,7 +1251,7 @@ static void scic_sds_stp_request_started_pio_data_in_await_data_enter(
 }
 
 static void scic_sds_stp_request_started_pio_data_out_transmit_data_enter(
-	struct sci_base_object *object)
+	void *object)
 {
 	struct scic_sds_request *sci_req = (struct scic_sds_request *)object;
 
@@ -1485,7 +1483,7 @@ static const struct scic_sds_io_request_state_handler scic_sds_stp_request_start
 };
 
 static void scic_sds_stp_request_started_udma_await_tc_completion_enter(
-	struct sci_base_object *object)
+	void *object)
 {
 	struct scic_sds_request *sci_req = (struct scic_sds_request *)object;
 
@@ -1504,7 +1502,7 @@ static void scic_sds_stp_request_started_udma_await_tc_completion_enter(
  * will UF the D2H register FIS to complete the IO.
  */
 static void scic_sds_stp_request_started_udma_await_d2h_reg_fis_enter(
-	struct sci_base_object *object)
+	void *object)
 {
 	struct scic_sds_request *sci_req = (struct scic_sds_request *)object;
 
@@ -1732,7 +1730,7 @@ static const struct scic_sds_io_request_state_handler scic_sds_stp_request_start
 };
 
 static void scic_sds_stp_request_started_soft_reset_await_h2d_asserted_completion_enter(
-	struct sci_base_object *object)
+	void *object)
 {
 	struct scic_sds_request *sci_req = (struct scic_sds_request *)object;
 
@@ -1748,7 +1746,7 @@ static void scic_sds_stp_request_started_soft_reset_await_h2d_asserted_completio
 }
 
 static void scic_sds_stp_request_started_soft_reset_await_h2d_diagnostic_completion_enter(
-	struct sci_base_object *object)
+	void *object)
 {
 	struct scic_sds_request *sci_req = (struct scic_sds_request *)object;
 	struct scu_task_context *task_context;
@@ -1775,7 +1773,7 @@ static void scic_sds_stp_request_started_soft_reset_await_h2d_diagnostic_complet
 }
 
 static void scic_sds_stp_request_started_soft_reset_await_d2h_response_enter(
-	struct sci_base_object *object)
+	void *object)
 {
 	struct scic_sds_request *sci_req = (struct scic_sds_request *)object;
 
diff --git a/drivers/scsi/isci/remote_device.c b/drivers/scsi/isci/remote_device.c
index 6d5ab72..b23f9a5 100644
--- a/drivers/scsi/isci/remote_device.c
+++ b/drivers/scsi/isci/remote_device.c
@@ -1099,8 +1099,7 @@ static const struct scic_sds_remote_device_state_handler scic_sds_remote_device_
 	}
 };
 
-static void scic_sds_remote_device_initial_state_enter(
-	struct sci_base_object *object)
+static void scic_sds_remote_device_initial_state_enter(void *object)
 {
 	struct scic_sds_remote_device *sci_dev = (struct scic_sds_remote_device *)object;
 
@@ -1202,8 +1201,7 @@ static void isci_remote_device_stop_complete(struct isci_host *ihost,
 	isci_remote_device_deconstruct(ihost, idev);
 }
 
-static void scic_sds_remote_device_stopped_state_enter(
-	struct sci_base_object *object)
+static void scic_sds_remote_device_stopped_state_enter(void *object)
 {
 	struct scic_sds_remote_device *sci_dev;
 	struct scic_sds_controller *scic;
@@ -1229,7 +1227,7 @@ static void scic_sds_remote_device_stopped_state_enter(
 	scic_sds_controller_remote_device_stopped(scic, sci_dev);
 }
 
-static void scic_sds_remote_device_starting_state_enter(struct sci_base_object *object)
+static void scic_sds_remote_device_starting_state_enter(void *object)
 {
 	struct scic_sds_remote_device *sci_dev = container_of(object, typeof(*sci_dev),
 							      parent);
@@ -1244,7 +1242,7 @@ static void scic_sds_remote_device_starting_state_enter(struct sci_base_object *
 				     SCIC_REMOTE_DEVICE_NOT_READY_START_REQUESTED);
 }
 
-static void scic_sds_remote_device_ready_state_enter(struct sci_base_object *object)
+static void scic_sds_remote_device_ready_state_enter(void *object)
 {
 	struct scic_sds_remote_device *sci_dev = container_of(object, typeof(*sci_dev),
 							      parent);
@@ -1264,8 +1262,7 @@ static void scic_sds_remote_device_ready_state_enter(struct sci_base_object *obj
 		isci_remote_device_ready(ihost, idev);
 }
 
-static void scic_sds_remote_device_ready_state_exit(
-	struct sci_base_object *object)
+static void scic_sds_remote_device_ready_state_exit(void *object)
 {
 	struct scic_sds_remote_device *sci_dev = container_of(object, typeof(*sci_dev),
 							      parent);
@@ -1281,8 +1278,7 @@ static void scic_sds_remote_device_ready_state_exit(
 	}
 }
 
-static void scic_sds_remote_device_stopping_state_enter(
-	struct sci_base_object *object)
+static void scic_sds_remote_device_stopping_state_enter(void *object)
 {
 	struct scic_sds_remote_device *sci_dev = (struct scic_sds_remote_device *)object;
 
@@ -1293,8 +1289,7 @@ static void scic_sds_remote_device_stopping_state_enter(
 		);
 }
 
-static void scic_sds_remote_device_failed_state_enter(
-	struct sci_base_object *object)
+static void scic_sds_remote_device_failed_state_enter(void *object)
 {
 	struct scic_sds_remote_device *sci_dev = (struct scic_sds_remote_device *)object;
 
@@ -1305,8 +1300,7 @@ static void scic_sds_remote_device_failed_state_enter(
 		);
 }
 
-static void scic_sds_remote_device_resetting_state_enter(
-	struct sci_base_object *object)
+static void scic_sds_remote_device_resetting_state_enter(void *object)
 {
 	struct scic_sds_remote_device *sci_dev = (struct scic_sds_remote_device *)object;
 
@@ -1320,16 +1314,14 @@ static void scic_sds_remote_device_resetting_state_enter(
 		&sci_dev->rnc, SCI_SOFTWARE_SUSPENSION, NULL, NULL);
 }
 
-static void scic_sds_remote_device_resetting_state_exit(
-	struct sci_base_object *object)
+static void scic_sds_remote_device_resetting_state_exit(void *object)
 {
 	struct scic_sds_remote_device *sci_dev = (struct scic_sds_remote_device *)object;
 
 	scic_sds_remote_node_context_resume(&sci_dev->rnc, NULL, NULL);
 }
 
-static void scic_sds_remote_device_final_state_enter(
-	struct sci_base_object *object)
+static void scic_sds_remote_device_final_state_enter(void *object)
 {
 	struct scic_sds_remote_device *sci_dev = (struct scic_sds_remote_device *)object;
 
diff --git a/drivers/scsi/isci/remote_node_context.c b/drivers/scsi/isci/remote_node_context.c
index 291df19..bc51ecf 100644
--- a/drivers/scsi/isci/remote_node_context.c
+++ b/drivers/scsi/isci/remote_node_context.c
@@ -970,8 +970,7 @@ static void scic_sds_remote_node_context_invalidate_context_buffer(
  *
  *
  */
-static void scic_sds_remote_node_context_initial_state_enter(
-	struct sci_base_object *object)
+static void scic_sds_remote_node_context_initial_state_enter(void *object)
 {
 	struct scic_sds_remote_node_context *rnc;
 
@@ -1001,8 +1000,7 @@ static void scic_sds_remote_node_context_initial_state_enter(
  *
  *
  */
-static void scic_sds_remote_node_context_posting_state_enter(
-	struct sci_base_object *object)
+static void scic_sds_remote_node_context_posting_state_enter(void *object)
 {
 	struct scic_sds_remote_node_context *sci_rnc;
 
@@ -1022,8 +1020,7 @@ static void scic_sds_remote_node_context_posting_state_enter(
  *
  *
  */
-static void scic_sds_remote_node_context_invalidating_state_enter(
-	struct sci_base_object *object)
+static void scic_sds_remote_node_context_invalidating_state_enter(void *object)
 {
 	struct scic_sds_remote_node_context *rnc;
 
@@ -1043,8 +1040,7 @@ static void scic_sds_remote_node_context_invalidating_state_enter(
  *
  *
  */
-static void scic_sds_remote_node_context_resuming_state_enter(
-	struct sci_base_object *object)
+static void scic_sds_remote_node_context_resuming_state_enter(void *object)
 {
 	struct scic_sds_remote_node_context *rnc;
 	struct scic_sds_remote_device *sci_dev;
@@ -1079,8 +1075,7 @@ static void scic_sds_remote_node_context_resuming_state_enter(
  *
  *
  */
-static void scic_sds_remote_node_context_ready_state_enter(
-	struct sci_base_object *object)
+static void scic_sds_remote_node_context_ready_state_enter(void *object)
 {
 	struct scic_sds_remote_node_context *rnc;
 
@@ -1104,8 +1099,7 @@ static void scic_sds_remote_node_context_ready_state_enter(
  *
  *
  */
-static void scic_sds_remote_node_context_tx_suspended_state_enter(
-	struct sci_base_object *object)
+static void scic_sds_remote_node_context_tx_suspended_state_enter(void *object)
 {
 	struct scic_sds_remote_node_context *rnc;
 
@@ -1126,7 +1120,7 @@ static void scic_sds_remote_node_context_tx_suspended_state_enter(
  *
  */
 static void scic_sds_remote_node_context_tx_rx_suspended_state_enter(
-	struct sci_base_object *object)
+		void *object)
 {
 	struct scic_sds_remote_node_context *rnc;
 
@@ -1147,7 +1141,7 @@ static void scic_sds_remote_node_context_tx_rx_suspended_state_enter(
  *
  */
 static void scic_sds_remote_node_context_await_suspension_state_enter(
-	struct sci_base_object *object)
+	void *object)
 {
 	struct scic_sds_remote_node_context *rnc;
 
diff --git a/drivers/scsi/isci/smp_remote_device.c b/drivers/scsi/isci/smp_remote_device.c
index 718ddaf..a38dc90 100644
--- a/drivers/scsi/isci/smp_remote_device.c
+++ b/drivers/scsi/isci/smp_remote_device.c
@@ -237,14 +237,14 @@ static const struct scic_sds_remote_device_state_handler scic_sds_smp_remote_dev
 
 /**
  *
- * @object: This is the struct sci_base_object which is cast into a
+ * @object: This is the object which is cast into a
  *    struct scic_sds_remote_device.
  *
  * This is the SCIC_SDS_SMP_REMOTE_DEVICE_READY_SUBSTATE_IDLE enter method.
  * This function sets the ready cmd substate handlers and reports the device as
  * ready. none
  */
-static void scic_sds_smp_remote_device_ready_idle_substate_enter(struct sci_base_object *object)
+static void scic_sds_smp_remote_device_ready_idle_substate_enter(void *object)
 {
 	struct scic_sds_remote_device *sci_dev = container_of(object, typeof(*sci_dev),
 							      parent);
@@ -261,15 +261,14 @@ static void scic_sds_smp_remote_device_ready_idle_substate_enter(struct sci_base
 
 /**
  *
- * @object: This is the struct sci_base_object which is cast into a
+ * @object: This is the object which is cast into a
  *    struct scic_sds_remote_device.
  *
  * This is the SCIC_SDS_SMP_REMOTE_DEVICE_READY_SUBSTATE_CMD enter method. This
  * function sets the remote device objects ready cmd substate handlers, and
  * notify core user that the device is not ready. none
  */
-static void scic_sds_smp_remote_device_ready_cmd_substate_enter(
-	struct sci_base_object *object)
+static void scic_sds_smp_remote_device_ready_cmd_substate_enter(void *object)
 {
 	struct scic_sds_remote_device *sci_dev = container_of(object, typeof(*sci_dev),
 							      parent);
@@ -289,12 +288,12 @@ static void scic_sds_smp_remote_device_ready_cmd_substate_enter(
 
 /**
  *
- * @object: This is the struct sci_base_object which is cast into a
+ * @object: This is the object which is cast into a
  *    struct scic_sds_remote_device.
  *
  * This is the SCIC_SDS_SSP_REMOTE_DEVICE_READY_SUBSTATE_CMD exit method. none
  */
-static void scic_sds_smp_remote_device_ready_cmd_substate_exit(struct sci_base_object *object)
+static void scic_sds_smp_remote_device_ready_cmd_substate_exit(void *object)
 {
 	struct scic_sds_remote_device *sci_dev = container_of(object, typeof(*sci_dev),
 							      parent);
diff --git a/drivers/scsi/isci/stp_remote_device.c b/drivers/scsi/isci/stp_remote_device.c
index 0fbfe52..1e6f773 100644
--- a/drivers/scsi/isci/stp_remote_device.c
+++ b/drivers/scsi/isci/stp_remote_device.c
@@ -601,12 +601,11 @@ scic_sds_stp_remote_device_ready_idle_substate_resume_complete_handler(void *use
 
 /**
  *
- * @device: This is the SCI base object which is cast into a
+ * @device: This is the object which is cast into a
  *    struct scic_sds_remote_device object.
  *
  */
-static void scic_sds_stp_remote_device_ready_idle_substate_enter(
-	struct sci_base_object *device)
+static void scic_sds_stp_remote_device_ready_idle_substate_enter(void *device)
 {
 	struct scic_sds_remote_device *sci_dev;
 
@@ -635,7 +634,7 @@ static void scic_sds_stp_remote_device_ready_idle_substate_enter(
 	}
 }
 
-static void scic_sds_stp_remote_device_ready_cmd_substate_enter(struct sci_base_object *object)
+static void scic_sds_stp_remote_device_ready_cmd_substate_enter(void *object)
 {
 	struct scic_sds_remote_device *sci_dev = container_of(object, typeof(*sci_dev),
 							      parent);
@@ -653,7 +652,7 @@ static void scic_sds_stp_remote_device_ready_cmd_substate_enter(struct sci_base_
 				     SCIC_REMOTE_DEVICE_NOT_READY_SATA_REQUEST_STARTED);
 }
 
-static void scic_sds_stp_remote_device_ready_ncq_substate_enter(struct sci_base_object *object)
+static void scic_sds_stp_remote_device_ready_ncq_substate_enter(void *object)
 {
 	struct scic_sds_remote_device *sci_dev = container_of(object, typeof(*sci_dev),
 							      parent);
@@ -662,7 +661,8 @@ static void scic_sds_stp_remote_device_ready_ncq_substate_enter(struct sci_base_
 			  SCIC_SDS_STP_REMOTE_DEVICE_READY_SUBSTATE_NCQ);
 }
 
-static void scic_sds_stp_remote_device_ready_ncq_error_substate_enter(struct sci_base_object *object)
+static void scic_sds_stp_remote_device_ready_ncq_error_substate_enter(
+		void *object)
 {
 	struct scic_sds_remote_device *sci_dev = container_of(object, typeof(*sci_dev),
 							      parent);
@@ -686,12 +686,12 @@ static void scic_sds_stp_remote_device_ready_ncq_error_substate_enter(struct sci
 
 /**
  * The enter routine to READY AWAIT RESET substate.
- * @device: This is the SCI base object which is cast into a
+ * @device: This is the object which is cast into a
  *    struct scic_sds_remote_device object.
  *
  */
 static void scic_sds_stp_remote_device_ready_await_reset_substate_enter(
-	struct sci_base_object *device)
+	void *device)
 {
 	struct scic_sds_remote_device *sci_dev;
 
-- 
1.6.0.2

