From: Mark Rustad <mark.d.rustad@intel.com>
Date: Tue, 18 Mar 2014 07:03:35 +0000
Subject: ixgbevf: Change ixgbe_read_reg to ixgbevf_read_reg
Patch-mainline: v3.15-rc1
Git-commit: 32c74949b4e37f80ab74d9b497ffb3749cfcb85a
References: bug#909488 FATE#317387

Change the ixgbe_read_reg function name to ixgbevf_read_reg to
avoid a namespace clash with the ixgbe driver. This will allow
ixgbe to take its register read function out-of-line to reduce
memory footprint.

Signed-off-by: Mark Rustad <mark.d.rustad@intel.com>
Tested-by: Phil Schmitt <phillip.j.schmitt@intel.com>
Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
Acked-by: Benjamin Poirier <bpoirier@suse.de>
---
 drivers/net/ethernet/intel/ixgbevf/ethtool.c      |    8 ++++----
 drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c |    4 ++--
 drivers/net/ethernet/intel/ixgbevf/vf.h           |    6 +++---
 3 files changed, 9 insertions(+), 9 deletions(-)

--- a/drivers/net/ethernet/intel/ixgbevf/ethtool.c
+++ b/drivers/net/ethernet/intel/ixgbevf/ethtool.c
@@ -540,10 +540,10 @@ static bool reg_pattern_test(struct ixgb
 		return true;
 	}
 	for (pat = 0; pat < ARRAY_SIZE(register_test_patterns); pat++) {
-		before = ixgbe_read_reg(&adapter->hw, reg);
+		before = ixgbevf_read_reg(&adapter->hw, reg);
 		ixgbe_write_reg(&adapter->hw, reg,
 				register_test_patterns[pat] & write);
-		val = ixgbe_read_reg(&adapter->hw, reg);
+		val = ixgbevf_read_reg(&adapter->hw, reg);
 		if (val != (register_test_patterns[pat] & write & mask)) {
 			hw_dbg(&adapter->hw,
 			       "pattern test reg %04X failed: got 0x%08X expected 0x%08X\n",
@@ -567,9 +567,9 @@ static bool reg_set_and_check(struct ixg
 		*data = 1;
 		return true;
 	}
-	before = ixgbe_read_reg(&adapter->hw, reg);
+	before = ixgbevf_read_reg(&adapter->hw, reg);
 	ixgbe_write_reg(&adapter->hw, reg, write & mask);
-	val = ixgbe_read_reg(&adapter->hw, reg);
+	val = ixgbevf_read_reg(&adapter->hw, reg);
 	if ((write & mask) != (val & mask)) {
 		pr_err("set/check reg %04X test failed: got 0x%08X expected 0x%08X\n",
 		       reg, (val & mask), write & mask);
--- a/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c
+++ b/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c
@@ -123,12 +123,12 @@ static void ixgbevf_check_remove(struct
 		ixgbevf_remove_adapter(hw);
 		return;
 	}
-	value = ixgbe_read_reg(hw, IXGBE_VFSTATUS);
+	value = ixgbevf_read_reg(hw, IXGBE_VFSTATUS);
 	if (value == IXGBE_FAILED_READ_REG)
 		ixgbevf_remove_adapter(hw);
 }
 
-u32 ixgbe_read_reg(struct ixgbe_hw *hw, u32 reg)
+u32 ixgbevf_read_reg(struct ixgbe_hw *hw, u32 reg)
 {
 	u8 __iomem *reg_addr = ACCESS_ONCE(hw->hw_addr);
 	u32 value;
--- a/drivers/net/ethernet/intel/ixgbevf/vf.h
+++ b/drivers/net/ethernet/intel/ixgbevf/vf.h
@@ -186,8 +186,8 @@ static inline void ixgbe_write_reg(struc
 }
 #define IXGBE_WRITE_REG(h, r, v) ixgbe_write_reg(h, r, v)
 
-u32 ixgbe_read_reg(struct ixgbe_hw *hw, u32 reg);
-#define IXGBE_READ_REG(h, r) ixgbe_read_reg(h, r)
+u32 ixgbevf_read_reg(struct ixgbe_hw *hw, u32 reg);
+#define IXGBE_READ_REG(h, r) ixgbevf_read_reg(h, r)
 
 static inline void ixgbe_write_reg_array(struct ixgbe_hw *hw, u32 reg,
 					  u32 offset, u32 value)
@@ -199,7 +199,7 @@ static inline void ixgbe_write_reg_array
 static inline u32 ixgbe_read_reg_array(struct ixgbe_hw *hw, u32 reg,
 					u32 offset)
 {
-	return ixgbe_read_reg(hw, reg + (offset << 2));
+	return ixgbevf_read_reg(hw, reg + (offset << 2));
 }
 #define IXGBE_READ_REG_ARRAY(h, r, o) ixgbe_read_reg_array(h, r, o)
 
