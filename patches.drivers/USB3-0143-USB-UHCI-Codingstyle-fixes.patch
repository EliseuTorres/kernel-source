From e4d235d800c8d75750a46331298e3473c10651b2 Mon Sep 17 00:00:00 2001
From: Jan Andersson <jan@gaisler.com>
Date: Fri, 6 May 2011 12:00:14 +0200
Subject: USB: UHCI: Codingstyle fixes
Patch-mainline: v3.0
Git-commit: e4d235d800c8d75750a46331298e3473c10651b2

This patch is part of a series that extend the UHCI HCD to support
non-PCI host controllers.

This patch fixes the following warnings from checkpatch:

ERROR: switch and case should be at the same indent
+   switch (to_pci_dev(uhci_dev(uhci))->vendor) {
+       default:
[...]
+       case PCI_VENDOR_ID_GENESYS:
[...]
+       case PCI_VENDOR_ID_INTEL:

WARNING: static char array declaration should probably be static const char
+   static char bad_Asus_board[] = "A7V8X";

WARNING: Use DEFINE_PCI_DEVICE_TABLE for struct pci_device_id
+static const struct pci_device_id uhci_pci_ids[] = { {

Signed-off-by: Jan Andersson <jan@gaisler.com>
Acked-by: Alan Stern <stern@rowland.harvard.edu>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/usb/host/uhci-hcd.c |   10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

--- a/drivers/usb/host/uhci-hcd.c
+++ b/drivers/usb/host/uhci-hcd.c
@@ -223,16 +223,16 @@ static int uhci_pci_resume_detect_interr
 	int port;
 
 	switch (to_pci_dev(uhci_dev(uhci))->vendor) {
-	    default:
+	default:
 		break;
 
-	    case PCI_VENDOR_ID_GENESYS:
+	case PCI_VENDOR_ID_GENESYS:
 		/* Genesys Logic's GL880S controllers don't generate
 		 * resume-detect interrupts.
 		 */
 		return 1;
 
-	    case PCI_VENDOR_ID_INTEL:
+	case PCI_VENDOR_ID_INTEL:
 		/* Some of Intel's USB controllers have a bug that causes
 		 * resume-detect interrupts if any port has an over-current
 		 * condition.  To make matters worse, some motherboards
@@ -265,7 +265,7 @@ static int uhci_pci_global_suspend_mode_
 {
 	int port;
 	const char *sys_info;
-	static char bad_Asus_board[] = "A7V8X";
+	static const char bad_Asus_board[] = "A7V8X";
 
 	/* One of Asus's motherboards has a bug which causes it to
 	 * wake up immediately from suspend-to-RAM if any of the ports
@@ -994,7 +994,7 @@ static const struct hc_driver uhci_drive
 	.hub_control =		uhci_hub_control,
 };
 
-static const struct pci_device_id uhci_pci_ids[] = { {
+static DEFINE_PCI_DEVICE_TABLE(uhci_pci_ids) = { {
 	/* handle any USB UHCI controller */
 	PCI_DEVICE_CLASS(PCI_CLASS_SERIAL_USB_UHCI, ~0),
 	.driver_data =	(unsigned long) &uhci_driver,
