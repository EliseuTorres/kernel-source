From: Hiral Patel <hiralpat@cisco.com>
Date: Wed, 20 Feb 2013 19:34:44 -0800
Subject: fnic: Fix memory leak issue in Vlan Discovery
References: bnc#805099
Git-commit: c954f8aed44686569347087a57c75c590ce2782d
Patch-Mainline: Submitted to linux-scsi

As a part of VLAN Discovery feature addition, vlan response fc
packet received from the switch was consumed internally by the
driver and wasn't passed on to the FCOE layer. This consumed FC
packet had to be released/freed on completion of the processing,
which was missed out. Also on detection of flogi rejects we had
to trigger a vlan discovery. So to detect the flogi rejects code
added had missed out to free eth frames.

Signed-off-by: Anantha Prakash T <atungara@cisco.com>
Signed-off-by: Hiral Patel <hiralpat@cisco.com>
Acked-by: Hannes Reinecke <hare@suse.de>

diff --git a/drivers/scsi/fnic/fnic_fcs.c b/drivers/scsi/fnic/fnic_fcs.c
index d1cc7a4..0ae09bb 100644
--- a/drivers/scsi/fnic/fnic_fcs.c
+++ b/drivers/scsi/fnic/fnic_fcs.c
@@ -526,10 +526,8 @@ int fnic_fcoe_handle_fip_frame(struct fnic *fnic, struct sk_buff *skb)
 		/* pass it on to fcoe */
 		ret = 1;
 	}
-	return ret;
 drop:
-	dev_kfree_skb_irq(skb);
-	return -1;
+	return ret;
 }
 
 void fnic_handle_fip_frame(struct work_struct *work)
@@ -560,8 +558,10 @@ void fnic_handle_fip_frame(struct work_struct *work)
 		eh = (struct ethhdr *)skb->data;
 		if (eh->h_proto == htons(ETH_P_FIP)) {
 			skb_pull(skb, sizeof(*eh));
-			if (fnic_fcoe_handle_fip_frame(fnic, skb) <= 0)
+			if (fnic_fcoe_handle_fip_frame(fnic, skb) <= 0) {
+				dev_kfree_skb(skb);
 				continue;
+			}
 			/*
 			 * If there's FLOGI rejects - clear all
 			 * fcf's & restart from scratch
@@ -572,6 +572,7 @@ void fnic_handle_fip_frame(struct work_struct *work)
 				fcoe_ctlr_link_down(&fnic->ctlr);
 				/* start FCoE VLAN discovery */
 				fnic_fcoe_send_vlan_req(fnic);
+				dev_kfree_skb(skb);
 				continue;
 			}
 			fcoe_ctlr_recv(&fnic->ctlr, skb);
