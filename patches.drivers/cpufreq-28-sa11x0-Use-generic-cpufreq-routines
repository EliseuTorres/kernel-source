From: Viresh Kumar <viresh.kumar@linaro.org>
Subject: cpufreq: sa11x0: Use generic cpufreq routines
Git-commit: dd9f263956727320a2bcba8ffae7e9ab4a5be8a6
Patch-mainline: v3.13-rc1
References: bnc#885934,bnc#878240

 cpufreq: sa11x0: Use generic cpufreq routines

Most of the CPUFreq drivers do similar things in .exit() and .verify() routines
and .attr. So its better if we have generic routines for them which can be used
by cpufreq drivers then.

This patch uses these generic routines in the sa11x0 driver.

Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Acked-by: Torsten Duwe <duwe@suse.de>

Index: linux-3.12-SLE12/arch/arm/mach-sa1100/generic.h
===================================================================
--- linux-3.12-SLE12.orig/arch/arm/mach-sa1100/generic.h
+++ linux-3.12-SLE12/arch/arm/mach-sa1100/generic.h
@@ -22,7 +22,6 @@ extern void sa1110_mb_disable(void);
 struct cpufreq_policy;
 
 extern unsigned int sa11x0_freq_to_ppcr(unsigned int khz);
-extern int sa11x0_verify_speed(struct cpufreq_policy *policy);
 extern unsigned int sa11x0_getspeed(unsigned int cpu);
 extern unsigned int sa11x0_ppcr_to_freq(unsigned int idx);
 
Index: linux-3.12-SLE12/drivers/cpufreq/sa1100-cpufreq.c
===================================================================
--- linux-3.12-SLE12.orig/drivers/cpufreq/sa1100-cpufreq.c
+++ linux-3.12-SLE12/drivers/cpufreq/sa1100-cpufreq.c
@@ -229,7 +229,7 @@ static int __init sa1100_cpu_init(struct
 
 static struct cpufreq_driver sa1100_driver __refdata = {
 	.flags		= CPUFREQ_STICKY,
-	.verify		= sa11x0_verify_speed,
+	.verify		= cpufreq_generic_frequency_table_verify,
 	.target		= sa1100_target,
 	.get		= sa11x0_getspeed,
 	.init		= sa1100_cpu_init,
Index: linux-3.12-SLE12/drivers/cpufreq/sa1110-cpufreq.c
===================================================================
--- linux-3.12-SLE12.orig/drivers/cpufreq/sa1110-cpufreq.c
+++ linux-3.12-SLE12/drivers/cpufreq/sa1110-cpufreq.c
@@ -345,7 +345,7 @@ static int __init sa1110_cpu_init(struct
  * it with cpufreq_register_driver() */
 static struct cpufreq_driver sa1110_driver __refdata = {
 	.flags		= CPUFREQ_STICKY,
-	.verify		= sa11x0_verify_speed,
+	.verify		= cpufreq_generic_frequency_table_verify,
 	.target		= sa1110_target,
 	.get		= sa11x0_getspeed,
 	.init		= sa1110_cpu_init,
