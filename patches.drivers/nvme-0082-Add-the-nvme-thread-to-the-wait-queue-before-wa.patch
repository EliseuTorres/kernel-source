From: Matthew Wilcox <matthew.r.wilcox@intel.com>
Date: Fri, 20 May 2011 09:34:43 -0400
Subject: NVMe: Add the nvme thread to the wait queue before waking it up
Git-commit: eac623ba7a91474a688eb5d0fcd0eaa6a56dc41c
References: FATE#313627
Patch-Mainline: v3.7-rc1

If the I/O was not completed by a single NVMe command, we add the
bio to the congestion list and wake up the kthread to resubmit it.
But the kthread calls remove_wait_queue() unconditionally, which
will oops if it's not on the wait queue.  So add the kthread to
the wait queue before waking it up.

Signed-off-by: Matthew Wilcox <matthew.r.wilcox@intel.com>
Acked-by: Hannes Reinecke <hare@suse.de>
---
 drivers/block/nvme.c |    2 ++
 1 files changed, 2 insertions(+), 0 deletions(-)

diff --git a/drivers/block/nvme.c b/drivers/block/nvme.c
index 843edbd..f5e51a6 100644
--- a/drivers/block/nvme.c
+++ b/drivers/block/nvme.c
@@ -325,6 +325,8 @@ static void bio_completion(struct nvme_queue *nvmeq, void *ctx,
 	if (status) {
 		bio_endio(bio, -EIO);
 	} else if (bio->bi_vcnt > bio->bi_idx) {
+		if (bio_list_empty(&nvmeq->sq_cong))
+			add_wait_queue(&nvmeq->sq_full, &nvmeq->sq_cong_wait);
 		bio_list_add(&nvmeq->sq_cong, bio);
 		wake_up_process(nvme_thread);
 	} else {
-- 
1.7.4.2

