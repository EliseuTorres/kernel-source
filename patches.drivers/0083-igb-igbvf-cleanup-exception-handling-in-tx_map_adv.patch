From: Alexander Duyck <alexander.h.duyck@intel.com>
Date: Sat, 23 Jan 2010 01:35:00 -0800
Subject: igb/igbvf: cleanup exception handling in tx_map_adv
References: FATE#311863 ,bnc#699089
Patch-mainline: v2.6.33-rc6
Git-commit: 8581145f39c39b00cd1b6a2dcb4ce5bf7d8d6070

After removing the skb_dma_map/unmap calls the exception handling in
igb_tx_map_adv is not correct.  The issue is that the count value was not
being correctly handled so as a result we were not rewinding the ring as
back as we should have been.

Signed-off-by: Alexander Duyck <alexander.h.duyck@intel.com>
Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
Acked-by: David Chang <dchang@suse.com>
---
 drivers/net/igb/igb_main.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

--- a/drivers/net/igb/igb_main.c
+++ b/drivers/net/igb/igb_main.c
@@ -3558,6 +3558,7 @@ static inline int igb_tx_map_adv(struct
 	for (f = 0; f < skb_shinfo(skb)->nr_frags; f++) {
 		struct skb_frag_struct *frag;
 
+		count++;
 		i++;
 		if (i == tx_ring->count)
 			i = 0;
@@ -3579,7 +3580,6 @@ static inline int igb_tx_map_adv(struct
 		if (pci_dma_mapping_error(pdev, buffer_info->dma))
 			goto dma_error;
 
-		count++;
 	}
 
 	tx_ring->buffer_info[i].skb = skb;
