From sgruszka@redhat.com  Thu Jun 23 16:09:51 2011
From: Stanislaw Gruszka <sgruszka@redhat.com>
Date: Tue, 9 Mar 2010 06:55:00 +0000
Subject: [PATCH 017/151] bnx2x: use smp_mb() to keep ordering of read write
 operations
Git-commit: 2d99cf16f42b1979a2c498bb6d09498dbd689978
Patch-mainline: v2.6.34-rc2
References: FATE#311458 FATE#311459 FATE#311460 FATE#311461 FATE#311462 bnc#698050

Upstream commit: 2d99cf16f42b1979a2c498bb6d09498dbd689978

Since we want to keep ordering of write to fp->bd_tx_cons and
netif_tx_queue_stopped(txq), what is read of txq->state, we have to use
general memory barrier.

Signed-off-by: Stanislaw Gruszka <sgruszka@redhat.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
Acked-by: Jeff Mahoney <jeffm@suse.com>
---
 drivers/net/bnx2x_main.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/drivers/net/bnx2x_main.c b/drivers/net/bnx2x_main.c
index 0e123ce..d1702b5 100644
--- a/drivers/net/bnx2x_main.c
+++ b/drivers/net/bnx2x_main.c
@@ -962,7 +962,7 @@ static int bnx2x_tx_int(struct bnx2x_fastpath *fp)
 	 * start_xmit() will miss it and cause the queue to be stopped
 	 * forever.
 	 */
-	smp_wmb();
+	smp_mb();
 
 	/* TBD need a thresh? */
 	if (unlikely(netif_tx_queue_stopped(txq))) {
-- 
1.6.4.GIT

