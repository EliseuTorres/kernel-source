From: Eric Dumazet <eric.dumazet@gmail.com>
Date: Mon Jul 11 20:08:34 2011 -0700
Subject: net: introduce __netdev_alloc_skb_ip_align
References: fate#314400
Patch-mainline: v3.1
Git-commit: 4915a0de43c3e9aef92005c1f94a8ff3a6cfced5

RX rings should use GFP_KERNEL allocations if possible, add
__netdev_alloc_skb_ip_align() helper to ease this.

Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
Acked-by: Bo Yang <boyang@suse.com>
Acked-by: Bruce Rogers <brogers@suse.com>

Index: b/include/linux/skbuff.h
===================================================================
--- a/include/linux/skbuff.h
+++ b/include/linux/skbuff.h
@@ -1599,16 +1599,22 @@ static inline struct sk_buff *netdev_all
 	return __netdev_alloc_skb(dev, length, GFP_ATOMIC);
 }
 
-static inline struct sk_buff *netdev_alloc_skb_ip_align(struct net_device *dev,
-		unsigned int length)
+static inline struct sk_buff *__netdev_alloc_skb_ip_align(struct net_device *dev,
+		unsigned int length, gfp_t gfp)
 {
-	struct sk_buff *skb = netdev_alloc_skb(dev, length + NET_IP_ALIGN);
+	struct sk_buff *skb = __netdev_alloc_skb(dev, length + NET_IP_ALIGN, gfp);
 
 	if (NET_IP_ALIGN && skb)
 		skb_reserve(skb, NET_IP_ALIGN);
 	return skb;
 }
 
+static inline struct sk_buff *netdev_alloc_skb_ip_align(struct net_device *dev,
+		unsigned int length)
+{
+	return __netdev_alloc_skb_ip_align(dev, length, GFP_ATOMIC);
+}
+
 static inline void netdev_free_page(struct net_device *dev, struct page *page)
 {
 	__free_page(page);
