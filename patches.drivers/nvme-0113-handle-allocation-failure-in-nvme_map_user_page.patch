From: Dan Carpenter <dan.carpenter@oracle.com>
Date: Fri, 20 Jan 2012 07:55:30 -0500
Subject: NVMe: handle allocation failure in nvme_map_user_pages()
Git-commit: 22fff826e715e9727d3c7a69f15e602a9801b673
References: FATE#313627
Patch-Mainline: v3.7-rc1

We should return here and avoid a NULL dereference.

Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
Signed-off-by: Matthew Wilcox <matthew.r.wilcox@intel.com>
Acked-by: Hannes Reinecke <hare@suse.de>
---
 drivers/block/nvme.c |    2 ++
 1 files changed, 2 insertions(+), 0 deletions(-)

diff --git a/drivers/block/nvme.c b/drivers/block/nvme.c
index 899f489..cfe9278 100644
--- a/drivers/block/nvme.c
+++ b/drivers/block/nvme.c
@@ -1043,6 +1043,8 @@ static struct nvme_iod *nvme_map_user_pages(struct nvme_dev *dev, int write,
 	offset = offset_in_page(addr);
 	count = DIV_ROUND_UP(offset + length, PAGE_SIZE);
 	pages = kcalloc(count, sizeof(*pages), GFP_KERNEL);
+	if (!pages)
+		return ERR_PTR(-ENOMEM);
 
 	err = get_user_pages_fast(addr, count, 1, pages);
 	if (err < count) {
-- 
1.7.4.2

