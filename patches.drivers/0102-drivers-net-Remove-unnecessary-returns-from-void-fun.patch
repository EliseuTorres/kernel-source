From: Joe Perches <joe@perches.com>
Date: Fri, 14 May 2010 00:19:28 -0700
Subject: drivers/net: Remove unnecessary returns from void function()s
References: bnc#699092, fate#311825
Patch-mainline: v2.6.35
Git-commit: a4b770972b8f819e408d7cc3ae9637e15bff62f6

This patch removes from drivers/net/ all the unnecessary
return; statements that precede the last closing brace of
void functions.

It does not remove the returns that are immediately
preceded by a label as gcc doesn't like that.

It also does not remove null void functions with return.

Done via:
$ grep -rP --include=*.[ch] -l "return;\n}" net/ | \
  xargs perl -i -e 'local $/ ; while (<>) { s/\n[ \t\n]+return;\n}/\n}/g; print; }'

with some cleanups by hand.

Compile tested x86 allmodconfig only.

Signed-off-by: Joe Perches <joe@perches.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
Acked-by: Cho, Yu-Chen <acho@suse.com>
---
 drivers/net/e1000e/82571.c   |    4 ----
 drivers/net/e1000e/es2lan.c  |    2 --
 drivers/net/e1000e/ich8lan.c |   10 ----------
 drivers/net/e1000e/netdev.c  |    4 ----
 4 files changed, 20 deletions(-)

--- a/drivers/net/e1000e/82571.c
+++ b/drivers/net/e1000e/82571.c
@@ -1148,8 +1148,6 @@ static void e1000_initialize_hw_bits_825
 	default:
 		break;
 	}
-
-	return;
 }
 
 /**
@@ -1653,8 +1651,6 @@ static void e1000_power_down_phy_copper_
 	/* If the management interface is not enabled, then power down */
 	if (!(mac->ops.check_mng_mode(hw) || phy->ops.check_reset_block(hw)))
 		e1000_power_down_phy_copper(hw);
-
-	return;
 }
 
 /**
--- a/drivers/net/e1000e/es2lan.c
+++ b/drivers/net/e1000e/es2lan.c
@@ -1383,8 +1383,6 @@ static void e1000_power_down_phy_copper_
 	if (!(hw->mac.ops.check_mng_mode(hw) ||
 	      hw->phy.ops.check_reset_block(hw)))
 		e1000_power_down_phy_copper(hw);
-
-	return;
 }
 
 /**
--- a/drivers/net/e1000e/ich8lan.c
+++ b/drivers/net/e1000e/ich8lan.c
@@ -700,8 +700,6 @@ static s32 e1000_acquire_nvm_ich8lan(str
 static void e1000_release_nvm_ich8lan(struct e1000_hw *hw)
 {
 	mutex_unlock(&nvm_mutex);
-
-	return;
 }
 
 static DEFINE_MUTEX(swflag_mutex);
@@ -780,8 +778,6 @@ static void e1000_release_swflag_ich8lan
 	ew32(EXTCNF_CTRL, extcnf_ctrl);
 
 	mutex_unlock(&swflag_mutex);
-
-	return;
 }
 
 /**
@@ -2765,8 +2761,6 @@ static void e1000_initialize_hw_bits_ich
 	reg = er32(RFCTL);
 	reg |= (E1000_RFCTL_NFSW_DIS | E1000_RFCTL_NFSR_DIS);
 	ew32(RFCTL, reg);
-
-	return;
 }
 
 /**
@@ -3146,8 +3140,6 @@ void e1000e_disable_gig_wol_ich8lan(stru
 	default:
 		break;
 	}
-
-	return;
 }
 
 /**
@@ -3356,8 +3348,6 @@ static void e1000_power_down_phy_copper_
 	if (!(hw->mac.ops.check_mng_mode(hw) ||
 	      hw->phy.ops.check_reset_block(hw)))
 		e1000_power_down_phy_copper(hw);
-
-	return;
 }
 
 /**
--- a/drivers/net/e1000e/netdev.c
+++ b/drivers/net/e1000e/netdev.c
@@ -1763,8 +1763,6 @@ void e1000e_reset_interrupt_capability(s
 		pci_disable_msi(adapter->pdev);
 		adapter->flags &= ~FLAG_MSI_ENABLED;
 	}
-
-	return;
 }
 
 /**
@@ -1816,8 +1814,6 @@ void e1000e_set_interrupt_capability(str
 		/* Don't do anything; this is the system default */
 		break;
 	}
-
-	return;
 }
 
 /**
