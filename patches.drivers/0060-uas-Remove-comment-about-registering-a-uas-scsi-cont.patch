From 8c606095e592cd901ec190e65255cb7a8b0e31ad Mon Sep 17 00:00:00 2001
From: Hans de Goede <hdegoede@redhat.com>
Patch-Mainline: v3.15
References: FATE#315595
Git-Commit: 7cace978fba5d0ec6eed50509cda40eea85f8e98
Date: Tue, 29 Oct 2013 11:36:43 +0100
Subject: [PATCH 60/60] uas: Remove comment about registering a uas scsi
 controller for each usb bus

Although an interesting concept, I don't think that this is a good idea:

-This will result in lots of "virtual" scsi controllers confusing users
-If we get a scsi-bus-reset we will now need to do a usb-device-reset of all
 uas devices on the same usb bus, which is something to avoid if possible

Signed-off-by: Hans de Goede <hdegoede@redhat.com>
Signed-off-by: Oliver Neukum <oneukum@suse.de>
---
 drivers/usb/storage/uas.c | 6 ------
 1 file changed, 6 deletions(-)

diff --git a/drivers/usb/storage/uas.c b/drivers/usb/storage/uas.c
index 08e9710..a7ac97c 100644
--- a/drivers/usb/storage/uas.c
+++ b/drivers/usb/storage/uas.c
@@ -1050,12 +1050,6 @@ static void uas_free_streams(struct uas_dev_info *devinfo)
 	usb_free_streams(devinfo->intf, eps, 3, GFP_KERNEL);
 }
 
-/*
- * XXX: What I'd like to do here is register a SCSI host for each USB host in
- * the system.  Follow usb-storage's design of registering a SCSI host for
- * each USB device for the moment.  Can implement this by walking up the
- * USB hierarchy until we find a USB host.
- */
 static int uas_probe(struct usb_interface *intf, const struct usb_device_id *id)
 {
 	int result = -ENOMEM;
-- 
1.8.4

