From: Takashi Iwai <tiwai@suse.de>
Patch-mainline: never
Subject: intel: gmch kabi fix

Compatibility patch taken from SUSE:SLE-11-SP3:GA/drm.

Acked-by: Michal Srb <msrb@suse.com>
---
 drivers/char/agp/intel-gtt.c        |   18 +++++++++++++++---
 drivers/gpu/drm/i915/i915_gem_gtt.c |    8 ++++----
 include/drm/intel-gtt.h             |    5 +++--
 3 files changed, 22 insertions(+), 9 deletions(-)

Index: linux-3.0-SLE11-SP3/drivers/char/agp/intel-gtt.c
===================================================================
--- linux-3.0-SLE11-SP3.orig/drivers/char/agp/intel-gtt.c
+++ linux-3.0-SLE11-SP3/drivers/char/agp/intel-gtt.c
@@ -1325,7 +1325,7 @@ static int find_gmch(u16 device)
 	return 1;
 }
 
-int intel_gmch_probe(struct pci_dev *bridge_pdev, struct pci_dev *gpu_pdev,
+int __intel_gmch_probe(struct pci_dev *bridge_pdev, struct pci_dev *gpu_pdev,
 		     struct agp_bridge_data *bridge)
 {
 	int i, mask;
@@ -1381,13 +1381,19 @@ int intel_gmch_probe(struct pci_dev *bri
 					    DMA_BIT_MASK(mask));
 
 	if (intel_gtt_init() != 0) {
-		intel_gmch_remove();
+		__intel_gmch_remove();
 
 		return 0;
 	}
 
 	return 1;
 }
+EXPORT_SYMBOL(__intel_gmch_probe);
+
+int intel_gmch_probe(struct pci_dev *pdev, struct agp_bridge_data *bridge)
+{
+	return __intel_gmch_probe(pdev, NULL, bridge);
+}
 EXPORT_SYMBOL(intel_gmch_probe);
 
 struct intel_gtt *intel_gtt_get(void)
@@ -1403,7 +1409,7 @@ void intel_gtt_chipset_flush(void)
 }
 EXPORT_SYMBOL(intel_gtt_chipset_flush);
 
-void intel_gmch_remove(void)
+void __intel_gmch_remove(void)
 {
 	if (--intel_private.refcount)
 		return;
@@ -1414,6 +1420,12 @@ void intel_gmch_remove(void)
 		pci_dev_put(intel_private.bridge_dev);
 	intel_private.driver = NULL;
 }
+EXPORT_SYMBOL(__intel_gmch_remove);
+
+void intel_gmch_remove(struct pci_dev *pdev)
+{
+	__intel_gmch_remove();
+}
 EXPORT_SYMBOL(intel_gmch_remove);
 
 MODULE_AUTHOR("Dave Jones <davej@redhat.com>");
Index: linux-3.0-SLE11-SP3/include/drm/intel-gtt.h
===================================================================
--- linux-3.0-SLE11-SP3.orig/include/drm/intel-gtt.h
+++ linux-3.0-SLE11-SP3/include/drm/intel-gtt.h
@@ -24,9 +24,10 @@ struct intel_gtt {
 	phys_addr_t gma_bus_addr;
 } *intel_gtt_get(void);
 
-int intel_gmch_probe(struct pci_dev *bridge_pdev, struct pci_dev *gpu_pdev,
+// XXX renamed for kABI compatibility
+int __intel_gmch_probe(struct pci_dev *bridge_pdev, struct pci_dev *gpu_pdev,
 		     struct agp_bridge_data *bridge);
-void intel_gmch_remove(void);
+void __intel_gmch_remove(void);
 
 bool intel_enable_gtt(void);
 
Index: linux-3.0-SLE11-SP3/drivers/gpu/drm/i915/i915_gem_gtt.c
===================================================================
--- linux-3.0-SLE11-SP3.orig/drivers/gpu/drm/i915/i915_gem_gtt.c
+++ linux-3.0-SLE11-SP3/drivers/gpu/drm/i915/i915_gem_gtt.c
@@ -643,7 +643,7 @@ int i915_gem_gtt_init(struct drm_device
 	 * hostbridge query stuff. Skip it entirely
 	 */
 	if (INTEL_INFO(dev)->gen < 6) {
-		ret = intel_gmch_probe(dev_priv->bridge_dev, dev->pdev, NULL);
+		ret = __intel_gmch_probe(dev_priv->bridge_dev, dev->pdev, NULL);
 		if (!ret) {
 			DRM_ERROR("failed to set up gmch\n");
 			return -EIO;
@@ -652,7 +652,7 @@ int i915_gem_gtt_init(struct drm_device
 		dev_priv->mm.gtt = intel_gtt_get();
 		if (!dev_priv->mm.gtt) {
 			DRM_ERROR("Failed to initialize GTT\n");
-			intel_gmch_remove();
+			__intel_gmch_remove();
 			return -ENODEV;
 		}
 		return 0;
@@ -715,7 +715,7 @@ int i915_gem_gtt_init(struct drm_device
 err_out:
 	kfree(dev_priv->mm.gtt);
 	if (INTEL_INFO(dev)->gen < 6)
-		intel_gmch_remove();
+		__intel_gmch_remove();
 	return ret;
 }
 
@@ -725,6 +725,6 @@ void i915_gem_gtt_fini(struct drm_device
 	iounmap(dev_priv->mm.gtt->gtt);
 	teardown_scratch_page(dev);
 	if (INTEL_INFO(dev)->gen < 6)
-		intel_gmch_remove();
+		__intel_gmch_remove();
 	kfree(dev_priv->mm.gtt);
 }
Index: linux-3.0-SLE11-SP3/drivers/char/agp/intel-agp.c
===================================================================
--- linux-3.0-SLE11-SP3.orig/drivers/char/agp/intel-agp.c
+++ linux-3.0-SLE11-SP3/drivers/char/agp/intel-agp.c
@@ -748,7 +748,7 @@ static int __devinit agp_intel_probe(str
 
 	bridge->capndx = cap_ptr;
 
-	if (intel_gmch_probe(pdev, NULL, bridge))
+	if (__intel_gmch_probe(pdev, NULL, bridge))
 		goto found_gmch;
 
 	for (i = 0; intel_agp_chipsets[i].name != NULL; i++) {
@@ -825,7 +825,7 @@ static void __devexit agp_intel_remove(s
 
 	agp_remove_bridge(bridge);
 
-	intel_gmch_remove();
+	__intel_gmch_remove();
 
 	agp_put_bridge(bridge);
 }
