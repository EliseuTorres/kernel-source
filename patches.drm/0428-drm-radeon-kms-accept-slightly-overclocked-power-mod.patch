From 4b5c9d5c22fa5d72ed2bc7b272ddd7cdca823307 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Rafa=C5=82=20Mi=C5=82ecki?= <zajec5@gmail.com>
Date: Thu, 11 Feb 2010 22:16:36 +0000
Patch-mainline: 2.6.34
References: fate#310916
Git-commit: 2745932495ca3634b11a8662b464d2bf0325ae78
Subject: [PATCH 0428/2588] drm/radeon/kms: accept slightly overclocked power
 modes
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Fixes fdo bug #26329

Signed-off-by: Rafał Miłecki <zajec5@gmail.com>
Tested-by: Tobias Jakobi <liquid.acid@gmx.net>
Signed-off-by: Dave Airlie <airlied@redhat.com>
(cherry picked from commit 2745932495ca3634b11a8662b464d2bf0325ae78)

Signed-off-by: Takashi Iwai <tiwai@suse.de>
---
 drivers/gpu/drm/radeon/radeon.h          |    5 +++++
 drivers/gpu/drm/radeon/radeon_atombios.c |   18 +++++++++---------
 drivers/gpu/drm/radeon/radeon_combios.c  |    4 ++--
 3 files changed, 16 insertions(+), 11 deletions(-)

diff --git a/drivers/gpu/drm/radeon/radeon.h b/drivers/gpu/drm/radeon/radeon.h
index a00909c..7fcf3d3 100644
--- a/drivers/gpu/drm/radeon/radeon.h
+++ b/drivers/gpu/drm/radeon/radeon.h
@@ -662,6 +662,11 @@ struct radeon_power_state {
 	bool voltage_drop_active;
 };
 
+/*
+ * Some modes are overclocked by very low value, accept them
+ */
+#define RADEON_MODE_OVERCLOCK_MARGIN 500 /* 5 MHz */
+
 struct radeon_pm {
 	struct mutex		mutex;
 	struct work_struct	reclock_work;
diff --git a/drivers/gpu/drm/radeon/radeon_atombios.c b/drivers/gpu/drm/radeon/radeon_atombios.c
index e7ab834..ea30777 100644
--- a/drivers/gpu/drm/radeon/radeon_atombios.c
+++ b/drivers/gpu/drm/radeon/radeon_atombios.c
@@ -1497,9 +1497,9 @@ void radeon_atombios_get_power_modes(struct radeon_device *rdev)
 						continue;
 					/* skip overclock modes for now */
 					if ((rdev->pm.power_state[state_index].clock_info[0].mclk >
-					     rdev->clock.default_mclk) ||
+					     rdev->clock.default_mclk + RADEON_MODE_OVERCLOCK_MARGIN) ||
 					    (rdev->pm.power_state[state_index].clock_info[0].sclk >
-					     rdev->clock.default_sclk))
+					     rdev->clock.default_sclk + RADEON_MODE_OVERCLOCK_MARGIN))
 						continue;
 					rdev->pm.power_state[state_index].non_clock_info.pcie_lanes =
 						power_info->info.asPowerPlayInfo[i].ucNumPciELanes;
@@ -1562,9 +1562,9 @@ void radeon_atombios_get_power_modes(struct radeon_device *rdev)
 						continue;
 					/* skip overclock modes for now */
 					if ((rdev->pm.power_state[state_index].clock_info[0].mclk >
-					     rdev->clock.default_mclk) ||
+					     rdev->clock.default_mclk + RADEON_MODE_OVERCLOCK_MARGIN) ||
 					    (rdev->pm.power_state[state_index].clock_info[0].sclk >
-					     rdev->clock.default_sclk))
+					     rdev->clock.default_sclk + RADEON_MODE_OVERCLOCK_MARGIN))
 						continue;
 					rdev->pm.power_state[state_index].non_clock_info.pcie_lanes =
 						power_info->info_2.asPowerPlayInfo[i].ucNumPciELanes;
@@ -1631,9 +1631,9 @@ void radeon_atombios_get_power_modes(struct radeon_device *rdev)
 						continue;
 					/* skip overclock modes for now */
 					if ((rdev->pm.power_state[state_index].clock_info[0].mclk >
-					     rdev->clock.default_mclk) ||
+					     rdev->clock.default_mclk + RADEON_MODE_OVERCLOCK_MARGIN) ||
 					    (rdev->pm.power_state[state_index].clock_info[0].sclk >
-					     rdev->clock.default_sclk))
+					     rdev->clock.default_sclk + RADEON_MODE_OVERCLOCK_MARGIN))
 						continue;
 					rdev->pm.power_state[state_index].non_clock_info.pcie_lanes =
 						power_info->info_3.asPowerPlayInfo[i].ucNumPciELanes;
@@ -1727,7 +1727,7 @@ void radeon_atombios_get_power_modes(struct radeon_device *rdev)
 							continue;
 						/* skip overclock modes for now */
 						if (rdev->pm.power_state[state_index].clock_info[mode_index].sclk >
-						    rdev->clock.default_sclk)
+						    rdev->clock.default_sclk + RADEON_MODE_OVERCLOCK_MARGIN)
 							continue;
 						rdev->pm.power_state[state_index].clock_info[mode_index].voltage.type =
 							VOLTAGE_SW;
@@ -1754,9 +1754,9 @@ void radeon_atombios_get_power_modes(struct radeon_device *rdev)
 							continue;
 						/* skip overclock modes for now */
 						if ((rdev->pm.power_state[state_index].clock_info[mode_index].mclk >
-						     rdev->clock.default_mclk) ||
+						     rdev->clock.default_mclk + RADEON_MODE_OVERCLOCK_MARGIN) ||
 						    (rdev->pm.power_state[state_index].clock_info[mode_index].sclk >
-						     rdev->clock.default_sclk))
+						     rdev->clock.default_sclk + RADEON_MODE_OVERCLOCK_MARGIN))
 							continue;
 						rdev->pm.power_state[state_index].clock_info[mode_index].voltage.type =
 							VOLTAGE_SW;
diff --git a/drivers/gpu/drm/radeon/radeon_combios.c b/drivers/gpu/drm/radeon/radeon_combios.c
index 9989d22..5ef791b 100644
--- a/drivers/gpu/drm/radeon/radeon_combios.c
+++ b/drivers/gpu/drm/radeon/radeon_combios.c
@@ -2374,9 +2374,9 @@ void radeon_combios_get_power_modes(struct radeon_device *rdev)
 				goto default_mode;
 			/* skip overclock modes for now */
 			if ((rdev->pm.power_state[state_index].clock_info[0].mclk >
-			     rdev->clock.default_mclk) ||
+			     rdev->clock.default_mclk + RADEON_MODE_OVERCLOCK_MARGIN) ||
 			    (rdev->pm.power_state[state_index].clock_info[0].sclk >
-			     rdev->clock.default_sclk))
+			     rdev->clock.default_sclk + RADEON_MODE_OVERCLOCK_MARGIN))
 				goto default_mode;
 			rdev->pm.power_state[state_index].type =
 				POWER_STATE_TYPE_BATTERY;
-- 
1.7.6

