From a496aa608be77f358126c475b24ccba7293f92bf Mon Sep 17 00:00:00 2001
From: Daniel Vetter <daniel.vetter@ffwll.ch>
Date: Mon, 2 Aug 2010 16:33:33 +0200
Patch-mainline: 2.6.37
References: fate#310916
Git-commit: 6c0e1c556ee659cd8c976cd175c0b70e209acb92
Subject: [PATCH 1443/2588] drm/i915: use new macros to access the ring start
 register

Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
(cherry picked from commit 6c0e1c556ee659cd8c976cd175c0b70e209acb92)

Signed-off-by: Takashi Iwai <tiwai@suse.de>
---
 drivers/gpu/drm/i915/intel_ringbuffer.c |   11 ++++-------
 drivers/gpu/drm/i915/intel_ringbuffer.h |    3 ++-
 2 files changed, 6 insertions(+), 8 deletions(-)

diff --git a/drivers/gpu/drm/i915/intel_ringbuffer.c b/drivers/gpu/drm/i915/intel_ringbuffer.c
index 4b797e7..395c4d3 100644
--- a/drivers/gpu/drm/i915/intel_ringbuffer.c
+++ b/drivers/gpu/drm/i915/intel_ringbuffer.c
@@ -157,7 +157,7 @@ static int init_ring_common(struct drm_device *dev,
 	ring->set_tail(dev, ring, 0);
 
 	/* Initialize the ring. */
-	I915_WRITE(ring->regs.start, obj_priv->gtt_offset);
+	I915_WRITE_START(ring, obj_priv->gtt_offset);
 	head = ring->get_head(dev, ring);
 
 	/* G45 ring initialization fails to reset head to zero */
@@ -168,7 +168,7 @@ static int init_ring_common(struct drm_device *dev,
 				I915_READ(ring->regs.ctl),
 				I915_READ(ring->regs.head),
 				I915_READ_TAIL(ring),
-				I915_READ(ring->regs.start));
+				I915_READ_START(ring));
 
 		I915_WRITE(ring->regs.head, 0);
 
@@ -178,7 +178,7 @@ static int init_ring_common(struct drm_device *dev,
 				I915_READ(ring->regs.ctl),
 				I915_READ(ring->regs.head),
 				I915_READ_TAIL(ring),
-				I915_READ(ring->regs.start));
+				I915_READ_START(ring));
 	}
 
 	I915_WRITE(ring->regs.ctl,
@@ -194,7 +194,7 @@ static int init_ring_common(struct drm_device *dev,
 				I915_READ(ring->regs.ctl),
 				I915_READ(ring->regs.head),
 				I915_READ_TAIL(ring),
-				I915_READ(ring->regs.start));
+				I915_READ_START(ring));
 		return -EIO;
 	}
 
@@ -781,7 +781,6 @@ static const struct intel_ring_buffer render_ring = {
 	.regs                   = {
 		.ctl = PRB0_CTL,
 		.head = PRB0_HEAD,
-		.start = PRB0_START
 	},
 	.mmio_base		= RENDER_RING_BASE,
 	.size			= 32 * PAGE_SIZE,
@@ -818,7 +817,6 @@ static const struct intel_ring_buffer bsd_ring = {
 	.regs			= {
 		.ctl = BSD_RING_CTL,
 		.head = BSD_RING_HEAD,
-		.start = BSD_RING_START
 	},
 	.mmio_base		= BSD_RING_BASE,
 	.size			= 32 * PAGE_SIZE,
@@ -929,7 +927,6 @@ static const struct intel_ring_buffer gen6_bsd_ring = {
        .regs			= {
                .ctl    = GEN6_BSD_RING_CTL,
                .head   = GEN6_BSD_RING_HEAD,
-               .start  = GEN6_BSD_RING_START
        },
        .mmio_base		= GEN6_BSD_RING_BASE,
        .size			= 32 * PAGE_SIZE,
diff --git a/drivers/gpu/drm/i915/intel_ringbuffer.h b/drivers/gpu/drm/i915/intel_ringbuffer.h
index 2dfcd9b..9d0ae5a 100644
--- a/drivers/gpu/drm/i915/intel_ringbuffer.h
+++ b/drivers/gpu/drm/i915/intel_ringbuffer.h
@@ -9,6 +9,8 @@ struct  intel_hw_status_page {
 
 #define I915_READ_TAIL(ring) I915_READ(RING_TAIL(ring->mmio_base))
 #define I915_WRITE_TAIL(ring, val) I915_WRITE(RING_TAIL(ring->mmio_base), val)
+#define I915_READ_START(ring) I915_READ(RING_START(ring->mmio_base))
+#define I915_WRITE_START(ring, val) I915_WRITE(RING_START(ring->mmio_base), val)
 
 struct drm_i915_gem_execbuffer2;
 struct  intel_ring_buffer {
@@ -20,7 +22,6 @@ struct  intel_ring_buffer {
 	struct		ring_regs {
 			u32 ctl;
 			u32 head;
-			u32 start;
 	} regs;
 	u32		mmio_base;
 	unsigned long	size;
-- 
1.7.6

