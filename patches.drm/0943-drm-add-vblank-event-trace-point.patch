From 7ba0966b024560a4f43711137f37d4e289deedd3 Mon Sep 17 00:00:00 2001
From: Jesse Barnes <jbarnes@virtuousgeek.org>
Date: Thu, 1 Jul 2010 16:47:31 -0700
Patch-mainline: 2.6.36
References: fate#310916
Git-commit: ac2874b980e05ed7a4ea8fed7b0a92428b51ce58
Subject: [PATCH 0943/2588] drm: add vblank event trace point

Emit a trace point for vblank events.  This can be helpful for mapping
drawing activity against the vblank frequency and period.

Signed-off-by: Jesse Barnes <jbarnes@virtuousgeek.org>
Signed-off-by: Dave Airlie <airlied@redhat.com>
(cherry picked from commit ac2874b980e05ed7a4ea8fed7b0a92428b51ce58)

Signed-off-by: Takashi Iwai <tiwai@suse.de>
---
 drivers/gpu/drm/Makefile           |    5 +++-
 drivers/gpu/drm/drm_irq.c          |    3 ++
 drivers/gpu/drm/drm_trace.h        |   37 ++++++++++++++++++++++++++++++++++++
 drivers/gpu/drm/drm_trace_points.c |    4 +++
 4 files changed, 48 insertions(+), 1 deletions(-)
 create mode 100644 drivers/gpu/drm/drm_trace.h
 create mode 100644 drivers/gpu/drm/drm_trace_points.c

diff --git a/drivers/gpu/drm/Makefile b/drivers/gpu/drm/Makefile
index 8524eb0..bcae549 100644
--- a/drivers/gpu/drm/Makefile
+++ b/drivers/gpu/drm/Makefile
@@ -11,7 +11,8 @@ drm-y       :=	drm_auth.o drm_buffer.o drm_bufs.o drm_cache.o \
 		drm_agpsupport.o drm_scatter.o ati_pcigart.o drm_pci.o \
 		drm_platform.o drm_sysfs.o drm_hashtab.o drm_sman.o drm_mm.o \
 		drm_crtc.o drm_modes.o drm_edid.o \
-		drm_info.o drm_debugfs.o drm_encoder_slave.o
+		drm_info.o drm_debugfs.o drm_encoder_slave.o \
+		drm_trace_points.o
 
 drm-$(CONFIG_COMPAT) += drm_ioc32.o
 
@@ -19,6 +20,8 @@ drm_kms_helper-y := drm_fb_helper.o drm_crtc_helper.o drm_dp_i2c_helper.o
 
 obj-$(CONFIG_DRM_KMS_HELPER) += drm_kms_helper.o
 
+CFLAGS_drm_trace_points.o := -I$(src)
+
 obj-$(CONFIG_DRM)	+= drm.o
 obj-$(CONFIG_DRM_TTM)	+= ttm/
 obj-$(CONFIG_DRM_TDFX)	+= tdfx/
diff --git a/drivers/gpu/drm/drm_irq.c b/drivers/gpu/drm/drm_irq.c
index 327a1e3..91fdef4 100644
--- a/drivers/gpu/drm/drm_irq.c
+++ b/drivers/gpu/drm/drm_irq.c
@@ -34,6 +34,7 @@
  */
 
 #include "drmP.h"
+#include "drm_trace.h"
 
 #include <linux/interrupt.h>	/* For task queue support */
 #include <linux/slab.h>
@@ -758,6 +759,8 @@ void drm_handle_vblank_events(struct drm_device *dev, int crtc)
 	}
 
 	spin_unlock_irqrestore(&dev->event_lock, flags);
+
+	trace_drm_vblank_event(crtc, seq);
 }
 
 /**
diff --git a/drivers/gpu/drm/drm_trace.h b/drivers/gpu/drm/drm_trace.h
new file mode 100644
index 0000000..8a92683
--- /dev/null
+++ b/drivers/gpu/drm/drm_trace.h
@@ -0,0 +1,37 @@
+#if !defined(_DRM_TRACE_H_) || defined(TRACE_HEADER_MULTI_READ)
+#define _DRM_TRACE_H_
+
+#include <linux/stringify.h>
+#include <linux/types.h>
+#include <linux/tracepoint.h>
+
+#undef TRACE_SYSTEM
+#define TRACE_SYSTEM drm
+#define TRACE_SYSTEM_STRING __stringify(TRACE_SYSTEM)
+#define TRACE_INCLUDE_FILE drm_trace
+
+TRACE_EVENT(drm_vblank_event,
+
+	TP_PROTO(int crtc, unsigned int seq),
+
+	TP_ARGS(crtc, seq),
+
+	TP_STRUCT__entry(
+		__field(int, crtc)
+		__field(unsigned int, seq)
+		),
+
+	TP_fast_assign(
+		__entry->crtc = crtc;
+		__entry->seq = seq;
+		),
+
+	TP_printk("crtc=%d, seq=%d", __entry->crtc, __entry->seq)
+);
+
+#endif /* _DRM_TRACE_H_ */
+
+/* This part must be outside protection */
+#undef TRACE_INCLUDE_PATH
+#define TRACE_INCLUDE_PATH .
+#include <trace/define_trace.h>
diff --git a/drivers/gpu/drm/drm_trace_points.c b/drivers/gpu/drm/drm_trace_points.c
new file mode 100644
index 0000000..0d0eb90
--- /dev/null
+++ b/drivers/gpu/drm/drm_trace_points.c
@@ -0,0 +1,4 @@
+#include "drmP.h"
+
+#define CREATE_TRACE_POINTS
+#include "drm_trace.h"
-- 
1.7.6

