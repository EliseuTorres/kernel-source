From dcf81374e540ef4e90ebe0daf5d6434c68bf45aa Mon Sep 17 00:00:00 2001
From: Alex Deucher <alexdeucher@gmail.com>
Date: Mon, 22 Mar 2010 13:31:08 -0400
Patch-mainline: 2.6.35
References: fate#310916
Git-commit: 58e21dff53b9063563e7bb5f5a795ab2d8f61dda
Subject: [PATCH 0742/2588] drm/radeon/kms/pm: restore default power state on
 exit

Signed-off-by: Alex Deucher <alexdeucher@gmail.com>
Signed-off-by: Dave Airlie <airlied@redhat.com>
(cherry picked from commit 58e21dff53b9063563e7bb5f5a795ab2d8f61dda)

Signed-off-by: Takashi Iwai <tiwai@suse.de>
---
 drivers/gpu/drm/radeon/r100.c      |    4 ++++
 drivers/gpu/drm/radeon/r600.c      |   10 ++++++++++
 drivers/gpu/drm/radeon/radeon.h    |    3 ++-
 drivers/gpu/drm/radeon/radeon_pm.c |    9 +++++++++
 4 files changed, 25 insertions(+), 1 deletions(-)

diff --git a/drivers/gpu/drm/radeon/r100.c b/drivers/gpu/drm/radeon/r100.c
index ab19b16..256b097 100644
--- a/drivers/gpu/drm/radeon/r100.c
+++ b/drivers/gpu/drm/radeon/r100.c
@@ -123,6 +123,10 @@ void r100_get_power_state(struct radeon_device *rdev,
 					rdev->pm.current_power_state_index + 1;
 		}
 		break;
+	case PM_ACTION_DEFAULT:
+		rdev->pm.requested_power_state_index = rdev->pm.default_power_state_index;
+		rdev->pm.can_upclock = false;
+		break;
 	case PM_ACTION_NONE:
 	default:
 		DRM_ERROR("Requested mode for not defined action\n");
diff --git a/drivers/gpu/drm/radeon/r600.c b/drivers/gpu/drm/radeon/r600.c
index 35a5d48..4f7f318 100644
--- a/drivers/gpu/drm/radeon/r600.c
+++ b/drivers/gpu/drm/radeon/r600.c
@@ -161,6 +161,11 @@ void r600_get_power_state(struct radeon_device *rdev,
 			}
 			rdev->pm.requested_clock_mode_index = 0;
 			break;
+		case PM_ACTION_DEFAULT:
+			rdev->pm.requested_power_state_index = rdev->pm.default_power_state_index;
+			rdev->pm.requested_clock_mode_index = 0;
+			rdev->pm.can_upclock = false;
+			break;
 		case PM_ACTION_NONE:
 		default:
 			DRM_ERROR("Requested mode for not defined action\n");
@@ -221,6 +226,11 @@ void r600_get_power_state(struct radeon_device *rdev,
 				rdev->pm.can_upclock = false;
 			}
 			break;
+		case PM_ACTION_DEFAULT:
+			rdev->pm.requested_power_state_index = rdev->pm.default_power_state_index;
+			rdev->pm.requested_clock_mode_index = 0;
+			rdev->pm.can_upclock = false;
+			break;
 		case PM_ACTION_NONE:
 		default:
 			DRM_ERROR("Requested mode for not defined action\n");
diff --git a/drivers/gpu/drm/radeon/radeon.h b/drivers/gpu/drm/radeon/radeon.h
index b9ad976..5ffb295 100644
--- a/drivers/gpu/drm/radeon/radeon.h
+++ b/drivers/gpu/drm/radeon/radeon.h
@@ -615,7 +615,8 @@ enum radeon_pm_action {
 	PM_ACTION_NONE,
 	PM_ACTION_MINIMUM,
 	PM_ACTION_DOWNCLOCK,
-	PM_ACTION_UPCLOCK
+	PM_ACTION_UPCLOCK,
+	PM_ACTION_DEFAULT
 };
 
 enum radeon_voltage_type {
diff --git a/drivers/gpu/drm/radeon/radeon_pm.c b/drivers/gpu/drm/radeon/radeon_pm.c
index 87814eb..23b79eb 100644
--- a/drivers/gpu/drm/radeon/radeon_pm.c
+++ b/drivers/gpu/drm/radeon/radeon_pm.c
@@ -125,6 +125,15 @@ int radeon_pm_init(struct radeon_device *rdev)
 
 void radeon_pm_fini(struct radeon_device *rdev)
 {
+	if (rdev->pm.state != PM_STATE_DISABLED) {
+		/* cancel work */
+		cancel_delayed_work_sync(&rdev->pm.idle_work);
+		/* reset default clocks */
+		rdev->pm.state = PM_STATE_DISABLED;
+		rdev->pm.planned_action = PM_ACTION_DEFAULT;
+		radeon_pm_set_clocks(rdev);
+	}
+
 	if (rdev->pm.i2c_bus)
 		radeon_i2c_destroy(rdev->pm.i2c_bus);
 }
-- 
1.7.6

