From 2f7d7a3c1cd35262c77823434e4b4ef81b6c97ed Mon Sep 17 00:00:00 2001
From: Chris Wilson <chris@chris-wilson.co.uk>
Date: Wed, 8 Dec 2010 17:32:24 +0000
Patch-mainline: 2.6.38
References: fate#310916
Git-commit: eb43f4af7ecb7d51ba44f5e96bf74eedf1c27d62
Subject: [PATCH 1936/2588] drm/i915: Terminate the FORCE WAKE after we have
 finished reading

Once we have read the value out of the GT power well, we need to remove
the FORCE WAKE bit to allow the system to auto-power down.

Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
(cherry picked from commit eb43f4af7ecb7d51ba44f5e96bf74eedf1c27d62)

Signed-off-by: Takashi Iwai <tiwai@suse.de>
---
 drivers/gpu/drm/i915/i915_drv.c |   22 ++++++++++++++++++++++
 drivers/gpu/drm/i915/i915_drv.h |   21 ++++++++++++---------
 drivers/gpu/drm/i915/i915_reg.h |    1 +
 3 files changed, 35 insertions(+), 9 deletions(-)

diff --git a/drivers/gpu/drm/i915/i915_drv.c b/drivers/gpu/drm/i915/i915_drv.c
index e3d6a0b..4a45b48 100644
--- a/drivers/gpu/drm/i915/i915_drv.c
+++ b/drivers/gpu/drm/i915/i915_drv.c
@@ -244,6 +244,28 @@ void intel_detect_pch (struct drm_device *dev)
 	}
 }
 
+void __gen6_force_wake_get(struct drm_i915_private *dev_priv)
+{
+	int count;
+
+	count = 0;
+	while (count++ < 50 && (I915_READ_NOTRACE(FORCEWAKE_ACK) & 1))
+		udelay(10);
+
+	I915_WRITE_NOTRACE(FORCEWAKE, 1);
+	POSTING_READ(FORCEWAKE);
+
+	count = 0;
+	while (count++ < 50 && (I915_READ_NOTRACE(FORCEWAKE_ACK) & 1) == 0)
+		udelay(10);
+}
+
+void __gen6_force_wake_put(struct drm_i915_private *dev_priv)
+{
+	I915_WRITE_NOTRACE(FORCEWAKE, 0);
+	POSTING_READ(FORCEWAKE);
+}
+
 static int i915_drm_freeze(struct drm_device *dev)
 {
 	struct drm_i915_private *dev_priv = dev->dev_private;
diff --git a/drivers/gpu/drm/i915/i915_drv.h b/drivers/gpu/drm/i915/i915_drv.h
index b8a5500..30780f2 100644
--- a/drivers/gpu/drm/i915/i915_drv.h
+++ b/drivers/gpu/drm/i915/i915_drv.h
@@ -1341,17 +1341,20 @@ __i915_write(64, q)
  * must be set to prevent GT core from power down and stale values being
  * returned.
  */
+void __gen6_force_wake_get(struct drm_i915_private *dev_priv);
+void __gen6_force_wake_put (struct drm_i915_private *dev_priv);
 static inline u32 i915_safe_read(struct drm_i915_private *dev_priv, u32 reg)
 {
-	if (IS_GEN6(dev_priv->dev)) {
-		I915_WRITE_NOTRACE(FORCEWAKE, 1);
-		POSTING_READ(FORCEWAKE);
-		/* XXX How long do we really need to wait here?
-		 * Will different registers/engines require different periods?
-		 */
-		udelay(100);
-	}
-	return I915_READ(reg);
+	u32 val;
+
+	if (dev_priv->info->gen >= 6) {
+		__gen6_force_wake_get(dev_priv);
+		val = I915_READ(reg);
+		__gen6_force_wake_put(dev_priv);
+	} else
+		val = I915_READ(reg);
+
+	return val;
 }
 
 static inline void
diff --git a/drivers/gpu/drm/i915/i915_reg.h b/drivers/gpu/drm/i915/i915_reg.h
index e8dac2c..f1a5a7b 100644
--- a/drivers/gpu/drm/i915/i915_reg.h
+++ b/drivers/gpu/drm/i915/i915_reg.h
@@ -3125,4 +3125,5 @@
 #define  EDP_LINK_TRAIN_VOL_EMP_MASK_SNB	(0x3f<<22)
 
 #define  FORCEWAKE				0xA18C
+#define  FORCEWAKE_ACK				0x130090
 #endif /* _I915_REG_H_ */
-- 
1.7.6

