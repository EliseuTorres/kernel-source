From aa38e2e01521f88e9b0230c0236d2bd89d0af0ed Mon Sep 17 00:00:00 2001
From: Daniel Vetter <daniel.vetter@ffwll.ch>
Date: Tue, 25 Oct 2011 16:39:59 +0200
Subject: drm/sman: kill owner tracking interface functions
Git-commit: aa38e2e01521f88e9b0230c0236d2bd89d0af0ed
Patch-mainline: v3.3-rc1

These are now unused.

Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
Acked-by: Michal Srb <msrb@suse.com>
---
 drivers/gpu/drm/drm_sman.c |   38 --------------------------------------
 include/drm/drm_sman.h     |   19 -------------------
 2 files changed, 0 insertions(+), 57 deletions(-)

diff --git a/drivers/gpu/drm/drm_sman.c b/drivers/gpu/drm/drm_sman.c
index 462cdc8..9d03cdc 100644
--- a/drivers/gpu/drm/drm_sman.c
+++ b/drivers/gpu/drm/drm_sman.c
@@ -279,27 +279,6 @@ static void drm_sman_remove_owner(struct drm_sman *sman,
 	kfree(owner_item);
 }
 
-int drm_sman_owner_clean(struct drm_sman *sman, unsigned long owner)
-{
-
-	struct drm_hash_item *hash_item;
-	struct drm_owner_item *owner_item;
-
-	if (drm_ht_find_item(&sman->owner_hash_tab, owner, &hash_item)) {
-		return -1;
-	}
-
-	owner_item = drm_hash_entry(hash_item, struct drm_owner_item, owner_hash);
-	if (owner_item->mem_blocks.next == &owner_item->mem_blocks) {
-		drm_sman_remove_owner(sman, owner_item);
-		return -1;
-	}
-
-	return 0;
-}
-
-EXPORT_SYMBOL(drm_sman_owner_clean);
-
 static void drm_sman_do_owner_cleanup(struct drm_sman *sman,
 				      struct drm_owner_item *owner_item)
 {
@@ -312,23 +291,6 @@ static void drm_sman_do_owner_cleanup(struct drm_sman *sman,
 	drm_sman_remove_owner(sman, owner_item);
 }
 
-void drm_sman_owner_cleanup(struct drm_sman *sman, unsigned long owner)
-{
-
-	struct drm_hash_item *hash_item;
-	struct drm_owner_item *owner_item;
-
-	if (drm_ht_find_item(&sman->owner_hash_tab, owner, &hash_item)) {
-
-		return;
-	}
-
-	owner_item = drm_hash_entry(hash_item, struct drm_owner_item, owner_hash);
-	drm_sman_do_owner_cleanup(sman, owner_item);
-}
-
-EXPORT_SYMBOL(drm_sman_owner_cleanup);
-
 void drm_sman_cleanup(struct drm_sman *sman)
 {
 	struct drm_owner_item *entry, *next;
diff --git a/include/drm/drm_sman.h b/include/drm/drm_sman.h
index 3b65ccf..d5ed903 100644
--- a/include/drm/drm_sman.h
+++ b/include/drm/drm_sman.h
@@ -149,25 +149,6 @@ extern int drm_sman_free_key(struct drm_sman * sman, unsigned int key);
 extern void drm_sman_free(struct drm_memblock_item *item);
 
 /*
- * returns 1 iff there are no stale memory blocks associated with this owner.
- * Typically called to determine if we need to idle the hardware and call
- * drm_sman_owner_cleanup. If there are no stale memory blocks, it removes all
- * resources associated with owner.
- */
-
-extern int drm_sman_owner_clean(struct drm_sman * sman, unsigned long owner);
-
-/*
- * Frees all stale memory blocks associated with this owner. Note that this
- * requires that the hardware is finished with all blocks, so the graphics engine
- * should be idled before this call is made. This function also frees
- * any resources associated with "owner" and should be called when owner
- * is not going to be referenced anymore.
- */
-
-extern void drm_sman_owner_cleanup(struct drm_sman * sman, unsigned long owner);
-
-/*
  * Frees all stale memory blocks associated with the memory manager.
  * See idling above.
  */

