From a0a4bffeffb057716d15b4bce42035b2c2ce89bf Mon Sep 17 00:00:00 2001
From: Dave Airlie <airlied@redhat.com>
Date: Thu, 29 Apr 2010 18:37:59 +1000
Patch-mainline: 2.6.35
References: fate#310916
Git-commit: f4b7fb94c576265ceffc43031805ade32fa80c6a
Subject: [PATCH 0757/2588] drm/radeon/kms: take vram mutex pointer before
 derefing object.

since derefing the object might free it.

Signed-off-by: Dave Airlie <airlied@redhat.com>
(cherry picked from commit f4b7fb94c576265ceffc43031805ade32fa80c6a)

Signed-off-by: Takashi Iwai <tiwai@suse.de>
---
 drivers/gpu/drm/radeon/radeon_object.c |    6 ++++--
 1 files changed, 4 insertions(+), 2 deletions(-)

diff --git a/drivers/gpu/drm/radeon/radeon_object.c b/drivers/gpu/drm/radeon/radeon_object.c
index 06def70..a8d18bc 100644
--- a/drivers/gpu/drm/radeon/radeon_object.c
+++ b/drivers/gpu/drm/radeon/radeon_object.c
@@ -168,13 +168,15 @@ void radeon_bo_kunmap(struct radeon_bo *bo)
 void radeon_bo_unref(struct radeon_bo **bo)
 {
 	struct ttm_buffer_object *tbo;
+	struct radeon_device *rdev;
 
 	if ((*bo) == NULL)
 		return;
+	rdev = (*bo)->rdev;
 	tbo = &((*bo)->tbo);
-	mutex_lock(&(*bo)->rdev->vram_mutex);
+	mutex_lock(&rdev->vram_mutex);
 	ttm_bo_unref(&tbo);
-	mutex_unlock(&(*bo)->rdev->vram_mutex);
+	mutex_unlock(&rdev->vram_mutex);
 	if (tbo == NULL)
 		*bo = NULL;
 }
-- 
1.7.6

