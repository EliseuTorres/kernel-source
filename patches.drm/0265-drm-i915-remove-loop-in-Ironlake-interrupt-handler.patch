From cc03e60307816a5fa397c5f0d72028f4fc547312 Mon Sep 17 00:00:00 2001
From: Zou Nan hai <Nanhai.zou@intel.com>
Date: Fri, 15 Jan 2010 10:29:06 +0800
Patch-mainline: 2.6.33
References: fate#310916
Git-commit: c7c85101afd0cb8ce497456d12ee1cad4aad152f
Subject: [PATCH 0265/2588] drm/i915: remove loop in Ironlake interrupt
 handler

On Ironlake, there is an interrupt master control bit. With the bit
disabled before clearing IIR, we do not need to handle extra interrupt
in a loop. This patch removes the loop in Ironlake interrupt handler.
It fixed irq lost issue on some Ironlake platforms.

Cc: Stable Team <stable@kernel.org>
Signed-off-by: Zou Nan hai <Nanhai.zou@intel.com>
Signed-off-by: Zhenyu Wang <zhenyuw@linux.intel.com>
Signed-off-by: Eric Anholt <eric@anholt.net>
(cherry picked from commit c7c85101afd0cb8ce497456d12ee1cad4aad152f)

Signed-off-by: Takashi Iwai <tiwai@suse.de>
---
 drivers/gpu/drm/i915/i915_irq.c |   18 +++++++-----------
 1 files changed, 7 insertions(+), 11 deletions(-)

diff --git a/drivers/gpu/drm/i915/i915_irq.c b/drivers/gpu/drm/i915/i915_irq.c
index f3767bd..89a071a 100644
--- a/drivers/gpu/drm/i915/i915_irq.c
+++ b/drivers/gpu/drm/i915/i915_irq.c
@@ -273,7 +273,7 @@ irqreturn_t ironlake_irq_handler(struct drm_device *dev)
 {
 	drm_i915_private_t *dev_priv = (drm_i915_private_t *) dev->dev_private;
 	int ret = IRQ_NONE;
-	u32 de_iir, gt_iir, pch_iir;
+	u32 de_iir, gt_iir, de_ier, pch_iir;
 	struct drm_i915_master_private *master_priv;
 
 	/* disable master interrupt before clearing iir  */
@@ -290,12 +290,6 @@ irqreturn_t ironlake_irq_handler(struct drm_device *dev)
 
 	ret = IRQ_HANDLED;
 
-	/* should clear PCH hotplug event before clear CPU irq */
-	I915_WRITE(SDEIIR, pch_iir);
-
-	I915_WRITE(DEIIR, de_iir);
-	I915_WRITE(GTIIR, gt_iir);
-
 	if (dev->primary->master) {
 		master_priv = dev->primary->master->driver_priv;
 		if (master_priv->sarea_priv)
@@ -315,15 +309,17 @@ irqreturn_t ironlake_irq_handler(struct drm_device *dev)
 	if (de_iir & DE_GSE)
 		ironlake_opregion_gse_intr(dev);
 
-	I915_WRITE(GTIIR, gt_iir);
-	I915_WRITE(DEIIR, de_iir);
-
 	/* check event from PCH */
 	if ((de_iir & DE_PCH_EVENT) &&
-		(pch_iir & SDE_HOTPLUG_MASK)) {
+	    (pch_iir & SDE_HOTPLUG_MASK)) {
 		queue_work(dev_priv->wq, &dev_priv->hotplug_work);
 	}
 
+	/* should clear PCH hotplug event before clear CPU irq */
+	I915_WRITE(SDEIIR, pch_iir);
+	I915_WRITE(GTIIR, gt_iir);
+	I915_WRITE(DEIIR, de_iir);
+
 done:
 	I915_WRITE(DEIER, de_ier);
 	(void)I915_READ(DEIER);
-- 
1.7.6

