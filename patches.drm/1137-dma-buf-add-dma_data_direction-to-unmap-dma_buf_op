From 33ea2dcb39ba50b0b69d1b1dc24702f084b46411 Mon Sep 17 00:00:00 2001
From: Sumit Semwal <sumit.semwal@ti.com>
Date: Fri, 27 Jan 2012 15:09:27 +0530
Subject: dma-buf: add dma_data_direction to unmap dma_buf_op
Git-commit: 33ea2dcb39ba50b0b69d1b1dc24702f084b46411
Patch-mainline: v3.4-rc1

Some exporters may use DMA map/unmap APIs in dma-buf ops, which require
enum dma_data_direction for both map and unmap operations.

Thus, the unmap dma_buf_op also needs to have enum dma_data_direction as
a parameter.

Reported-by: Tomasz Stanislawski <t.stanislaws@samsung.com>
Signed-off-by: Sumit Semwal <sumit.semwal@ti.com>
Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch>
Signed-off-by: Sumit Semwal <sumit.semwal@linaro.org>
Acked-by: Michal Srb <msrb@suse.com>
---
 drivers/base/dma-buf.c  |    7 +++++--
 include/linux/dma-buf.h |    8 +++++---
 2 files changed, 10 insertions(+), 5 deletions(-)

Index: linux-3.0-SLE11-SP3/drivers/base/dma-buf.c
===================================================================
--- linux-3.0-SLE11-SP3.orig/drivers/base/dma-buf.c
+++ linux-3.0-SLE11-SP3/drivers/base/dma-buf.c
@@ -273,10 +273,12 @@ EXPORT_SYMBOL_GPL(dma_buf_map_attachment
  * dma_buf_ops.
  * @attach:	[in]	attachment to unmap buffer from
  * @sg_table:	[in]	scatterlist info of the buffer to unmap
+ * @direction:  [in]    direction of DMA transfer
  *
  */
 void dma_buf_unmap_attachment(struct dma_buf_attachment *attach,
-				struct sg_table *sg_table)
+				struct sg_table *sg_table,
+				enum dma_data_direction direction)
 {
 	if (WARN_ON(!attach || !attach->dmabuf || !sg_table
 			    || !attach->dmabuf->ops))
@@ -284,7 +286,8 @@ void dma_buf_unmap_attachment(struct dma
 
 	mutex_lock(&attach->dmabuf->lock);
 	if (attach->dmabuf->ops->unmap_dma_buf)
-		attach->dmabuf->ops->unmap_dma_buf(attach, sg_table);
+		attach->dmabuf->ops->unmap_dma_buf(attach, sg_table,
+							direction);
 	mutex_unlock(&attach->dmabuf->lock);
 
 }
Index: linux-3.0-SLE11-SP3/include/linux/dma-buf.h
===================================================================
--- linux-3.0-SLE11-SP3.orig/include/linux/dma-buf.h
+++ linux-3.0-SLE11-SP3/include/linux/dma-buf.h
@@ -63,7 +63,8 @@ struct dma_buf_ops {
 	struct sg_table * (*map_dma_buf)(struct dma_buf_attachment *,
 						enum dma_data_direction);
 	void (*unmap_dma_buf)(struct dma_buf_attachment *,
-						struct sg_table *);
+						struct sg_table *,
+						enum dma_data_direction);
 	/* TODO: Add try_map_dma_buf version, to return immed with -EBUSY
 	 * if the call would block.
 	 */
@@ -122,7 +123,8 @@ void dma_buf_put(struct dma_buf *dmabuf)
 
 struct sg_table *dma_buf_map_attachment(struct dma_buf_attachment *,
 					enum dma_data_direction);
-void dma_buf_unmap_attachment(struct dma_buf_attachment *, struct sg_table *);
+void dma_buf_unmap_attachment(struct dma_buf_attachment *, struct sg_table *,
+				enum dma_data_direction);
 #else
 
 static inline struct dma_buf_attachment *dma_buf_attach(struct dma_buf *dmabuf,
@@ -166,7 +168,7 @@ static inline struct sg_table *dma_buf_m
 }
 
 static inline void dma_buf_unmap_attachment(struct dma_buf_attachment *attach,
-						struct sg_table *sg)
+			struct sg_table *sg, enum dma_data_direction dir)
 {
 	return;
 }
