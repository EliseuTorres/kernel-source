From: Mika Kuoppala <mika.kuoppala@linux.intel.com>
Date: Tue May 14 11:14:24 2013 +0200
Subject: drm/i915: unreference default context on module unload
Patch-Mainline: Upstream
Git-commit: 168f83660211b9e059e3bc0638daaa01e9ea0b71
Git-repo: git://people.freedesktop.org/~danvet/drm-intel/
References: 
Signed-off-by: Egbert Eich <eich@suse.de>

Ported from upstream:
  commit 168f83660211b9e059e3bc0638daaa01e9ea0b71
  Author: Mika Kuoppala <mika.kuoppala@linux.intel.com>
  Date:   Fri May 3 16:29:08 2013 +0300

   drm/i915: unreference default context on module unload

  Before module unload is called, gpu_idle() will switch
  to default context. This will increment ref count of base
  object as the default context is 'running' on module unload
  time. Unreference the drm object so that when context
  is freed, base object is freed as well.

Signed-off-by: Mika Kuoppala <mika.kuoppala@intel.com>
Reviewed-by: Ben Widawsky <ben@bwidawsk.net>
Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
Signed-off-by: Egbert Eich <eich@suse.de>
---
 drivers/gpu/drm/i915/i915_gem_context.c |    8 +++++---
 1 files changed, 5 insertions(+), 3 deletions(-)

diff --git a/drivers/gpu/drm/i915/i915_gem_context.c b/drivers/gpu/drm/i915/i915_gem_context.c
index a3f06bc..a7f6ce3 100644
--- a/drivers/gpu/drm/i915/i915_gem_context.c
+++ b/drivers/gpu/drm/i915/i915_gem_context.c
@@ -274,18 +274,20 @@ void i915_gem_context_init(struct drm_device *dev)
 void i915_gem_context_fini(struct drm_device *dev)
 {
 	struct drm_i915_private *dev_priv = dev->dev_private;
+	struct i915_hw_context *ctx;
 
 	if (dev_priv->hw_contexts_disabled)
 		return;
 
+	ctx = dev_priv->ring[RCS].default_context;
 	/* The only known way to stop the gpu from accessing the hw context is
 	 * to reset it. Do this as the very last operation to avoid confusing
 	 * other code, leading to spurious errors. */
 	intel_gpu_reset(dev);
 
-	i915_gem_object_unpin(dev_priv->ring[RCS].default_context->obj);
-
-	do_destroy(dev_priv->ring[RCS].default_context);
+	i915_gem_object_unpin(ctx->obj);
+	drm_gem_object_unreference(&ctx->obj->base);
+	do_destroy(ctx);
 }
 
 static int context_idr_cleanup(int id, void *p, void *data)
